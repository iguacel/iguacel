{"version":3,"sources":["../node_modules/three/examples/jsm/controls/OrbitControls.js","../node_modules/three/examples/jsm/lines/LineSegments2.js","../node_modules/three/examples/jsm/lines/Line2.js","../node_modules/drei/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/drei/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/r3f-troika/dist/troika-three-text.umd.js","../node_modules/troika-worker-utils/dist/troika-worker-utils.umd.js","../node_modules/troika-three-utils/dist/troika-three-utils.umd.js","../node_modules/three/examples/jsm/lines/LineMaterial.js","../node_modules/three/examples/jsm/lines/LineGeometry.js","../node_modules/three/examples/jsm/lines/LineSegmentsGeometry.js"],"names":["OrbitControls","object","domElement","undefined","console","warn","document","error","this","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","addEventListener","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","tabIndex","prototype","Object","create","EventDispatcher","constructor","MapControls","call","LineSegments2","geometry","material","Mesh","LineSegmentsGeometry","LineMaterial","color","random","assign","isLineSegments2","computeLineDistances","start","end","instanceStart","attributes","instanceEnd","lineDistances","Float32Array","data","count","i","j","l","fromBufferAttribute","distanceTo","instanceDistanceBuffer","InstancedInterleavedBuffer","setAttribute","InterleavedBufferAttribute","raycast","Vector4","ssOrigin","ssOrigin3","mvMatrix","Matrix4","line","Line3","closestPoint","raycaster","intersects","camera","ray","projectionMatrix","resolution","lineWidth","linewidth","at","w","applyMatrix4","matrixWorldInverse","z","matrixWorld","multiplyMatrices","isBehindCameraNear","isPastCameraFar","param","closestPointToPointParameter","zPos","MathUtils","lerp","isInClipSpace","isInside","pointOnLine","point","distanceSqToSegment","push","origin","face","faceIndex","uv","uv2","Line2","LineGeometry","isLine2","_extends","arguments","source","key","hasOwnProperty","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","exports","three","troikaWorkerUtils","troikaThreeUtils","linkEl","workerModule","defineWorkerModule","name","dependencies","self","Typr","buff","bin","_bin","Uint8Array","readASCII","readUshort","numF","readUint","fnts","foff","_readFont","ooff","readFixed","numTables","tags","obj","_data","_offset","tabs","tag","toffset","t","trim","parse","tab","o","readF2dot14","readShort","readInt","p","a","uint8","int32","readInt8","int8","int16","readUshorts","len","arr","uint32","readUint64","s","String","fromCharCode","readUnicode","c","_tdec","readUTF8","tdec","readBytes","readASCIIArray","ArrayBuffer","Int8Array","Int16Array","uint16","Uint16Array","Int32Array","Uint32Array","_lctf","font","subt","offset0","offScriptList","offFeatureList","offLookupList","scriptList","readScriptList","featureList","readFeatureList","lookupList","readLookupList","noff","lut","readLookupTable","ltype","flag","cnt","numOfOnes","n","num","readClassDef","format","startGlyph","glyphCount","getInterval","val","readCoverage","cvg","fmt","coverageIndex","ind","readFeatureTable","lookupCount","indices","readScriptTable","defLangSysOff","default","readLangSysTable","langSysCount","langSysOff","reqFeature","featureCount","features","CFF","buffer","ninds","readIndex","names","tdinds","topDicts","readDict","topdict","sinds","strings","readSubrs","CharStrings","cstr","ROS","FDArray","fdind","dict","_readFDict","FDSelect","rns","Encoding","readEncoding","charset","readCharset","ss","Private","Subrs","gsubinds","bias","nSubrs","Bias","tableSE","glyphByUnicode","cff","code","glyphBySE","charcode","array","nCodes","first","nLeft","inds","offsize","getCharString","b0","b1","vs","op","size","readCharString","carr","nibs","b","nib0","nib1","chars","parseFloat","cmap","offs","tables","platformID","encodingID","noffset","id","tind","parse0","parse4","parse6","parse12","log","map","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCount","startCount","idDelta","idRangeOffset","glyphIdArray","firstCode","entryCount","nGroups","groups","off","startCharCode","endCharCode","startGlyphID","glyf","g","maxp","numGlyphs","_parseGlyf","_tabOffset","loca","gl","noc","xMin","yMin","xMax","yMax","endPts","instructionLength","instructions","crdnum","flags","rep","xs","i8","same","ys","parts","part","m","d","tx","ty","p1","p2","glyphIndex","arg1","arg2","numInstr","instr","GPOS","covOff","coverage","valFmt1","ones1","pos","readValueRecord","valFmt2","ones2","pairsets","psc","psoff","pvc","gid2","value1","value2","val1","val2","classDef1","classDef2","class1Count","class2Count","row","valFmt","GSUB","delta","newg","vals","loff","readLigatureSet","cDefOffset","cDef","scset","subClassSetCount","scsOff","readSubClassSet","cvgs","backCvg","inptCvg","ahedCvg","lookupRec","readSubstLookupRecords","rUs","lset","readSubClassRule","rule","gcount","scount","input","substLookupRecords","out","readChainSubClassSet","readChainSubClassRule","pps","pi","subst","lcnt","readLigature","lig","chain","nglyph","ccnt","k","head","fontRevision","unitsPerEm","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfHMetrics","hmtx","aw","lsb","aWidth","lsBearing","kern","version","parseV1","nTables","glyph1","rval","readFormat0","pleft","nPairs","value","glyph2","ver","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","tname","languageID","nameID","slen","str","cname","soff","tid","toString","_lang","postScriptName","version0","version1","version2","version5","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefault","usBreak","usMaxContext","usLowerOpticalPointSize","usUpperOpticalPointSize","post","italicAngle","underlinePosition","underlineThickness","SVG","entries","svgDocIndexOffset","numEntries","endGlyphID","svgDocOffset","svgDocLength","sbuf","svg","f","toPath","pth","cmds","crds","DOMParser","firstChild","tagName","nextSibling","vb","getAttribute","split","_toPath","children","nds","fill","ni","nd","tn","cfl","toks","_tokens","_toksToPath","ts","rn","cn","cc","charCodeAt","ch","charAt","isNum","ox","oy","pc","cmd","cmu","toUpperCase","ps","reps","_reps","xi","yi","x1","y1","x2","y2","x3","y3","co","U","codeToGlyph","p0e4","p3e1","p1e0","p0e3","sind","grp","glyphToPath","gid","path","stack","nStems","haveWidth","width","defaultWidthX","open","pdct","gi","_drawCFF","_drawGlyf","_simpleGlyph","_compoGlyph","i0","il","pr","nx","onCurve","prOnCurve","nxOnCurve","P","moveTo","lineTo","qcurveTo","closePath","prt","_getGlyphClass","cd","intr","getPairAdjustment","g1","g2","gpos","llist","flist","tused","fl","ti","ltab","adj","c1","c2","ind1","ind2","stringToGlyphs","gls","codePointAt","gsub","cligs","fi","ci","feat","_getWPfeature","_applySubs","wsep","R","slft","srgt","rlim","rl","good","em1","cind","cls","scs","sc","inp","cind2","lrs","_glsCovered","lr","tab2","glyphsToPath","clr","tpath","pathToSVG","prec","lmap","toFixed","join","pathToContext","ctx","bezierCurveTo","quadraticCurveTo","beginPath","fillStyle","curveTo","e","c1x","c1y","c2x","c2y","c3x","c3y","c4x","c4y","jpx","jpy","shift","nominalWidthX","pop","isX","sval","index","abs","adx","ady","bchar","achar","bind","aind","subr","count1","alternate","tinyInflate","module","Tree","table","trans","Data","dest","sourceIndex","bitcount","destLen","ltree","dtree","sltree","sdtree","length_bits","length_base","dist_bits","dist_base","clcidx","code_tree","lengths","tinf_build_bits_base","bits","base","sum","tinf_build_tree","tinf_getbit","bit","tinf_read_bits","tinf_decode_symbol","cur","tinf_decode_trees","lt","dt","hlit","hdist","hclen","clen","sym","prev","tinf_inflate_block_data","dist","tinf_inflate_uncompressed_block","tinf_build_fixed_trees","bfinal","res","Error","slice","subarray","bufferIn","dataViewIn","DataView","offsetIn","read2","getUint16","read4","getUint32","write2","dataViewOut","setUint16","offsetOut","write4","setUint32","WOFFHeader","signature","flavor","reserved","totalSfntSize","majorVersion","minorVersion","metaOffset","metaLength","metaOrigLength","privOffset","privLength","TableDirectoryEntries","compLength","origLength","origChecksum","arrayOut","reduce","acc","entry","bufferOut","forEach","TableDirectoryEntry","outOffset","compressedData","uncompressedData","padding","convert_streams","woff2otf","cmdArgLengths","M","L","Q","C","Z","peek","typrFont","glyphMap","fontObj","forEachGlyph","text","fontSize","letterSpacing","callback","glyphX","fontScale","glyphIndices","charIndex","glyphObj","ref","advanceWidth","pathCommandCount","forEachPathCommand","argsIndex","argsArray","numArgs","wrapFontObj","init","typrFactory","woff2otfFactory","parserFactory","CONFIG","defaultFontURL","sdfGlyphSize","textureWidth","tempColor","Color","atlases","getTextRenderInfo","args","createElement","href","colorRanges","colors","getHex","freeze","atlasKey","atlas","sdfTexture","DataTexture","LuminanceFormat","LinearFilter","processInWorker","then","result","newGlyphSDFs","textureData","atlasIndex","texImg","image","biggerArray","height","cols","srcStartIndex","tgtStartIndex","floor","parameters","sdfMinDistancePercent","glyphBounds","glyphAtlasIndices","glyphColors","caretPositions","caretHeight","chunkedBounds","lineHeight","topBaseline","totalBounds","totalBlockSize","timings","toObj","fromObj","fontProcessorWorkerModule","root","0","1","2","3","cx","round","cy","r","LOG2E","minX","minY","maxX","maxY","walkTree","walkBranch","absSquareDistanceToLineSegment","lineX0","lineY0","lineX1","lineY1","ldx","ldy","lengthSq","addLineSegment","x0","y0","insertSegment","segment","node","leafSegment","next","subIndex","findNearestSignedDistance","maxSearchRadius","closestDist","closestDistSq","distSq","inside","isPointInPoly","createGlyphSegmentsQuadtree","config","sdfDistancePercent","pointOnQuadraticBezier","t2","pointOnCubicBezier","sdfSize","glyphW","glyphH","fontUnitsMaxDist","fontUnitsPerXTexel","fontUnitsPerYTexel","textureMinFontX","textureMinFontY","textureMaxFontX","textureMaxFontY","firstX","firstY","prevX","prevY","lineSegmentsIndex","prevPoint","nextPoint","prevPoint$1","i$1","nextPoint$1","sdfX","sdfY","signedDist","alpha","isFinite","renderingBounds","fontParser","sdfGenerator","defaultFontUrl","fontAtlases","fonts","loadFont","fontUrl","pending","url","tryLoad","onError","err","request","XMLHttpRequest","responseType","onload","status","statusText","response","onerror","send","doLoadFont","callbacks","cb","process","metricsOnly","maxWidth","textAlign","textIndent","whiteSpace","overflowWrap","anchorX","anchorY","includeCaretPositions","chunkedBoundsSize","mainStart","now","total","fontLoad","layout","sdf","sdfTotal","replace","glyphs","getSdfAtlas","hasMaxWidth","newGlyphs","maxLineWidth","renderableGlyphCount","canWrap","layoutStart","fontSizeMult","halfLeading","caretBottomOffset","lineXOffset","currentLine","TextLine","lines","nextLine","char","glyphWidth","curLineCount","isWhitespace","test","isEmpty","glyphAt","adjustX","splitAt","isSoftWrapped","fly","anchorXOffset","anchorYOffset","parsePercent","lineYOffset","chunk","currentColor","renderableGlyphIndex","prevCharIndex","colorCharIndex","lineGlyphCount","justifyAdjust","whitespaceCount","glyphInfo","charIndex$1","idx","glyphAtlasInfo","sdfStart","glyphSDFData","bounds","rect","start$1","match","pct","NaN","isNaN","performance","Date","ceil","flyweight","newLine","splice","prop","all","defineProperty","get","measure","createSDFGenerator","createFontProcessor","ThenableWorkerModule","fontProcessor","Thenable","thenable","resolve","getTransferables","transferables","templateGeometries","tempVec3","GlyphsGeometry","InstancedBufferGeometry","detail","boundingSphere","Sphere","boundingBox","Box3","__proto__","prototypeAccessors","configurable","computeBoundingSphere","computeBoundingBox","this$1","_detail","tpl","geom","PlaneBufferGeometry","translate","getTemplateGeometry","attr","setIndex","getIndex","updateGlyphs","updateBufferAttr","_chunkedBounds","setInstanceCount","sphere","center","box","applyClipRect","clipRect","chunks","defineProperties","attrName","newArray","itemSize","InstancedBufferAttribute","_maxInstanceCount","deleteAttribute","createTextDerivedMaterial","baseMaterial","textMaterial","createDerivedMaterial","extensions","derivatives","uniforms","uTroikaSDFTexture","uTroikaSDFTextureSize","uTroikaSDFGlyphSize","uTroikaSDFMinDistancePct","uTroikaTotalBounds","uTroikaClipRect","uTroikaOrient","Matrix3","uTroikaUseGlyphColors","uTroikaSDFDebug","vertexDefs","vertexTransform","fragmentDefs","fragmentColorTransform","customRewriter","vertexShader","fragmentShader","uDiffuseRE","voidMainRegExp","transparent","isTroikaTextMaterial","shadowSide","side","attribute","defaultMaterial","MeshBasicMaterial","DoubleSide","tempMat4","tempVec3a","tempVec3b","tempArray","raycastMesh","syncStartEvent","syncCompleteEvent","SYNCABLE_PROPS","COPYABLE_PROPS","concat","Text","depthOffset","orientation","glyphGeometryDetail","debugSDF","textRenderInfo","customDepthMaterial","customDistanceMaterial","sync","_needsSync","_isSyncing","_queuedSyncs","_textRenderInfo","queued","fn","onBeforeRender","_prepareForRender","derivedMaterial","_derivedMaterial","_baseMaterial","onDispose","getDepthMaterial","getDistanceMaterial","textInfo","fromArray","Array","isArray","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","isColor","_troikaColor","orient","_orientation","rotMat","hSign","hAxis","vSign","vAxis","cross","setFromMatrix4","identity","privateKey","deprMsgShown","_deprecated_anchor","_rectsCache","WeakMap","_caretsByRowCache","configureTextBuilder","getCaretAtPoint","closestCaret","caretsByRow","Map","rowY","rowCarets","groupCaretsByRow","closestRowY","carets","caret","getSelectionRects","rects","prevResult","rows","preloadFont","characters","factory","require","BespokeThenable","queue","scheduled","completeCalled","oneTime","complete","reject","reason","st","ignoreThrow","thenableObj","recursiveError","valThen","getThenableThen","scheduleQueueFlush","setTimeout","flushQueue","q","callIt","isFn","called","TypeError","onResolve","onReject","nextThenable","resultThen","NativePromiseThenable","promise","Promise","rej","items","resultCount","results","DefaultThenable","item","itemThenable","workerBootstrap","modules","rehydrate","troikaDefine","URL","createObjectURL","Blob","importScripts","revokeObjectURL","messageId","action","registerModule","dep","isWorkerModule","depResult","noLog","postMessage","success","message","isCallable","ref$1","handleResult","callModule","supportsWorkers","supported","Worker","terminate","_workerModuleId","_messageId","_allowInitAsString","workers","openRequests","options","workerId","moduleFunc","_getInitResult","initResult","initThenable","deps","defineMainThreadModule","registrationThenable","callWorker","workerModuleData","stringifyFunction","_count","worker","bootstrap","onmessage","msgId","getWorker","expandShaderIncludes","include","ShaderChunk","arguments$1","epoch","CACHE","optionsHash","JSON","stringify","optionsJsonReplacer","getOptionsHash","cached","distanceMaterialTpl","depthMaterialTpl","optionsHashesToIds","_idCtr","getIdForOptionsHash","privateDerivedShadersProp","privateBeforeCompileProp","onBeforeCompile","shaderInfo","vertex","fragment","upgraded","vertexMainIntro","vertexMainOutro","fragmentMainIntro","fragmentMainOutro","timeUniform","postChunks","match1","fullStr","substr","injectIntoShaderCode","upgradeShaders","DerivedMaterial","_listeners","isDerivedMaterial","isShaderMaterial","defines","UniformsUtils","depthMaterial","_depthMaterial","MeshDepthMaterial","depthPacking","RGBADepthPacking","IS_DEPTH_MATERIAL","distanceMaterial","_distanceMaterial","MeshDistanceMaterial","IS_DISTANCE_MATERIAL","shaderCode","defs","intro","outro","MATERIAL_TYPES_TO_SHADERS","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","ShaderFloatArray","textureUniform","textureSizeUniform","multiplierUniform","dataSizeUniform","readFunction","_raw","_texture","_length","_multiplier","encodeFloatToFourInts","startIndex","enc0","enc1","enc2","enc3","log2","raw","setArray","_needsRepack","_needsMultCheck","getShaderUniforms","me","_sync","getShaderHeaderCode","tex","needsRepack","maxVal","mult","mult$1","defaultBaseMaterial","BezierMesh","getGeometry","pointA","controlA","controlB","pointB","dashArray","dashOffset","frustumCulled","CylinderBufferGeometry","dashing","createBezierMeshMaterial","getShaderUniformTypes","shader","uniformRE","exec","getShadersForMaterial","builtinType","ShaderLib","UniformsLib","dashScale","dashSize","gapSize","opacity","merge","common","fog","ShaderMaterial","clipping","dashed","enumerable","diffuse","setValues","isLineMaterial","isLineGeometry","setPositions","points","setColors","fromLine","isGeometry","vertices","isBufferGeometry","Float32BufferAttribute","isLineSegmentsGeometry","lineSegments","instanceBuffer","instanceColorBuffer","fromWireframeGeometry","fromEdgesGeometry","fromMesh","mesh","WireframeGeometry","fromLineSegments","setFromBufferAttribute","union","vector","getCenter","maxRadiusSq","toJSON","applyMatrix"],"mappings":"oIAAA,gFA0BIA,EAAgB,SAAWC,EAAQC,QAElBC,IAAfD,GAA2BE,QAAQC,KAAM,4EACzCH,IAAeI,UAAWF,QAAQG,MAAO,4HAE9CC,KAAKP,OAASA,EACdO,KAAKN,WAAaA,EAGlBM,KAAKC,SAAU,EAGfD,KAAKE,OAAS,IAAIC,UAGlBH,KAAKI,YAAc,EACnBJ,KAAKK,YAAcC,IAGnBN,KAAKO,QAAU,EACfP,KAAKQ,QAAUF,IAIfN,KAAKS,cAAgB,EACrBT,KAAKU,cAAgBC,KAAKC,GAI1BZ,KAAKa,iBAAoBP,IACzBN,KAAKc,gBAAkBR,IAIvBN,KAAKe,eAAgB,EACrBf,KAAKgB,cAAgB,IAIrBhB,KAAKiB,YAAa,EAClBjB,KAAKkB,UAAY,EAGjBlB,KAAKmB,cAAe,EACpBnB,KAAKoB,YAAc,EAGnBpB,KAAKqB,WAAY,EACjBrB,KAAKsB,SAAW,EAChBtB,KAAKuB,oBAAqB,EAC1BvB,KAAKwB,YAAc,EAInBxB,KAAKyB,YAAa,EAClBzB,KAAK0B,gBAAkB,EAGvB1B,KAAK2B,YAAa,EAGlB3B,KAAK4B,KAAO,CAAEC,KAAM,GAAIC,GAAI,GAAIC,MAAO,GAAIC,OAAQ,IAGnDhC,KAAKiC,aAAe,CAAEJ,KAAMK,QAAMC,OAAQC,OAAQF,QAAMG,MAAON,MAAOG,QAAMI,KAG5EtC,KAAKuC,QAAU,CAAEC,IAAKC,QAAMN,OAAQO,IAAKD,QAAME,WAG/C3C,KAAK4C,QAAU5C,KAAKE,OAAO2C,QAC3B7C,KAAK8C,UAAY9C,KAAKP,OAAOsD,SAASF,QACtC7C,KAAKgD,MAAQhD,KAAKP,OAAOwD,KAMzBjD,KAAKkD,cAAgB,WAEpB,OAAOC,EAAUC,KAIlBpD,KAAKqD,kBAAoB,WAExB,OAAOF,EAAUG,OAIlBtD,KAAKuD,UAAY,WAEhBC,EAAMZ,QAAQa,KAAMD,EAAMtD,QAC1BsD,EAAMV,UAAUW,KAAMD,EAAM/D,OAAOsD,UACnCS,EAAMR,MAAQQ,EAAM/D,OAAOwD,MAI5BjD,KAAK0D,MAAQ,WAEZF,EAAMtD,OAAOuD,KAAMD,EAAMZ,SACzBY,EAAM/D,OAAOsD,SAASU,KAAMD,EAAMV,WAClCU,EAAM/D,OAAOwD,KAAOO,EAAMR,MAE1BQ,EAAM/D,OAAOkE,yBACbH,EAAMI,cAAeC,GAErBL,EAAMM,SAENC,EAAQC,EAAMC,MAKfjE,KAAK8D,OAAS,WAEb,IAAII,EAAS,IAAI/D,UAGbgE,GAAO,IAAIC,cAAaC,mBAAoB5E,EAAO6E,GAAI,IAAInE,UAAS,EAAG,EAAG,IAC1EoE,EAAcJ,EAAKtB,QAAQ2B,UAE3BC,EAAe,IAAItE,UACnBuE,EAAiB,IAAIN,aAEzB,OAAO,WAEN,IAAIrB,EAAWS,EAAM/D,OAAOsD,SAoF5B,OAlFAmB,EAAOT,KAAMV,GAAW4B,IAAKnB,EAAMtD,QAGnCgE,EAAOU,gBAAiBT,GAGxBhB,EAAU0B,eAAgBX,GAErBV,EAAM/B,YAAcsC,IAAUC,EAAMC,MAExCa,EA8JK,EAAInE,KAAKC,GAAK,GAAK,GAAK4C,EAAM9B,iBA1J/B8B,EAAMzC,eAEVoC,EAAUG,OAASyB,EAAezB,MAAQE,EAAMxC,cAChDmC,EAAUC,KAAO2B,EAAe3B,IAAMI,EAAMxC,gBAI5CmC,EAAUG,OAASyB,EAAezB,MAClCH,EAAUC,KAAO2B,EAAe3B,KAKjCD,EAAUG,MAAQ3C,KAAKqE,IAAKxB,EAAM3C,gBAAiBF,KAAKsE,IAAKzB,EAAM1C,gBAAiBqC,EAAUG,QAG9FH,EAAUC,IAAMzC,KAAKqE,IAAKxB,EAAM/C,cAAeE,KAAKsE,IAAKzB,EAAM9C,cAAeyC,EAAUC,MAExFD,EAAU+B,WAGV/B,EAAUgC,QAAUC,EAGpBjC,EAAUgC,OAASxE,KAAKqE,IAAKxB,EAAMpD,YAAaO,KAAKsE,IAAKzB,EAAMnD,YAAa8C,EAAUgC,UAI1D,IAAxB3B,EAAMzC,cAEVyC,EAAMtD,OAAOmF,gBAAiBC,EAAW9B,EAAMxC,eAI/CwC,EAAMtD,OAAOqF,IAAKD,GAInBpB,EAAOsB,iBAAkBrC,GAGzBe,EAAOU,gBAAiBL,GAExBxB,EAASU,KAAMD,EAAMtD,QAASqF,IAAKrB,GAEnCV,EAAM/D,OAAOgG,OAAQjC,EAAMtD,SAEE,IAAxBsD,EAAMzC,eAEVgE,EAAezB,OAAW,EAAIE,EAAMxC,cACpC+D,EAAe3B,KAAS,EAAII,EAAMxC,cAElCsE,EAAUI,eAAgB,EAAIlC,EAAMxC,iBAIpC+D,EAAeY,IAAK,EAAG,EAAG,GAE1BL,EAAUK,IAAK,EAAG,EAAG,IAItBP,EAAQ,KAMHQ,GACJnB,EAAaoB,kBAAmBrC,EAAM/D,OAAOsD,UAAa+C,GAC1D,GAAM,EAAIpB,EAAeqB,IAAKvC,EAAM/D,OAAOuG,aAAiBF,KAE5DtC,EAAMI,cAAeC,GAErBY,EAAahB,KAAMD,EAAM/D,OAAOsD,UAChC2B,EAAejB,KAAMD,EAAM/D,OAAOuG,YAClCJ,GAAc,GAEP,IA3GI,GAqHd5F,KAAKiG,QAAU,WAEdzC,EAAM9D,WAAWwG,oBAAqB,cAAeC,GAAe,GACpE3C,EAAM9D,WAAWwG,oBAAqB,YAAaE,GAAa,GAChE5C,EAAM9D,WAAWwG,oBAAqB,QAASG,GAAc,GAE7D7C,EAAM9D,WAAWwG,oBAAqB,aAAcI,GAAc,GAClE9C,EAAM9D,WAAWwG,oBAAqB,WAAYK,GAAY,GAC9D/C,EAAM9D,WAAWwG,oBAAqB,YAAaM,GAAa,GAEhE1G,SAASoG,oBAAqB,YAAaO,GAAa,GACxD3G,SAASoG,oBAAqB,UAAWQ,GAAW,GAEpDlD,EAAM9D,WAAWwG,oBAAqB,UAAWS,GAAW,IAU7D,IAAInD,EAAQxD,KAER6D,EAAc,CAAE+C,KAAM,UACtBC,EAAa,CAAED,KAAM,SACrBE,EAAW,CAAEF,KAAM,OAEnB5C,EAAQ,CACXC,MAAQ,EACR9B,OAAQ,EACRE,MAAO,EACPC,IAAK,EACLyE,aAAc,EACdC,UAAW,EACXC,gBAAiB,EACjBC,mBAAoB,GAGjBnD,EAAQC,EAAMC,KAEd6B,EAAM,KAGN3C,EAAY,IAAIgE,YAChBpC,EAAiB,IAAIoC,YAErB/B,EAAQ,EACRE,EAAY,IAAInF,UAChByF,GAAc,EAEdwB,EAAc,IAAIC,UAClBC,EAAY,IAAID,UAChBE,EAAc,IAAIF,UAElBG,EAAW,IAAIH,UACfI,EAAS,IAAIJ,UACbK,EAAW,IAAIL,UAEfM,EAAa,IAAIN,UACjBO,EAAW,IAAIP,UACfQ,EAAa,IAAIR,UAQrB,SAASS,IAER,OAAOnH,KAAKoH,IAAK,IAAMvE,EAAMtC,WAI9B,SAAS4D,EAAYkD,GAEpBjD,EAAezB,OAAS0E,EAIzB,SAASC,EAAUD,GAElBjD,EAAe3B,KAAO4E,EAIvB,IAAIE,EAAU,WAEb,IAAIC,EAAI,IAAIhI,UAEZ,OAAO,SAAkBiI,EAAUC,GAElCF,EAAEG,oBAAqBD,EAAc,GACrCF,EAAEzC,gBAAkB0C,GAEpB9C,EAAUC,IAAK4C,IATH,GAeVI,EAAQ,WAEX,IAAIJ,EAAI,IAAIhI,UAEZ,OAAO,SAAgBiI,EAAUC,IAEE,IAA7B7E,EAAMjC,mBAEV4G,EAAEG,oBAAqBD,EAAc,IAIrCF,EAAEG,oBAAqBD,EAAc,GACrCF,EAAEK,aAAchF,EAAM/D,OAAO6E,GAAI6D,IAIlCA,EAAEzC,eAAgB0C,GAElB9C,EAAUC,IAAK4C,IAnBL,GA0BRM,EAAM,WAET,IAAIvE,EAAS,IAAI/D,UAEjB,OAAO,SAAcuI,EAAQC,GAE5B,IAAIC,EAAUpF,EAAM9D,WAEpB,GAAK8D,EAAM/D,OAAOoJ,oBAAsB,CAGvC,IAAI9F,EAAWS,EAAM/D,OAAOsD,SAC5BmB,EAAOT,KAAMV,GAAW4B,IAAKnB,EAAMtD,QACnC,IAAI4I,EAAiB5E,EAAO6E,SAG5BD,GAAkBnI,KAAKqI,IAAOxF,EAAM/D,OAAOwJ,IAAM,EAAMtI,KAAKC,GAAK,KAGjEsH,EAAS,EAAIQ,EAASI,EAAiBF,EAAQM,aAAc1F,EAAM/D,OAAO0J,QAC1EZ,EAAO,EAAII,EAASG,EAAiBF,EAAQM,aAAc1F,EAAM/D,OAAO0J,aAE7D3F,EAAM/D,OAAO2J,sBAGxBlB,EAASQ,GAAWlF,EAAM/D,OAAO4J,MAAQ7F,EAAM/D,OAAO6J,MAAS9F,EAAM/D,OAAOwD,KAAO2F,EAAQW,YAAa/F,EAAM/D,OAAO0J,QACrHZ,EAAOI,GAAWnF,EAAM/D,OAAO+J,IAAMhG,EAAM/D,OAAOgK,QAAWjG,EAAM/D,OAAOwD,KAAO2F,EAAQM,aAAc1F,EAAM/D,OAAO0J,UAKpHvJ,QAAQC,KAAM,gFACd2D,EAAMnC,WAAY,IAhCX,GAwCV,SAASqI,EAAUC,GAEbnG,EAAM/D,OAAOoJ,oBAEjBzD,GAASuE,EAEEnG,EAAM/D,OAAO2J,sBAExB5F,EAAM/D,OAAOwD,KAAOtC,KAAKqE,IAAKxB,EAAMjD,QAASI,KAAKsE,IAAKzB,EAAMhD,QAASgD,EAAM/D,OAAOwD,KAAO0G,IAC1FnG,EAAM/D,OAAOkE,yBACbiC,GAAc,IAIdhG,QAAQC,KAAM,uFACd2D,EAAMvC,YAAa,GAMrB,SAAS2I,EAASD,GAEZnG,EAAM/D,OAAOoJ,oBAEjBzD,GAASuE,EAEEnG,EAAM/D,OAAO2J,sBAExB5F,EAAM/D,OAAOwD,KAAOtC,KAAKqE,IAAKxB,EAAMjD,QAASI,KAAKsE,IAAKzB,EAAMhD,QAASgD,EAAM/D,OAAOwD,KAAO0G,IAC1FnG,EAAM/D,OAAOkE,yBACbiC,GAAc,IAIdhG,QAAQC,KAAM,uFACd2D,EAAMvC,YAAa,GAUrB,SAAS4I,EAAuBC,GAE/B1C,EAAYzB,IAAKmE,EAAMC,QAASD,EAAME,SAUvC,SAASC,EAAoBH,GAE5BtC,EAAS7B,IAAKmE,EAAMC,QAASD,EAAME,SAwHpC,SAASE,EAAwBJ,GAEhC,GAA6B,GAAxBA,EAAMvH,QAAQwG,OAElB3B,EAAYzB,IAAKmE,EAAMvH,QAAS,GAAI4H,MAAOL,EAAMvH,QAAS,GAAI6H,WAExD,CAEN,IAAIC,EAAI,IAAQP,EAAMvH,QAAS,GAAI4H,MAAQL,EAAMvH,QAAS,GAAI4H,OAC1DG,EAAI,IAAQR,EAAMvH,QAAS,GAAI6H,MAAQN,EAAMvH,QAAS,GAAI6H,OAE9DhD,EAAYzB,IAAK0E,EAAGC,IAMtB,SAASC,EAAqBT,GAE7B,GAA6B,GAAxBA,EAAMvH,QAAQwG,OAElBvB,EAAS7B,IAAKmE,EAAMvH,QAAS,GAAI4H,MAAOL,EAAMvH,QAAS,GAAI6H,WAErD,CAEN,IAAIC,EAAI,IAAQP,EAAMvH,QAAS,GAAI4H,MAAQL,EAAMvH,QAAS,GAAI4H,OAC1DG,EAAI,IAAQR,EAAMvH,QAAS,GAAI6H,MAAQN,EAAMvH,QAAS,GAAI6H,OAE9D5C,EAAS7B,IAAK0E,EAAGC,IAMnB,SAASE,EAAuBV,GAE/B,IAAIW,EAAKX,EAAMvH,QAAS,GAAI4H,MAAQL,EAAMvH,QAAS,GAAI4H,MACnDO,EAAKZ,EAAMvH,QAAS,GAAI6H,MAAQN,EAAMvH,QAAS,GAAI6H,MAEnDhC,EAAWzH,KAAKgK,KAAMF,EAAKA,EAAKC,EAAKA,GAEzC/C,EAAWhC,IAAK,EAAGyC,GAoBpB,SAASwC,EAAuBd,GAE/B,GAA6B,GAAxBA,EAAMvH,QAAQwG,OAElBzB,EAAU3B,IAAKmE,EAAMvH,QAAS,GAAI4H,MAAOL,EAAMvH,QAAS,GAAI6H,WAEtD,CAEN,IAAIC,EAAI,IAAQP,EAAMvH,QAAS,GAAI4H,MAAQL,EAAMvH,QAAS,GAAI4H,OAC1DG,EAAI,IAAQR,EAAMvH,QAAS,GAAI6H,MAAQN,EAAMvH,QAAS,GAAI6H,OAE9D9C,EAAU3B,IAAK0E,EAAGC,GAInB/C,EAAYsD,WAAYvD,EAAWF,GAAc1B,eAAgBlC,EAAMpC,aAEvE,IAAIwH,EAAUpF,EAAM9D,WAEpBoF,EAAY,EAAInE,KAAKC,GAAK2G,EAAY8C,EAAIzB,EAAQM,cAElDjB,EAAU,EAAItH,KAAKC,GAAK2G,EAAY+C,EAAI1B,EAAQM,cAEhD9B,EAAY3D,KAAM6D,GAInB,SAASwD,EAAoBhB,GAE5B,GAA6B,GAAxBA,EAAMvH,QAAQwG,OAElBtB,EAAO9B,IAAKmE,EAAMvH,QAAS,GAAI4H,MAAOL,EAAMvH,QAAS,GAAI6H,WAEnD,CAEN,IAAIC,EAAI,IAAQP,EAAMvH,QAAS,GAAI4H,MAAQL,EAAMvH,QAAS,GAAI4H,OAC1DG,EAAI,IAAQR,EAAMvH,QAAS,GAAI6H,MAAQN,EAAMvH,QAAS,GAAI6H,OAE9D3C,EAAO9B,IAAK0E,EAAGC,GAIhB5C,EAASmD,WAAYpD,EAAQD,GAAW9B,eAAgBlC,EAAMlC,UAE9DmH,EAAKf,EAAS2C,EAAG3C,EAAS4C,GAE1B9C,EAAS/D,KAAMgE,GAIhB,SAASsD,EAAsBjB,GAE9B,IAAIW,EAAKX,EAAMvH,QAAS,GAAI4H,MAAQL,EAAMvH,QAAS,GAAI4H,MACnDO,EAAKZ,EAAMvH,QAAS,GAAI6H,MAAQN,EAAMvH,QAAS,GAAI6H,MAEnDhC,EAAWzH,KAAKgK,KAAMF,EAAKA,EAAKC,EAAKA,GAEzC9C,EAASjC,IAAK,EAAGyC,GAEjBP,EAAWlC,IAAK,EAAGhF,KAAKoH,IAAKH,EAAS0C,EAAI3C,EAAW2C,EAAG9G,EAAMtC,YAE9DwI,EAAU7B,EAAWyC,GAErB3C,EAAWlE,KAAMmE,GA8BlB,SAASxB,EAAa0D,GAErB,IAAuB,IAAlBtG,EAAMvD,QAAX,CAUA,IAAI+K,EAEJ,OATAlB,EAAMmB,iBAKNzH,EAAM9D,WAAWwL,MAAQ1H,EAAM9D,WAAWwL,QAAUC,OAAOD,QAIlDpB,EAAMsB,QAEd,KAAK,EAEJJ,EAAcxH,EAAMvB,aAAaJ,KACjC,MAED,KAAK,EAEJmJ,EAAcxH,EAAMvB,aAAaG,OACjC,MAED,KAAK,EAEJ4I,EAAcxH,EAAMvB,aAAaF,MACjC,MAED,QAECiJ,GAAgB,EAIlB,OAASA,GAER,KAAK9I,QAAMG,MAEV,IAA0B,IAArBmB,EAAMvC,WAAuB,QAnUrC,SAA+B6I,GAE9BnC,EAAWhC,IAAKmE,EAAMC,QAASD,EAAME,SAmUnCqB,CAAsBvB,GAEtB/F,EAAQC,EAAM3B,MAEd,MAED,KAAKH,QAAMC,OAEV,GAAK2H,EAAMwB,SAAWxB,EAAMyB,SAAWzB,EAAM0B,SAAW,CAEvD,IAAyB,IAApBhI,EAAMnC,UAAsB,OAEjC4I,EAAoBH,GAEpB/F,EAAQC,EAAM1B,QAER,CAEN,IAA4B,IAAvBkB,EAAMrC,aAAyB,OAEpC0I,EAAuBC,GAEvB/F,EAAQC,EAAM7B,OAIf,MAED,KAAKD,QAAMI,IAEV,GAAKwH,EAAMwB,SAAWxB,EAAMyB,SAAWzB,EAAM0B,SAAW,CAEvD,IAA4B,IAAvBhI,EAAMrC,aAAyB,OAEpC0I,EAAuBC,GAEvB/F,EAAQC,EAAM7B,WAER,CAEN,IAAyB,IAApBqB,EAAMnC,UAAsB,OAEjC4I,EAAoBH,GAEpB/F,EAAQC,EAAM1B,IAIf,MAED,QAECyB,EAAQC,EAAMC,KAIXF,IAAUC,EAAMC,OAEpBnE,SAAS2L,iBAAkB,YAAahF,GAAa,GACrD3G,SAAS2L,iBAAkB,UAAW/E,GAAW,GAEjDlD,EAAMI,cAAeiD,KAMvB,SAASJ,EAAaqD,GAErB,IAAuB,IAAlBtG,EAAMvD,QAIX,OAFA6J,EAAMmB,iBAEGlH,GAER,KAAKC,EAAM7B,OAEV,IAA4B,IAAvBqB,EAAMrC,aAAyB,QAtYvC,SAAgC2I,GAE/BxC,EAAU3B,IAAKmE,EAAMC,QAASD,EAAME,SAEpCzC,EAAYsD,WAAYvD,EAAWF,GAAc1B,eAAgBlC,EAAMpC,aAEvE,IAAIwH,EAAUpF,EAAM9D,WAEpBoF,EAAY,EAAInE,KAAKC,GAAK2G,EAAY8C,EAAIzB,EAAQM,cAElDjB,EAAU,EAAItH,KAAKC,GAAK2G,EAAY+C,EAAI1B,EAAQM,cAEhD9B,EAAY3D,KAAM6D,GAElB9D,EAAMM,SA0XJ4H,CAAuB5B,GAEvB,MAED,KAAK9F,EAAM3B,MAEV,IAA0B,IAArBmB,EAAMvC,WAAuB,QA5XrC,SAA+B6I,GAE9BlC,EAASjC,IAAKmE,EAAMC,QAASD,EAAME,SAEnCnC,EAAWgD,WAAYjD,EAAUD,GAE5BE,EAAWyC,EAAI,EAEnBZ,EAAU5B,KAECD,EAAWyC,EAAI,GAE1BV,EAAS9B,KAIVH,EAAWlE,KAAMmE,GAEjBpE,EAAMM,SA4WJ6H,CAAsB7B,GAEtB,MAED,KAAK9F,EAAM1B,IAEV,IAAyB,IAApBkB,EAAMnC,UAAsB,QA9WpC,SAA6ByI,GAE5BrC,EAAO9B,IAAKmE,EAAMC,QAASD,EAAME,SAEjCtC,EAASmD,WAAYpD,EAAQD,GAAW9B,eAAgBlC,EAAMlC,UAE9DmH,EAAKf,EAAS2C,EAAG3C,EAAS4C,GAE1B9C,EAAS/D,KAAMgE,GAEfjE,EAAMM,SAsWJ8H,CAAoB9B,IAQvB,SAASpD,EAAWoD,IAEI,IAAlBtG,EAAMvD,UAIXH,SAASoG,oBAAqB,YAAaO,GAAa,GACxD3G,SAASoG,oBAAqB,UAAWQ,GAAW,GAEpDlD,EAAMI,cAAekD,GAErB/C,EAAQC,EAAMC,MAIf,SAASoC,EAAcyD,IAEC,IAAlBtG,EAAMvD,UAA0C,IAArBuD,EAAMvC,YAA0B8C,IAAUC,EAAMC,MAAQF,IAAUC,EAAM7B,SAExG2H,EAAMmB,iBACNnB,EAAM+B,kBAENrI,EAAMI,cAAeiD,GA1XtB,SAA2BiD,GAErBA,EAAMnB,OAAS,EAEnBiB,EAAS9B,KAEEgC,EAAMnB,OAAS,GAE1Be,EAAU5B,KAIXtE,EAAMM,SAgXNgI,CAAkBhC,GAElBtG,EAAMI,cAAekD,IAItB,SAASH,EAAWmD,IAEI,IAAlBtG,EAAMvD,UAA0C,IAArBuD,EAAM7B,aAA4C,IAApB6B,EAAMnC,WApXrE,SAAwByI,GAEvB,IAAIiC,GAAc,EAElB,OAASjC,EAAMkC,SAEd,KAAKxI,EAAM5B,KAAKE,GACf2G,EAAK,EAAGjF,EAAMhC,aACduK,GAAc,EACd,MAED,KAAKvI,EAAM5B,KAAKI,OACfyG,EAAK,GAAKjF,EAAMhC,aAChBuK,GAAc,EACd,MAED,KAAKvI,EAAM5B,KAAKC,KACf4G,EAAKjF,EAAMhC,YAAa,GACxBuK,GAAc,EACd,MAED,KAAKvI,EAAM5B,KAAKG,MACf0G,GAAOjF,EAAMhC,YAAa,GAC1BuK,GAAc,EAKXA,IAGJjC,EAAMmB,iBAENzH,EAAMM,UAqVPmI,CAAenC,GAIhB,SAASxD,EAAcwD,GAEtB,IAAuB,IAAlBtG,EAAMvD,QAAX,CAIA,OAFA6J,EAAMmB,iBAEGnB,EAAMvH,QAAQwG,QAEtB,KAAK,EAEJ,OAASvF,EAAMjB,QAAQC,KAEtB,KAAKC,QAAMN,OAEV,IAA4B,IAAvBqB,EAAMrC,aAAyB,OAEpC+I,EAAwBJ,GAExB/F,EAAQC,EAAM+C,aAEd,MAED,KAAKtE,QAAMH,IAEV,IAAyB,IAApBkB,EAAMnC,UAAsB,OAEjCkJ,EAAqBT,GAErB/F,EAAQC,EAAMgD,UAEd,MAED,QAECjD,EAAQC,EAAMC,KAIhB,MAED,KAAK,EAEJ,OAAST,EAAMjB,QAAQG,KAEtB,KAAKD,QAAME,UAEV,IAA0B,IAArBa,EAAMvC,aAA4C,IAApBuC,EAAMnC,UAAsB,QAnVpE,SAAmCyI,GAE7BtG,EAAMvC,YAAauJ,EAAuBV,GAE1CtG,EAAMnC,WAAYkJ,EAAqBT,GAiVxCoC,CAA0BpC,GAE1B/F,EAAQC,EAAMiD,gBAEd,MAED,KAAKxE,QAAM0J,aAEV,IAA0B,IAArB3I,EAAMvC,aAA+C,IAAvBuC,EAAMrC,aAAyB,QArVvE,SAAsC2I,GAEhCtG,EAAMvC,YAAauJ,EAAuBV,GAE1CtG,EAAMrC,cAAe+I,EAAwBJ,GAmV9CsC,CAA6BtC,GAE7B/F,EAAQC,EAAMkD,mBAEd,MAED,QAECnD,EAAQC,EAAMC,KAIhB,MAED,QAECF,EAAQC,EAAMC,KAIXF,IAAUC,EAAMC,MAEpBT,EAAMI,cAAeiD,IAMvB,SAASL,EAAasD,GAErB,IAAuB,IAAlBtG,EAAMvD,QAKX,OAHA6J,EAAMmB,iBACNnB,EAAM+B,kBAEG9H,GAER,KAAKC,EAAM+C,aAEV,IAA4B,IAAvBvD,EAAMrC,aAAyB,OAEpCyJ,EAAuBd,GAEvBtG,EAAMM,SAEN,MAED,KAAKE,EAAMgD,UAEV,IAAyB,IAApBxD,EAAMnC,UAAsB,OAEjCyJ,EAAoBhB,GAEpBtG,EAAMM,SAEN,MAED,KAAKE,EAAMiD,gBAEV,IAA0B,IAArBzD,EAAMvC,aAA4C,IAApBuC,EAAMnC,UAAsB,QAvUlE,SAAkCyI,GAE5BtG,EAAMvC,YAAa8J,EAAsBjB,GAEzCtG,EAAMnC,WAAYyJ,EAAoBhB,GAqUzCuC,CAAyBvC,GAEzBtG,EAAMM,SAEN,MAED,KAAKE,EAAMkD,mBAEV,IAA0B,IAArB1D,EAAMvC,aAA+C,IAAvBuC,EAAMrC,aAAyB,QAzUrE,SAAqC2I,GAE/BtG,EAAMvC,YAAa8J,EAAsBjB,GAEzCtG,EAAMrC,cAAeyJ,EAAuBd,GAuU/CwC,CAA4BxC,GAE5BtG,EAAMM,SAEN,MAED,QAECC,EAAQC,EAAMC,MAMjB,SAASsC,EAAYuD,IAEG,IAAlBtG,EAAMvD,UAIXuD,EAAMI,cAAekD,GAErB/C,EAAQC,EAAMC,MAIf,SAASkC,EAAe2D,IAEA,IAAlBtG,EAAMvD,SAEX6J,EAAMmB,iBAMPzH,EAAM9D,WAAW+L,iBAAkB,cAAetF,GAAe,GAEjE3C,EAAM9D,WAAW+L,iBAAkB,YAAarF,GAAa,GAC7D5C,EAAM9D,WAAW+L,iBAAkB,QAASpF,GAAc,GAE1D7C,EAAM9D,WAAW+L,iBAAkB,aAAcnF,GAAc,GAC/D9C,EAAM9D,WAAW+L,iBAAkB,WAAYlF,GAAY,GAC3D/C,EAAM9D,WAAW+L,iBAAkB,YAAajF,GAAa,GAE7DhD,EAAM9D,WAAW+L,iBAAkB,UAAW9E,GAAW,IAIpB,IAAhCnD,EAAM9D,WAAW6M,WAErB/I,EAAM9D,WAAW6M,SAAW,GAM7BvM,KAAK8D,UAINtE,EAAcgN,UAAYC,OAAOC,OAAQC,kBAAgBH,WACzDhN,EAAcgN,UAAUI,YAAcpN,EAWtC,IAAIqN,EAAc,SAAWpN,EAAQC,GAEpCF,EAAcsN,KAAM9M,KAAMP,EAAQC,GAElCM,KAAKiC,aAAaJ,KAAOK,QAAMI,IAC/BtC,KAAKiC,aAAaF,MAAQG,QAAMC,OAEhCnC,KAAKuC,QAAQC,IAAMC,QAAMH,IACzBtC,KAAKuC,QAAQG,IAAMD,QAAM0J,cAI1BU,EAAYL,UAAYC,OAAOC,OAAQC,kBAAgBH,WACvDK,EAAYL,UAAUI,YAAcC,G,+FCrnChCE,EAAgB,SAAWC,EAAUC,GAExCC,OAAKJ,KAAM9M,MAEXA,KAAK4G,KAAO,gBAEZ5G,KAAKgN,cAAwBrN,IAAbqN,EAAyBA,EAAW,IAAIG,IACxDnN,KAAKiN,cAAwBtN,IAAbsN,EAAyBA,EAAW,IAAIG,IAAc,CAAEC,MAAuB,SAAhB1M,KAAK2M,YAIrFP,EAAcP,UAAYC,OAAOc,OAAQd,OAAOC,OAAQQ,OAAKV,WAAa,CAEzEI,YAAaG,EAEbS,iBAAiB,EAEjBC,qBAAwB,WAEvB,IAAIC,EAAQ,IAAIvN,UACZwN,EAAM,IAAIxN,UAEd,OAAO,WAQN,IANA,IAAI6M,EAAWhN,KAAKgN,SAEhBY,EAAgBZ,EAASa,WAAWD,cACpCE,EAAcd,EAASa,WAAWC,YAClCC,EAAgB,IAAIC,aAAc,EAAIJ,EAAcK,KAAKC,OAEnDC,EAAI,EAAGC,EAAI,EAAGC,EAAIT,EAAcK,KAAKC,MAAOC,EAAIE,EAAGF,IAAMC,GAAK,EAEvEV,EAAMY,oBAAqBV,EAAeO,GAC1CR,EAAIW,oBAAqBR,EAAaK,GAEtCJ,EAAeK,GAAc,IAANA,EAAY,EAAIL,EAAeK,EAAI,GAC1DL,EAAeK,EAAI,GAAML,EAAeK,GAAMV,EAAMa,WAAYZ,GAIjE,IAAIa,EAAyB,IAAIC,6BAA4BV,EAAe,EAAG,GAK/E,OAHAf,EAAS0B,aAAc,wBAAyB,IAAIC,6BAA4BH,EAAwB,EAAG,IAC3GxB,EAAS0B,aAAc,sBAAuB,IAAIC,6BAA4BH,EAAwB,EAAG,IAElGxO,MA5Be,GAkCxB4O,QAAW,WAEV,IAAIlB,EAAQ,IAAImB,UACZlB,EAAM,IAAIkB,UAEVC,EAAW,IAAID,UACfE,EAAY,IAAI5O,UAChB6O,EAAW,IAAIC,UACfC,EAAO,IAAIC,QACXC,EAAe,IAAIjP,UAEvB,OAAO,SAAkBkP,EAAWC,GAET,OAArBD,EAAUE,QAEd3P,QAAQG,MAAO,gGAIhB,IAAIyP,EAAMH,EAAUG,IAChBD,EAASF,EAAUE,OACnBE,EAAmBF,EAAOE,iBAE1BzC,EAAWhN,KAAKgN,SAChBC,EAAWjN,KAAKiN,SAChByC,EAAazC,EAASyC,WACtBC,EAAY1C,EAAS2C,UAErBhC,EAAgBZ,EAASa,WAAWD,cACpCE,EAAcd,EAASa,WAAWC,YAKtC0B,EAAIK,GAAI,EAAGf,GAGXA,EAASgB,EAAI,EACbhB,EAASiB,aAAcR,EAAOS,oBAC9BlB,EAASiB,aAAcN,GACvBX,EAASpJ,eAAgB,EAAIoJ,EAASgB,GAGtChB,EAASzE,GAAKqF,EAAWrF,EAAI,EAC7ByE,EAASxE,GAAKoF,EAAWpF,EAAI,EAC7BwE,EAASmB,EAAI,EAEblB,EAAUtL,KAAMqL,GAEhB,IAAIoB,EAAclQ,KAAKkQ,YACvBlB,EAASmB,iBAAkBZ,EAAOS,mBAAoBE,GAEtD,IAAM,IAAI/B,EAAI,EAAGE,EAAIT,EAAcM,MAAOC,EAAIE,EAAGF,IAAO,CAEvDT,EAAMY,oBAAqBV,EAAeO,GAC1CR,EAAIW,oBAAqBR,EAAaK,GAEtCT,EAAMoC,EAAI,EACVnC,EAAImC,EAAI,EAGRpC,EAAMqC,aAAcf,GACpBrB,EAAIoC,aAAcf,GAGlBtB,EAAMqC,aAAcN,GACpB9B,EAAIoC,aAAcN,GAGlB/B,EAAMhI,eAAgB,EAAIgI,EAAMoC,GAChCnC,EAAIjI,eAAgB,EAAIiI,EAAImC,GAG5B,IAAIM,EAAqB1C,EAAMuC,GAAM,GAAKtC,EAAIsC,GAAM,EAChDI,EAAkB3C,EAAMuC,EAAI,GAAKtC,EAAIsC,EAAI,EAC7C,IAAKG,IAAsBC,EAA3B,CAOA3C,EAAMrD,GAAKqF,EAAWrF,EAAI,EAC1BqD,EAAMpD,GAAKoF,EAAWpF,EAAI,EAE1BqD,EAAItD,GAAKqF,EAAWrF,EAAI,EACxBsD,EAAIrD,GAAKoF,EAAWpF,EAAI,EAGxB4E,EAAKxB,MAAMjK,KAAMiK,GACjBwB,EAAKxB,MAAMuC,EAAI,EAEff,EAAKvB,IAAIlK,KAAMkK,GACfuB,EAAKvB,IAAIsC,EAAI,EAGb,IAAIK,EAAQpB,EAAKqB,6BAA8BxB,GAAW,GAC1DG,EAAKW,GAAIS,EAAOlB,GAGhB,IAAIoB,EAAOC,YAAUC,KAAMhD,EAAMuC,EAAGtC,EAAIsC,EAAGK,GACvCK,EAAgBH,IAAU,GAAKA,GAAQ,EAEvCI,EAAW7B,EAAUR,WAAYa,GAA6B,GAAZO,EAEtD,GAAKgB,GAAiBC,EAAW,CAEhC1B,EAAKxB,MAAMY,oBAAqBV,EAAeO,GAC/Ce,EAAKvB,IAAIW,oBAAqBR,EAAaK,GAE3Ce,EAAKxB,MAAMqC,aAAcG,GACzBhB,EAAKvB,IAAIoC,aAAcG,GAEvB,IAAIW,EAAc,IAAI1Q,UAClB2Q,EAAQ,IAAI3Q,UAEhBqP,EAAIuB,oBAAqB7B,EAAKxB,MAAOwB,EAAKvB,IAAKmD,EAAOD,GAEtDvB,EAAW0B,KAAM,CAEhBF,MAAOA,EACPD,YAAaA,EACbzI,SAAUoH,EAAIyB,OAAO1C,WAAYuC,GAEjCrR,OAAQO,KACRkR,KAAM,KACNC,UAAWhD,EACXiD,GAAI,KACJC,IAAK,WAhIC,K,YC3DRC,EAAQ,SAAWtE,EAAUC,GAEhCF,EAAcD,KAAM9M,MAEpBA,KAAK4G,KAAO,QAEZ5G,KAAKgN,cAAwBrN,IAAbqN,EAAyBA,EAAW,IAAIuE,IACxDvR,KAAKiN,cAAwBtN,IAAbsN,EAAyBA,EAAW,IAAIG,IAAc,CAAEC,MAAuB,SAAhB1M,KAAK2M,YAIrFgE,EAAM9E,UAAYC,OAAOc,OAAQd,OAAOC,OAAQK,EAAcP,WAAa,CAE1EI,YAAa0E,EAEbE,SAAS,K,iCCzBK,SAASC,IAetB,OAdAA,EAAWhF,OAAOc,QAAU,SAAUrN,GACpC,IAAK,IAAIiO,EAAI,EAAGA,EAAIuD,UAAU3I,OAAQoF,IAAK,CACzC,IAAIwD,EAASD,UAAUvD,GAEvB,IAAK,IAAIyD,KAAOD,EACVlF,OAAOD,UAAUqF,eAAe/E,KAAK6E,EAAQC,KAC/C1R,EAAO0R,GAAOD,EAAOC,IAK3B,OAAO1R,IAGO4R,MAAM9R,KAAM0R,WAf9B,mC,iCCAe,SAASK,EAA8BJ,EAAQK,GAC5D,GAAc,MAAVL,EAAgB,MAAO,GAC3B,IAEIC,EAAKzD,EAFLjO,EAAS,GACT+R,EAAaxF,OAAO7K,KAAK+P,GAG7B,IAAKxD,EAAI,EAAGA,EAAI8D,EAAWlJ,OAAQoF,IACjCyD,EAAMK,EAAW9D,GACb6D,EAASE,QAAQN,IAAQ,IAC7B1R,EAAO0R,GAAOD,EAAOC,IAGvB,OAAO1R,EAZT,mC,qBCIS,SAAUiS,EAASC,EAAOC,EAAmBC,GAAoB,aAisIxE,IA6PIC,EA7PAC,EAAeH,EAAkBI,mBAAmB,CACtDC,KAAM,mBACNC,aAAc,CAvuGhB,WAEA,IAAIxH,EAASyH,KAKTC,EAAO,CAEXA,MAAa,SAASC,GAErB,IAAIC,EAAMF,EAAKG,KACX/E,EAAO,IAAIgF,WAAWH,GAG1B,GAAQ,QADEC,EAAIG,UAAUjF,EAAM,EAAG,GACjB,CACf,IAAI/J,EAAS,EACF6O,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACvC6O,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAClD,IAAIkP,EAAOL,EAAIM,SAAWpF,EAAM/J,GAAUA,GAAQ,EAElD,IADA,IAAIoP,EAAO,GACHnF,EAAE,EAAGA,EAAEiF,EAAMjF,IAAK,CACzB,IAAIoF,EAAOR,EAAIM,SAAWpF,EAAM/J,GAAUA,GAAQ,EAClDoP,EAAKtC,KAAK6B,EAAKW,UAAUvF,EAAMsF,IAEhC,OAAOD,EAED,MAAO,CAACT,EAAKW,UAAUvF,EAAM,KAGrC4E,UAAiB,SAAS5E,EAAM/J,GAC/B,IAAI6O,EAAMF,EAAKG,KACXS,EAAOvP,EAEQ6O,EAAIW,UAAUzF,EAAM/J,GACvCA,GAAU,EACV,IAAIyP,EAAYZ,EAAII,WAAWlF,EAAM/J,GACrCA,GAAU,EACQ6O,EAAII,WAAWlF,EAAM/J,GACvCA,GAAU,EACU6O,EAAII,WAAWlF,EAAM/J,GACzCA,GAAU,EACO6O,EAAII,WAAWlF,EAAM/J,GACtCA,GAAU,EAkCV,IAhCA,IAAI0P,EAAO,CACV,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAIA,OACA,OACA,OAKA,OAGA,OACA,OAEA,QAEGC,EAAM,CAACC,MAAM7F,EAAM8F,QAAQN,GAG3BO,EAAO,GAEH7F,EAAE,EAAGA,EAAEwF,EAAWxF,IAC1B,CACC,IAAI8F,EAAMlB,EAAIG,UAAUjF,EAAM/J,EAAQ,GAAMA,GAAU,EACvC6O,EAAIM,SAASpF,EAAM/J,GAAUA,GAAU,EACtD,IAAIgQ,EAAUnB,EAAIM,SAASpF,EAAM/J,GAAWA,GAAU,EACtD,IAAI6E,EAASgK,EAAIM,SAASpF,EAAM/J,GAAYA,GAAU,EACtD8P,EAAKC,GAAO,CAAC/P,OAAOgQ,EAASnL,OAAOA,GAKrC,IAAQoF,EAAE,EAAGA,EAAGyF,EAAK7K,OAAQoF,IAC7B,CACC,IAAIgG,EAAIP,EAAKzF,GAGV6F,EAAKG,KAAMN,EAAIM,EAAEC,QAAUvB,EAAKsB,EAAEC,QAAQC,MAAMpG,EAAM+F,EAAKG,GAAGjQ,OAAQ8P,EAAKG,GAAGpL,OAAQ8K,IAG1F,OAAOA,GAGRhB,WAAkB,SAAS5E,EAAMqG,EAAKf,GAKrC,IAHA,IAAIR,EAAMF,EAAKG,KACXW,EAAYZ,EAAII,WAAWlF,EAAMsF,EAAK,GACtCrP,EAASqP,EAAK,GACVpF,EAAE,EAAGA,EAAEwF,EAAWxF,IAC1B,CACC,IAAI8F,EAAMlB,EAAIG,UAAUjF,EAAM/J,EAAQ,GAAMA,GAAU,EACvC6O,EAAIM,SAASpF,EAAM/J,GAAUA,GAAU,EACtD,IAAIgQ,EAAUnB,EAAIM,SAASpF,EAAM/J,GAEjC,GAF4CA,GAAU,EACzC6O,EAAIM,SAASpF,EAAM/J,GAAYA,GAAU,EACnD+P,GAAKK,EAAO,OAAOJ,EAEvB,OAAO,IA69ER,OAt9EArB,EAAKG,KAAO,CACXU,UAAY,SAASzF,EAAMsG,GAE1B,OAAStG,EAAKsG,IAAI,EAAKtG,EAAKsG,EAAE,KAAUtG,EAAKsG,EAAE,IAAI,EAAGtG,EAAKsG,EAAE,IAAvB,OAEvCC,YAAc,SAASvG,EAAMsG,GAG5B,OADU1B,EAAKG,KAAKyB,UAAUxG,EAAMsG,GACvB,OAEdG,QAAU,SAAS5B,EAAM6B,GAGxB,IAAIC,EAAI/B,EAAKG,KAAKmB,EAAEU,MAKpB,OAJAD,EAAE,GAAK9B,EAAK6B,EAAE,GACdC,EAAE,GAAK9B,EAAK6B,EAAE,GACdC,EAAE,GAAK9B,EAAK6B,EAAE,GACdC,EAAE,GAAK9B,EAAK6B,GACL9B,EAAKG,KAAKmB,EAAEW,MAAM,IAG1BC,SAAW,SAASjC,EAAM6B,GAKzB,OAFQ9B,EAAKG,KAAKmB,EAAEU,MAClB,GAAK/B,EAAK6B,GACL9B,EAAKG,KAAKmB,EAAEa,KAAK,IAEzBP,UAAY,SAAS3B,EAAM6B,GAG1B,IAAIC,EAAI/B,EAAKG,KAAKmB,EAAEU,MAEpB,OADAD,EAAE,GAAK9B,EAAK6B,GAAIC,EAAE,GAAK9B,EAAK6B,EAAE,GACvB9B,EAAKG,KAAKmB,EAAEc,MAAM,IAE1B9B,WAAa,SAASL,EAAM6B,GAG3B,OAAQ7B,EAAK6B,IAAI,EAAK7B,EAAK6B,EAAE,IAE9BO,YAAc,SAASpC,EAAM6B,EAAGQ,GAG/B,IADA,IAAIC,EAAM,GACFjH,EAAE,EAAGA,EAAEgH,EAAKhH,IAAOiH,EAAIpE,KAAK6B,EAAKG,KAAKG,WAAWL,EAAM6B,EAAI,EAAFxG,IACjE,OAAOiH,GAER/B,SAAW,SAASP,EAAM6B,GAGzB,IAAIC,EAAI/B,EAAKG,KAAKmB,EAAEU,MAEpB,OADAD,EAAE,GAAK9B,EAAK6B,GAAKC,EAAE,GAAK9B,EAAK6B,EAAE,GAAKC,EAAE,GAAK9B,EAAK6B,EAAE,GAAKC,EAAE,GAAK9B,EAAK6B,EAAE,GAC9D9B,EAAKG,KAAKmB,EAAEkB,OAAO,IAE3BC,WAAa,SAASxC,EAAM6B,GAG3B,OAAQ,WAAA9B,EAAKG,KAAKK,SAASP,EAAM6B,GAAqB9B,EAAKG,KAAKK,SAASP,EAAM6B,EAAE,IAElFzB,UAAY,SAASJ,EAAM6B,EAAGtG,GAI7B,IADA,IAAIkH,EAAI,GACApH,EAAI,EAAGA,EAAIE,EAAGF,IAAOoH,GAAKC,OAAOC,aAAa3C,EAAK6B,EAAExG,IAC7D,OAAOoH,GAERG,YAAc,SAAS5C,EAAM6B,EAAGtG,GAI/B,IADA,IAAIkH,EAAI,GACApH,EAAI,EAAGA,EAAIE,EAAGF,IACtB,CACC,IAAIwH,EAAK7C,EAAK6B,MAAM,EAAK7B,EAAK6B,KAC9BY,GAAKC,OAAOC,aAAaE,GAE1B,OAAOJ,GAERK,MAAQzK,EAAM,YAAkB,IAAIA,EAAM,YAAoB,KAC9D0K,SAAW,SAAS/C,EAAM6B,EAAGtG,GAC5B,IAAIyH,EAAOjD,EAAKG,KAAK4C,MACrB,OAAGE,GAAW,GAAHnB,GAAQtG,GAAGyE,EAAK/J,OAAiB+M,EAAI,OAAWhD,GACpDD,EAAKG,KAAKE,UAAUJ,EAAK6B,EAAEtG,IAEnC0H,UAAY,SAASjD,EAAM6B,EAAGtG,GAI7B,IADA,IAAI+G,EAAM,GACFjH,EAAE,EAAGA,EAAEE,EAAGF,IAAOiH,EAAIpE,KAAK8B,EAAK6B,EAAExG,IACzC,OAAOiH,GAERY,eAAiB,SAASlD,EAAM6B,EAAGtG,GAIlC,IADA,IAAIkH,EAAI,GACApH,EAAI,EAAGA,EAAIE,EAAGF,IACnBoH,EAAEvE,KAAKwE,OAAOC,aAAa3C,EAAK6B,EAAExG,KACrC,OAAOoH,IAIT1C,EAAKG,KAAKmB,EAAI,CACbrB,KAAM,IAAImD,YAAY,IAEvBpD,EAAKG,KAAKmB,EAAEa,KAAS,IAAIkB,UAAYrD,EAAKG,KAAKmB,EAAErB,MACjDD,EAAKG,KAAKmB,EAAEU,MAAS,IAAI5B,WAAYJ,EAAKG,KAAKmB,EAAErB,MACjDD,EAAKG,KAAKmB,EAAEc,MAAS,IAAIkB,WAAYtD,EAAKG,KAAKmB,EAAErB,MACjDD,EAAKG,KAAKmB,EAAEiC,OAAS,IAAIC,YAAYxD,EAAKG,KAAKmB,EAAErB,MACjDD,EAAKG,KAAKmB,EAAEW,MAAS,IAAIwB,WAAYzD,EAAKG,KAAKmB,EAAErB,MACjDD,EAAKG,KAAKmB,EAAEkB,OAAS,IAAIkB,YAAY1D,EAAKG,KAAKmB,EAAErB,MAQjDD,EAAK2D,MAAQ,GAEb3D,EAAK2D,MAAMnC,MAAQ,SAASpG,EAAM/J,EAAQ6E,EAAQ0N,EAAMC,GAEvD,IAAI3D,EAAMF,EAAKG,KACXa,EAAM,GACN8C,EAAUzS,EACK6O,EAAIW,UAAUzF,EAAM/J,GAAUA,GAAU,EAE3D,IAAI0S,EAAiB7D,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC9D,IAAI2S,EAAiB9D,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC9D,IAAI4S,EAAiB/D,EAAII,WAAWlF,EAAM/J,GAO1C,OAPoDA,GAAU,EAG9D2P,EAAIkD,WAAclE,EAAK2D,MAAMQ,eAAgB/I,EAAM0I,EAAUC,GAC7D/C,EAAIoD,YAAcpE,EAAK2D,MAAMU,gBAAgBjJ,EAAM0I,EAAUE,GAC7DhD,EAAIsD,WAActE,EAAK2D,MAAMY,eAAgBnJ,EAAM0I,EAAUG,EAAeJ,GAErE7C,GAGRhB,EAAK2D,MAAMY,eAAiB,SAASnJ,EAAM/J,EAAQwS,GAElD,IAAI3D,EAAMF,EAAKG,KACX2D,EAAUzS,EACV2P,EAAM,GACN3F,EAAQ6E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACnD,IAAI,IAAIiK,EAAE,EAAGA,EAAED,EAAOC,IACtB,CACC,IAAIkJ,EAAOtE,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAClD,IAAIoT,EAAMzE,EAAK2D,MAAMe,gBAAgBtJ,EAAM0I,EAAUU,EAAMX,GAC3D7C,EAAI7C,KAAKsG,GAEV,OAAOzD,GAGRhB,EAAK2D,MAAMe,gBAAkB,SAAStJ,EAAM/J,EAAQwS,GAGnD,IAAI3D,EAAMF,EAAKG,KACX2D,EAAUzS,EACV2P,EAAM,CAACG,KAAK,IAEhBH,EAAI2D,MAAQzE,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACnD2P,EAAI4D,KAAQ1E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACnD,IAAIwT,EAAQ3E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAEnD,IAAI,IAAIiK,EAAE,EAAGA,EAAEuJ,EAAKvJ,IACpB,CACC,IAAIkJ,EAAOtE,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAClD,IAAIoQ,EAAMoC,EAAKzI,EAAM4F,EAAI2D,MAAOb,EAAUU,GAE1CxD,EAAIG,KAAKhD,KAAKsD,GAEf,OAAOT,GAGRhB,EAAK2D,MAAMmB,UAAY,SAASC,GAG/B,IADA,IAAIC,EAAM,EACF1J,EAAE,EAAGA,EAAE,GAAIA,IAAyB,IAAbyJ,IAAIzJ,EAAG,IAAW0J,IACjD,OAAOA,GAGRhF,EAAK2D,MAAMsB,aAAe,SAAS7J,EAAM/J,GAExC,IAAI6O,EAAMF,EAAKG,KACXa,EAAM,GACNkE,EAAShF,EAAII,WAAWlF,EAAM/J,GAClC,GAD4CA,GAAQ,EACzC,GAAR6T,EACH,CACC,IAAIC,EAAcjF,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACzD,IAAI+T,EAAclF,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACzD,IAAI,IAAIiK,EAAE,EAAGA,EAAE8J,EAAY9J,IAE1B0F,EAAI7C,KAAKgH,EAAW7J,GACpB0F,EAAI7C,KAAKgH,EAAW7J,GACpB0F,EAAI7C,KAAK+B,EAAII,WAAWlF,EAAM/J,IAAWA,GAAQ,EAGnD,GAAW,GAAR6T,EACH,CACC,IAAI7J,EAAQ6E,EAAII,WAAWlF,EAAM/J,GACjC,IAD2CA,GAAQ,EAC3CiK,EAAE,EAAGA,EAAED,EAAOC,IAErB0F,EAAI7C,KAAK+B,EAAII,WAAWlF,EAAM/J,IAAWA,GAAQ,EACjD2P,EAAI7C,KAAK+B,EAAII,WAAWlF,EAAM/J,IAAWA,GAAQ,EACjD2P,EAAI7C,KAAK+B,EAAII,WAAWlF,EAAM/J,IAAWA,GAAQ,EAGnD,OAAO2P,GAERhB,EAAK2D,MAAM0B,YAAc,SAAS5D,EAAK6D,GAEtC,IAAI,IAAIhK,EAAE,EAAGA,EAAEmG,EAAIvL,OAAQoF,GAAG,EAC9B,CACC,IAAIT,EAAQ4G,EAAInG,GAAIR,EAAM2G,EAAInG,EAAE,GAChC,GAD4CmG,EAAInG,EAAE,GAC/CT,GAAOyK,GAAOA,GAAKxK,EAAO,OAAOQ,EAErC,OAAQ,GAIT0E,EAAK2D,MAAM4B,aAAe,SAASnK,EAAM/J,GAExC,IAAI6O,EAAMF,EAAKG,KACXqF,EAAM,GACVA,EAAIC,IAAQvF,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACnD,IAAIgK,EAAQ6E,EAAII,WAAWlF,EAAM/J,GAIjC,OAJ2CA,GAAQ,EAEvC,GAATmU,EAAIC,MAAUD,EAAI/D,IAAMvB,EAAImC,YAAYjH,EAAM/J,EAAQgK,IAC7C,GAATmK,EAAIC,MAAUD,EAAI/D,IAAMvB,EAAImC,YAAYjH,EAAM/J,EAAc,EAANgK,IAClDmK,GAGRxF,EAAK2D,MAAM+B,cAAgB,SAASF,EAAKF,GAExC,IAAI7D,EAAM+D,EAAI/D,IACd,GAAY,GAAT+D,EAAIC,IAAU,OAAOhE,EAAIpC,QAAQiG,GACpC,GAAY,GAATE,EAAIC,IAAQ,CACd,IAAIE,EAAM3F,EAAK2D,MAAM0B,YAAY5D,EAAK6D,GACtC,IAAS,GAANK,EAAW,OAAOlE,EAAIkE,EAAI,IAAML,EAAM7D,EAAIkE,IAE9C,OAAQ,GAGT3F,EAAK2D,MAAMU,gBAAkB,SAASjJ,EAAM/J,GAE3C,IAAI6O,EAAMF,EAAKG,KACX2D,EAAUzS,EACV2P,EAAM,GAEN3F,EAAQ6E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAEnD,IAAI,IAAIiK,EAAE,EAAGA,EAAED,EAAOC,IACtB,CACC,IAAI8F,EAAMlB,EAAIG,UAAUjF,EAAM/J,EAAQ,GAAKA,GAAQ,EACnD,IAAImT,EAAOtE,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAClD2P,EAAI7C,KAAK,CAACiD,IAAKA,EAAIG,OAAQE,IAAIzB,EAAK2D,MAAMiC,iBAAiBxK,EAAM0I,EAAUU,KAE5E,OAAOxD,GAGRhB,EAAK2D,MAAMiC,iBAAmB,SAASxK,EAAM/J,GAE5C,IAAI6O,EAAMF,EAAKG,KAEKD,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAC3D,IAAIwU,EAAc3F,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAGzD,IADA,IAAIyU,EAAU,GACNxK,EAAE,EAAGA,EAAEuK,EAAavK,IAAOwK,EAAQ3H,KAAK+B,EAAII,WAAWlF,EAAM/J,EAAO,EAAEiK,IAC9E,OAAOwK,GAIR9F,EAAK2D,MAAMQ,eAAiB,SAAS/I,EAAM/J,GAE1C,IAAI6O,EAAMF,EAAKG,KACX2D,EAAUzS,EACV2P,EAAM,GAEN3F,EAAQ6E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAEnD,IAAI,IAAIiK,EAAE,EAAGA,EAAED,EAAOC,IACtB,CACC,IAAI8F,EAAMlB,EAAIG,UAAUjF,EAAM/J,EAAQ,GAAKA,GAAQ,EACnD,IAAImT,EAAOtE,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAClD2P,EAAII,EAAIG,QAAUvB,EAAK2D,MAAMoC,gBAAgB3K,EAAM0I,EAAUU,GAE9D,OAAOxD,GAGRhB,EAAK2D,MAAMoC,gBAAkB,SAAS3K,EAAM/J,GAE3C,IAAI6O,EAAMF,EAAKG,KACX2D,EAAUzS,EACV2P,EAAM,GAENgF,EAAgB9F,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAC3D2P,EAAIiF,QAAUjG,EAAK2D,MAAMuC,iBAAiB9K,EAAM0I,EAAUkC,GAE1D,IAAIG,EAAejG,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAE1D,IAAI,IAAIiK,EAAE,EAAGA,EAAE6K,EAAc7K,IAC7B,CACC,IAAI8F,EAAMlB,EAAIG,UAAUjF,EAAM/J,EAAQ,GAAKA,GAAQ,EACnD,IAAI+U,EAAalG,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACxD2P,EAAII,EAAIG,QAAUvB,EAAK2D,MAAMuC,iBAAiB9K,EAAM0I,EAAUsC,GAE/D,OAAOpF,GAGRhB,EAAK2D,MAAMuC,iBAAmB,SAAS9K,EAAM/J,GAE5C,IAAI6O,EAAMF,EAAKG,KACXa,EAAM,GAEQd,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAEzD2P,EAAIqF,WAAanG,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAKxD,IAAIiV,EAAepG,EAAII,WAAWlF,EAAM/J,GAExC,OAFkDA,GAAQ,EAC1D2P,EAAIuF,SAAWrG,EAAImC,YAAYjH,EAAM/J,EAAQiV,GACtCtF,GAGPhB,EAAKwG,IAAM,GACXxG,EAAKwG,IAAIhF,MAAQ,SAASpG,EAAM/J,EAAQ6E,GAEvC,IAAIgK,EAAMF,EAAKG,MAEf/E,EAAO,IAAIgF,WAAWhF,EAAKqL,OAAQpV,EAAQ6E,IAC3C7E,EAAS,GAIG+J,IADe/J,GAEb+J,IADa/J,GAEb+J,IADe/J,GACAA,IAI7B,IAAIqV,EAAQ,GACZrV,EAAS2O,EAAKwG,IAAIG,UAAUvL,EAAM/J,EAAQqV,GAG1C,IAFA,IAAIE,EAAQ,GAEJtL,EAAE,EAAGA,EAAEoL,EAAMxQ,OAAO,EAAGoF,IAAOsL,EAAMzI,KAAK+B,EAAIG,UAAUjF,EAAM/J,EAAOqV,EAAMpL,GAAIoL,EAAMpL,EAAE,GAAGoL,EAAMpL,KACvGjK,GAAUqV,EAAMA,EAAMxQ,OAAO,GAI7B,IAAI2Q,EAAS,GACbxV,EAAS2O,EAAKwG,IAAIG,UAAUvL,EAAM/J,EAAQwV,GAE1C,IAAIC,EAAW,GACf,IAAQxL,EAAE,EAAGA,EAAEuL,EAAO3Q,OAAO,EAAGoF,IAAOwL,EAAS3I,KAAM6B,EAAKwG,IAAIO,SAAS3L,EAAM/J,EAAOwV,EAAOvL,GAAIjK,EAAOwV,EAAOvL,EAAE,KAChHjK,GAAUwV,EAAOA,EAAO3Q,OAAO,GAC/B,IAAI8Q,EAAUF,EAAS,GAInBG,EAAQ,GACZ5V,EAAS2O,EAAKwG,IAAIG,UAAUvL,EAAM/J,EAAQ4V,GAE1C,IAAIC,EAAU,GACd,IAAQ5L,EAAE,EAAGA,EAAE2L,EAAM/Q,OAAO,EAAGoF,IAAO4L,EAAQ/I,KAAK+B,EAAIG,UAAUjF,EAAM/J,EAAO4V,EAAM3L,GAAI2L,EAAM3L,EAAE,GAAG2L,EAAM3L,KAOzG,GANAjK,GAAU4V,EAAMA,EAAM/Q,OAAO,GAG7B8J,EAAKwG,IAAIW,UAAU/L,EAAM/J,EAAQ2V,GAG9BA,EAAQI,YACX,CACC/V,EAAS2V,EAAQI,YACbH,EAAQ,GACZ5V,EAAS2O,EAAKwG,IAAIG,UAAUvL,EAAM/J,EAAQ4V,GAE1C,IAAII,EAAO,GACX,IAAQ/L,EAAE,EAAGA,EAAE2L,EAAM/Q,OAAO,EAAGoF,IAAO+L,EAAKlJ,KAAK+B,EAAIgD,UAAU9H,EAAM/J,EAAO4V,EAAM3L,GAAI2L,EAAM3L,EAAE,GAAG2L,EAAM3L,KAEtG0L,EAAQI,YAAcC,EAKvB,GAAGL,EAAQM,IAAK,CACfjW,EAAS2V,EAAQO,QACjB,IAAIC,EAAQ,GAIZ,IAHAnW,EAAS2O,EAAKwG,IAAIG,UAAUvL,EAAM/J,EAAQmW,GAE1CR,EAAQO,QAAU,GACVjM,EAAE,EAAGA,EAAEkM,EAAMtR,OAAO,EAAGoF,IAAK,CACnC,IAAImM,EAAOzH,EAAKwG,IAAIO,SAAS3L,EAAM/J,EAAOmW,EAAMlM,GAAIjK,EAAOmW,EAAMlM,EAAE,IACnE0E,EAAKwG,IAAIkB,WAAWtM,EAAMqM,EAAMP,GAChCF,EAAQO,QAAQpJ,KAAMsJ,GAEvBpW,GAAUmW,EAAMA,EAAMtR,OAAO,GAE7B7E,EAAS2V,EAAQW,SACjBX,EAAQW,SAAW,GACnB,IAAIlC,EAAMrK,EAAK/J,GACf,GADyBA,IACjB,GAALoU,EAMI,MAAMA,EALZ,IAAImC,EAAM1H,EAAII,WAAWlF,EAAM/J,GAC/B,IADyCA,GAAQ,EACzCiK,EAAE,EAAGA,EAAEsM,EAAI,EAAGtM,IACrB0L,EAAQW,SAASxJ,KAAK+B,EAAII,WAAWlF,EAAM/J,GAAS+J,EAAK/J,EAAO,IAAMA,GAAQ,EAajF,OANG2V,EAAQa,WAAYb,EAAQa,SAAW7H,EAAKwG,IAAIsB,aAAa1M,EAAM4L,EAAQa,SAAUb,EAAQI,YAAYlR,SAGzG8Q,EAAQe,UAAYf,EAAQe,QAAW/H,EAAKwG,IAAIwB,YAAa5M,EAAM4L,EAAQe,QAAUf,EAAQI,YAAYlR,SAE5G8J,EAAKwG,IAAIkB,WAAWtM,EAAM4L,EAASE,GAC5BF,GAERhH,EAAKwG,IAAIkB,WAAa,SAAStM,EAAMqM,EAAMQ,GAC1C,IAAI5W,EAMJ,IAAI,IAAIyQ,KALL2F,EAAKS,UACP7W,EAASoW,EAAKS,QAAQ,GACtBT,EAAKS,QAAUlI,EAAKwG,IAAIO,SAAS3L,EAAM/J,EAAQA,EAAOoW,EAAKS,QAAQ,IAChET,EAAKS,QAAQC,OAAUnI,EAAKwG,IAAIW,UAAU/L,EAAM/J,EAAOoW,EAAKS,QAAQC,MAAOV,EAAKS,UAEvET,GAA4F,GAAjF,CAAC,aAAa,WAAW,WAAW,SAAS,UAAU,aAAapI,QAAQyC,KAAW2F,EAAK3F,GAAGmG,EAAGR,EAAK3F,GAAI,IAAM,MAG1I9B,EAAKwG,IAAIW,UAAY,SAAS/L,EAAM/J,EAAQ2P,GAE3C,IAAId,EAAMF,EAAKG,KACXiI,EAAW,GACf/W,EAAS2O,EAAKwG,IAAIG,UAAUvL,EAAM/J,EAAQ+W,GAE1C,IAAIC,EAAMC,EAASF,EAASlS,OACNmS,EAAlBC,EAAU,KAAe,IACpBA,EAAS,MAAgB,KACpB,MACdtH,EAAIuH,KAAOF,EAEXrH,EAAImH,MAAQ,GACZ,IAAI,IAAI7M,EAAE,EAAGA,EAAE8M,EAASlS,OAAO,EAAGoF,IAAO0F,EAAImH,MAAMhK,KAAK+B,EAAIgD,UAAU9H,EAAM/J,EAAO+W,EAAS9M,GAAI8M,EAAS9M,EAAE,GAAG8M,EAAS9M,MAIxH0E,EAAKwG,IAAIgC,QAAU,CACd,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EACnC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,EAAI,GAAK,GAAK,GAAK,GAAI,IAAK,IAAK,IACnC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjC,EAAG,IAAK,IAAK,IAAK,IAAO,EAAG,IAAK,IACnC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAO,EAAG,IACjC,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACnC,IAAO,EAAG,IAAK,IAAO,EAAG,IAAK,IAAK,IACnC,IAAO,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EACnC,EAAG,IAAO,EAAG,IAAO,EAAK,EAAK,EAAK,EACrC,IAAK,IAAK,IAAK,IAAO,EAAK,EAAK,EAAK,EACnC,EAAG,IAAO,EAAK,EAAK,EAAG,IAAO,EAAK,EACrC,IAAK,IAAK,IAAK,IAAO,EAAK,EAAK,EAAK,GAGxCxI,EAAKwG,IAAIiC,eAAiB,SAASC,EAAKC,GAEvC,IAAI,IAAIrN,EAAE,EAAGA,EAAEoN,EAAIX,QAAQ7R,OAAQoF,IAAO,GAAGoN,EAAIX,QAAQzM,IAAIqN,EAAQ,OAAOrN,EAC5E,OAAQ,GAGT0E,EAAKwG,IAAIoC,UAAY,SAASF,EAAKG,GAElC,OAAKA,EAAW,GAAKA,EAAW,KAAgB,EACzC7I,EAAKwG,IAAIiC,eAAeC,EAAK1I,EAAKwG,IAAIgC,QAAQK,KAGtD7I,EAAKwG,IAAIsB,aAAe,SAAS1M,EAAM/J,EAAQ2T,GAEpChF,EAAKG,KAAf,IAEI2I,EAAQ,CAAC,WACT5D,EAAS9J,EAAK/J,GAIlB,GAJ4BA,IAIjB,GAAR6T,EAkBI,KAAM,mCAAqCA,EAhBjD,IAAI6D,EAAS3N,EAAK/J,GAAUA,IAC5B,IAAI,IAAIiK,EAAE,EAAGA,EAAEyN,EAAQzN,IAAQwN,EAAM3K,KAAK/C,EAAK/J,EAAOiK,IAiBvD,OAAOwN,GAGR9I,EAAKwG,IAAIwB,YAAc,SAAS5M,EAAM/J,EAAQ2T,GAE7C,IAAI9E,EAAMF,EAAKG,KAEX4H,EAAU,CAAC,WACX7C,EAAS9J,EAAK/J,GAElB,GAF4BA,IAEjB,GAAR6T,EAEF,IAAI,IAAI5J,EAAE,EAAGA,EAAE0J,EAAK1J,IACpB,CACC,IAAI0N,EAAQ9I,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACnD0W,EAAQ5J,KAAK6K,OAGV,IAAW,GAAR9D,GAAqB,GAARA,EAWd,KAAM,kBAAoBA,EAThC,KAAM6C,EAAQ7R,OAAO8O,GACrB,CACKgE,EAAQ9I,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACnD,IAAI4X,EAAM,EAGV,IAFW,GAAR/D,GAAc+D,EAAQ7N,EAAK/J,GAAUA,MACvB4X,EAAQ/I,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,GACxDiK,EAAE,EAAGA,GAAG2N,EAAO3N,IAASyM,EAAQ5J,KAAK6K,GAASA,KAKxD,OAAOjB,GAGR/H,EAAKwG,IAAIG,UAAY,SAASvL,EAAM/J,EAAQ6X,GAE3C,IAAIhJ,EAAMF,EAAKG,KAEX9E,EAAQ6E,EAAII,WAAWlF,EAAM/J,GAAQ,EACrC8X,EAAU/N,EAD+B/J,GAAQ,GAGrD,GAF6BA,IAEZ,GAAT8X,EAAc,IAAI,IAAI7N,EAAE,EAAGA,EAAED,EAAOC,IAAO4N,EAAK/K,KAAM/C,EAAK/J,EAAOiK,SACrE,GAAY,GAAT6N,EAAc,IAAQ7N,EAAE,EAAGA,EAAED,EAAOC,IAAO4N,EAAK/K,KAAM+B,EAAII,WAAWlF,EAAM/J,EAAS,EAAFiK,SACrF,GAAY,GAAT6N,EAAc,IAAQ7N,EAAE,EAAGA,EAAED,EAAOC,IAAO4N,EAAK/K,KAA6C,SAAvC+B,EAAIM,SAAWpF,EAAM/J,EAAS,EAAFiK,EAAM,SAC3F,GAAU,GAAPD,EAAY,KAAM,4BAA8B8N,EAAU,YAAc9N,EAGhF,OADAhK,GAAUgK,EAAM8N,GACF,GAGfnJ,EAAKwG,IAAI4C,cAAgB,SAAShO,EAAM/J,EAAQqQ,GAE/C,IAAIxB,EAAMF,EAAKG,KAEXkJ,EAAKjO,EAAK/J,GAASiY,EAAKlO,EAAK/J,EAAO,GACpCkY,GAD6CnO,EAAK/J,EAAO,GAAS+J,EAAK/J,EAAO,GAAO+J,EAAK/J,EAAO,GAC5F,GACLmY,EAAG,KAAMlE,EAAI,KAEd+D,GAAI,KAAMG,EAAKH,EAAKE,EAAG,GACnB,IAAJF,IAAUG,EAAQ,IAAHH,EAAOC,EAAKC,EAAG,GAE9B,IAAKF,GAAMA,GAAK,KAAMG,EAAKH,EAAKE,EAAG,GAC/B,IAAJF,IAAU/D,EAAMpF,EAAI0B,UAAUxG,EAAK/J,EAAO,GAAKkY,EAAG,GAClD,IAAKF,GAAMA,GAAK,KAAMG,EAAKH,EAAKE,EAAG,GACnC,IAAKF,GAAMA,GAAI,MAAO/D,EAAM+D,EAAG,IAAME,EAAG,GACxC,KAAKF,GAAMA,GAAI,MAAO/D,EAAe,KAAR+D,EAAG,KAASC,EAAG,IAAMC,EAAG,GACrD,KAAKF,GAAMA,GAAI,MAAO/D,EAAe,MAAR+D,EAAG,KAASC,EAAG,IAAMC,EAAG,GACjD,KAAJF,IAAY/D,EAAMpF,EAAI2B,QAAQzG,EAAM/J,EAAO,GAAG,MAASkY,EAAG,GAE7D7H,EAAE4D,IAAW,MAALA,EAAYA,EAAM,IAAIkE,EAC9B9H,EAAE+H,KAAOF,GAGVvJ,EAAKwG,IAAIkD,eAAiB,SAAStO,EAAM/J,EAAQ6E,GAMhD,IAJA,IAAI4E,EAAMzJ,EAAS6E,EACfgK,EAAMF,EAAKG,KACXoC,EAAM,GAEJlR,EAAOyJ,GACb,CACC,IAAIuO,EAAKjO,EAAK/J,GAASiY,EAAKlO,EAAK/J,EAAO,GACpCkY,GAD6CnO,EAAK/J,EAAO,GAAS+J,EAAK/J,EAAO,GAAO+J,EAAK/J,EAAO,GAC5F,GACLmY,EAAG,KAAMlE,EAAI,KAEd+D,GAAI,KAAMG,EAAKH,EAAKE,EAAG,GACnB,IAAJF,IAAUG,EAAQ,IAAHH,EAAOC,EAAKC,EAAG,GAC1B,IAAJF,GAAc,IAAJA,IAAUG,EAAKH,EAAgBE,EAAG,GAC5C,IAAKF,GAAMA,GAAK,KAAMG,EAAKH,EAAKE,EAAG,GAC/B,IAAJF,IAAU/D,EAAMpF,EAAI0B,UAAUxG,EAAK/J,EAAO,GAAKkY,EAAG,GAClD,IAAKF,GAAMA,GAAK,KAAMG,EAAKH,EAAKE,EAAG,GACnC,IAAKF,GAAMA,GAAI,MAAO/D,EAAM+D,EAAG,IAAME,EAAG,GACxC,KAAKF,GAAMA,GAAI,MAAO/D,EAAe,KAAR+D,EAAG,KAASC,EAAG,IAAMC,EAAG,GACrD,KAAKF,GAAMA,GAAI,MAAO/D,EAAe,MAAR+D,EAAG,KAASC,EAAG,IAAMC,EAAG,GACjD,KAAJF,IAAY/D,EAAMpF,EAAI2B,QAAQzG,EAAM/J,EAAO,GAAG,MAASkY,EAAG,GAE7DhH,EAAIpE,KAAU,MAALmH,EAAYA,EAAM,IAAIkE,GAC/BnY,GAAUkY,EAMX,OAAOhH,GAGRvC,EAAKwG,IAAIO,SAAW,SAAS3L,EAAM/J,EAAQyJ,GAO1C,IALA,IAAIoF,EAAMF,EAAKG,KAEXsH,EAAO,GACPkC,EAAO,GAELtY,EAAOyJ,GACb,CACC,IAAIuO,EAAKjO,EAAK/J,GAASiY,EAAKlO,EAAK/J,EAAO,GACpCkY,GAD6CnO,EAAK/J,EAAO,GAAS+J,EAAK/J,EAAO,GAAO+J,EAAK/J,EAAO,GAC5F,GACL0N,EAAI,KAAMuG,EAAI,KAOlB,GALO,IAAJ+D,IAAU/D,EAAMpF,EAAI0B,UAAUxG,EAAK/J,EAAO,GAAKkY,EAAG,GAC9C,IAAJF,IAAU/D,EAAMpF,EAAI2B,QAAUzG,EAAK/J,EAAO,GAAKkY,EAAG,GAClD,IAAKF,GAAMA,GAAI,MAAO/D,EAAM+D,EAAG,IAAME,EAAG,GACxC,KAAKF,GAAMA,GAAI,MAAO/D,EAAe,KAAR+D,EAAG,KAASC,EAAG,IAAMC,EAAG,GACrD,KAAKF,GAAMA,GAAI,MAAO/D,EAAe,MAAR+D,EAAG,KAASC,EAAG,IAAMC,EAAG,GACjD,KAAJF,EAA8D,MAAlD/D,EAAMpF,EAAI2B,QAAQzG,EAAM/J,EAAO,GAAG,MAASkY,EAAG,EAAU,iBAEvE,GAAO,IAAJF,EACH,CACC,IAAIO,EAAO,GAEX,IADAL,EAAK,IAEL,CACC,IAAIM,EAAIzO,EAAK/J,EAAOkY,GAAMA,IAC1B,IAAIO,EAAOD,GAAG,EAAGE,EAAS,GAAFF,EAExB,GADW,IAARC,GAAeF,EAAKzL,KAAK2L,GAAmB,IAANC,GAAaH,EAAKzL,KAAK4L,GACvD,IAANA,EAAa,MAIjB,IAFA,IAAIrH,EAAI,GACJsH,EAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,KAAK,WAAW,IAAI,eACrD1O,EAAE,EAAGA,EAAEsO,EAAK1T,OAAQoF,IAAOoH,GAAKsH,EAAMJ,EAAKtO,IAEnDgK,EAAM2E,WAAWvH,GAGf2G,GAAI,KAMNtK,EAJW,CAAC,UAAW,SAAU,WAAY,aAAc,SAAU,WAAY,aAAc,aAAc,cAAc,mBAC1H,QAAS,QAAS,SAAU,WAAY,OAAQ,UAAW,WAAY,cAAe,UAAW,QACjG,gBAAiB,iBAEPsK,GAAME,EAAG,EACb,IAAJF,IAKFtK,EAJW,CAAE,YAAa,eAAgB,cAAe,oBAAqB,qBAAsB,YAAa,iBAAkB,aAAc,cAAe,YAChK,YAAa,WAAY,YAAa,YAAa,YAAa,EAAE,EAAG,gBAAiB,kBAAmB,oBACzG,gBAAiB,aAAc,eAAgB,gBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,EAC1E,MAAO,iBAAkB,kBAAmB,cAAe,WAAY,UAAW,UAAW,WAAY,YAC9FuK,GAAMC,EAAG,IAId,MAALxK,GAAc0I,EAAK1I,GAAoB,GAAb4K,EAAKzT,OAAYyT,EAAK,GAAKA,EAAOA,EAAK,IAC5DA,EAAKxL,KAAKmH,GAElBjU,GAAUkY,EAEX,OAAO9B,GAITzH,EAAKkK,KAAO,GACZlK,EAAKkK,KAAK1I,MAAQ,SAASpG,EAAM/J,EAAQ6E,GAExCkF,EAAO,IAAIgF,WAAWhF,EAAKqL,OAAQpV,EAAQ6E,GAC3C7E,EAAS,EACT,IAAI6O,EAAMF,EAAKG,KACXa,EAAM,GACMd,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACzD,IAAIyP,EAAYZ,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAIzD,IAAI8Y,EAAO,GACXnJ,EAAIoJ,OAAS,GAGb,IAAI,IAAI9O,EAAE,EAAGA,EAAEwF,EAAWxF,IAC1B,CACC,IAAI+O,EAAanK,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC1D,IAAIiZ,EAAapK,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC1D,IAAIkZ,EAAUrK,EAAIM,SAASpF,EAAM/J,GAAeA,GAAU,EAE1D,IAAImZ,EAAK,IAAIH,EAAW,IAAIC,EAKxBG,EAAON,EAAK9K,QAAQkL,GAExB,IAAU,GAAPE,EACH,CAEC,IAAI5G,EADJ4G,EAAOzJ,EAAIoJ,OAAOlU,OAElBiU,EAAKhM,KAAKoM,GACV,IAAIrF,EAAShF,EAAII,WAAWlF,EAAMmP,GACjB,GAATrF,EAAcrB,EAAO7D,EAAKkK,KAAKQ,OAAOtP,EAAMmP,GACnC,GAATrF,EAAcrB,EAAO7D,EAAKkK,KAAKS,OAAOvP,EAAMmP,GACnC,GAATrF,EAAcrB,EAAO7D,EAAKkK,KAAKU,OAAOxP,EAAMmP,GACpC,IAARrF,EAAcrB,EAAO7D,EAAKkK,KAAKW,QAAQzP,EAAKmP,GAC7Cxd,QAAQ+d,IAAI,mBAAmB5F,EAAQmF,EAAYC,EAAYC,GACtEvJ,EAAIoJ,OAAOjM,KAAK0F,GAGjB,GAAY,MAAT7C,EAAIwJ,GAAa,KAAM,4CAC1BxJ,EAAIwJ,GAAMC,EAEX,OAAOzJ,GAGRhB,EAAKkK,KAAKQ,OAAS,SAAStP,EAAM/J,GAEjC,IAAI6O,EAAMF,EAAKG,KACXa,EAAM,GACVA,EAAIkE,OAAShF,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACtD,IAAIiR,EAASpC,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACzC6O,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACtD2P,EAAI+J,IAAM,GACV,IAAI,IAAIzP,EAAE,EAAGA,EAAEgH,EAAI,EAAGhH,IAAO0F,EAAI+J,IAAI5M,KAAK/C,EAAK/J,EAAOiK,IACtD,OAAO0F,GAGRhB,EAAKkK,KAAKS,OAAS,SAASvP,EAAM/J,GAEjC,IAAI6O,EAAMF,EAAKG,KACX2D,EAAUzS,EACV2P,EAAM,GAEVA,EAAIkE,OAAShF,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACpD,IAAI6E,EAASgK,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACrC6O,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACtD,IAAI2Z,EAAa9K,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACxD,IAAI4Z,EAAWD,EAAW,EAC1BhK,EAAIkK,YAAchL,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACzD2P,EAAImK,cAAgBjL,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAC3D2P,EAAIoK,WAAalL,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACxD2P,EAAIqK,SAAanL,EAAImC,YAAYjH,EAAM/J,EAAQ4Z,GAAY5Z,GAAmB,EAAT4Z,EACrE5Z,GAAQ,EACR2P,EAAIsK,WAAapL,EAAImC,YAAYjH,EAAM/J,EAAQ4Z,GAAY5Z,GAAmB,EAAT4Z,EACrEjK,EAAIuK,QAAU,GACd,IAAI,IAAIjQ,EAAE,EAAGA,EAAE2P,EAAU3P,IAAM0F,EAAIuK,QAAQpN,KAAK+B,EAAI0B,UAAUxG,EAAM/J,IAAWA,GAAQ,EAGvF,IAFA2P,EAAIwK,cAAgBtL,EAAImC,YAAYjH,EAAM/J,EAAQ4Z,GAAY5Z,GAAmB,EAAT4Z,EACxEjK,EAAIyK,aAAe,GACbpa,EAAQyS,EAAQ5N,GAAS8K,EAAIyK,aAAatN,KAAK+B,EAAII,WAAWlF,EAAM/J,IAAWA,GAAQ,EAC7F,OAAO2P,GAGRhB,EAAKkK,KAAKU,OAAS,SAASxP,EAAM/J,GAEjC,IAAI6O,EAAMF,EAAKG,KACXa,EAAM,GAEVA,EAAIkE,OAAShF,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACvC6O,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACrC6O,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACtD2P,EAAI0K,UAAYxL,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACvD,IAAIsa,EAAazL,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACxD2P,EAAIyK,aAAe,GACnB,IAAI,IAAInQ,EAAE,EAAGA,EAAEqQ,EAAYrQ,IAAM0F,EAAIyK,aAAatN,KAAK+B,EAAII,WAAWlF,EAAM/J,IAAWA,GAAQ,EAE/F,OAAO2P,GAGRhB,EAAKkK,KAAKW,QAAU,SAASzP,EAAM/J,GAElC,IAAI6O,EAAMF,EAAKG,KACXa,EAAM,GAEVA,EAAIkE,OAAShF,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACpDA,GAAU,EACG6O,EAAIM,SAASpF,EAAM/J,GAAUA,GAAQ,EACrC6O,EAAIM,SAASpF,EAAM/J,GAAUA,GAAQ,EAClD,IAAIua,EAAS1L,EAAIM,SAASpF,EAAM/J,GAAUA,GAAQ,EAClD2P,EAAI6K,OAAS,GAEb,IAAI,IAAIvQ,EAAE,EAAGA,EAAEsQ,EAAStQ,IACxB,CACC,IAAIwQ,EAAMza,EAAa,GAAJiK,EACfyQ,EAAgB7L,EAAIM,SAASpF,EAAM0Q,EAAI,GACvCE,EAAgB9L,EAAIM,SAASpF,EAAM0Q,EAAI,GACvCG,EAAgB/L,EAAIM,SAASpF,EAAM0Q,EAAI,GAC3C9K,EAAI6K,OAAO1N,KAAK,CAAG4N,EAAeC,EAAaC,IAEhD,OAAOjL,GAGRhB,EAAKkM,KAAO,GACZlM,EAAKkM,KAAK1K,MAAQ,SAASpG,EAAM/J,EAAQ6E,EAAQ0N,GAGhD,IADA,IAAI5C,EAAM,GACFmL,EAAE,EAAGA,EAAEvI,EAAKwI,KAAKC,UAAWF,IAAOnL,EAAI7C,KAAK,MACpD,OAAO6C,GAGRhB,EAAKkM,KAAKI,WAAa,SAAS1I,EAAMuI,GAErC,IAAIjM,EAAMF,EAAKG,KACX/E,EAAOwI,EAAK3C,MAEZ5P,EAAS2O,EAAKuM,WAAWnR,EAAM,OAAQwI,EAAK1C,SAAW0C,EAAK4I,KAAKL,GAErE,GAAGvI,EAAK4I,KAAKL,IAAIvI,EAAK4I,KAAKL,EAAE,GAAM,OAAO,KAE1C,IAAIM,EAAK,GAQT,GANAA,EAAGC,IAAOxM,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAQ,EAChDob,EAAGE,KAAOzM,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAQ,EAChDob,EAAGG,KAAO1M,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAQ,EAChDob,EAAGI,KAAO3M,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAQ,EAChDob,EAAGK,KAAO5M,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAQ,EAE7Cob,EAAGE,MAAMF,EAAGI,MAAQJ,EAAGG,MAAMH,EAAGK,KAAQ,OAAO,KAElD,GAAGL,EAAGC,IAAI,EACV,CACCD,EAAGM,OAAS,GACZ,IAAI,IAAIzR,EAAE,EAAGA,EAAEmR,EAAGC,IAAKpR,IAAOmR,EAAGM,OAAO5O,KAAK+B,EAAII,WAAWlF,EAAK/J,IAAUA,GAAQ,EAEnF,IAAI2b,EAAoB9M,EAAII,WAAWlF,EAAK/J,GAC5C,GADqDA,GAAQ,EACzD+J,EAAKlF,OAAO7E,EAAQ2b,EAAqB,OAAO,KACpDP,EAAGQ,aAAe/M,EAAIgD,UAAU9H,EAAM/J,EAAQ2b,GAAsB3b,GAAQ2b,EAE5E,IAAIE,EAAST,EAAGM,OAAON,EAAGC,IAAI,GAAG,EAEjC,IADAD,EAAGU,MAAQ,GACH7R,EAAE,EAAGA,EAAE4R,EAAQ5R,IACvB,CACC,IAAIsJ,EAAOxJ,EAAK/J,GAEhB,GAF0BA,IAC1Bob,EAAGU,MAAMhP,KAAKyG,GACD,IAAJ,EAALA,GACJ,CACC,IAAIwI,EAAMhS,EAAK/J,GAAUA,IACzB,IAAI,IAAIkK,EAAE,EAAGA,EAAE6R,EAAK7R,IAAOkR,EAAGU,MAAMhP,KAAKyG,GAAOtJ,KAIlD,IADAmR,EAAGY,GAAK,GACA/R,EAAE,EAAGA,EAAE4R,EAAQ5R,IAAK,CAC3B,IAAIgS,EAAqB,IAAJ,EAAZb,EAAGU,MAAM7R,IAAWiS,EAAwB,IAAL,GAAZd,EAAGU,MAAM7R,IAC1CgS,GAAMb,EAAGY,GAAGlP,KAAKoP,EAAOnS,EAAK/J,IAAW+J,EAAK/J,IAAWA,KAGvDkc,EAAQd,EAAGY,GAAGlP,KAAK,IACfsO,EAAGY,GAAGlP,KAAK+B,EAAI0B,UAAUxG,EAAM/J,IAAWA,GAAQ,GAI3D,IADAob,EAAGe,GAAK,GACAlS,EAAE,EAAGA,EAAE4R,EAAQ5R,IAClBgS,EAAqB,IAAJ,EAAZb,EAAGU,MAAM7R,IAAWiS,EAAwB,IAAL,GAAZd,EAAGU,MAAM7R,IAC1CgS,GAAMb,EAAGe,GAAGrP,KAAKoP,EAAOnS,EAAK/J,IAAW+J,EAAK/J,IAAWA,KAGvDkc,EAAQd,EAAGe,GAAGrP,KAAK,IACfsO,EAAGe,GAAGrP,KAAK+B,EAAI0B,UAAUxG,EAAM/J,IAAWA,GAAQ,GAG3D,IAAImG,EAAI,EAAGC,EAAI,EACf,IAAQ6D,EAAE,EAAGA,EAAE4R,EAAQ5R,IAAO9D,GAAKiV,EAAGY,GAAG/R,GAAI7D,GAAKgV,EAAGe,GAAGlS,GAAKmR,EAAGY,GAAG/R,GAAG9D,EAAIiV,EAAGe,GAAGlS,GAAG7D,MAIpF,CACC,IASI0V,EADJV,EAAGgB,MAAQ,GAEX,EAAG,CACFN,EAAQjN,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACjD,IAAIqc,EAAO,CAAEC,EAAE,CAAC5L,EAAE,EAAE8H,EAAE,EAAE/G,EAAE,EAAE8K,EAAE,EAAEC,GAAG,EAAEC,GAAG,GAAIC,IAAI,EAAGC,IAAI,GAEvD,GAF6DvB,EAAGgB,MAAMtP,KAAKuP,GAC3EA,EAAKO,WAAa/N,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAbhC,EActB8b,EAA+B,CACnC,IAAIe,EAAOhO,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EACnD,IAAI8c,EAAOjO,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,OAE/C6c,EAAOhO,EAAIgC,SAAS9G,EAAM/J,GAAUA,IACpC8c,EAAOjO,EAAIgC,SAAS9G,EAAM/J,GAAUA,IAlBhB,EAqBtB8b,GAA8BO,EAAKC,EAAEE,GAAKK,EAAOR,EAAKC,EAAEG,GAAKK,IACvDT,EAAKK,GAAGG,EAAOR,EAAKM,GAAGG,GArBT,EAyBlBhB,GACJO,EAAKC,EAAE5L,EAAI2L,EAAKC,EAAEC,EAAI1N,EAAIyB,YAAYvG,EAAM/J,GAAUA,GAAU,GAxBpC,GAyBjB8b,GACXO,EAAKC,EAAE5L,EAAI7B,EAAIyB,YAAYvG,EAAM/J,GAAUA,GAAU,EACrDqc,EAAKC,EAAEC,EAAI1N,EAAIyB,YAAYvG,EAAM/J,GAAUA,GAAU,GA1B5B,IA2Bd8b,IACXO,EAAKC,EAAE5L,EAAI7B,EAAIyB,YAAYvG,EAAM/J,GAAUA,GAAU,EACrDqc,EAAKC,EAAE9D,EAAI3J,EAAIyB,YAAYvG,EAAM/J,GAAUA,GAAU,EACrDqc,EAAKC,EAAE7K,EAAI5C,EAAIyB,YAAYvG,EAAM/J,GAAUA,GAAU,EACrDqc,EAAKC,EAAEC,EAAI1N,EAAIyB,YAAYvG,EAAM/J,GAAUA,GAAU,SAjC/B,GAmCd8b,GACV,GAjC2B,IAiCvBA,EAA6B,CAChC,IAAIiB,EAAWlO,EAAII,WAAWlF,EAAM/J,GAEpC,IAF8CA,GAAU,EACxDob,EAAG4B,MAAQ,GACH/S,EAAE,EAAGA,EAAE8S,EAAU9S,IAAOmR,EAAG4B,MAAMlQ,KAAK/C,EAAK/J,IAAWA,KAGhE,OAAOob,GAIRzM,EAAKsO,KAAO,GACZtO,EAAKsO,KAAK9M,MAAQ,SAASpG,EAAM/J,EAAQ6E,EAAQ0N,GAAS,OAAO5D,EAAK2D,MAAMnC,MAAMpG,EAAM/J,EAAQ6E,EAAQ0N,EAAM5D,EAAKsO,KAAKzK,OAGxH7D,EAAKsO,KAAKzK,KAAO,SAASzI,EAAMuJ,EAAOtT,GAEtC,IAAI6O,EAAMF,EAAKG,KAAM2D,EAAUzS,EAAQoQ,EAAM,GAM7C,GAJAA,EAAIgE,IAAOvF,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAIxC,GAAPsT,GAAmB,GAAPA,GAAmB,GAAPA,GAAmB,GAAPA,GAAoB,GAAPA,GAAYlD,EAAIgE,KAAK,EAAI,CAC5E,IAAI8I,EAAUrO,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACrDoQ,EAAI+M,SAAWxO,EAAK2D,MAAM4B,aAAanK,EAAMmT,EAAOzK,GAErD,GAAU,GAAPa,GAAqB,GAATlD,EAAIgE,IAAQ,CAC1B,IAAIgJ,EAAUvO,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACrD,IAAIqd,EAAQ1O,EAAK2D,MAAMmB,UAAU2J,GACrB,GAATA,IAAehN,EAAIkN,IAAM3O,EAAKsO,KAAKM,gBAAgBxT,EAAM/J,EAAQod,SAEhE,GAAU,GAAP9J,EAAU,CACb8J,EAAUvO,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACrD,IAAIwd,EAAU3O,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACjDqd,EAAQ1O,EAAK2D,MAAMmB,UAAU2J,GAAjC,IACIK,EAAQ9O,EAAK2D,MAAMmB,UAAU+J,GACjC,GAAY,GAATpN,EAAIgE,IACP,CACChE,EAAIsN,SAAW,GACf,IAAIC,EAAM9O,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAEjD,IAAI,IAAIiK,EAAE,EAAGA,EAAE0T,EAAK1T,IACpB,CACC,IAAI2T,EAAQnL,EAAU5D,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAE7D,IAAI6d,EAAMhP,EAAII,WAAWlF,EAAM6T,GAASA,GAAO,EAE/C,IADA,IAAI1M,EAAM,GACFhH,EAAE,EAAGA,EAAE2T,EAAK3T,IACpB,CACC,IAAI4T,EAAOjP,EAAII,WAAWlF,EAAM6T,GAASA,GAAO,EAEpC,GAATR,IAAeW,EAASpP,EAAKsO,KAAKM,gBAAgBxT,EAAM6T,EAAOR,GAAWQ,GAAa,EAANP,GACxE,GAATG,IAAeQ,EAASrP,EAAKsO,KAAKM,gBAAgBxT,EAAM6T,EAAOJ,GAAWI,GAAa,EAANH,GAEpFvM,EAAIpE,KAAK,CAACgR,KAAKA,EAAMG,KAAKF,EAAQG,KAAKF,IAExC5N,EAAIsN,SAAS5Q,KAAKoE,IAGpB,GAAY,GAATd,EAAIgE,IACP,CACC,IAAI+J,EAAYtP,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACvD,IAAIoe,EAAYvP,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACvD,IAAIqe,EAAcxP,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACzD,IAAIse,EAAczP,EAAII,WAAWlF,EAAM/J,GAMvC,IANiDA,GAAQ,EAEzDoQ,EAAI+N,UAAYxP,EAAK2D,MAAMsB,aAAa7J,EAAM0I,EAAU0L,GACxD/N,EAAIgO,UAAYzP,EAAK2D,MAAMsB,aAAa7J,EAAM0I,EAAU2L,GAExDhO,EAAInL,OAAS,GACLgF,EAAE,EAAGA,EAAEoU,EAAapU,IAC5B,CACC,IAAIsU,EAAM,GACV,IAAQrU,EAAE,EAAGA,EAAEoU,EAAapU,IAC5B,CACC,IAAI6T,EAAS,KAAMC,EAAS,KACZ,GAAb5N,EAAIgN,UAAcW,EAASpP,EAAKsO,KAAKM,gBAAgBxT,EAAM/J,EAAQoQ,EAAIgN,SAAWpd,GAAc,EAANqd,GAC7E,GAAbjN,EAAIoN,UAAcQ,EAASrP,EAAKsO,KAAKM,gBAAgBxT,EAAM/J,EAAQoQ,EAAIoN,SAAWxd,GAAc,EAANyd,GAC7Fc,EAAIzR,KAAK,CAACmR,KAAKF,EAAQG,KAAKF,IAE7B5N,EAAInL,OAAO6H,KAAKyR,KAInB,OAAOnO,GAIRzB,EAAKsO,KAAKM,gBAAkB,SAASxT,EAAM/J,EAAQwe,GAElD,IAAI3P,EAAMF,EAAKG,KACXoC,EAAM,GAKV,OAJAA,EAAIpE,KAAc,EAAP0R,EAAY3P,EAAI0B,UAAUxG,EAAM/J,GAAU,GAAMA,GAAkB,EAAPwe,EAAY,EAAI,EACtFtN,EAAIpE,KAAc,EAAP0R,EAAY3P,EAAI0B,UAAUxG,EAAM/J,GAAU,GAAMA,GAAkB,EAAPwe,EAAY,EAAI,EACtFtN,EAAIpE,KAAc,EAAP0R,EAAY3P,EAAI0B,UAAUxG,EAAM/J,GAAU,GAAMA,GAAkB,EAAPwe,EAAY,EAAI,EACtFtN,EAAIpE,KAAc,EAAP0R,EAAY3P,EAAI0B,UAAUxG,EAAM/J,GAAU,GAAMA,GAAkB,EAAPwe,EAAY,EAAI,EAC/EtN,GAGRvC,EAAK8P,KAAO,GACZ9P,EAAK8P,KAAKtO,MAAQ,SAASpG,EAAM/J,EAAQ6E,EAAQ0N,GAAS,OAAO5D,EAAK2D,MAAMnC,MAAMpG,EAAM/J,EAAQ6E,EAAQ0N,EAAM5D,EAAK8P,KAAKjM,OAGxH7D,EAAK8P,KAAKjM,KAAO,SAASzI,EAAMuJ,EAAOtT,GAEtC,IAAI6O,EAAMF,EAAKG,KAAM2D,EAAUzS,EAAQoQ,EAAM,GAI7C,GAFAA,EAAIgE,IAAOvF,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAExC,GAAPsT,GAAmB,GAAPA,GAAmB,GAAPA,GAAmB,GAAPA,EAAY,OAAO,KAE1D,GAAU,GAAPA,GAAmB,GAAPA,GAAoB,GAAPA,GAAYlD,EAAIgE,KAAK,GAAc,GAAPd,GAAYlD,EAAIgE,KAAK,EAAI,CAChF,IAAI8I,EAAUrO,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACrDoQ,EAAI+M,SAAWxO,EAAK2D,MAAM4B,aAAanK,EAAM0I,EAAQyK,GAGtD,GAAU,GAAP5J,GACF,GAAY,GAATlD,EAAIgE,IACNhE,EAAIsO,MAAQ7P,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAQ,OAE9C,GAAY,GAAToQ,EAAIgE,IAAQ,CACnB,IAAIZ,EAAM3E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACjDoQ,EAAIuO,KAAO9P,EAAImC,YAAYjH,EAAM/J,EAAQwT,GAAOxT,GAAwB,EAAhBoQ,EAAIuO,KAAK9Z,aAI9D,GAAU,GAAPyO,EAAU,CACjBlD,EAAIwO,KAAO,GACPpL,EAAM3E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACjD,IAAI,IAAIiK,EAAE,EAAGA,EAAEuJ,EAAKvJ,IAAK,CACxB,IAAI4U,EAAOhQ,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAClDoQ,EAAIwO,KAAK9R,KAAK6B,EAAK8P,KAAKK,gBAAgB/U,EAAM0I,EAAQoM,UAMnD,GAAU,GAAPvL,GACP,GAAY,GAATlD,EAAIgE,IAAQ,CACd,IAAI2K,EAAalQ,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACxDoQ,EAAI4O,KAAOrQ,EAAK2D,MAAMsB,aAAa7J,EAAM0I,EAAUsM,GACnD3O,EAAI6O,MAAQ,GACZ,IAAIC,EAAmBrQ,EAAII,WAAWlF,EAAM/J,GAC5C,IADsDA,GAAQ,EACtDiK,EAAE,EAAGA,EAAEiV,EAAkBjV,IACjC,CACC,IAAIkV,EAAStQ,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACpDoQ,EAAI6O,MAAMnS,KAAe,GAARqS,EAAY,KAAOxQ,EAAK8P,KAAKW,gBAAgBrV,EAAM0I,EAAU0M,WAM5E,GAAU,GAAP7L,GAmBK,GAATlD,EAAIgE,IAAQ,CACd,IAAQnK,EAAE,EAAGA,EAAE,EAAGA,IAAK,CAClBuJ,EAAM3E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAEjD,IADA,IAAIqf,EAAO,GACHnV,EAAE,EAAGA,EAAEsJ,EAAKtJ,IAAOmV,EAAKvS,KAAO6B,EAAK2D,MAAM4B,aAAanK,EAAM0I,EAAU5D,EAAII,WAAWlF,EAAM/J,EAAS,EAAFkK,KAC3GlK,GAAY,EAAJwT,EACF,GAAHvJ,IAAQmG,EAAIkP,QAAUD,GACnB,GAAHpV,IAAQmG,EAAImP,QAAUF,GACnB,GAAHpV,IAAQmG,EAAIoP,QAAUH,GAEtB7L,EAAM3E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACjDoQ,EAAIqP,UAAY9Q,EAAK8P,KAAKiB,uBAAuB3V,EAAM/J,EAAQwT,GAMjE,OAAOpD,GAGRzB,EAAK8P,KAAKW,gBAAkB,SAASrV,EAAM/J,GAE1C,IAAI2f,EAAMhR,EAAKG,KAAKG,WAAYwD,EAAUzS,EAAQ4f,EAAO,GACrDpM,EAAMmM,EAAI5V,EAAM/J,GAAUA,GAAQ,EACtC,IAAI,IAAIiK,EAAE,EAAGA,EAAEuJ,EAAKvJ,IAAK,CACxB,IAAI4U,EAAOc,EAAI5V,EAAM/J,GAAUA,GAAQ,EACvC4f,EAAK9S,KAAK6B,EAAK8P,KAAKoB,iBAAiB9V,EAAM0I,EAAQoM,IAEpD,OAAOe,GAERjR,EAAK8P,KAAKoB,iBAAkB,SAAS9V,EAAM/J,GAE1C,IAAI2f,EAAMhR,EAAKG,KAAKG,WAAY6Q,EAAO,GACnCC,EAASJ,EAAI5V,EAAM/J,GACnBggB,EAASL,EAAI5V,EADgB/J,GAAQ,GACRA,GAAQ,EACzC8f,EAAKG,MAAQ,GACb,IAAI,IAAIhW,EAAE,EAAGA,EAAE8V,EAAO,EAAG9V,IACxB6V,EAAKG,MAAMnT,KAAK6S,EAAI5V,EAAM/J,IAAWA,GAAQ,EAG9C,OADA8f,EAAKI,mBAAqBvR,EAAK8P,KAAKiB,uBAAuB3V,EAAM/J,EAAQggB,GAClEF,GAERnR,EAAK8P,KAAKiB,uBAAyB,SAAS3V,EAAM/J,EAAQwT,GAIzD,IAFA,IAAImM,EAAMhR,EAAKG,KAAKG,WAChBkR,EAAM,GACFlW,EAAE,EAAGA,EAAEuJ,EAAKvJ,IAAQkW,EAAIrT,KAAK6S,EAAI5V,EAAM/J,GAAS2f,EAAI5V,EAAM/J,EAAO,IAAMA,GAAQ,EACvF,OAAOmgB,GAGRxR,EAAK8P,KAAK2B,qBAAuB,SAASrW,EAAM/J,GAE/C,IAAI6O,EAAMF,EAAKG,KAAM2D,EAAUzS,EAAQ4f,EAAO,GAC1CpM,EAAM3E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACjD,IAAI,IAAIiK,EAAE,EAAGA,EAAEuJ,EAAKvJ,IAAK,CACxB,IAAI4U,EAAOhQ,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAClD4f,EAAK9S,KAAK6B,EAAK8P,KAAK4B,sBAAsBtW,EAAM0I,EAAQoM,IAEzD,OAAOe,GAERjR,EAAK8P,KAAK4B,sBAAuB,SAAStW,EAAM/J,GAI/C,IAFA,IAAI6O,EAAMF,EAAKG,KAAMgR,EAAO,GACxBQ,EAAM,CAAC,YAAa,QAAS,aACzBC,EAAG,EAAGA,EAAGD,EAAIzb,OAAQ0b,IAAM,CAClC,IAAI/M,EAAM3E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAAW,GAAJugB,GAAS/M,IACjEsM,EAAKQ,EAAIC,IAAK1R,EAAImC,YAAYjH,EAAM/J,EAAQwT,GAAOxT,GAA8B,EAArB8f,EAAKQ,EAAIC,IAAK1b,OAI3E,OAFI2O,EAAM3E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACjD8f,EAAKU,MAAQ3R,EAAImC,YAAYjH,EAAM/J,EAAY,EAAJwT,GAASxT,GAA4B,EAAlB8f,EAAKU,MAAM3b,OAClEib,GAGRnR,EAAK8P,KAAKK,gBAAkB,SAAS/U,EAAM/J,GAE1C,IAAI6O,EAAMF,EAAKG,KAAM2D,EAAUzS,EAAQ4f,EAAO,GAC1Ca,EAAO5R,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAClD,IAAI,IAAIkK,EAAE,EAAGA,EAAEuW,EAAMvW,IAAK,CACzB,IAAI2U,EAAOhQ,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAClD4f,EAAK9S,KAAK6B,EAAK8P,KAAKiC,aAAa3W,EAAM0I,EAAQoM,IAEhD,OAAOe,GAERjR,EAAK8P,KAAKiC,aAAe,SAAS3W,EAAM/J,GAEvC,IAAI6O,EAAMF,EAAKG,KAAM6R,EAAM,CAACC,MAAM,IAClCD,EAAIE,OAAShS,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACpD,IAAI8gB,EAAOjS,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAClD,IAAI,IAAI+gB,EAAE,EAAGA,EAAED,EAAK,EAAGC,IAAQJ,EAAIC,MAAM9T,KAAK+B,EAAII,WAAWlF,EAAM/J,IAAWA,GAAQ,EACtF,OAAO2gB,GAKRhS,EAAKqS,KAAO,GACZrS,EAAKqS,KAAK7Q,MAAQ,SAASpG,EAAM/J,EAAQ6E,GAExC,IAAIgK,EAAMF,EAAKG,KACXa,EAAM,GAkBV,OAjBmBd,EAAIW,UAAUzF,EAAM/J,GAAUA,GAAU,EAC3D2P,EAAIsR,aAAepS,EAAIW,UAAUzF,EAAM/J,GAAUA,GAAU,EAClC6O,EAAIM,SAASpF,EAAM/J,GAAUA,GAAU,EAC9C6O,EAAIM,SAASpF,EAAM/J,GAAUA,GAAU,EACzD2P,EAAImM,MAAQjN,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrD2P,EAAIuR,WAAarS,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC1D2P,EAAIwR,QAAWtS,EAAIuC,WAAWrH,EAAM/J,GAAUA,GAAU,EACxD2P,EAAIyR,SAAWvS,EAAIuC,WAAWrH,EAAM/J,GAAUA,GAAU,EACxD2P,EAAI2L,KAAOzM,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EACnD2P,EAAI4L,KAAO1M,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EACnD2P,EAAI6L,KAAO3M,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EACnD2P,EAAI8L,KAAO5M,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EACnD2P,EAAI0R,SAAWxS,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACxD2P,EAAI2R,cAAgBzS,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC7D2P,EAAI4R,kBAAoB1S,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EAChE2P,EAAI6R,iBAAoB3S,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EAChE2P,EAAI8R,gBAAoB5S,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EACzD2P,GAIRhB,EAAK+S,KAAO,GACZ/S,EAAK+S,KAAKvR,MAAQ,SAASpG,EAAM/J,EAAQ6E,GAExC,IAAIgK,EAAMF,EAAKG,KACXa,EAAM,GAmBV,OAlBmBd,EAAIW,UAAUzF,EAAM/J,GAAUA,GAAU,EAC3D2P,EAAIgS,SAAY9S,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EACxD2P,EAAIiS,UAAY/S,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EACxD2P,EAAIkS,QAAUhT,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EAEtD2P,EAAImS,gBAAkBjT,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC/D2P,EAAIoS,mBAAsBlT,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EAClE2P,EAAIqS,oBAAsBnT,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EAClE2P,EAAIsS,WAAapT,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EAEzD2P,EAAIuS,eAAiBrT,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EAC7D2P,EAAIwS,cAAiBtT,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EAC7D2P,EAAIyS,YAAiBvT,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAU,EAE7DA,GAAU,EAEV2P,EAAI0S,iBAAmBxT,EAAI0B,UAAWxG,EAAM/J,GAAUA,GAAU,EAChE2P,EAAI2S,iBAAmBzT,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACzD2P,GAIRhB,EAAK4T,KAAO,GACZ5T,EAAK4T,KAAKpS,MAAQ,SAASpG,EAAM/J,EAAQ6E,EAAQ0N,GAWhD,IATA,IAAI1D,EAAMF,EAAKG,KACXa,EAAM,CAEVA,OAAa,GACbA,UAAgB,IAGZ6S,EAAK,EAAGC,EAAM,EAEVxY,EAAE,EAAGA,EAAEsI,EAAKwI,KAAKC,UAAW/Q,IAEhCA,EAAEsI,EAAKmP,KAAKY,mBAAqBE,EAAG3T,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAAIyiB,EAAI5T,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAQ,GAC9H2P,EAAI+S,OAAO5V,KAAK0V,GAChB7S,EAAIgT,UAAU7V,KAAK2V,GAGpB,OAAO9S,GAIRhB,EAAKiU,KAAO,GACZjU,EAAKiU,KAAKzS,MAAQ,SAASpG,EAAM/J,EAAQ6E,EAAQ0N,GAEhD,IAAI1D,EAAMF,EAAKG,KAEX+T,EAAUhU,EAAII,WAAWlF,EAAM/J,GACnC,GAD6CA,GAAQ,EACzC,GAAT6iB,EAAc,OAAOlU,EAAKiU,KAAKE,QAAQ/Y,EAAM/J,EAAO,EAAG6E,EAAQ0N,GAClE,IAAIwQ,EAAUlU,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAGrD,IADA,IAAI0Z,EAAM,CAACsJ,OAAQ,GAAIC,KAAK,IACpBhZ,EAAE,EAAGA,EAAE8Y,EAAS9Y,IACxB,CACCjK,GAAQ,EACJ6E,EAAUgK,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACrD,IAAImd,EAAWtO,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACtD,IAAI6T,EAASsJ,IAAW,EAExB,GAAW,IADwCtJ,GAAU,IAEtD,KAAM,8BAA8BA,EAD3B7T,EAAS2O,EAAKiU,KAAKM,YAAYnZ,EAAM/J,EAAQ0Z,GAG9D,OAAOA,GAGR/K,EAAKiU,KAAKE,QAAU,SAAS/Y,EAAM/J,EAAQ6E,EAAQ0N,GAElD,IAAI1D,EAAMF,EAAKG,KAEDD,EAAIW,UAAUzF,EAAM/J,GAAUA,GAAQ,EACpD,IAAI+iB,EAAUlU,EAAIM,SAASpF,EAAM/J,GAAUA,GAAQ,EAGnD,IADA,IAAI0Z,EAAM,CAACsJ,OAAQ,GAAIC,KAAK,IACpBhZ,EAAE,EAAGA,EAAE8Y,EAAS9Y,IACxB,CACc4E,EAAIM,SAASpF,EAAM/J,GAAWA,GAAQ,EACnD,IAAImd,EAAWtO,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACrC6O,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACxD,IAAI6T,EAASsJ,IAAW,EAExB,GAAW,IADwCtJ,GAAU,IAEtD,KAAM,8BAA8BA,EAD3B7T,EAAS2O,EAAKiU,KAAKM,YAAYnZ,EAAM/J,EAAQ0Z,GAG9D,OAAOA,GAGR/K,EAAKiU,KAAKM,YAAc,SAASnZ,EAAM/J,EAAQ0Z,GAE9C,IAAI7K,EAAMF,EAAKG,KACXqU,GAAS,EACTC,EAAgBvU,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACvC6O,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACvC6O,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACvC6O,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EAC3D,IAAI,IAAIkK,EAAE,EAAGA,EAAEkZ,EAAQlZ,IACvB,CACC,IAAI9E,EAAQyJ,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACnD,IAAImF,EAAQ0J,EAAII,WAAWlF,EAAM/J,GAAUA,GAAQ,EACnD,IAAIqjB,EAAQxU,EAAI0B,UAAWxG,EAAM/J,GAAUA,GAAQ,EAChDoF,GAAM+d,IAASzJ,EAAIsJ,OAAOlW,KAAK1H,GAAQsU,EAAIuJ,KAAKnW,KAAK,CAAEwW,OAAO,GAAI1E,KAAK,MAC1E,IAAIqE,EAAOvJ,EAAIuJ,KAAKvJ,EAAIuJ,KAAKpe,OAAO,GACpCoe,EAAKK,OAAOxW,KAAK3H,GAAU8d,EAAKrE,KAAK9R,KAAKuW,GAC1CF,EAAQ/d,EAET,OAAOpF,GAKR2O,EAAKwM,KAAO,GACZxM,EAAKwM,KAAKhL,MAAQ,SAASpG,EAAM/J,EAAQ6E,EAAQ0N,GAEhD,IAAI1D,EAAMF,EAAKG,KACXa,EAAM,GAEN4T,EAAMhR,EAAKyO,KAAKQ,iBAEhBvQ,EAAMsB,EAAKwI,KAAKC,UAAU,EAE9B,GAAQ,GAALuI,EAAU,IAAI,IAAItZ,EAAE,EAAGA,EAAEgH,EAAKhH,IAAO0F,EAAI7C,KAAK+B,EAAII,WAAWlF,EAAM/J,GAAQiK,GAAG,KAAK,GACtF,GAAQ,GAALsZ,EAAU,IAAQtZ,EAAE,EAAGA,EAAEgH,EAAKhH,IAAO0F,EAAI7C,KAAK+B,EAAIM,SAAWpF,EAAM/J,GAAQiK,GAAG,KAEjF,OAAO0F,GAIRhB,EAAKoM,KAAO,GACZpM,EAAKoM,KAAK5K,MAAQ,SAASpG,EAAM/J,EAAQ6E,GAIxC,IAAIgK,EAAMF,EAAKG,KACXa,EAAM,GAGN4T,EAAM1U,EAAIM,SAASpF,EAAM/J,GAqB7B,OArBsCA,GAAU,EAChD2P,EAAIqL,UAAYnM,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAG/C,OAAPujB,IAEF5T,EAAI6T,UAAwB3U,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrE2P,EAAI8T,YAAwB5U,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrE2P,EAAI+T,mBAAwB7U,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrE2P,EAAIgU,qBAAwB9U,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrE2P,EAAIiU,SAAwB/U,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrE2P,EAAIkU,kBAAwBhV,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrE2P,EAAImU,WAAwBjV,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrE2P,EAAIoU,gBAAwBlV,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrE2P,EAAIqU,mBAAwBnV,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrE2P,EAAIsU,iBAAwBpV,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrE2P,EAAIuU,sBAAwBrV,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrE2P,EAAIwU,qBAAwBtV,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACrE2P,EAAIyU,kBAAwBvV,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,GAG/D2P,GAIRhB,EAAKH,KAAO,GACZG,EAAKH,KAAK2B,MAAQ,SAASpG,EAAM/J,EAAQ6E,GAExC,IAAIgK,EAAMF,EAAKG,KACXa,EAAM,GACGd,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACtD,IAAIgK,EAAS6E,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EACnC6O,EAAII,WAAWlF,EAAM/J,GAkCxC,IAlCA,IAiFIqkB,EA7EA9O,EAAQ,CACX,YACA,aACA,gBACA,KACA,WACA,UACA,iBACA,YACA,eACA,WACA,cACA,YACA,cACA,UACA,aACA,MACA,iBACA,oBACA,iBACA,aACA,gBACA,gBACA,mBACA,eACA,eAGG9C,EAhC8CzS,GAAU,EAkCpDiK,EAAE,EAAGA,EAAED,EAAOC,IACtB,CACC,IAAI+O,EAAanK,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC1D,IAAIiZ,EAAapK,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC1D,IAAIskB,EAAazV,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC1D,IAAIukB,EAAa1V,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC1D,IAAIwkB,EAAa3V,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC1D,IAAIkZ,EAAarK,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAG1D,IAEIykB,EAFAC,EAAQnP,EAAMgP,GACdI,EAAOlS,EAAgB,GAANzI,EAAWkP,EAEhC,GAAiB,GAAdF,EAAmByL,EAAM5V,EAAI2C,YAAYzH,EAAM4a,EAAMH,EAAK,QACxD,GAAiB,GAAdxL,GAAiC,GAAdC,EAAmBwL,EAAM5V,EAAI2C,YAAYzH,EAAM4a,EAAMH,EAAK,QAChF,GAAiB,GAAdvL,EAAmBwL,EAAM5V,EAAIG,UAAYjF,EAAM4a,EAAMH,QACxD,GAAiB,GAAdvL,EAAmBwL,EAAM5V,EAAI2C,YAAYzH,EAAM4a,EAAMH,EAAK,QAC7D,GAAiB,GAAdvL,EAAmBwL,EAAM5V,EAAI2C,YAAYzH,EAAM4a,EAAMH,EAAK,OAE7D,IAAiB,GAAdxL,EACD,KAAM,oBAAoBC,EAAa,iBAAiBD,EADpCyL,EAAM5V,EAAIG,UAAUjF,EAAM4a,EAAMH,GAAQ9oB,QAAQ+d,IAAI,gCAAgCR,EAAW,aAG1H,IAAI2L,EAAM,IAAI5L,EAAW,IAAKsL,EAAYO,SAAS,IACtC,MAAVlV,EAAIiV,KAAcjV,EAAIiV,GAAO,IAChCjV,EAAIiV,GAAKF,GAASD,EAClB9U,EAAIiV,GAAKE,MAAQR,EAiBlB,IAAI,IAAI7T,KAAKd,EAAO,GAA0B,MAAvBA,EAAIc,GAAGsU,gBAAsC,MAAdpV,EAAIc,GAAGqU,MAAiB,OAAOnV,EAAIc,GACzF,IAAI,IAAIA,KAAKd,EAAO,GAA0B,MAAvBA,EAAIc,GAAGsU,gBAAsC,GAAdpV,EAAIc,GAAGqU,MAAiB,OAAOnV,EAAIc,GACzF,IAAI,IAAIA,KAAKd,EAAO,GAA0B,MAAvBA,EAAIc,GAAGsU,gBAAsC,MAAdpV,EAAIc,GAAGqU,MAAiB,OAAOnV,EAAIc,GACzF,IAAI,IAAIA,KAAKd,EAAO,GAA0B,MAAvBA,EAAIc,GAAGsU,eAAwB,OAAOpV,EAAIc,GAGjE,IAAI,IAAIA,KAAKd,EAAK,CAAE0U,EAAM5T,EAAG,MAE7B,OADA/U,QAAQ+d,IAAI,wCAAyC9J,EAAI0U,GAAOS,OACzDnV,EAAI0U,IAIZ1V,EAAK,QAAU,GACfA,EAAK,QAAQwB,MAAQ,SAASpG,EAAM/J,EAAQ6E,GAE3C,IACI0e,EADM5U,EAAKG,KACDG,WAAWlF,EAAM/J,GAASA,GAAU,EAElD,IAAI2P,EAAM,GACV,GAAa,GAAL4T,EAAU5U,EAAK,QAAQqW,SAASjb,EAAM/J,EAAQ2P,QACjD,GAAQ,GAAL4T,EAAU5U,EAAK,QAAQsW,SAASlb,EAAM/J,EAAQ2P,QACjD,GAAQ,GAAL4T,GAAe,GAALA,GAAe,GAALA,EAAU5U,EAAK,QAAQuW,SAASnb,EAAM/J,EAAQ2P,OACrE,IAAQ,GAAL4T,EACD,KAAM,+BAA+BA,EAD1B5U,EAAK,QAAQwW,SAASpb,EAAM/J,EAAQ2P,GAGtD,OAAOA,GAGRhB,EAAK,QAAQqW,SAAW,SAASjb,EAAM/J,EAAQ2P,GAE9C,IAAId,EAAMF,EAAKG,KA8Bf,OA7BAa,EAAIyV,cAAgBvW,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAC3D2P,EAAI0V,cAAgBxW,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,EAC5D2P,EAAI2V,aAAgBzW,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,EAC5D2P,EAAI4V,OAAS1W,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,EACrD2P,EAAI6V,gBAAkB3W,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAC7D2P,EAAI8V,gBAAkB5W,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAC7D2P,EAAI+V,kBAAoB7W,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAC/D2P,EAAIgW,kBAAoB9W,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAC/D2P,EAAIiW,kBAAoB/W,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAC/D2P,EAAIkW,kBAAoBhX,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAC/D2P,EAAImW,oBAAsBjX,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EACjE2P,EAAIoW,oBAAsBlX,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EACjE2P,EAAIqW,eAAiBnX,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAC5D2P,EAAIsW,mBAAqBpX,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAChE2P,EAAIuW,aAAerX,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAC1D2P,EAAIwW,OAAStX,EAAIgD,UAAU9H,EAAM/J,EAAQ,IAAMA,GAAU,GACzD2P,EAAIyW,gBAAkBvX,EAAIM,SAASpF,EAAM/J,GAAUA,GAAU,EAC7D2P,EAAI0W,gBAAkBxX,EAAIM,SAASpF,EAAM/J,GAAUA,GAAU,EAC7D2P,EAAI2W,gBAAkBzX,EAAIM,SAASpF,EAAM/J,GAAUA,GAAU,EAC7D2P,EAAI4W,gBAAkB1X,EAAIM,SAASpF,EAAM/J,GAAUA,GAAU,EAC7D2P,EAAI6W,UAAY,CAAC3X,EAAIgC,SAAS9G,EAAM/J,GAAS6O,EAAIgC,SAAS9G,EAAM/J,EAAO,GAAG6O,EAAIgC,SAAS9G,EAAM/J,EAAO,GAAG6O,EAAIgC,SAAS9G,EAAM/J,EAAO,IAAMA,GAAU,EACjJ2P,EAAI8W,YAAe5X,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,EAC3D2P,EAAI+W,iBAAmB7X,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,EAC/D2P,EAAIgX,gBAAkB9X,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,EAC9D2P,EAAIiX,cAAgB/X,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAC3D2P,EAAIkX,eAAiBhY,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAC5D2P,EAAImX,aAAejY,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EAC1D2P,EAAIoX,YAAclY,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,EAC1D2P,EAAIqX,aAAenY,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,GAI5D2O,EAAK,QAAQsW,SAAW,SAASlb,EAAM/J,EAAQ2P,GAE9C,IAAId,EAAMF,EAAKG,KAKf,OAJA9O,EAAS2O,EAAK,QAAQqW,SAASjb,EAAM/J,EAAQ2P,GAE7CA,EAAIsX,iBAAmBpY,EAAIM,SAASpF,EAAM/J,GAASA,GAAU,EAC7D2P,EAAIuX,iBAAmBrY,EAAIM,SAASpF,EAAM/J,GAASA,GAAU,GAI9D2O,EAAK,QAAQuW,SAAW,SAASnb,EAAM/J,EAAQ2P,GAE9C,IAAId,EAAMF,EAAKG,KAQf,OAPA9O,EAAS2O,EAAK,QAAQsW,SAASlb,EAAM/J,EAAQ2P,GAE7CA,EAAIwX,SAAWtY,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EACtD2P,EAAIyX,WAAavY,EAAI0B,UAAUxG,EAAM/J,GAASA,GAAU,EACxD2P,EAAI0X,UAAYxY,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,EACxD2P,EAAI2X,QAAUzY,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,EACtD2P,EAAI4X,aAAe1Y,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,GAI5D2O,EAAK,QAAQwW,SAAW,SAASpb,EAAM/J,EAAQ2P,GAE9C,IAAId,EAAMF,EAAKG,KAKf,OAJA9O,EAAS2O,EAAK,QAAQuW,SAASnb,EAAM/J,EAAQ2P,GAE7CA,EAAI6X,wBAA0B3Y,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,EACtE2P,EAAI8X,wBAA0B5Y,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,GAIvE2O,EAAK+Y,KAAO,GACZ/Y,EAAK+Y,KAAKvX,MAAQ,SAASpG,EAAM/J,EAAQ6E,GAExC,IAAIgK,EAAMF,EAAKG,KACXa,EAAM,GAOV,OALAA,EAAIkT,QAAoBhU,EAAIW,UAAUzF,EAAM/J,GAAUA,GAAQ,EAC9D2P,EAAIgY,YAAoB9Y,EAAIW,UAAUzF,EAAM/J,GAAUA,GAAQ,EAC9D2P,EAAIiY,kBAAoB/Y,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAQ,EAC9D2P,EAAIkY,mBAAqBhZ,EAAI0B,UAAUxG,EAAM/J,GAAUA,GAAQ,EAExD2P,GAERhB,EAAKmZ,IAAM,GACXnZ,EAAKmZ,IAAI3X,MAAQ,SAASpG,EAAM/J,EAAQ6E,GAEvC,IAAIgK,EAAMF,EAAKG,KACXa,EAAM,CAAEoY,QAAS,IAEjBtV,EAAUzS,EAEK6O,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,EAC3D,IAAIgoB,EAAoBnZ,EAAIM,SAASpF,EAAM/J,GAASA,GAAU,EAC/C6O,EAAIM,SAASpF,EAAM/J,GAASA,GAAU,EAErDA,EAASgoB,EAAoBvV,EAE7B,IAAIwV,EAAapZ,EAAII,WAAWlF,EAAM/J,GAASA,GAAU,EAEzD,IAAI,IAAIiK,EAAE,EAAGA,EAAEge,EAAYhe,IAC3B,CACC,IAAI2Q,EAAe/L,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC5D,IAAIkoB,EAAerZ,EAAII,WAAWlF,EAAM/J,GAAUA,GAAU,EAC5D,IAAImoB,EAAetZ,EAAIM,SAAWpF,EAAM/J,GAAUA,GAAU,EAC5D,IAAIooB,EAAevZ,EAAIM,SAAWpF,EAAM/J,GAAUA,GAAU,EAK5D,IAHA,IAAIqoB,EAAO,IAAItZ,WAAWhF,EAAKqL,OAAQ3C,EAAU0V,EAAeH,EAAmBI,GAC/EE,EAAMzZ,EAAI8C,SAAS0W,EAAM,EAAGA,EAAKxjB,QAE7B0jB,EAAE3N,EAAc2N,GAAGL,EAAYK,IACtC5Y,EAAIoY,QAAQQ,GAAKD,EAGnB,OAAO3Y,GAGRhB,EAAKmZ,IAAIU,OAAS,SAAS/D,GAE1B,IAAIgE,EAAM,CAACC,KAAK,GAAIC,KAAK,IACzB,GAAQ,MAALlE,EAAa,OAAOgE,EAKI,IAH3B,IAGIH,GAHO,IAAIM,WACD,gBAAoBnE,EAAI,iBAExBoE,WAAgC,OAAbP,EAAIQ,SAAkBR,EAAMA,EAAIS,YACjE,IAAIC,EAAKV,EAAIW,aAAa,WACjBD,EAANA,EAAWA,EAAG9Y,OAAOgZ,MAAM,KAAKxP,IAAId,YAA8B,CAAC,EAAE,EAAE,IAAK,KAC/EjK,EAAKmZ,IAAIqB,QAAQb,EAAIc,SAAUX,GAC/B,IAAI,IAAIxe,EAAE,EAAGA,EAAEwe,EAAIE,KAAK9jB,OAAQoF,GAAG,EAAG,CACrC,IAAI9D,EAAIsiB,EAAIE,KAAK1e,GAAI7D,EAAIqiB,EAAIE,KAAK1e,EAAE,GACpC9D,GAAK6iB,EAAG,GAER5iB,IADAA,GAAK4iB,EAAG,IAERP,EAAIE,KAAK1e,GAAK9D,EACdsiB,EAAIE,KAAK1e,EAAE,GAAK7D,EAEjB,OAAOqiB,GAGR9Z,EAAKmZ,IAAIqB,QAAU,SAASE,EAAKZ,EAAKa,GACrC,IAAI,IAAIC,EAAG,EAAGA,EAAGF,EAAIxkB,OAAQ0kB,IAAM,CAClC,IAAIC,EAAKH,EAAIE,GAAKE,EAAKD,EAAGV,QACtBY,EAAMF,EAAGP,aAAa,QAC1B,GAD4C,MAALS,IAAaA,EAAMJ,GACnD,KAAJG,EAAW9a,EAAKmZ,IAAIqB,QAAQK,EAAGJ,SAAUX,EAAKiB,QAC5C,GAAO,QAAJD,EAAY,CACnBhB,EAAIC,KAAK5b,KAAK4c,GAAQ,WACtB,IAAInN,EAAIiN,EAAGP,aAAa,KACpBU,EAAOhb,EAAKmZ,IAAI8B,QAAQrN,GAC5B5N,EAAKmZ,IAAI+B,YAAYF,EAAMlB,GAAOA,EAAIC,KAAK5b,KAAK,SAErC,QAAJ2c,GACD/tB,QAAQ+d,IAAIgQ,EAAID,KAIzB7a,EAAKmZ,IAAI8B,QAAU,SAASrN,GAE3B,IADA,IAAIuN,EAAK,GAAIrP,EAAM,EAAGsP,GAAG,EAAOC,EAAG,GAC7BvP,EAAI8B,EAAE1X,QAAO,CAClB,IAAIolB,EAAG1N,EAAE2N,WAAWzP,GAAM0P,EAAK5N,EAAE6N,OAAO3P,GAAOA,IAC/C,IAAI4P,EAAS,IAAIJ,GAAMA,GAAI,IAAW,KAAJE,GAAe,KAAJA,EAE1CJ,EACK,KAAJI,GAAYL,EAAGhd,KAAK8L,WAAWoR,IAAOA,EAAGG,GACpCE,EAASL,GAAIG,GACbL,EAAGhd,KAAK8L,WAAWoR,IAAc,KAAJG,GAAe,KAAJA,GAAWL,EAAGhd,KAAKqd,GAAQJ,GAAG,GAG3EM,GAAUL,EAAGG,EAAKJ,GAAG,GACZ,KAAJI,GAAe,KAAJA,GAAWL,EAAGhd,KAAKqd,GAIxC,OADGJ,GAAMD,EAAGhd,KAAK8L,WAAWoR,IACrBF,GAGRnb,EAAKmZ,IAAI+B,YAAc,SAASC,EAAIrB,GAKnC,IAJA,IAAIxe,EAAI,EAAG9D,EAAI,EAAGC,EAAI,EAAGkkB,EAAK,EAAGC,EAAK,EAClCC,EAAK,CAAC,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,EAAK,EAAI,EAAK,EAAI,GAC9C9B,EAAOD,EAAIC,KAAMC,EAAOF,EAAIE,KAE1B1e,EAAE6f,EAAGjlB,QAAQ,CAClB,IAAI4lB,EAAMX,EAAG7f,GAEb,GAFkBA,IAEV,KAALwgB,EAAa/B,EAAK5b,KAAK,KAAO3G,EAAEmkB,EAAKlkB,EAAEmkB,OAKzC,IAHA,IAAIG,EAAMD,EAAIE,cACVC,EAAKJ,EAAGE,GAAMG,EAAOlc,EAAKmZ,IAAIgD,MAAMhB,EAAI7f,EAAG2gB,GAEvC1gB,EAAE,EAAGA,EAAE2gB,EAAM3gB,IAAK,CACzB,IAAI6gB,EAAK,EAAGC,EAAK,EAEjB,GAFyBP,GAAKC,IAAQK,EAAG5kB,EAAI6kB,EAAG5kB,GAExC,KAALskB,EAAavkB,EAAI4kB,EAAGjB,EAAG7f,KAAO7D,EAAI4kB,EAAGlB,EAAG7f,KAAOye,EAAK5b,KAAK,KAAO6b,EAAK7b,KAAK3G,EAAEC,GAAKkkB,EAAGnkB,EAAIokB,EAAGnkB,OACzF,GAAQ,KAALskB,EAAavkB,EAAI4kB,EAAGjB,EAAG7f,KAAO7D,EAAI4kB,EAAGlB,EAAG7f,KAAOye,EAAK5b,KAAK,KAAO6b,EAAK7b,KAAK3G,EAAEC,QAC/E,GAAQ,KAALskB,EAAavkB,EAAI4kB,EAAGjB,EAAG7f,KAAwBye,EAAK5b,KAAK,KAAO6b,EAAK7b,KAAK3G,EAAEC,QAC/E,GAAQ,KAALskB,EAAatkB,EAAI4kB,EAAGlB,EAAG7f,KAAwBye,EAAK5b,KAAK,KAAO6b,EAAK7b,KAAK3G,EAAEC,QAC/E,GAAQ,KAALskB,EAAU,CACjB,IAAIO,EAAGF,EAAGjB,EAAG7f,KAAMihB,EAAGF,EAAGlB,EAAG7f,KAAMkhB,EAAGJ,EAAGjB,EAAG7f,KAAMmhB,EAAGJ,EAAGlB,EAAG7f,KAAMohB,EAAGN,EAAGjB,EAAG7f,KAAMqhB,EAAGN,EAAGlB,EAAG7f,KACxFye,EAAK5b,KAAK,KAAO6b,EAAK7b,KAAKme,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GAAMnlB,EAAEklB,EAAKjlB,EAAEklB,OAErD,GAAQ,KAALZ,EAAU,CACjB,IAAIa,EAAK9uB,KAAKqE,IAAI6nB,EAAK9jB,OAAO,EAAG,GAC7BomB,EAAK9kB,EAAEA,EAAEwiB,EAAK4C,GAAKL,EAAK9kB,EAAEA,EAAEuiB,EAAK4C,EAAG,GACpCJ,EAAGJ,EAAGjB,EAAG7f,KAAMmhB,EAAGJ,EAAGlB,EAAG7f,KAAMohB,EAAGN,EAAGjB,EAAG7f,KAAMqhB,EAAGN,EAAGlB,EAAG7f,KAC1Dye,EAAK5b,KAAK,KAAO6b,EAAK7b,KAAKme,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GAAMnlB,EAAEklB,EAAKjlB,EAAEklB,OAEnD5vB,QAAQ+d,IAAI,uBAAuBgR,MAK9C9b,EAAKmZ,IAAIgD,MAAQ,SAAShB,EAAIrP,EAAKmQ,GAElC,IADA,IAAI3gB,EAAIwQ,EACFxQ,EAAE6f,EAAGjlB,QAAgC,iBAAVilB,EAAG7f,IAA6BA,GAAG2gB,EACpE,OAAQ3gB,EAAEwQ,GAAKmQ,GAML,MAARjc,IAAgBA,EAAS,IACjB,MAARA,EAAK6c,IAAW7c,EAAK6c,EAAI,IAG5B7c,EAAK6c,EAAEC,YAAc,SAASlZ,EAAM+E,GAEnC,IAAIuB,EAAOtG,EAAKsG,KAEZO,GAAQ,EAMZ,GALc,MAAXP,EAAK6S,KAActS,EAAOP,EAAK6S,KACf,MAAX7S,EAAK8S,KAAcvS,EAAOP,EAAK8S,KACpB,MAAX9S,EAAK+S,KAAcxS,EAAOP,EAAK+S,KACpB,MAAX/S,EAAKgT,OAAczS,EAAOP,EAAKgT,OAE7B,GAAPzS,EAAY,KAAM,qCAErB,IAAIhJ,EAAMyI,EAAKE,OAAOK,GAEtB,GAAe,GAAZhJ,EAAIyD,OAEN,OAAGyD,GAAMlH,EAAIsJ,IAAI7U,OAAiB,EAC3BuL,EAAIsJ,IAAIpC,GAEX,GAAe,GAAZlH,EAAIyD,OACZ,CAEC,IADA,IAAIiY,GAAQ,EACJ7hB,EAAE,EAAGA,EAAEmG,EAAI4J,SAASnV,OAAQoF,IAAS,GAAGqN,GAAMlH,EAAI4J,SAAS/P,GAAG,CAAG6hB,EAAK7hB,EAAI,MAClF,OAAU,GAAP6hB,GACA1b,EAAI6J,WAAW6R,GAAMxU,EADF,EAMT,OAFe,GAAzBlH,EAAI+J,cAAc2R,GAAkB1b,EAAIgK,aAAc9C,EAAKlH,EAAI6J,WAAW6R,IAAU1b,EAAI+J,cAAc2R,IAAO,IAAM1b,EAAI+J,cAActV,OAAOinB,IACxGxU,EAAOlH,EAAI8J,QAAQ4R,IAGtD,GAAe,IAAZ1b,EAAIyD,OACZ,CACC,GAAGyD,EAAKlH,EAAIoK,OAAOpK,EAAIoK,OAAO3V,OAAO,GAAG,GAAM,OAAO,EACrD,IAAQoF,EAAE,EAAGA,EAAEmG,EAAIoK,OAAO3V,OAAQoF,IAClC,CACC,IAAI8hB,EAAM3b,EAAIoK,OAAOvQ,GACrB,GAAG8hB,EAAI,IAAIzU,GAAQA,GAAMyU,EAAI,GAAM,OAAOA,EAAI,IAAMzU,EAAKyU,EAAI,IAE9D,OAAO,EAED,KAAM,6BAA6B3b,EAAIyD,QAI/ClF,EAAK6c,EAAEQ,YAAc,SAASzZ,EAAM0Z,GAEnC,IAAIC,EAAO,CAAExD,KAAK,GAAIC,KAAK,IAC3B,GAAGpW,EAAKuV,KAAOvV,EAAKuV,IAAIC,QAAQkE,GAAM,CACrC,IAAIxb,EAAI8B,EAAKuV,IAAIC,QAAQkE,GAAO,OAAM,MAAHxb,EAAkByb,GACtC,iBAALzb,IAAkBA,EAAI9B,EAAKmZ,IAAIU,OAAO/X,GAAK8B,EAAKuV,IAAIC,QAAQkE,GAAKxb,GACpEA,GAEH,GAAG8B,EAAK4C,IAAK,CACjB,IAAItV,EAAQ,CAACsG,EAAE,EAAEC,EAAE,EAAE+lB,MAAM,GAAGC,OAAO,EAAEC,WAAU,EAAMC,MAAO/Z,EAAK4C,IAAI0B,QAAUtE,EAAK4C,IAAI0B,QAAQ0V,cAAgB,EAAEC,MAAK,GACrHnV,EAAI9E,EAAK4C,IAAKsX,EAAOla,EAAK4C,IAAI0B,QAClC,GAAGQ,EAAIpB,IAAK,CAEX,IADA,IAAIyW,EAAK,EACHrV,EAAIf,SAASoW,EAAG,IAAIT,GAAOS,GAAI,EACrCD,EAAOpV,EAAInB,QAAQmB,EAAIf,SAASoW,EAAG,IAAI7V,QAExClI,EAAK6c,EAAEmB,SAASpa,EAAK4C,IAAIY,YAAYkW,GAAMpsB,EAAOwX,EAAKoV,EAAMP,QAEtD3Z,EAAKsI,MAASlM,EAAK6c,EAAEoB,UAAUX,EAAK1Z,EAAM2Z,GAClD,OAAOA,GAGRvd,EAAK6c,EAAEoB,UAAY,SAASX,EAAK1Z,EAAM2Z,GAEtC,IAAI9Q,EAAK7I,EAAKsI,KAAKoR,GACZ,MAAJ7Q,IAAYA,EAAK7I,EAAKsI,KAAKoR,GAAOtd,EAAKkM,KAAKI,WAAW1I,EAAM0Z,IACzD,MAAJ7Q,IACCA,EAAGC,KAAK,EAAK1M,EAAK6c,EAAEqB,aAAazR,EAAI8Q,GACxBvd,EAAK6c,EAAEsB,YAAa1R,EAAI7I,EAAM2Z,KAGhDvd,EAAK6c,EAAEqB,aAAe,SAASzR,EAAI3K,GAElC,IAAI,IAAIgB,EAAE,EAAGA,EAAE2J,EAAGC,IAAK5J,IACvB,CAIC,IAHA,IAAIsb,EAAS,GAAHtb,EAAQ,EAAK2J,EAAGM,OAAOjK,EAAE,GAAK,EACpCub,EAAK5R,EAAGM,OAAOjK,GAEXxH,EAAE8iB,EAAI9iB,GAAG+iB,EAAI/iB,IACrB,CACC,IAAIgjB,EAAMhjB,GAAG8iB,EAAIC,EAAI/iB,EAAE,EACnBijB,EAAMjjB,GAAG+iB,EAAID,EAAI9iB,EAAE,EACnBkjB,EAAsB,EAAZ/R,EAAGU,MAAM7R,GACnBmjB,EAAyB,EAAbhS,EAAGU,MAAMmR,GACrBI,EAAyB,EAAbjS,EAAGU,MAAMoR,GAErB/mB,EAAIiV,EAAGY,GAAG/R,GAAI7D,EAAIgV,EAAGe,GAAGlS,GAE5B,GAAGA,GAAG8iB,EACL,GAAGI,EACH,CACC,IAAGC,EACW,CAAGze,EAAK6c,EAAE8B,EAAEC,OAAO9c,EAAEtK,EAAEC,GAAK,SAD1BuI,EAAK6c,EAAE8B,EAAEC,OAAO9c,EAAG2K,EAAGY,GAAGiR,GAAK7R,EAAGe,GAAG8Q,SAKjDG,EAAaze,EAAK6c,EAAE8B,EAAEC,OAAO9c,EAAI2K,EAAGY,GAAGiR,GAAW7R,EAAGe,GAAG8Q,IAC3Cte,EAAK6c,EAAE8B,EAAEC,OAAO9c,GAAI2K,EAAGY,GAAGiR,GAAI9mB,GAAG,GAAIiV,EAAGe,GAAG8Q,GAAI7mB,GAAG,GAGjE+mB,EAECC,GAAaze,EAAK6c,EAAE8B,EAAEE,OAAO/c,EAAEtK,EAAEC,GAIjCinB,EAAa1e,EAAK6c,EAAE8B,EAAEG,SAAShd,EAAGtK,EAAGC,EAAGgV,EAAGY,GAAGkR,GAAK9R,EAAGe,GAAG+Q,IAC5Cve,EAAK6c,EAAE8B,EAAEG,SAAShd,EAAGtK,EAAGC,GAAID,EAAEiV,EAAGY,GAAGkR,IAAK,GAAI9mB,EAAEgV,EAAGe,GAAG+Q,IAAK,GAG5Eve,EAAK6c,EAAE8B,EAAEI,UAAUjd,KAGrB9B,EAAK6c,EAAEsB,YAAc,SAAS1R,EAAI7I,EAAM9B,GAEvC,IAAI,IAAIvG,EAAE,EAAGA,EAAEkR,EAAGgB,MAAMvX,OAAQqF,IAChC,CACC,IAAIgiB,EAAO,CAAExD,KAAK,GAAIC,KAAK,IACvBgF,EAAMvS,EAAGgB,MAAMlS,GACnByE,EAAK6c,EAAEoB,UAAUe,EAAI/Q,WAAYrK,EAAM2Z,GAGvC,IADA,IAAI5P,EAAIqR,EAAIrR,EACJrS,EAAE,EAAGA,EAAEiiB,EAAKvD,KAAK9jB,OAAQoF,GAAG,EACpC,CACC,IAAI9D,EAAI+lB,EAAKvD,KAAK1e,GAAM7D,EAAI8lB,EAAKvD,KAAK1e,EAAE,GACxCwG,EAAEkY,KAAK7b,KAAK3G,EAAEmW,EAAE5L,EAAItK,EAAEkW,EAAE9D,EAAI8D,EAAEE,IAC9B/L,EAAEkY,KAAK7b,KAAK3G,EAAEmW,EAAE7K,EAAIrL,EAAEkW,EAAEC,EAAID,EAAEG,IAE/B,IAAQxS,EAAE,EAAGA,EAAEiiB,EAAKxD,KAAK7jB,OAAQoF,IAAOwG,EAAEiY,KAAK5b,KAAKof,EAAKxD,KAAKze,MAKhE0E,EAAK6c,EAAEoC,eAAiB,SAAS9S,EAAG+S,GAEnC,IAAIC,EAAOnf,EAAK2D,MAAM0B,YAAY6Z,EAAI/S,GACtC,OAAc,GAAPgT,EAAW,EAAID,EAAGC,EAAK,IAM/Bnf,EAAK6c,EAAEuC,kBAAoB,SAASxb,EAAMyb,EAAIC,GAG7C,GAAG1b,EAAK0K,KAIP,IAHA,IAAIiR,EAAO3b,EAAI,KACX4b,EAAQD,EAAKjb,WAAYmb,EAAQF,EAAKnb,YACtCsb,EAAQ,GACJpkB,EAAE,EAAGA,EAAEmkB,EAAMvpB,OAAQoF,IAC7B,CACC,IAAIqkB,EAAKF,EAAMnkB,GACf,GAAW,QAARqkB,EAAGve,IACN,IAAI,IAAIwe,EAAG,EAAGA,EAAGD,EAAGle,IAAIvL,OAAQ0pB,IAC/B,IAAGF,EAAMC,EAAGle,IAAIme,IAAhB,CAAqCF,EAAMC,EAAGle,IAAIme,KAAO,EAIzD,IAHA,IAAIne,EAAM+d,EAAMG,EAAGle,IAAIme,IAGfrkB,EAAE,EAAGA,EAAEkG,EAAIN,KAAKjL,OAAQqF,IAE/B,GAAgB,MAAbkG,EAAIN,KAAK7F,GAAZ,CACA,IAAwBqK,EAApBka,EAAOpe,EAAIN,KAAK5F,GACpB,IAAGskB,EAAKrR,WAA0E,IAA7D7I,EAAM3F,EAAK2D,MAAM+B,cAAcma,EAAKrR,SAAU6Q,IAEnE,GAAc,GAAX5d,EAAIkD,YACF,GAAc,GAAXlD,EAAIkD,MACZ,CACC,IAAImb,EACJ,GAAa,GAAVD,EAAKpa,IAEP,KAAIjP,EAAQqpB,EAAK9Q,SAASpJ,GAC1B,IAAQrK,EAAE,EAAGA,EAAE9E,EAAMN,OAAQoF,IAAU9E,EAAM8E,GAAG6T,MAAMmQ,IAAMQ,EAAMtpB,EAAM8E,SAEpE,GAAa,GAAVukB,EAAKpa,IACb,CACC,IAAIsa,EAAK/f,EAAK6c,EAAEoC,eAAeI,EAAIQ,EAAKrQ,WACpCwQ,EAAKhgB,EAAK6c,EAAEoC,eAAeK,EAAIO,EAAKpQ,WACxCqQ,EAAMD,EAAKvpB,OAAOypB,GAAIC,GAGvB,GAAGF,GAAOA,EAAIvQ,KAAQ,OAAOuQ,EAAIvQ,KAAK,MAM3C,GAAG3L,EAAKqQ,KACR,CACC,IAAIgM,EAAOrc,EAAKqQ,KAAKI,OAAOhV,QAAQggB,GACpC,IAAU,GAAPY,EACH,CACC,IAAIC,EAAOtc,EAAKqQ,KAAKK,KAAK2L,GAAMtL,OAAOtV,QAAQigB,GAC/C,IAAU,GAAPY,EAAY,OAAOtc,EAAKqQ,KAAKK,KAAK2L,GAAMhQ,KAAKiQ,IAIlD,OAAO,GAGRlgB,EAAK6c,EAAEsD,eAAiB,SAASvc,EAAMkS,GAGtC,IADA,IAAIsK,EAAM,GACF9kB,EAAE,EAAGA,EAAEwa,EAAI5f,OAAQoF,KACtBggB,EAAKxF,EAAIuK,YAAY/kB,IAAW,OAAUA,IAC9C8kB,EAAIjiB,KAAK6B,EAAK6c,EAAEC,YAAYlZ,EAAM0X,IAEnC,IAAQhgB,EAAE,EAAGA,EAAEwa,EAAI5f,OAAQoF,IAAK,CAC/B,IAAIggB,EACJ,GAAO,OADHA,EAAKxF,EAAIuK,YAAY/kB,IACZ,CAAG,IAAIgG,EAAE8e,EAAI9kB,EAAE,GAAK8kB,EAAI9kB,EAAE,GAAG8kB,EAAI9kB,GAAK8kB,EAAI9kB,GAAGgG,EAEvDga,EAAG,OAAUhgB,IAMjB,IAAIglB,EAAO1c,EAAI,KAAW,GAAS,MAAN0c,EAAc,OAAOF,EAQlD,IAPA,IAAIZ,EAAQc,EAAKhc,WAAYmb,EAAQa,EAAKlc,YAEtCmc,EAAQ,CAAC,OAAQ,OAAQ,OAAS,OAAO,OAAO,OAAO,OAAU,OAAQ,OAC1E,QAGCb,EAAQ,GACJc,EAAG,EAAGA,EAAGf,EAAMvpB,OAAQsqB,IAC/B,CACC,IAAIb,EAAKF,EAAMe,GAAM,IAA2B,GAAxBD,EAAMlhB,QAAQsgB,EAAGve,KAIzC,IAAI,IAAIwe,EAAG,EAAGA,EAAGD,EAAGle,IAAIvL,OAAQ0pB,IAC/B,IAAGF,EAAMC,EAAGle,IAAIme,IAAhB,CAAqCF,EAAMC,EAAGle,IAAIme,KAAO,EAIzD,IAHA,IAAIne,EAAM+d,EAAMG,EAAGle,IAAIme,IAGfa,EAAG,EAAGA,EAAGL,EAAIlqB,OAAQuqB,IAAM,CAClC,IAAIC,EAAO1gB,EAAK6c,EAAE8D,cAAc7K,EAAK2K,IACM,GAAxC,sBAAsBphB,QAAQsgB,EAAGve,MAAYue,EAAGve,KAAKsf,GAExD1gB,EAAK6c,EAAE+D,WAAWR,EAAKK,EAAIhf,EAAK+d,KAKnC,OAAOY,GAERpgB,EAAK6c,EAAE8D,cAAgB,SAAS7K,EAAK2K,GACpC,IAAII,EAAO,yBACPC,EAAI,qrBAGJC,EAAW,GAAJN,IAA8C,GAA1BI,EAAKxhB,QAAQyW,EAAI2K,EAAG,IAC/CO,EAAOP,GAAI3K,EAAI5f,OAAO,IAA+B,GAA1B2qB,EAAKxhB,QAAQyW,EAAI2K,EAAG,IAYnD,OAVIM,IAA+B,GAAvBD,EAAEzhB,QAAQyW,EAAI2K,EAAG,MAAWM,GAAK,GACzCC,IAA+B,GAAvBF,EAAEzhB,QAAQyW,EAAI2K,MAAcO,GAAK,GAEzCA,IAA+B,GAR3B,qBAQM3hB,QAAQyW,EAAI2K,EAAG,MAAWO,GAAK,GACzCD,IAA+B,GAT3B,qBASM1hB,QAAQyW,EAAI2K,MAAcM,GAAK,GAG1CA,EAAeC,EAAO,OAAS,OAChBA,EAAO,OAAS,QAInChhB,EAAK6c,EAAE+D,WAAa,SAASR,EAAKK,EAAIhf,EAAK+d,GAG1C,IAFA,IAAIyB,EAAOb,EAAIlqB,OAAOuqB,EAAG,EAEjBllB,EAAE,EAAGA,EAAEkG,EAAIN,KAAKjL,OAAQqF,IAE/B,GAAgB,MAAbkG,EAAIN,KAAK5F,GAAZ,CACA,IAAwBoK,EAApBka,EAAOpe,EAAIN,KAAK5F,GACpB,IAAGskB,EAAKrR,WAA+E,IAAlE7I,EAAM3F,EAAK2D,MAAM+B,cAAcma,EAAKrR,SAAU4R,EAAIK,KAGvE,GAAc,GAAXhf,EAAIkD,MACGyb,EAAIK,GACA,GAAVZ,EAAKpa,IAAU2a,EAAIK,GAAML,EAAIK,GAAIZ,EAAK9P,MACvBqQ,EAAIK,GAAMZ,EAAK7P,KAAKrK,QAGlC,GAAc,GAAXlE,EAAIkD,MAGX,IAFA,IAAIsL,EAAO4P,EAAK5P,KAAKtK,GAEbyM,EAAE,EAAGA,EAAEnC,EAAK/Z,OAAQkc,IAAK,CAChC,IAAIJ,EAAM/B,EAAKmC,GAAI8O,EAAKlP,EAAIC,MAAM/b,OAAS,KAAGgrB,EAAGD,GAAN,CAE3C,IADA,IAAIE,GAAO,EAAMC,EAAM,EACf5lB,EAAE,EAAGA,EAAE0lB,EAAI1lB,IAAK,CAAG,MAA0B,GAApB4kB,EAAIK,EAAGW,GAAK,EAAE5lB,KAAU4lB,IAAapP,EAAIC,MAAMzW,IAAI4kB,EAAIK,EAAGW,GAAK,EAAE5lB,MAAO2lB,GAAK,GAC9G,GAAIA,EAAJ,CAEA,IADAf,EAAIK,GAAIzO,EAAIE,OACJ1W,EAAE,EAAGA,EAAE0lB,EAAGE,EAAK5lB,IAAO4kB,EAAIK,EAAGjlB,EAAE,IAAI,EAAO,aAK9C,GAAc,GAAXiG,EAAIkD,OAAsB,GAAVkb,EAAKpa,IAG7B,IAFA,IAAI4b,EAAOrhB,EAAK2D,MAAM0B,YAAYwa,EAAKxP,KAAM+P,EAAIK,IAC7Ca,EAAMzB,EAAKxP,KAAKgR,EAAK,GAAIE,EAAM1B,EAAKvP,MAAMgR,GACtChmB,EAAE,EAAGA,EAAEimB,EAAIrrB,OAAQoF,IAAK,CAC/B,IAAIkmB,EAAKD,EAAIjmB,GAAImmB,EAAMD,EAAGlQ,MAC1B,KAAGmQ,EAAIvrB,OAAO+qB,GAAd,CAEA,IADIE,GAAO,EACH3lB,EAAE,EAAGA,EAAEimB,EAAIvrB,OAAQsF,IAAK,CAC/B,IAAIkmB,EAAQ1hB,EAAK2D,MAAM0B,YAAYwa,EAAKxP,KAAM+P,EAAIK,EAAG,EAAEjlB,IACvD,IAAU,GAAP6lB,GAAYxB,EAAKxP,KAAKqR,EAAM,IAAID,EAAIjmB,GAAI,CAAG2lB,GAAK,EAAQ,OAE5D,GAAIA,EAEJ,KAAIQ,EAAMH,EAAGjQ,mBACb,IAAQa,EAAE,EAAGA,EAAEuP,EAAIzrB,OAAQkc,GAAG,EAEpBuP,EAAIvP,GAAWuP,EAAIvP,EAAE,UAM5B,GAAc,GAAX3Q,EAAIkD,OAAsB,GAAVkb,EAAKpa,IAAQ,CAEpC,IAAIzF,EAAK6c,EAAE+E,YAAYxB,EAAKP,EAAKlP,QAAS8P,EAAGZ,EAAKlP,QAAQza,QAAW,SACrE,IAAI8J,EAAK6c,EAAE+E,YAAYxB,EAAKP,EAAKjP,QAAS6P,GAAO,SACjD,IAAIzgB,EAAK6c,EAAE+E,YAAYxB,EAAKP,EAAKhP,QAAS4P,EAAGZ,EAAKjP,QAAQ1a,QAAW,SAErE,IAAI2rB,EAAKhC,EAAK/O,UACd,IAAQxV,EAAE,EAAGA,EAAEumB,EAAG3rB,OAAQoF,GAAG,EAAG,CAC3B+lB,EAAOQ,EAAGvmB,GAAd,IAAkBwmB,EAAOtC,EAAMqC,EAAGvmB,EAAE,IAEpC0E,EAAK6c,EAAE+D,WAAWR,EAAKK,EAAGY,EAAMS,EAAMtC,OAQ1Cxf,EAAK6c,EAAE+E,YAAc,SAASxB,EAAK1P,EAAM+P,GACxC,IAAI,IAAInlB,EAAE,EAAGA,EAAEoV,EAAKxa,OAAQoF,IAC8B,IAAS,GAAxD0E,EAAK2D,MAAM+B,cAAcgL,EAAKpV,GAAI8kB,EAAIK,EAAGnlB,IAAoB,OAAO,EAE/E,OAAO,GAGR0E,EAAK6c,EAAEkF,aAAe,SAASne,EAAMwc,EAAK4B,GAOzC,IAHA,IAAIC,EAAQ,CAAClI,KAAK,GAAIC,KAAK,IACvBxiB,EAAI,EAEA8D,EAAE,EAAGA,EAAE8kB,EAAIlqB,OAAQoF,IAC3B,CACC,IAAIgiB,EAAM8C,EAAI9kB,GAAK,IAAS,GAANgiB,EAAH,CAGnB,IAFA,IAAInO,EAAQ7T,EAAE8kB,EAAIlqB,OAAO,IAAgB,GAAXkqB,EAAI9kB,EAAE,GAAW8kB,EAAI9kB,EAAE,GAAK,EACtDiiB,EAAOvd,EAAK6c,EAAEQ,YAAYzZ,EAAM0Z,GAC5B/hB,EAAE,EAAGA,EAAEgiB,EAAKvD,KAAK9jB,OAAQqF,GAAG,EAEnC0mB,EAAMjI,KAAK7b,KAAKof,EAAKvD,KAAKze,GAAK/D,GAC/ByqB,EAAMjI,KAAK7b,KAAKof,EAAKvD,KAAKze,EAAE,IAG7B,IADGymB,GAAOC,EAAMlI,KAAK5b,KAAK6jB,GAClBzmB,EAAE,EAAGA,EAAEgiB,EAAKxD,KAAK7jB,OAAQqF,IAAO0mB,EAAMlI,KAAK5b,KAAKof,EAAKxD,KAAKxe,IAC/DymB,GAAOC,EAAMlI,KAAK5b,KAAK,KAC1B3G,GAAKoM,EAAKgQ,KAAKG,OAAOuJ,GACnBhiB,EAAE8kB,EAAIlqB,OAAO,IAAKsB,GAAKwI,EAAK6c,EAAEuC,kBAAkBxb,EAAM0Z,EAAKnO,KAE/D,OAAO8S,GAGRjiB,EAAK6c,EAAEqF,UAAY,SAAS3E,EAAM4E,GAExB,MAANA,IAAcA,EAAO,GAExB,IADA,IAAI3Q,EAAM,GAAIoL,EAAK,EAAGwF,EAAO,CAAC,EAAI,EAAE,EAAI,EAAE,EAAI,EAAE,EAAI,GAC5C9mB,EAAE,EAAGA,EAAEiiB,EAAKxD,KAAK7jB,OAAQoF,IACjC,CACC,IAAIwgB,EAAMyB,EAAKxD,KAAKze,GAAI+f,EAAKuB,GAAIwF,EAAKtG,GAAKsG,EAAKtG,GAAK,GAErD,IADAtK,EAAIrT,KAAK2d,GACHc,EAAGvB,GAAI,CAAG,IAAIvY,EAAIya,EAAKvD,KAAK4C,KAAQpL,EAAIrT,KAAK8L,WAAWnH,EAAEuf,QAAQF,KAAQvF,GAAIvB,EAAG,GAAG,OAE3F,OAAO7J,EAAI8Q,KAAK,KAGjBtiB,EAAK6c,EAAE0F,cAAgB,SAAShF,EAAMiF,GAIrC,IAFA,IAAI1f,EAAI,EAAGkX,EAAOuD,EAAKvD,KAEfze,EAAE,EAAGA,EAAEgiB,EAAKxD,KAAK7jB,OAAQqF,IACjC,CACC,IAAIugB,EAAMyB,EAAKxD,KAAKxe,GACP,KAALugB,GACP0G,EAAI5D,OAAO5E,EAAKlX,GAAIkX,EAAKlX,EAAE,IAC3BA,GAAG,GAES,KAALgZ,GACP0G,EAAI3D,OAAO7E,EAAKlX,GAAIkX,EAAKlX,EAAE,IAC3BA,GAAG,GAES,KAALgZ,GACP0G,EAAIC,cAAczI,EAAKlX,GAAIkX,EAAKlX,EAAE,GAAIkX,EAAKlX,EAAE,GAAIkX,EAAKlX,EAAE,GAAIkX,EAAKlX,EAAE,GAAIkX,EAAKlX,EAAE,IAC9EA,GAAG,GAES,KAALgZ,GACP0G,EAAIE,iBAAiB1I,EAAKlX,GAAIkX,EAAKlX,EAAE,GAAIkX,EAAKlX,EAAE,GAAIkX,EAAKlX,EAAE,IAC3DA,GAAG,GAEmB,KAAfgZ,EAAIL,OAAO,IAClB+G,EAAIG,YACJH,EAAII,UAAY9G,GAEJ,KAALA,EACP0G,EAAIzD,YAEQ,KAALjD,GACP0G,EAAI7H,SAMP3a,EAAK6c,EAAE8B,EAAI,GACX3e,EAAK6c,EAAE8B,EAAEC,OAAS,SAAS9c,EAAGtK,EAAGC,GAEhCqK,EAAEiY,KAAK5b,KAAK,KAAO2D,EAAEkY,KAAK7b,KAAK3G,EAAEC,IAElCuI,EAAK6c,EAAE8B,EAAEE,OAAS,SAAS/c,EAAGtK,EAAGC,GAEhCqK,EAAEiY,KAAK5b,KAAK,KAAO2D,EAAEkY,KAAK7b,KAAK3G,EAAEC,IAElCuI,EAAK6c,EAAE8B,EAAEkE,QAAU,SAAS/gB,EAAGC,EAAE8H,EAAE/G,EAAE8K,EAAEkV,EAAElJ,GAExC9X,EAAEiY,KAAK5b,KAAK,KAAO2D,EAAEkY,KAAK7b,KAAK4D,EAAE8H,EAAE/G,EAAE8K,EAAEkV,EAAElJ,IAE1C5Z,EAAK6c,EAAE8B,EAAEG,SAAW,SAAShd,EAAGC,EAAE8H,EAAE/G,EAAE8K,GAErC9L,EAAEiY,KAAK5b,KAAK,KAAO2D,EAAEkY,KAAK7b,KAAK4D,EAAE8H,EAAE/G,EAAE8K,IAEtC5N,EAAK6c,EAAE8B,EAAEI,UAAY,SAASjd,GAAMA,EAAEiY,KAAK5b,KAAK,MAKhD6B,EAAK6c,EAAEmB,SAAW,SAASjE,EAAM7oB,EAAO0S,EAAMka,EAAMhc,GASnD,IAPA,IAAI0b,EAAQtsB,EAAMssB,MACdC,EAASvsB,EAAMusB,OAAQC,EAAUxsB,EAAMwsB,UAAWC,EAAMzsB,EAAMysB,MAAOE,EAAK3sB,EAAM2sB,KAChFviB,EAAE,EACF9D,EAAEtG,EAAMsG,EAAGC,EAAEvG,EAAMuG,EAAGsrB,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAEzF9hB,EAAI,CAAC4D,IAAI,EAAEmE,KAAK,GAEdnO,EAAEye,EAAK7jB,QACb,CACC8J,EAAKwG,IAAI4C,cAAc2Q,EAAMze,EAAGoG,GAChC,IAAIpM,EAAIoM,EAAE4D,IAGV,GAFAhK,GAAKoG,EAAE+H,KAED,MAAHnU,GAAc,OAAHA,EAMCkoB,EAAMtnB,OAAS,IAAM,IACfwnB,IACnBC,EAAQH,EAAMiG,QAAU3F,EAAK4F,eAG9BjG,GAAUD,EAAMtnB,QAAU,EAC1BsnB,EAAMtnB,OAAS,EACfwnB,GAAY,OAER,GAAM,MAAHpoB,GAAc,OAAHA,EAMJkoB,EAAMtnB,OAAS,IAAM,IACfwnB,IACnBC,EAAQH,EAAMiG,QAAU3F,EAAK4F,eAG9BjG,GAAUD,EAAMtnB,QAAU,EAC1BsnB,EAAMtnB,OAAS,EACfwnB,GAAY,OAER,GAAM,MAAHpoB,EAEHkoB,EAAMtnB,OAAS,IAAMwnB,IACJC,EAAQH,EAAMiG,QAAU3F,EAAK4F,cAC7BhG,GAAY,GAE9BG,GAAQ7d,EAAK6c,EAAE8B,EAAEI,UAAUjd,GAEbrK,GAAK+lB,EAAMmG,MAC1B3jB,EAAK6c,EAAE8B,EAAEC,OAAO9c,EAAEtK,EAAEC,GAAMomB,GAAK,OAE7B,GAAM,MAAHvoB,EAEP,KAAOkoB,EAAMtnB,OAAS,GACDsB,GAAKgmB,EAAMiG,QACXhsB,GAAK+lB,EAAMiG,QACXzjB,EAAK6c,EAAE8B,EAAEE,OAAO/c,EAAGtK,EAAGC,QAGvC,GAAM,MAAHnC,GAAc,MAAHA,EAKlB,IAHA,IAAI+F,EAAQmiB,EAAMtnB,OACd0tB,EAAY,MAALtuB,EAEHiG,EAAE,EAAGA,EAAEF,EAAOE,IAAK,CAC1B,IAAIsoB,EAAOrG,EAAMiG,QAEdG,EAAOpsB,GAAKqsB,EAAiBpsB,GAAKosB,EACrCD,GAAOA,EACP5jB,EAAK6c,EAAE8B,EAAEE,OAAO/c,EAAGtK,EAAGC,QAGnB,GAAM,MAAHnC,GAAc,OAAHA,EACnB,CACK+F,EAAQmiB,EAAMtnB,OAElB,IAFA,IACI4tB,EAAQ,EACNA,EAAM,GAAKzoB,GAChB0nB,EAAMvrB,EAAIgmB,EAAMiG,QAChBT,EAAMvrB,EAAI+lB,EAAMiG,QAChBR,EAAMF,EAAMvF,EAAMiG,QAClBP,EAAMF,EAAMxF,EAAMiG,QAClBjsB,EAAIyrB,EAAMzF,EAAMiG,QAChBhsB,EAAIyrB,EAAM1F,EAAMiG,QAChBzjB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGihB,EAAKC,EAAKC,EAAKC,EAAK1rB,EAAGC,GAC3CqsB,GAAO,EAEF,OAAHxuB,IAEFkC,GAAKgmB,EAAMiG,QACXhsB,GAAK+lB,EAAMiG,QACXzjB,EAAK6c,EAAE8B,EAAEE,OAAO/c,EAAGtK,EAAGC,QAGnB,IAAM,OAAHnC,EAAa,MAChB,GAAM,SAAHA,GAAiB,SAAHA,GAAiB,SAAHA,GAAiB,SAAHA,EAE3C,SAAHA,IAGU0tB,EAAMvrB,EAClBwrB,GAFAF,EAAMvrB,EAAMgmB,EAAMiG,SAENjG,EAAMiG,QAGlBD,EAFAN,EAAMF,EAAMxF,EAAMiG,QAIlBL,EAAMF,EAENI,EAAM7rB,EACND,GAFA6rB,GAFAF,GAFAI,EAAMN,EAAMzF,EAAMiG,SAENjG,EAAMiG,SAENjG,EAAMiG,SAERjG,EAAMiG,QAChBzjB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGihB,EAAKC,EAAKC,EAAKC,EAAKK,EAAKC,GAC7CxjB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGqhB,EAAKC,EAAKC,EAAKC,EAAK9rB,EAAGC,IAGtC,SAAHnC,IAEFytB,EAAMvrB,EAAMgmB,EAAMiG,QAClBT,EAAMvrB,EAAM+lB,EAAMiG,QAClBR,EAAMF,EAAMvF,EAAMiG,QAClBP,EAAMF,EAAMxF,EAAMiG,QAClBF,EAAMN,EAAMzF,EAAMiG,QAClBD,EAAMN,EAAM1F,EAAMiG,QAClBN,EAAMI,EAAM/F,EAAMiG,QAClBL,EAAMI,EAAMhG,EAAMiG,QAClBJ,EAAMF,EAAM3F,EAAMiG,QAClBH,EAAMF,EAAM5F,EAAMiG,QAClBjsB,EAAI6rB,EAAM7F,EAAMiG,QAChBhsB,EAAI6rB,EAAM9F,EAAMiG,QAChBjG,EAAMiG,QACNzjB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGihB,EAAKC,EAAKC,EAAKC,EAAKK,EAAKC,GAC7CxjB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGqhB,EAAKC,EAAKC,EAAKC,EAAK9rB,EAAGC,IAEtC,SAAHnC,IAEFytB,EAAMvrB,EAAMgmB,EAAMiG,QAClBT,EAAMvrB,EAAM+lB,EAAMiG,QAClBR,EAAMF,EAAMvF,EAAMiG,QAGlBD,EAFAN,EAAMF,EAAMxF,EAAMiG,QAIlBL,EAAMF,EACNG,GAFAF,GAFAI,EAAMN,EAAMzF,EAAMiG,SAENjG,EAAMiG,SAENjG,EAAMiG,QAClBH,EAAMF,EAAM5F,EAAMiG,QAClBjsB,EAAI6rB,EAAM7F,EAAMiG,QAChBzjB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGihB,EAAKC,EAAKC,EAAKC,EAAKK,EAAKC,GAC7CxjB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGqhB,EAAKC,EAAKC,EAAKC,EAAK9rB,EAAGC,IAEtC,SAAHnC,IAEFytB,EAAMvrB,EAAMgmB,EAAMiG,QAClBT,EAAMvrB,EAAM+lB,EAAMiG,QAClBR,EAAMF,EAAMvF,EAAMiG,QAClBP,EAAMF,EAAMxF,EAAMiG,QAClBF,EAAMN,EAAMzF,EAAMiG,QAClBD,EAAMN,EAAM1F,EAAMiG,QAClBN,EAAMI,EAAM/F,EAAMiG,QAClBL,EAAMI,EAAMhG,EAAMiG,QAClBJ,EAAMF,EAAM3F,EAAMiG,QAClBH,EAAMF,EAAM5F,EAAMiG,QACd31B,KAAKi2B,IAAIV,EAAM7rB,GAAK1J,KAAKi2B,IAAIT,EAAM7rB,GACnCD,EAAI6rB,EAAM7F,EAAMiG,QAEhBhsB,EAAI6rB,EAAM9F,EAAMiG,QAEpBzjB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGihB,EAAKC,EAAKC,EAAKC,EAAKK,EAAKC,GAC7CxjB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGqhB,EAAKC,EAAKC,EAAKC,EAAK9rB,EAAGC,SAGxC,GAAM,OAAHnC,EACR,CAKC,GAJIkoB,EAAMtnB,OAAS,IAAMwnB,IACJC,EAAQH,EAAMiG,QAAU7f,EAAK8f,cAC7BhG,GAAY,GAEhB,GAAdF,EAAMtnB,OACT,CACC,IAAI8tB,EAAMxG,EAAMiG,QACZQ,EAAMzG,EAAMiG,QACZS,EAAQ1G,EAAMiG,QACdU,EAAQ3G,EAAMiG,QAGdW,EAAOpkB,EAAKwG,IAAIoC,UAAUhF,EAAMsgB,GAChCG,EAAOrkB,EAAKwG,IAAIoC,UAAUhF,EAAMugB,GAMpCnkB,EAAK6c,EAAEmB,SAASpa,EAAKwD,YAAYgd,GAAOlzB,EAAM0S,EAAKka,EAAKhc,GACxD5Q,EAAMsG,EAAIwsB,EAAK9yB,EAAMuG,EAAIwsB,EACzBjkB,EAAK6c,EAAEmB,SAASpa,EAAKwD,YAAYid,GAAOnzB,EAAM0S,EAAKka,EAAKhc,GAItD+b,IAAS7d,EAAK6c,EAAE8B,EAAEI,UAAUjd,GAAK+b,GAAK,QAErC,GAAM,OAAHvoB,GAAe,OAAHA,EAMLkoB,EAAMtnB,OAAS,IAAM,IACfwnB,IACnBC,EAAQH,EAAMiG,QAAU3F,EAAK4F,eAG9BjG,GAAUD,EAAMtnB,QAAU,EAC1BsnB,EAAMtnB,OAAS,EACfwnB,GAAY,EAEZpiB,GAAMmiB,EAAS,GAAM,OAGjB,GAAM,OAAHnoB,EACHkoB,EAAMtnB,OAAS,IAAMwnB,IACJC,EAAQH,EAAMiG,QAAU3F,EAAK4F,cAC7BhG,GAAY,GAGhBjmB,GAAK+lB,EAAMmG,MACXnsB,GAAKgmB,EAAMmG,MAEvB9F,GAAQ7d,EAAK6c,EAAE8B,EAAEI,UAAUjd,GACf9B,EAAK6c,EAAE8B,EAAEC,OAAO9c,EAAEtK,EAAEC,GAAMomB,GAAK,OAE5C,GAAM,OAAHvoB,EAEFkoB,EAAMtnB,OAAS,IAAMwnB,IACLC,EAAQH,EAAMiG,QAAU3F,EAAK4F,cAC7BhG,GAAY,GAGhBlmB,GAAKgmB,EAAMmG,MAEvB9F,GAAQ7d,EAAK6c,EAAE8B,EAAEI,UAAUjd,GAC9B9B,EAAK6c,EAAE8B,EAAEC,OAAO9c,EAAEtK,EAAEC,GAAMomB,GAAK,OAE7B,GAAM,OAAHvoB,EACR,CACC,KAAOkoB,EAAMtnB,OAAS,GACDsB,GAAKgmB,EAAMiG,QACXhsB,GAAK+lB,EAAMiG,QACXzjB,EAAK6c,EAAE8B,EAAEE,OAAO/c,EAAGtK,EAAGC,GAG1BsrB,EAAMvrB,EAAIgmB,EAAMiG,QAChBT,EAAMvrB,EAAI+lB,EAAMiG,QAChBR,EAAMF,EAAMvF,EAAMiG,QAClBP,EAAMF,EAAMxF,EAAMiG,QAClBjsB,EAAIyrB,EAAMzF,EAAMiG,QAChBhsB,EAAIyrB,EAAM1F,EAAMiG,QAChBzjB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGihB,EAAKC,EAAKC,EAAKC,EAAK1rB,EAAGC,QAExD,GAAM,OAAHnC,EAMU,IAJbkoB,EAAMtnB,OAAS,IACEsB,GAAKgmB,EAAMiG,SAGRjG,EAAMtnB,OAAS,GAClB6sB,EAAMvrB,EACNwrB,EAAMvrB,EAAI+lB,EAAMiG,QAGhBjsB,EAFAyrB,EAAMF,EAAMvF,EAAMiG,QAGlBhsB,GAFAyrB,EAAMF,EAAMxF,EAAMiG,SAERjG,EAAMiG,QAChBzjB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGihB,EAAKC,EAAKC,EAAKC,EAAK1rB,EAAGC,QAI5D,GAAM,OAAHnC,EAMU,IAJbkoB,EAAMtnB,OAAS,IACEuB,GAAK+lB,EAAMiG,SAGRjG,EAAMtnB,OAAS,GAElB8sB,EAAMvrB,EACNwrB,GAFAF,EAAMvrB,EAAIgmB,EAAMiG,SAEJjG,EAAMiG,QAClBP,EAAMF,EAAMxF,EAAMiG,QAClBjsB,EAAIyrB,EAAMzF,EAAMiG,QAChBhsB,EAAIyrB,EACJljB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGihB,EAAKC,EAAKC,EAAKC,EAAK1rB,EAAGC,QAG5D,GAAM,OAAHnC,GAAe,OAAHA,EACpB,CACC,IAAI0L,EAAU,OAAH1L,EAAWwoB,EAAOla,EAC7B,GAAiB,GAAd4Z,EAAMtnB,OAAanJ,QAAQ+d,IAAI,0BAC7B,CACJ,IAAInF,EAAM6X,EAAMmG,MACZW,EAAOtjB,EAAImH,MAAOxC,EAAM3E,EAAIuH,MAChCrX,EAAMsG,EAAEA,EAAGtG,EAAMuG,EAAEA,EAAGvG,EAAMusB,OAAOA,EAAQvsB,EAAMwsB,UAAUA,EAAWxsB,EAAMysB,MAAMA,EAAQzsB,EAAM2sB,KAAKA,EACrG7d,EAAK6c,EAAEmB,SAASsG,EAAMpzB,EAAM0S,EAAKka,EAAKhc,GACtCtK,EAAEtG,EAAMsG,EAAGC,EAAEvG,EAAMuG,EAAGgmB,EAAOvsB,EAAMusB,OAAQC,EAAUxsB,EAAMwsB,UAAWC,EAAMzsB,EAAMysB,MAAQE,EAAK3sB,EAAM2sB,WAGlG,GAAM,OAAHvoB,GAAe,OAAHA,EACpB,CACC,IAAWivB,EAAS/G,EAAMtnB,OAEtBsuB,GADAV,EAAQ,EACS,OAALxuB,GAKhB,IAFAwuB,GAASS,GADTlpB,GAAkB,EAATkpB,GAGDT,EAAQzoB,GAEZmpB,GAGFxB,EAAMvrB,EACNwrB,GAFAF,EAAMvrB,EAAIgmB,EAAMiG,SAEJjG,EAAMiG,QAElBhsB,GADAyrB,EAAMF,EAAMxF,EAAMiG,SACRjG,EAAMiG,QACbpoB,EAAMyoB,GAAS,GAAMtsB,EAAIyrB,EAAMzF,EAAMiG,QAAUK,KAC3CtsB,EAAIyrB,EACXuB,GAAY,IAIZzB,EAAMvrB,EACNwrB,EAAMvrB,EAAI+lB,EAAMiG,QAChBR,EAAMF,EAAMvF,EAAMiG,QAClBP,EAAMF,EAAMxF,EAAMiG,QAClBjsB,EAAIyrB,EAAMzF,EAAMiG,QACbpoB,EAAMyoB,GAAS,GAAMrsB,EAAIyrB,EAAM1F,EAAMiG,QAAUK,KAC3CrsB,EAAIyrB,EACXsB,GAAY,GAEDxkB,EAAK6c,EAAE8B,EAAEkE,QAAQ/gB,EAAGihB,EAAKC,EAAKC,EAAKC,EAAK1rB,EAAGC,GACvDqsB,GAAS,MAIN,IAAqB,MAAjBxuB,EAAE,IAAImmB,OAAO,GAAyD,MAA5C1uB,QAAQ+d,IAAI,sBAAsBxV,EAAGykB,GAAazkB,EAC9EkoB,EAAMrf,KAAK7I,KAGnBpE,EAAMsG,EAAEA,EAAGtG,EAAMuG,EAAEA,EAAGvG,EAAMusB,OAAOA,EAAQvsB,EAAMwsB,UAAUA,EAAWxsB,EAAMysB,MAAMA,EAAOzsB,EAAM2sB,KAAKA,GAK9F7d,GAUP,WAGA,IAAIykB,EAAe,WACjB,IAAIC,EAAS,GAIf,SAASC,IACPx3B,KAAKy3B,MAAQ,IAAIphB,YAAY,IAC7BrW,KAAK03B,MAAQ,IAAIrhB,YAAY,KAG/B,SAASshB,EAAKhmB,EAAQimB,GACpB53B,KAAK2R,OAASA,EACd3R,KAAK63B,YAAc,EACnB73B,KAAKiU,IAAM,EACXjU,KAAK83B,SAAW,EAEhB93B,KAAK43B,KAAOA,EACZ53B,KAAK+3B,QAAU,EAEf/3B,KAAKg4B,MAAQ,IAAIR,EACjBx3B,KAAKi4B,MAAQ,IAAIT,EAOnB,IAAIU,EAAS,IAAIV,EACbW,EAAS,IAAIX,EAGbY,EAAc,IAAInlB,WAAW,IAC7BolB,EAAc,IAAIhiB,YAAY,IAG9BiiB,EAAY,IAAIrlB,WAAW,IAC3BslB,EAAY,IAAIliB,YAAY,IAG5BmiB,EAAS,IAAIvlB,WAAW,CAC1B,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EACxB,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EACzB,GAAI,EAAG,KAILwlB,EAAY,IAAIjB,EAChBkB,EAAU,IAAIzlB,WAAW,KAO7B,SAAS0lB,EAAqBC,EAAMC,EAAMjW,EAAO/G,GAC/C,IAAI1N,EAAG2qB,EAGP,IAAK3qB,EAAI,EAAGA,EAAIyU,IAASzU,EAAKyqB,EAAKzqB,GAAK,EACxC,IAAKA,EAAI,EAAGA,EAAI,GAAKyU,IAASzU,EAAKyqB,EAAKzqB,EAAIyU,GAASzU,EAAIyU,EAAQ,EAGjE,IAAKkW,EAAMjd,EAAO1N,EAAI,EAAGA,EAAI,KAAMA,EACjC0qB,EAAK1qB,GAAK2qB,EACVA,GAAO,GAAKF,EAAKzqB,GA6BrB,IAAI6O,EAAO,IAAI3G,YAAY,IAE3B,SAAS0iB,EAAgB5kB,EAAGukB,EAAS/Z,EAAK9G,GACxC,IAAI1J,EAAG2qB,EAGP,IAAK3qB,EAAI,EAAGA,EAAI,KAAMA,EAAKgG,EAAEsjB,MAAMtpB,GAAK,EAGxC,IAAKA,EAAI,EAAGA,EAAI0J,IAAO1J,EAAKgG,EAAEsjB,MAAMiB,EAAQ/Z,EAAMxQ,MAKlD,IAHAgG,EAAEsjB,MAAM,GAAK,EAGRqB,EAAM,EAAG3qB,EAAI,EAAGA,EAAI,KAAMA,EAC7B6O,EAAK7O,GAAK2qB,EACVA,GAAO3kB,EAAEsjB,MAAMtpB,GAIjB,IAAKA,EAAI,EAAGA,EAAI0J,IAAO1J,EACjBuqB,EAAQ/Z,EAAMxQ,KAAMgG,EAAEujB,MAAM1a,EAAK0b,EAAQ/Z,EAAMxQ,OAASA,GAShE,SAAS6qB,EAAYvY,GAEdA,EAAEqX,aAELrX,EAAExM,IAAMwM,EAAE9O,OAAO8O,EAAEoX,eACnBpX,EAAEqX,SAAW,GAIf,IAAImB,EAAc,EAARxY,EAAExM,IAGZ,OAFAwM,EAAExM,OAAS,EAEJglB,EAIT,SAASC,EAAezY,EAAG5I,EAAKghB,GAC9B,IAAKhhB,EACD,OAAOghB,EAEX,KAAOpY,EAAEqX,SAAW,IAClBrX,EAAExM,KAAOwM,EAAE9O,OAAO8O,EAAEoX,gBAAkBpX,EAAEqX,SACxCrX,EAAEqX,UAAY,EAGhB,IAAI3f,EAAMsI,EAAExM,IAAO,QAAY,GAAK4D,EAGpC,OAFA4I,EAAExM,OAAS4D,EACX4I,EAAEqX,UAAYjgB,EACPM,EAAM0gB,EAIf,SAASM,EAAmB1Y,EAAGtM,GAC7B,KAAOsM,EAAEqX,SAAW,IAClBrX,EAAExM,KAAOwM,EAAE9O,OAAO8O,EAAEoX,gBAAkBpX,EAAEqX,SACxCrX,EAAEqX,UAAY,EAGhB,IAAIgB,EAAM,EAAGM,EAAM,EAAGjkB,EAAM,EACxBlB,EAAMwM,EAAExM,IAGZ,GACEmlB,EAAM,EAAIA,GAAa,EAANnlB,GACjBA,KAAS,IACPkB,EAEF2jB,GAAO3kB,EAAEsjB,MAAMtiB,GACfikB,GAAOjlB,EAAEsjB,MAAMtiB,SACRikB,GAAO,GAKhB,OAHA3Y,EAAExM,IAAMA,EACRwM,EAAEqX,UAAY3iB,EAEPhB,EAAEujB,MAAMoB,EAAMM,GAIvB,SAASC,EAAkB5Y,EAAG6Y,EAAIC,GAChC,IAAIC,EAAMC,EAAOC,EACbvrB,EAAG0J,EAAK9O,EAWZ,IARAywB,EAAON,EAAezY,EAAG,EAAG,KAG5BgZ,EAAQP,EAAezY,EAAG,EAAG,GAG7BiZ,EAAQR,EAAezY,EAAG,EAAG,GAExBtS,EAAI,EAAGA,EAAI,KAAMA,EAAKuqB,EAAQvqB,GAAK,EAGxC,IAAKA,EAAI,EAAGA,EAAIurB,IAASvrB,EAAG,CAE1B,IAAIwrB,EAAOT,EAAezY,EAAG,EAAG,GAChCiY,EAAQF,EAAOrqB,IAAMwrB,EAOvB,IAHAZ,EAAgBN,EAAWC,EAAS,EAAG,IAGlC7gB,EAAM,EAAGA,EAAM2hB,EAAOC,GAAQ,CACjC,IAAIG,EAAMT,EAAmB1Y,EAAGgY,GAEhC,OAAQmB,GACN,KAAK,GAEH,IAAIC,EAAOnB,EAAQ7gB,EAAM,GACzB,IAAK9O,EAASmwB,EAAezY,EAAG,EAAG,GAAI1X,IAAUA,EAC/C2vB,EAAQ7gB,KAASgiB,EAEnB,MACF,KAAK,GAEH,IAAK9wB,EAASmwB,EAAezY,EAAG,EAAG,GAAI1X,IAAUA,EAC/C2vB,EAAQ7gB,KAAS,EAEnB,MACF,KAAK,GAEH,IAAK9O,EAASmwB,EAAezY,EAAG,EAAG,IAAK1X,IAAUA,EAChD2vB,EAAQ7gB,KAAS,EAEnB,MACF,QAEE6gB,EAAQ7gB,KAAS+hB,GAMvBb,EAAgBO,EAAIZ,EAAS,EAAGc,GAChCT,EAAgBQ,EAAIb,EAASc,EAAMC,GAQrC,SAASK,EAAwBrZ,EAAG6Y,EAAIC,GACtC,OAAU,CACR,IAUMxwB,EAAQgxB,EAAM/c,EACd7O,EAXFyrB,EAAMT,EAAmB1Y,EAAG6Y,GAGhC,GAAY,MAARM,EACF,OA3PU,EA8PZ,GAAIA,EAAM,IACRnZ,EAAEmX,KAAKnX,EAAEsX,WAAa6B,OAgBtB,IARA7wB,EAASmwB,EAAezY,EAAG2X,EAH3BwB,GAAO,KAGsCvB,EAAYuB,IAEzDG,EAAOZ,EAAmB1Y,EAAG8Y,GAMxBprB,EAHL6O,EAAOyD,EAAEsX,QAAUmB,EAAezY,EAAG6X,EAAUyB,GAAOxB,EAAUwB,IAGjD5rB,EAAI6O,EAAOjU,IAAUoF,EAClCsS,EAAEmX,KAAKnX,EAAEsX,WAAatX,EAAEmX,KAAKzpB,IAOrC,SAAS6rB,EAAgCvZ,GAKvC,IAJA,IAAI1X,EACAoF,EAGGsS,EAAEqX,SAAW,GAClBrX,EAAEoX,cACFpX,EAAEqX,UAAY,EAYhB,IAPA/uB,EAAS,KADTA,EAAS0X,EAAE9O,OAAO8O,EAAEoX,YAAc,IACVpX,EAAE9O,OAAO8O,EAAEoX,iBAON,QAHjB,IADApX,EAAE9O,OAAO8O,EAAEoX,YAAc,GACPpX,EAAE9O,OAAO8O,EAAEoX,YAAc,KAInD,OA1SgB,EA+SpB,IAHApX,EAAEoX,aAAe,EAGZ1pB,EAAIpF,EAAQoF,IAAKA,EAClBsS,EAAEmX,KAAKnX,EAAEsX,WAAatX,EAAE9O,OAAO8O,EAAEoX,eAKrC,OAFApX,EAAEqX,SAAW,EApTC,EAwXd,OArTF,SAAgCwB,EAAIC,GAClC,IAAIprB,EAGJ,IAAKA,EAAI,EAAGA,EAAI,IAAKA,EAAKmrB,EAAG7B,MAAMtpB,GAAK,EAMxC,IAJAmrB,EAAG7B,MAAM,GAAK,GACd6B,EAAG7B,MAAM,GAAK,IACd6B,EAAG7B,MAAM,GAAK,IAETtpB,EAAI,EAAGA,EAAI,KAAMA,EAAKmrB,EAAG5B,MAAMvpB,GAAK,IAAMA,EAC/C,IAAKA,EAAI,EAAGA,EAAI,MAAOA,EAAKmrB,EAAG5B,MAAM,GAAKvpB,GAAKA,EAC/C,IAAKA,EAAI,EAAGA,EAAI,IAAKA,EAAKmrB,EAAG5B,MAAM,IAAWvpB,GAAK,IAAMA,EACzD,IAAKA,EAAI,EAAGA,EAAI,MAAOA,EAAKmrB,EAAG5B,MAAM,IAAevpB,GAAK,IAAMA,EAG/D,IAAKA,EAAI,EAAGA,EAAI,IAAKA,EAAKorB,EAAG9B,MAAMtpB,GAAK,EAIxC,IAFAorB,EAAG9B,MAAM,GAAK,GAETtpB,EAAI,EAAGA,EAAI,KAAMA,EAAKorB,EAAG7B,MAAMvpB,GAAKA,EAqR3C8rB,CAAuB/B,EAAQC,GAG/BQ,EAAqBP,EAAaC,EAAa,EAAG,GAClDM,EAAqBL,EAAWC,EAAW,EAAG,GAG9CH,EAAY,IAAM,EAClBC,EAAY,IAAM,IAElBd,EAAOplB,QA5DP,SAAyBR,EAAQimB,GAC/B,IACIsC,EAAeC,EADf1Z,EAAI,IAAIkX,EAAKhmB,EAAQimB,GAGzB,EAAG,CAQD,OANAsC,EAASlB,EAAYvY,GAGbyY,EAAezY,EAAG,EAAG,IAI3B,KAAK,EAEH0Z,EAAMH,EAAgCvZ,GACtC,MACF,KAAK,EAEH0Z,EAAML,EAAwBrZ,EAAGyX,EAAQC,GACzC,MACF,KAAK,EAEHkB,EAAkB5Y,EAAGA,EAAEuX,MAAOvX,EAAEwX,OAChCkC,EAAML,EAAwBrZ,EAAGA,EAAEuX,MAAOvX,EAAEwX,OAC5C,MACF,QACEkC,GApVc,EAuVlB,GAxVY,IAwVRA,EACA,MAAM,IAAIC,MAAM,qBAEZF,GAEV,OAAIzZ,EAAEsX,QAAUtX,EAAEmX,KAAK7uB,OACO,oBAAjB0X,EAAEmX,KAAKyC,MACP5Z,EAAEmX,KAAKyC,MAAM,EAAG5Z,EAAEsX,SAElBtX,EAAEmX,KAAK0C,SAAS,EAAG7Z,EAAEsX,SAG3BtX,EAAEmX,MAoBFL,EAAOplB,QA1XG,GAqhBnB,OAAO,SAASmH,GACd,OAnIF,SAAyBihB,EAAUjD,GAC/B,IAAIkD,EAAa,IAAIC,SAASF,GAC1BG,EAAW,EAEf,SAASC,IACL,IAAIvkB,EAASokB,EAAWI,UAAUF,GAElC,OADAA,GAAY,EACLtkB,EAGX,SAASykB,IACL,IAAIxlB,EAASmlB,EAAWM,UAAUJ,GAElC,OADAA,GAAY,EACLrlB,EAGX,SAAS0lB,EAAO3kB,GACZ4kB,EAAYC,UAAUC,EAAW9kB,GACjC8kB,GAAa,EAGjB,SAASC,EAAO9lB,GACZ2lB,EAAYI,UAAUF,EAAW7lB,GACjC6lB,GAAa,EAoBjB,IAjBA,IAAIG,EAAa,CACbC,UAAWT,IACXU,OAAQV,IACR9xB,OAAQ8xB,IACRlnB,UAAWgnB,IACXa,SAAUb,IACVc,cAAeZ,IACfa,aAAcf,IACdgB,aAAchB,IACdiB,WAAYf,IACZgB,WAAYhB,IACZiB,eAAgBjB,IAChBkB,WAAYlB,IACZmB,WAAYnB,KAGZ7c,EAAgB,EACbrd,KAAKoH,IAAI,EAAGiW,IAAkBqd,EAAW1nB,WAC5CqK,IAEJA,IAOA,IALA,IAAID,EAA2C,GAA7Bpd,KAAKoH,IAAI,EAAGiW,GAC1BC,EAAoC,GAAvBod,EAAW1nB,UAAiBoK,EAEzC7Z,EAAS,GACT+3B,EAAwB,GACnB9tB,EAAI,EAAGA,EAAIktB,EAAW1nB,UAAWxF,IACtC8tB,EAAsBjrB,KAAK,CACvBiD,IAAK4mB,IACL32B,OAAQ22B,IACRqB,WAAYrB,IACZsB,WAAYtB,IACZuB,aAAcvB,MAElB32B,GAAU,GAGd,IA4BIoY,EA5BA+f,EAAW,IAAIppB,WACf,GACA,GAAAgpB,EAAsBlzB,OACtBkzB,EAAsBK,QAAO,SAASC,EAAKC,GAAS,OAAOD,EAAMC,EAAML,WAAa,IAAM,IAE1FM,EAAYJ,EAAS/iB,OACrB0hB,EAAc,IAAIP,SAASgC,GAC3BvB,EAAY,EAsDhB,OApDAC,EAAOE,EAAWE,QAClBR,EAAOM,EAAW1nB,WAClBonB,EAAOhd,GACPgd,EAAO/c,GACP+c,EAAO9c,GAEPge,EAAsBS,SAAQ,SAASC,GACnCxB,EAAOwB,EAAoB1oB,KAC3BknB,EAAOwB,EAAoBP,cAC3BjB,EAAOj3B,GACPi3B,EAAOwB,EAAoBR,YAE3BQ,EAAoBC,UAAY14B,GAChCA,GAAUy4B,EAAoBR,YAChB,GAAM,IAChBj4B,GAAU,EAAKA,EAAS,MAMhC+3B,EAAsBS,SAAQ,SAASC,GACnC,IAAIE,EAAiBtC,EAASF,MAC1BsC,EAAoBz4B,OACpBy4B,EAAoBz4B,OAASy4B,EAAoBT,YAGrD,GAAIS,EAAoBT,YAAcS,EAAoBR,WAAY,CAClE,IAAIW,EAAmB,IAAI7pB,WAAW0pB,EAAoBR,YAC1D7E,EACE,IAAIrkB,WAAW4pB,EAAgB,GAC/BC,QAGFA,EAAmB,IAAI7pB,WAAW4pB,GAGtCR,EAAS12B,IAAIm3B,EAAkBH,EAAoBC,WAGnD,IAAIG,EAAU,GAFd74B,EAASy4B,EAAoBC,UAAYD,EAAoBR,YAG/C,GAAM,IAChBY,EAAU,EAAK74B,EAAS,GAE5Bm4B,EAAS12B,IACL,IAAIsN,WAAW8pB,GAASzjB,OACxBqjB,EAAoBC,UAAYD,EAAoBR,YAGxD7f,EAAOpY,EAAS64B,KAGbN,EAAUpC,MAAM,EAAG/d,GAMrB0gB,CAAgB1jB,EAAQge,KAUjC,SAAuBzkB,EAAMoqB,GAC3B,IAAIC,EAAgB,CAClBC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAuFL,OAAO,SAAejkB,GAEpB,IAAIkkB,EAAO,IAAIvqB,WAAWqG,EAAQ,EAAG,GACjCrF,EAAMpB,EAAKG,KAAKE,UAAUsqB,EAAM,EAAG,GACvC,GAAY,SAARvpB,EACFqF,EAAS2jB,EAAS3jB,QACb,GAAY,SAARrF,EACT,MAAM,IAAImmB,MAAM,6BAElB,OA7FF,SAAqBqD,GACnB,IAAIC,EAAWjxB,OAAOC,OAAO,MAEzBixB,EAAU,CACZvY,WAAYqY,EAASvY,KAAKE,WAC1BS,SAAU4X,EAAS7X,KAAKC,SACxBC,UAAW2X,EAAS7X,KAAKE,UACzB8X,aAAc,SAAsBC,EAAMC,EAAUC,EAAeC,GACjE,IAAIC,EAAS,EACTC,EAAY,EAAIP,EAAQvY,WAAa0Y,EAErCK,EAAetrB,EAAK6c,EAAEsD,eAAeyK,EAAUI,GAC/CO,EAAY,EAiEhB,OAhEAD,EAAazB,SAAQ,SAAU5b,GAI7B,IAAoB,IAAhBA,EAAmB,CACrB,IAAIud,EAAWX,EAAS5c,GACxB,IAAKud,EAAU,CACb,IAMI7e,EAAMC,EAAMC,EAAMC,EANlB2e,EAAMzrB,EAAK6c,EAAEQ,YAAYuN,EAAU3c,GACnC8L,EAAO0R,EAAI1R,KACXC,EAAOyR,EAAIzR,KAKf,GAAIA,EAAK9jB,OAAQ,CACfyW,EAAOC,EAAOnf,IACdof,EAAOC,GAAO,IACd,IAAK,IAAIxR,EAAI,EAAGgH,EAAM0X,EAAK9jB,OAAQoF,EAAIgH,EAAKhH,GAAK,EAAG,CAClD,IAAI9D,EAAIwiB,EAAK1e,GACT7D,EAAIuiB,EAAK1e,EAAI,GACb9D,EAAImV,IAAQA,EAAOnV,GACnBC,EAAImV,IAAQA,EAAOnV,GACnBD,EAAIqV,IAAQA,EAAOrV,GACnBC,EAAIqV,IAAQA,EAAOrV,SAGzBkV,EAAOE,EAAOD,EAAOE,EAAO,EAG9B0e,EAAWX,EAAS5c,GAAc,CAChC6V,MAAO7V,EACPyd,aAAcd,EAAShX,KAAKG,OAAO9F,GACnCtB,KAAMA,EACNC,KAAMA,EACNC,KAAMA,EACNC,KAAMA,EACN6e,iBAAkB5R,EAAK7jB,OACvB01B,mBAAoB,SAA4BT,GAG9C,IAFA,IAAIU,EAAY,EACZC,EAAY,GACPxwB,EAAI,EAAGgH,EAAMyX,EAAK7jB,OAAQoF,EAAIgH,EAAKhH,IAAK,CAC/C,IAAIywB,EAAU1B,EAActQ,EAAKze,IACjCwwB,EAAU51B,OAAS,EAAI61B,EACvBD,EAAU,GAAK/R,EAAKze,GACpB,IAAK,IAAIC,EAAI,EAAGA,GAAKwwB,EAASxwB,IAC5BuwB,EAAUvwB,GAAKye,EAAK6R,KAEtBV,EAASlsB,MAAM,KAAM6sB,MAM7BX,EAASlxB,KAAK,KAAMuxB,EAAUJ,EAAQG,GAElCC,EAASE,eACXN,GAAUI,EAASE,aAAeL,GAEhCH,IACFE,GAAUF,EAAgBD,GAG9BM,GAAcP,EAAK3K,YAAYkL,GAAa,MAAS,EAAI,KAEpDH,IAIX,OAAON,EAYAkB,CAAYhsB,EAAKwB,MAAMiF,GAAQ,OAQxCwlB,KAAM,SAAcC,EAAaC,EAAiBC,GAGhD,OAAOA,EAFIF,IACIC,QAQfE,EAAS,CACXC,eAAgB,mEAChBC,aAAc,GACdC,aAAc,MAEZC,EAAY,IAAIltB,EAAMmtB,MAiDtBC,EAAU/yB,OAAOC,OAAO,MAwC5B,SAAS+yB,EAAkBC,EAAM1B,GAa/B,IAZA0B,EAAOnyB,EAAO,GAAImyB,IAIbjpB,MA8IgB2Z,EA9IKsP,EAAKjpB,MAAQyoB,EAAOC,eA+IzC5sB,IACHA,EAA6B,qBAAbzS,SAA2B,GAAKA,SAAS6/B,cAAc,MAEzEptB,EAAOqtB,KAAOxP,EACP7d,EAAOqtB,MAhJdF,EAAK7B,KAAO,GAAK6B,EAAK7B,KAEtB6B,EAAKN,aAAeM,EAAKN,cAAgBF,EAAOE,aAGxB,MAApBM,EAAKG,YAAqB,CAC5B,IAAIC,EAAS,GACb,IAAK,IAAIluB,KAAO8tB,EAAKG,YACnB,GAAIH,EAAKG,YAAYhuB,eAAeD,GAAM,CACxC,IAAIuG,EAAMunB,EAAKG,YAAYjuB,GACR,kBAARuG,IACTA,EAAMmnB,EAAU35B,IAAIwS,GAAK4nB,UAE3BD,EAAOluB,GAAOuG,EAGlBunB,EAAKG,YAAcC,EA2HvB,IAAuB1P,EAxHrB3jB,OAAOuzB,OAAON,GAGd,IAAIL,EAAeH,EAAOG,aACtBD,EAAeM,EAAKN,aACpBa,EAAYP,EAAKjpB,KAAQ,IAAM2oB,EAC/Bc,EAAQV,EAAQS,GACfC,KACHA,EAAQV,EAAQS,GAAY,CAC1BE,WAAY,IAAI/tB,EAAMguB,YACpB,IAAIntB,WAAWmsB,EAAeC,GAC9BA,EACAD,EACAhtB,EAAMiuB,qBACN1gC,OACAA,OACAA,OACAA,EACAyS,EAAMkuB,aACNluB,EAAMkuB,gBAGJH,WAAW1pB,KAAOipB,EAAKjpB,MAI/B8pB,EAAgBb,GAAMc,MAAK,SAAUC,GAE/BA,EAAOC,eACTD,EAAOC,aAAahE,SAAQ,SAAU4B,GAOpC,IANA,IAAIqC,EAAcrC,EAAIqC,YAClBC,EAAatC,EAAIsC,WAEjBC,EAASX,EAAMC,WAAWW,MAGvBD,EAAO5yB,KAAKlF,QAAU63B,EAAa,GAAKxB,EAAeA,GAAc,CAC1E,IAAI2B,EAAc,IAAI9tB,WAAgC,EAArB4tB,EAAO5yB,KAAKlF,QAC7Cg4B,EAAYp7B,IAAIk7B,EAAO5yB,MACvB4yB,EAAO5yB,KAAO8yB,EACdF,EAAOG,QAAU,EAKnB,IADA,IAAIC,EAAOJ,EAAOrQ,MAAQ4O,EACjB90B,EAAI,EAAGA,EAAI80B,EAAc90B,IAKhC,IAJA,IAAI42B,EAAgB52B,EAAI80B,EACpB+B,EAAgBN,EAAOrQ,MAAQ4O,EAAez+B,KAAKygC,MAAMR,EAAaK,GACrEL,EAAaK,EAAQ7B,EACrB90B,EAAIu2B,EAAOrQ,MACPnmB,EAAI,EAAGA,EAAI+0B,EAAc/0B,IAChCw2B,EAAO5yB,KAAKkzB,EAAgB92B,GAAKs2B,EAAYO,EAAgB72B,MAInE61B,EAAMC,WAAWp0B,aAAc,GAIjCiyB,EAASvxB,OAAOuzB,OAAO,CACrBqB,WAAY3B,EACZS,WAAYD,EAAMC,WAClBf,aAAcA,EACdkC,sBA9IqB,EAAI,EA+IzBC,YAAad,EAAOc,YACpBC,kBAAmBf,EAAOe,kBAC1BC,YAAahB,EAAOgB,YACpBC,eAAgBjB,EAAOiB,eACvBC,YAAalB,EAAOkB,YACpBC,cAAenB,EAAOmB,cACtB/b,SAAU4a,EAAO5a,SACjBC,UAAW2a,EAAO3a,UAClB+b,WAAYpB,EAAOoB,WACnBC,YAAarB,EAAOqB,YACpBC,YAAatB,EAAOsB,YACpBC,eAAgBvB,EAAOuB,eACvBC,QAASxB,EAAOwB,cAiCtB,SAAS10B,EAAO20B,EAAOC,GACrB,IAAK,IAAIvwB,KAAOuwB,EACVA,EAAQtwB,eAAeD,KACzBswB,EAAMtwB,GAAOuwB,EAAQvwB,IAGzB,OAAOswB,EAcT,IAAIE,EAA4B/vB,EAAkBI,mBAAmB,CACnEC,KAAM,gBACNC,aAAc,CACZusB,EAnNuB,EAAI,EAqN3B1sB,EA9rHJ,SAAqC6rB,GAEnC,IAAI7e,EAAO6e,EAAS7e,KAChBC,EAAO4e,EAAS5e,KAGhBhV,EAFO4zB,EAAS3e,KAEJF,EACZ9U,EAFO2zB,EAAS1e,KAEJF,EAMZ4iB,EAAO,CACTC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHx0B,KAAM,KACNy0B,GAXO/hC,KAAKgiC,MAAMnjB,EAAO/U,EAAK,GAY9Bm4B,GAXOjiC,KAAKgiC,MAAMljB,EAAO/U,EAAK,GAY9Bm4B,EAXMliC,KAAKoH,IAAI,EAAGpH,KAAKygC,MAAMzgC,KAAKgd,IAAIhd,KAAKqE,IAAIyF,EAAIC,IAAO/J,KAAKmiC,QAY/DC,KAXQziC,IAYR0iC,KAZQ1iC,IAaR2iC,MAAM,IACNC,MAAM,KAiFR,SAASC,EAASnF,IAIlB,SAASoF,EAAWf,EAAMrE,GACxB,IAAuB,IAAnBA,EAASqE,KAAoBA,EAAKp0B,KACpC,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACL,OAAZk0B,EAAKl0B,IACPi1B,EAAWf,EAAKl0B,GAAI6vB,GAP1BoF,CAAWf,EAAMrE,GA+EnB,SAASqF,EAA+Bh5B,EAAGC,EAAGg5B,EAAQC,EAAQC,EAAQC,GACpE,IAAIC,EAAMF,EAASF,EACfK,EAAMF,EAASF,EACfK,EAAWF,EAAMA,EAAMC,EAAMA,EAC7BxvB,EAAIyvB,EAAWjjC,KAAKqE,IAAI,EAAGrE,KAAKsE,IAAI,IAAKoF,EAAIi5B,GAAUI,GAAOp5B,EAAIi5B,GAAUI,GAAOC,IAAa,EAChGn5B,EAAKJ,GAAKi5B,EAASnvB,EAAIuvB,GACvBh5B,EAAKJ,GAAKi5B,EAASpvB,EAAIwvB,GAC3B,OAAOl5B,EAAKA,EAAKC,EAAKA,EAGxB,MAAO,CACLm5B,eAlKF,SAAwBC,EAAIC,EAAI5U,EAAIC,IAcpC,SAAS4U,EAAcC,EAASC,GAE9B,IAAInB,EAAOkB,EAAQlB,KACfC,EAAOiB,EAAQjB,KACfC,EAAOgB,EAAQhB,KACfC,EAAOe,EAAQf,KACfR,EAAKuB,EAAQvB,GACbE,EAAKqB,EAAQrB,GACbG,EAAOmB,EAAKnB,OAAQmB,EAAKnB,KAAOA,GAChCC,EAAOkB,EAAKlB,OAAQkB,EAAKlB,KAAOA,GAChCC,EAAOiB,EAAKjB,OAAQiB,EAAKjB,KAAOA,GAChCC,EAAOgB,EAAKhB,OAAQgB,EAAKhB,KAAOA,GAGpC,IAAIiB,EAAcD,EAAKj2B,KACvB,GAAIk2B,EAEF,GAAIA,EAAYzB,KAAOA,GAAMyB,EAAYvB,KAAOA,EAAI,CAClD,KAAOuB,EAAYC,MAAQD,EAAcA,EAAYC,KACrDD,EAAYC,KAAOH,OAInBC,EAAKj2B,KAAO,KACZ+1B,EAAcG,EAAaD,GAC3BF,EAAcC,EAASC,OAItB,CAEH,IAAIG,GAAYzB,EAAKsB,EAAKtB,GAAK,EAAI,IAAMF,EAAKwB,EAAKxB,GAAK,EAAI,GAGxDwB,EAAKG,GACPL,EAAcC,EAASC,EAAKG,IAI5BH,EAAKG,GAAY,CACf/B,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHx0B,KAAMg2B,EACNvB,GAAIwB,EAAKxB,GAAKwB,EAAKrB,EAAI,GAAKwB,EAAW,EAAI,GAAK,GAChDzB,GAAIsB,EAAKtB,GAAKsB,EAAKrB,EAAI,GAAKwB,EAAW,GAAK,EAAI,GAChDxB,EAAGqB,EAAKrB,EAAI,EACZE,KAAMA,EACNC,KAAMA,EACNC,KAAMA,EACNC,KAAMA,IAtDZc,CARc,CACZF,GAAIA,EAAIC,GAAIA,EAAI5U,GAAIA,EAAIC,GAAIA,EAAIsT,IAHxBoB,EAAK3U,GAAM,EAGqByT,IAFhCmB,EAAK3U,GAAM,EAGnB2T,KAAMpiC,KAAKsE,IAAI6+B,EAAI3U,GACnB6T,KAAMriC,KAAKsE,IAAI8+B,EAAI3U,GACnB6T,KAAMtiC,KAAKqE,IAAI8+B,EAAI3U,GACnB+T,KAAMviC,KAAKqE,IAAI++B,EAAI3U,GACnBgV,KAAM,MAEe/B,IAwJvBiC,0BAtEF,SAAmCj6B,EAAGC,EAAGi6B,GACvC,IAAIC,EAAcD,EACdE,EAAgBD,EAAcA,EA0BlC,OAxBArB,GAAS,SAAee,GAGtB,GACE75B,EAAIm6B,EAAcN,EAAKjB,MAAQ54B,EAAIm6B,EAAcN,EAAKnB,MACtDz4B,EAAIk6B,EAAcN,EAAKhB,MAAQ54B,EAAIk6B,EAAcN,EAAKlB,KAEtD,OAAO,EAIT,IAAK,IAAIiB,EAAUC,EAAKj2B,KAAMg2B,EAASA,EAAUA,EAAQG,KAAM,CAC7D,IAAIM,EAASrB,EAA+Bh5B,EAAGC,EAAG25B,EAAQH,GAAIG,EAAQF,GAAIE,EAAQ9U,GAAI8U,EAAQ7U,IAC1FsV,EAASD,IACXA,EAAgBC,EAChBF,EAAc7jC,KAAKgK,KAAK+5B,QAehC,SAAuBr6B,EAAGC,GACxB,IAAIq6B,GAAS,EAmBb,OAlBAxB,GAAS,SAAUe,GAEjB,GAAIA,EAAKjB,KAAO54B,GAAK65B,EAAKlB,KAAO14B,GAAK45B,EAAKhB,KAAO54B,EAChD,OAAO,EAIT,IAAK,IAAI25B,EAAUC,EAAKj2B,KAAMg2B,EAASA,EAAUA,EAAQG,KAAM,CAC7D,IAAIN,EAAKG,EAAQH,GACbC,EAAKE,EAAQF,GACb5U,EAAK8U,EAAQ9U,GACbC,EAAK6U,EAAQ7U,GACE2U,EAAKz5B,IAAQ8kB,EAAK9kB,GAAQD,GAAK8kB,EAAK2U,IAAOx5B,EAAIy5B,IAAO3U,EAAK2U,GAAMD,IAElFa,GAAUA,OAITA,EA7BFC,CAAcv6B,EAAGC,KACpBk6B,GAAeA,GAEVA,KAl6BX,SAA4BK,EAA6BC,GACvD,IAAIC,EAAqBD,EAAOC,mBAUhC,SAASC,EAAuBlB,EAAIC,EAAI5U,EAAIC,EAAIC,EAAIC,EAAInb,GACtD,IAAI8wB,EAAK,EAAI9wB,EACb,MAAO,CACL9J,EAAG46B,EAAKA,EAAKnB,EAAK,EAAImB,EAAK9wB,EAAIgb,EAAKhb,EAAIA,EAAIkb,EAC5C/kB,EAAG26B,EAAKA,EAAKlB,EAAK,EAAIkB,EAAK9wB,EAAIib,EAAKjb,EAAIA,EAAImb,GAOhD,SAAS4V,EAAmBpB,EAAIC,EAAI5U,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIrb,GAC1D,IAAI8wB,EAAK,EAAI9wB,EACb,MAAO,CACL9J,EAAG46B,EAAKA,EAAKA,EAAKnB,EAAK,EAAImB,EAAKA,EAAK9wB,EAAIgb,EAAK,EAAI8V,EAAK9wB,EAAIA,EAAIkb,EAAKlb,EAAIA,EAAIA,EAAIob,EAChFjlB,EAAG26B,EAAKA,EAAKA,EAAKlB,EAAK,EAAIkB,EAAKA,EAAK9wB,EAAIib,EAAK,EAAI6V,EAAK9wB,EAAIA,EAAImb,EAAKnb,EAAIA,EAAIA,EAAIqb,GAgIpF,OArHA,SAAqB6O,EAAU8G,GAG7B,IAAIxE,EAAc,IAAI1tB,WAAWkyB,EAAUA,GAGvCC,EAAS/G,EAAS3e,KAAO2e,EAAS7e,KAClC6lB,EAAShH,EAAS1e,KAAO0e,EAAS5e,KAGlC6lB,EAAmB3kC,KAAKqE,IAAIogC,EAAQC,GAAUN,EAG9CQ,GAAsBH,EAA4B,EAAnBE,GAAwBH,EACvDK,GAAsBH,EAA4B,EAAnBC,GAAwBH,EAEvDM,EAAkBpH,EAAS7e,KAAO8lB,EAAmBC,EACrDG,EAAkBrH,EAAS5e,KAAO6lB,EAAmBE,EACrDG,EAAkBtH,EAAS3e,KAAO4lB,EAAmBC,EACrDK,EAAkBvH,EAAS1e,KAAO2lB,EAAmBE,EAUzD,GAAInH,EAASG,iBAAkB,CAE7B,IACIqH,EAAQC,EAAQC,EAAOC,EADvBC,EAAoBpB,EAA4BxG,GAEpDA,EAASI,oBAAmB,SAAU73B,EAAMk9B,EAAIC,EAAI5U,EAAIC,EAAIC,EAAIC,GAC9D,OAAQ1oB,GACN,IAAK,IACHm/B,EAAQF,EAAS/B,EACjBkC,EAAQF,EAAS/B,EACjB,MACF,IAAK,IACCD,IAAOiC,GAAShC,IAAOiC,GACzBC,EAAkBpC,eAAekC,EAAOC,EAAQD,EAAQjC,EAAMkC,EAAQjC,GAExE,MACF,IAAK,IAEH,IADA,IAAImC,EAAY,CAAC77B,EAAG07B,EAAOz7B,EAAG07B,GACrB73B,EAAI,EAAGA,EA7EP,GA6EyBA,IAAK,CACrC,IAAIg4B,EAAYnB,EACde,EAAOC,EACPlC,EAAIC,EACJ5U,EAAIC,EACJjhB,EAAI,IAEN83B,EAAkBpC,eAAeqC,EAAU77B,EAAG67B,EAAU57B,EAAG67B,EAAU97B,EAAG87B,EAAU77B,GAClF47B,EAAYC,EAEdJ,EAAQ5W,EACR6W,EAAQ5W,EACR,MAEF,IAAK,IAEH,IADA,IAAIgX,EAAc,CAAC/7B,EAAG07B,EAAOz7B,EAAG07B,GACvBK,EAAM,EAAGA,EA7FT,GA6F6BA,IAAO,CAC3C,IAAIC,EAAcpB,EAChBa,EAAOC,EACPlC,EAAIC,EACJ5U,EAAIC,EACJC,EAAIC,EACJ+W,EAAM,IAERJ,EAAkBpC,eAAeuC,EAAY/7B,EAAG+7B,EAAY97B,EAAGg8B,EAAYj8B,EAAGi8B,EAAYh8B,GAC1F87B,EAAcE,EAEhBP,EAAQ1W,EACR2W,EAAQ1W,EACR,MAEF,IAAK,IACCyW,IAAUF,GAAUG,IAAUF,GAChCG,EAAkBpC,eAAekC,EAAOC,EAAOH,EAAQC,OAQ/D,IAAK,IAAIS,EAAO,EAAGA,EAAOpB,EAASoB,IACjC,IAAK,IAAIC,EAAO,EAAGA,EAAOrB,EAASqB,IAAQ,CACzC,IAAIC,EAAaR,EAAkB3B,0BAnEhCmB,GAAmBE,EAAkBF,IAoEtBc,EAAO,IApEsCpB,EAI5DO,GAAmBE,EAAkBF,IAiEtBc,EAAO,IAjEsCrB,EAkE7DG,GAGEoB,EAAQC,SAASF,GAAc9lC,KAAKgiC,MAAM,KAAO,EAAI8D,EAAanB,GAAoB,IAAOmB,EACjGC,EAAQ/lC,KAAKqE,IAAI,EAAGrE,KAAKsE,IAAI,IAAKyhC,IAClC/F,EAAY6F,EAAOrB,EAAUoB,GAAQG,GAO3C,MAAO,CACL/F,YAAaA,EAEbiG,gBAAiB,CACfnB,EACAC,EACAC,EACAC,MA+CR,SAA6BiB,EAAYC,EAAchC,GAErD,IAAIiC,EAAiBjC,EAAOiC,eAsBxBC,EAAcv6B,OAAOC,OAAO,MAK5Bu6B,EAAQx6B,OAAOC,OAAO,MAgD1B,SAASw6B,EAASC,EAASnJ,GACpBmJ,IAAWA,EAAUJ,GAC1B,IAAItwB,EAAOwwB,EAAME,GACb1wB,EAEEA,EAAK2wB,QACP3wB,EAAK2wB,QAAQp2B,KAAKgtB,GAElBA,EAASvnB,IAGXwwB,EAAME,GAAW,CAACC,QAAS,CAACpJ,IAnDhC,SAAoBqJ,EAAKrJ,IACvB,SAASsJ,IACP,IAAIC,EAAU,SAAUC,GACtB5nC,QAAQG,MAAO,wBAA0BsnC,GAAOA,IAAQN,EAAiB,GAAK,qBAAuBS,GACjGH,IAAQN,IACVM,EAAMN,EACNO,MAGJ,IACE,IAAIG,EAAU,IAAIC,eAClBD,EAAQ/W,KAAK,MAAO2W,GAAK,GACzBI,EAAQE,aAAe,cACvBF,EAAQG,OAAS,WACf,GAAIH,EAAQI,QAAU,IACpBN,EAAQ,IAAInN,MAAMqN,EAAQK,kBAEvB,GAAIL,EAAQI,OAAS,EACxB,IACE,IAAIlK,EAAUkJ,EAAWY,EAAQM,UACjC/J,EAASL,GACT,MAAOhI,GACP4R,EAAQ5R,KAId8R,EAAQO,QAAUT,EAClBE,EAAQQ,OACR,MAAMT,GACND,EAAQC,IAGZF,GAoBEY,CAAWf,GAAS,SAAUxJ,GAC5B,IAAIwK,EAAYlB,EAAME,GAASC,QAC/BH,EAAME,GAAWxJ,EACjBwK,EAAUzL,SAAQ,SAAU0L,GAAM,OAAOA,EAAGzK,UAkClD,SAAS0K,EACP/J,EACAN,EACAsK,GAEA,IAAIzK,EAAOS,EAAIT,UAAoB,IAATA,IAAkBA,EAAO,IACnD,IAAIpnB,EAAO6nB,EAAI7nB,UAAoB,IAATA,IAAkBA,EAAOswB,GACnD,IAAI3H,EAAed,EAAIc,kBAAoC,IAAjBA,IAA0BA,EAAe,IACnF,IAAItB,EAAWQ,EAAIR,cAA4B,IAAbA,IAAsBA,EAAW,GACnE,IAAIC,EAAgBO,EAAIP,mBAAsC,IAAlBA,IAA2BA,EAAgB,GACvF,IAAI8D,EAAavD,EAAIuD,gBAAgC,IAAfA,IAAwBA,EAAa,UAC3E,IAAI0G,EAAWjK,EAAIiK,cAA4B,IAAbA,IAAsBA,EA1GhDjoC,KA2GR,IAAIkoC,EAAYlK,EAAIkK,eAA8B,IAAdA,IAAuBA,EAAY,QACvE,IAAIC,EAAanK,EAAImK,gBAAgC,IAAfA,IAAwBA,EAAa,GAC3E,IAAIC,EAAapK,EAAIoK,gBAAgC,IAAfA,IAAwBA,EAAa,UAC3E,IAAIC,EAAerK,EAAIqK,kBAAoC,IAAjBA,IAA0BA,EAAe,UACnF,IAAIC,EAAUtK,EAAIsK,aAA0B,IAAZA,IAAqBA,EAAU,GAC/D,IAAIC,EAAUvK,EAAIuK,aAA0B,IAAZA,IAAqBA,EAAU,GAC/D,IAAIC,EAAwBxK,EAAIwK,2BAAsD,IAA1BA,IAAmCA,GAAwB,GACvH,IAAIC,EAAoBzK,EAAIyK,uBAA8C,IAAtBA,IAA+BA,EAAoB,MACvG,IAAIlJ,EAAcvB,EAAIuB,iBAAkC,IAAhBA,IAAyBA,EAAc,WAC1D,IAAhByI,IAAyBA,GAAY,GAE1C,IAAIU,EAAYC,IACZhH,EAAU,CAACiH,MAAO,EAAGC,SAAU,EAAGC,OAAQ,EAAGC,IAAK,GAAIC,SAAU,GAGhEzL,EAAK3rB,QAAQ,OAAS,IACxBtS,QAAQC,KAAK,sEACbg+B,EAAOA,EAAK0L,QAAQ,QAAS,MAAMA,QAAQ,MAAO,OAIpDzL,GAAYA,EACZC,GAAiBA,EACjBwK,GAAYA,EACZ1G,EAAaA,GAAc,SAC3B4G,GAAcA,EA7DhB,SAAqBtB,EAAS/H,EAAcpB,GACrCmJ,IAAWA,EAAUJ,GAC1B,IAAI9G,EAAWkH,EAAU,IAAM/H,EAC3Bc,EAAQ8G,EAAY/G,GACpBC,EACFlC,EAASkC,GAETgH,EAASC,GAAS,SAAUxJ,GAC1BuC,EAAQ8G,EAAY/G,KAAc+G,EAAY/G,GAAY,CACxDtC,QAASA,EACT6L,OAAQ,GACRvxB,WAAY,IAEd+lB,EAASkC,MAkDbuJ,CAAYhzB,EAAM2oB,GAAc,SAAUc,GACxC,IAAIvC,EAAUuC,EAAMvC,QAChB+L,EAAc/C,SAAS4B,GACvBoB,EAAY,KACZpI,EAAc,KACdC,EAAoB,KACpBC,EAAc,KACdC,EAAiB,KACjBK,EAAc,KACdH,EAAgB,KAChBgI,EAAe,EACfC,EAAuB,EACvBC,EAAyB,WAAfpB,EACV7iB,EAAW8X,EAAQ9X,SACnBC,EAAY6X,EAAQ7X,UACpBV,EAAauY,EAAQvY,WACzB6c,EAAQkH,SAAWF,IAAQD,EAC3B,IAAIe,EAAcd,IAIde,EAAelM,EAAW1Y,EAIX,WAAfyc,IACFA,GAAchc,EAAWC,GAAaV,GAKxC,IAAI6kB,IADJpI,GAA0B/D,IACOjY,EAAWC,GAAakkB,GAAgB,EACrElI,IAAgBhE,EAAWmM,GAC3BtI,EAAchhC,KAAKsE,IAAI48B,GAAahc,EAAWC,GAAakkB,GAC5DE,GAAqBrkB,EAAWC,GAAa,EAAIkkB,EAAerI,EAAc,EAG9EwI,EAAc1B,EACd2B,EAAc,IAAIC,EAClBC,EAAQ,CAACF,GAkFb,GAjFAzM,EAAQC,aAAaC,EAAMC,EAAUC,GAAe,SAAUM,EAAUJ,EAAQG,GAC9E,IAGImM,EAHAC,EAAO3M,EAAKvP,OAAO8P,GACnBqM,EAAapM,EAASE,aAAeyL,EACrCU,EAAeN,EAAYl8B,MAa/B,GATM,YAAamwB,IACjBA,EAASsM,eAAiBH,GAAQ,KAAKI,KAAKJ,GAC5CnM,EAASwM,QAAUxM,EAAS7e,OAAS6e,EAAS3e,MAAQ2e,EAAS5e,OAAS4e,EAAS1e,MAE9E0e,EAASsM,cAAiBtM,EAASwM,SACtChB,IAIEC,GAAWJ,IAAgBrL,EAASsM,cAAgB1M,EAASwM,EAAaN,EAAc5B,GAAYmC,EAAc,CAEpH,GAAIN,EAAYU,QAAQJ,EAAe,GAAGrM,SAASsM,aACjDJ,EAAW,IAAIF,EACfF,GAAelM,OAGf,IAAK,IAAI9vB,EAAIu8B,EAAcv8B,KAAM,CAE/B,GAAU,IAANA,GAA4B,eAAjBw6B,EAA+B,CAC5C4B,EAAW,IAAIF,EACfF,GAAelM,EACf,MAGG,GAAImM,EAAYU,QAAQ38B,GAAGkwB,SAASsM,aAAc,CAErD,IAAII,GADJR,EAAWH,EAAYY,QAAQ78B,EAAI,IACZ28B,QAAQ,GAAGzgC,EAClC8/B,GAAeY,EACf,IAAK,IAAI38B,EAAIm8B,EAASr8B,MAAOE,KAC3Bm8B,EAASO,QAAQ18B,GAAG/D,GAAK0gC,EAE3B,OAIFR,IACFH,EAAYa,eAAgB,EAC5Bb,EAAcG,EACdD,EAAMt5B,KAAKo5B,GACXR,EAAerB,GAInB,IAAI2C,EAAMd,EAAYU,QAAQV,EAAYl8B,OAC1Cg9B,EAAI7M,SAAWA,EACf6M,EAAI7gC,EAAI4zB,EAASkM,EACjBe,EAAI1a,MAAQia,EACZS,EAAI9M,UAAYA,EAGH,OAAToM,IACFJ,EAAc,IAAIC,EAClBC,EAAMt5B,KAAKo5B,GACXD,IAAgBlM,EAASwM,EAAc1M,EAAgBD,GAAa2K,MAKxE6B,EAAM5N,SAAQ,SAAUxtB,GACtB,IAAK,IAAIf,EAAIe,EAAKhB,MAAOC,KAAM,CAC7B,IAAImwB,EAAMpvB,EAAK47B,QAAQ38B,GACnBkwB,EAAWC,EAAID,SACfh0B,EAAIi0B,EAAIj0B,EACRmmB,EAAQ8N,EAAI9N,MAChB,IAAK6N,EAASsM,aAKZ,OAJAz7B,EAAKshB,MAAQnmB,EAAImmB,OACbthB,EAAKshB,MAAQoZ,IACfA,EAAe16B,EAAKshB,aAOvB8X,EAAa,CAEhB,IAAI6C,EAAgB,EAChBC,EAAgB,EAcpB,GAbIxC,IACqB,kBAAZA,EACTuC,GAAiBvC,EAES,kBAAZA,IACduC,GAAiBvB,GACH,SAAZhB,EAAqB,EACT,WAAZA,EAAuB,GACX,UAAZA,EAAsB,EACtByC,EAAazC,MAIfC,EACF,GAAuB,kBAAZA,EACTuC,GAAiBvC,OAEd,GAAuB,kBAAZA,EAAsB,CACpC,IAAI7H,EAASsJ,EAAMvhC,OAAS84B,EAC5BuJ,EAA4B,QAAZvC,EAAoB,EACtB,iBAAZA,GAA8B/G,EAClB,WAAZ+G,EAAuB7H,EAAS,EACpB,WAAZ6H,EAAuB7H,EACX,oBAAZ6H,EAAgC7H,EAASiJ,EAAcnkB,EAAYkkB,EACnEqB,EAAaxC,GAAW7H,EAM9BO,EAAc,IAAIvzB,aAAoC,EAAvB67B,GAC/BrI,EAAoB,IAAIxzB,aAAa67B,GACrC9H,EAAc,CAnSVzhC,SAmSqB,KAAM,KAC/BshC,EAAgB,GAChB,IAAI0J,EAAcxJ,EACdgH,IACFpH,EAAiB,IAAI1zB,aAA2B,EAAd6vB,EAAK90B,SAErC82B,IACF4B,EAAc,IAAIxuB,WAAkC,EAAvB42B,IAE/B,IAGI0B,EACAC,EAJAC,GAAuB,EACvBC,IAAiB,EACjBC,IAAkB,EAGtBrB,EAAM5N,SAAQ,SAAUxtB,GACtB,IAAI08B,EAAiB18B,EAAKhB,MACtByB,EAAYT,EAAKshB,MAGrB,GAAIob,EAAiB,EAAG,CAEtB,IAAIzB,EAAc,EACd0B,EAAgB,EACpB,GAAkB,WAAdrD,EACF2B,GAAeP,EAAej6B,GAAa,OACtC,GAAkB,UAAd64B,EACT2B,EAAcP,EAAej6B,OACxB,GAAkB,YAAd64B,GAA2Bt5B,EAAK+7B,cAAe,CAIxD,IADA,IAAIa,EAAkB,EACb39B,EAAIy9B,EAAgBz9B,KAC3B,IAAKe,EAAK47B,QAAQ38B,GAAGkwB,SAASsM,aAAc,CAC1C,KAAOx8B,KACAe,EAAK47B,QAAQ38B,GAAGkwB,SAGjBnvB,EAAK47B,QAAQ38B,GAAGkwB,SAASsM,cAC3BmB,IAGJ,MAGJD,GAAiBjC,EAAej6B,GAAam8B,EAG/C,IAAK,IAAIzF,EAAM,EAAGA,EAAMuF,EAAgBvF,IAAO,CAC7C,IAAI0F,EAAY78B,EAAK47B,QAAQzE,GACzBhI,EAAW0N,EAAU1N,SAYzB,GATI8L,IAAe4B,EAAU1hC,GAAK8/B,GAGZ,IAAlB0B,GAAuBxN,EAASsM,eAClCR,GAAe0B,EACfE,EAAUvb,OAASqb,GAIjB/C,EAAuB,CACzB,IAAI1K,EAAY2N,EAAU3N,UAQ1B,IAPAsD,EAA2B,EAAZtD,GAAiB2N,EAAU1hC,EAAI8gC,EAC9CzJ,EAA2B,EAAZtD,EAAgB,GAAK2N,EAAU1hC,EAAI0hC,EAAUvb,MAAQ2a,EACpEzJ,EAA2B,EAAZtD,EAAgB,GAAKkN,EAAcpB,EAAoBkB,EAK/DhN,EAAYsN,GAAgB,GACjChK,EAAqC,GAArBgK,GAAgB,IAAUhK,EAA+B,EAAhBgK,GAAoB,GAC7EhK,EAAqC,GAArBgK,GAAgB,GAAS,GAAKhK,EAA+B,EAAhBgK,GAAoB,GACjFhK,EAAqC,GAArBgK,GAAgB,GAAS,GAAKhK,EAA+B,EAAhBgK,GAAoB,GACjFA,KAEFA,GAAgBtN,EAIlB,GAAIyB,EAEF,IADA,IAAImM,EAAcD,EAAU3N,UACtB4N,EAAcL,IAClBA,KACI9L,EAAYhuB,eAAe85B,MAC7BH,EAAe3L,EAAY8L,KAMjC,IAAKtN,EAASsM,eAAiBtM,EAASwM,QAAS,CAC/C,IAAIoB,EAAMR,KAGNS,EAAiBhM,EAAMsJ,OAAOnL,EAAS1H,OAC3C,IAAKuV,EAAgB,CACnB,IAAIC,EAAWlD,IACXmD,EAAetF,EAAazI,EAAUe,GAC1C6C,EAAQoH,IAAIxL,EAAKvP,OAAOyd,EAAU3N,YAAc6K,IAAQkD,EAGxDC,EAAaxL,WAAaV,EAAMjoB,aAG3B0xB,IAAaA,EAAY,IAC9BA,EAAU34B,KAAKo7B,GAGfF,EAAiBhM,EAAMsJ,OAAOnL,EAAS1H,OAAS,CAC9CiK,WAAYwL,EAAaxL,WACzBvC,SAAUA,EACVuI,gBAAiBwF,EAAaxF,iBAKlC,IAAIyF,EAASH,EAAetF,gBACxBl5B,EAAc,EAANu+B,EACRnI,EAAKvC,EAAY7zB,GAASq+B,EAAU1hC,EAAIgiC,EAAO,GAAKrC,EAAemB,EACnEpH,EAAKxC,EAAY7zB,EAAQ,GAAK49B,EAAce,EAAO,GAAKrC,EAAeoB,EACvEjc,EAAKoS,EAAY7zB,EAAQ,GAAKq+B,EAAU1hC,EAAIgiC,EAAO,GAAKrC,EAAemB,EACvE/b,EAAKmS,EAAY7zB,EAAQ,GAAK49B,EAAce,EAAO,GAAKrC,EAAeoB,EAuB3E,GApBItH,EAAK/B,EAAY,KAAMA,EAAY,GAAK+B,GACxCC,EAAKhC,EAAY,KAAMA,EAAY,GAAKgC,GACxC5U,EAAK4S,EAAY,KAAMA,EAAY,GAAK5S,GACxCC,EAAK2S,EAAY,KAAMA,EAAY,GAAK3S,GAGxC6c,EAAMlD,IAAsB,IAC9BwC,EAAQ,CAAC79B,MAAOu+B,EAAKt+B,IAAKs+B,EAAKK,KAAM,CAva3ChsC,SAuasD,KAAM,MACtDshC,EAAc5wB,KAAKu6B,IAErBA,EAAM59B,MACFm2B,EAAKyH,EAAMe,KAAK,KAAMf,EAAMe,KAAK,GAAKxI,GACtCC,EAAKwH,EAAMe,KAAK,KAAMf,EAAMe,KAAK,GAAKvI,GACtC5U,EAAKoc,EAAMe,KAAK,KAAMf,EAAMe,KAAK,GAAKnd,GACtCC,EAAKmc,EAAMe,KAAK,KAAMf,EAAMe,KAAK,GAAKld,GAG1CoS,EAAkByK,GAAOC,EAAetL,WAGpCf,EAAa,CACf,IAAI0M,EAAgB,EAANN,EACdxK,EAAY8K,GAAWf,GAAgB,GAAK,IAC5C/J,EAAY8K,EAAU,GAAKf,GAAgB,EAAI,IAC/C/J,EAAY8K,EAAU,GAAoB,IAAff,KAOnCF,GAAezJ,KAKnB,IAAK,IAAIxT,MAAM4T,EAAQoH,IACrBpH,EAAQqH,UAAYrH,EAAQoH,IAAIhb,IAElC4T,EAAQmH,OAASH,IAAQc,EAAc9H,EAAQqH,SAC/CrH,EAAQiH,MAAQD,IAAQD,EAExBhL,EAAS,CACPuD,YAAaA,EACbC,kBAAmBA,EACnBE,eAAgBA,EAChBC,YAAaA,EACbF,YAAaA,EACbG,cAAeA,EACf/b,SAAUA,EAAWmkB,EACrBlkB,UAAWA,EAAYkkB,EACvBnI,WAAYA,EACZC,YAAaA,EACbC,YAAaA,EACbC,eAAgB,CAAC4H,EAAcU,EAAMvhC,OAAS84B,GAC9CnB,aAAciJ,EACd1H,QAASA,OAqBf,SAASoJ,EAAa1iB,GACpB,IAAI6jB,EAAQ7jB,EAAI6jB,MAAM,eAClBC,EAAMD,EAAQ1vB,WAAW0vB,EAAM,IAAME,IACzC,OAAOC,MAAMF,GAAO,EAAIA,EAAM,IAGhC,SAASxD,IACP,OAAQr2B,KAAKg6B,aAAeC,MAAM5D,MAIpC,SAASoB,IACPrqC,KAAKiO,KAAO,GAiCd,OA/BAo8B,EAAS79B,UAAY,CACnBgkB,MAAO,EACPya,eAAe,EACf,YACE,OAAOtqC,KAAKmsC,KAAK9sC,KAAKiO,KAAKlF,OAAS,IAEtC+hC,QAAS,SAAiB38B,GACxB,IAAI+8B,EAAMb,EAAS0C,UAGnB,OAFA7B,EAAIj9B,KAAOjO,KAAKiO,KAChBi9B,EAAIvU,MAAQxoB,EACL+8B,GAETF,QAAS,SAAiB78B,GACxB,IAAI6+B,EAAU,IAAI3C,EAElB,OADA2C,EAAQ/+B,KAAOjO,KAAKiO,KAAKg/B,OAAW,EAAJ9+B,GACzB6+B,IAGX3C,EAAS0C,UAAY,CAAC,WAAY,IAAK,QAAS,aAAazQ,QAAO,SAAUzoB,EAAKq5B,EAAM/+B,EAAGg/B,GAS1F,OARA1gC,OAAO2gC,eAAev5B,EAAKq5B,EAAM,CAC/BG,IAAK,WACH,OAAOrtC,KAAKiO,KAAkB,EAAbjO,KAAK22B,MAAYxoB,IAEpCxI,IAAK,SAAawS,GAChBnY,KAAKiO,KAAkB,EAAbjO,KAAK22B,MAAYxoB,GAAKgK,KAG7BtE,IACN,CAAC5F,KAAM,KAAM0oB,MAAO,IAGhB,CACL0R,QAASA,EACTiF,QAxDF,SAAiB5N,EAAM1B,GACrBqK,EAAQ3I,GAAM,SAAUe,GACtBzC,EAAS,CACPxN,MAAOiQ,EAAOuB,eAAe,GAC7BhB,OAAQP,EAAOuB,eAAe,OAE/B,CAACsG,aAAa,KAmDjBpB,SAAUA,KA0sHZpI,KAAM,SAAcgG,EAAQC,EAAoB8B,EAAYhC,EAA6B0I,EAAoBC,GAO3G,OAAOA,EAAoB3G,EANR0G,EACjB1I,EACA,CACEE,mBAAoBA,IAG6B,CACnDgC,eAAgBjC,EAAO3F,oBAKzBoB,EAAkBluB,EAAkBI,mBAAmB,CACzDC,KAAM,cACNC,aAAc,CAACyvB,EAA2B/vB,EAAkBo7B,sBAC5D3O,KAAM,SAAc4O,EAAeC,GACjC,OAAO,SAASjO,GACd,IAAIkO,EAAW,IAAID,EAEnB,OADAD,EAAcrF,QAAQ3I,EAAMkO,EAASC,SAC9BD,IAGXE,iBAAkB,SAA0BrN,GAE1C,IAAIsN,EAAgB,CAClBtN,EAAOc,YAAYjoB,OACnBmnB,EAAOe,kBAAkBloB,QAU3B,OARImnB,EAAOiB,gBACTqM,EAAc/8B,KAAKyvB,EAAOiB,eAAepoB,QAEvCmnB,EAAOC,cACTD,EAAOC,aAAahE,SAAQ,SAAUjc,GACpCstB,EAAc/8B,KAAKyP,EAAEkgB,YAAYrnB,WAG9By0B,KAIPC,EAAqB,GAQrBC,EAAW,IAAI77B,EAAMjS,QAsCrB+tC,EAA+B,SAAUC,GAC3C,SAASD,IACPC,EAAwBrhC,KAAK9M,MAE7BA,KAAKouC,OAAS,EAGdpuC,KAAKquC,eAAiB,IAAIj8B,EAAMk8B,OAChCtuC,KAAKuuC,YAAc,IAAIn8B,EAAMo8B,KAG1BL,IAA0BD,EAAeO,UAAYN,GAC1DD,EAAe1hC,UAAYC,OAAOC,OAAQyhC,GAA2BA,EAAwB3hC,WAC7F0hC,EAAe1hC,UAAUI,YAAcshC,EAEvC,IAAIQ,EAAqB,CAAEN,OAAQ,CAAEO,cAAc,IA+FnD,OA7FAT,EAAe1hC,UAAUoiC,sBAAwB,aAIjDV,EAAe1hC,UAAUqiC,mBAAqB,aAI9CH,EAAmBN,OAAOzoC,IAAM,SAAUyoC,GACxC,IAAIU,EAAS9uC,KAEb,GAAIouC,IAAWpuC,KAAK+uC,QAAS,CAC3B/uC,KAAK+uC,QAAUX,GACO,kBAAXA,GAAuBA,EAAS,KACzCA,EAAS,GAEX,IAAIY,EA9EV,SAA6BZ,GAC3B,IAAIa,EAAOjB,EAAmBI,GAI9B,OAHKa,IACHA,EAAOjB,EAAmBI,GAAU,IAAIh8B,EAAM88B,oBAAoB,EAAG,EAAGd,EAAQA,GAAQe,UAAU,GAAK,GAAK,IAEvGF,EAyEOG,CAAoBhB,GAC7B,CAAC,WAAY,SAAU,MAAM1R,SAAQ,SAAU2S,GAC9CP,EAAOjhC,WAAWwhC,GAAQL,EAAInhC,WAAWwhC,GAAMxsC,WAEjD7C,KAAKsvC,SAASN,EAAIO,WAAW1sC,WAGjC6rC,EAAmBN,OAAOf,IAAM,WAC9B,OAAOrtC,KAAK+uC,SAedb,EAAe1hC,UAAUgjC,aAAe,SAAuBjO,EAAaC,EAAmBO,EAAaH,EAAeH,GAEzHgO,EAAiBzvC,KA9FK,qBA8FsBuhC,EAAa,GACzDkO,EAAiBzvC,KA9FI,oBA8FsBwhC,EAAmB,GAC9DiO,EAAiBzvC,KA9FI,oBA8FsByhC,EAAa,GACxDzhC,KAAK0vC,eAAiB9N,EACtB+N,EAAiB3vC,KAAMwhC,EAAkBz4B,QAGzC,IAAI6mC,EAAS5vC,KAAKquC,eAClBuB,EAAOC,OAAOlqC,KACXo8B,EAAY,GAAKA,EAAY,IAAM,GACnCA,EAAY,GAAKA,EAAY,IAAM,EACpC,GAEF6N,EAAOzqC,OAASyqC,EAAOC,OAAOthC,WAAW0/B,EAAStoC,IAAIo8B,EAAY,GAAIA,EAAY,GAAI,IAGtF,IAAI+N,EAAM9vC,KAAKuuC,YACfuB,EAAI7qC,IAAIU,IAAIo8B,EAAY,GAAIA,EAAY,GAAI,GAC5C+N,EAAI9qC,IAAIW,IAAIo8B,EAAY,GAAIA,EAAY,GAAI,IAgB9CmM,EAAe1hC,UAAUujC,cAAgB,SAAwBC,GAC/D,IAAI9hC,EAAQlO,KAAKmtB,aAhII,qBAgI6Bjf,MAC9C+hC,EAASjwC,KAAK0vC,eAClB,GAAIO,EACF,IAAK,IAAI9hC,EAAI8hC,EAAOlnC,OAAQoF,KAAM,CAChCD,EAAQ+hC,EAAO9hC,GAAGR,IAClB,IAAI2+B,EAAO2D,EAAO9hC,GAAGm+B,KAErB,GAAIA,EAAK,GAAK0D,EAASlgC,GAAKw8B,EAAK,GAAK0D,EAAS1lC,GAAKgiC,EAAK,GAAK0D,EAAS//B,GAAKq8B,EAAK,GAAK0D,EAAS3lC,EAC7F,MAINslC,EAAiB3vC,KAAMkO,IAGzBzB,OAAOyjC,iBAAkBhC,EAAe1hC,UAAWkiC,GAE5CR,EA9G0B,CA+GjC97B,EAAM+7B,yBAWR,SAASsB,EAAiBR,EAAMkB,EAAUC,EAAUC,GAClD,IAAIhB,EAAOJ,EAAK9hB,aAAagjB,GACzBC,EAEEf,GAAQA,EAAK1zB,MAAM5S,SAAWqnC,EAASrnC,QACzCsmC,EAAK1zB,MAAMhW,IAAIyqC,GACff,EAAKtjC,aAAc,IAEnBkjC,EAAKvgC,aAAayhC,EAAU,IAAI/9B,EAAMk+B,yBAAyBF,EAAUC,WAOlEpB,EAAKsB,kBACZtB,EAAKhpC,WAEEopC,GACTJ,EAAKuB,gBAAgBL,GAKzB,SAASR,EAAiBV,EAAM/gC,GAC9B+gC,EAAKA,EAAKp9B,eAAe,iBAAmB,gBAAkB,qBAAuB3D,EAmBvF,SAASuiC,EAA0BC,GACjC,IAAIC,EAAer+B,EAAiBs+B,sBAAsBF,EAAc,CACtEG,WAAY,CAACC,aAAa,GAC1BC,SAAU,CACRC,kBAAmB,CAACzpB,MAAO,MAC3B0pB,sBAAuB,CAAC1pB,MAAO,IAAInV,EAAM/K,SACzC6pC,oBAAqB,CAAC3pB,MAAO,GAC7B4pB,yBAA0B,CAAC5pB,MAAO,GAClC6pB,mBAAoB,CAAC7pB,MAAO,IAAInV,EAAMvD,QAAQ,EAAE,EAAE,EAAE,IACpDwiC,gBAAiB,CAAC9pB,MAAO,IAAInV,EAAMvD,QAAQ,EAAE,EAAE,EAAE,IACjDyiC,cAAe,CAAC/pB,MAAO,IAAInV,EAAMm/B,SACjCC,sBAAuB,CAACjqB,OAAO,GAC/BkqB,gBAAiB,CAAClqB,OAAO,IAE3BmqB,WA7Bc,8ZA8BdC,gBA3BmB,i4BA4BnBC,aAzBgB,g1BA0BhBC,uBAvBqB,kJAwBrBC,eAAgB,SAAwBxT,GACtC,IAAIyT,EAAezT,EAAIyT,aACnBC,EAAiB1T,EAAI0T,eAErBC,EAAa,+BAcjB,OAbIA,EAAWrH,KAAKoH,KAElBA,EAAiBA,EACdzI,QAAQ0I,EAAY,kCACpB1I,QAAQ,eAAgB,qBAEtB0I,EAAWrH,KAAKmH,KACnBA,EAAeA,EAAaxI,QAC1Bj3B,EAAiB4/B,eACjB,mHAIC,CAAEH,aAAcA,EAAcC,eAAgBA,MAsBzD,OAjBArB,EAAawB,aAAc,EAE3B1lC,OAAOyjC,iBAAiBS,EAAc,CACpCyB,qBAAsB,CAAC7qB,OAAO,GAI9B8qB,WAAY,CACVhF,IAAK,WACH,OAAOrtC,KAAKsyC,MAEd3sC,IAAK,gBAMFgrC,EA9GJzC,EAAe1hC,UAAUkC,eAC5Bw/B,EAAe1hC,UAAUkC,aAAe,SAASgE,EAAM6/B,GAErD,OADAvyC,KAAK6N,WAAY6E,GAAS6/B,EACnBvyC,OA8GX,IAAIwyC,EAAkB,IAAIpgC,EAAMqgC,kBAAkB,CAChDplC,MAAO,SACPilC,KAAMlgC,EAAMsgC,WACZP,aAAa,IAGXQ,EAAW,IAAIvgC,EAAMnD,QACrB2jC,EAAY,IAAIxgC,EAAMjS,QACtB0yC,EAAY,IAAIzgC,EAAMjS,QACtB2yC,EAAY,GACZ7hC,EAAS,IAAImB,EAAMjS,QAGnB4yC,EAAc,IAAI3gC,EAAMlF,KAC1B,IAAIkF,EAAM88B,oBAAoB,EAAG,GAAGC,UAAU,GAAK,GAAK,GACxDqD,GAGEQ,EAAiB,CAACpsC,KAAM,aACxBqsC,EAAoB,CAACrsC,KAAM,gBAE3BssC,EAAiB,CACnB,OACA,WACA,gBACA,aACA,WACA,eACA,OACA,YACA,aACA,aACA,UACA,UACA,cACA,gBAGEC,EAAiBD,EAAeE,OAClC,WACA,QACA,cACA,WACA,cACA,uBAWEC,EAAqB,SAAUnmC,GACjC,SAASmmC,IACP,IAAIrmC,EAAW,IAAIkhC,EACnBhhC,EAAKJ,KAAK9M,KAAMgN,EAAU,MAQ1BhN,KAAK69B,KAAO,GAmBZ79B,KAAK4oC,QAAU,EASf5oC,KAAK6oC,QAAU,EAQf7oC,KAAKyW,KAAO,KAOZzW,KAAK89B,SAAW,GAOhB99B,KAAK+9B,cAAgB,EAOrB/9B,KAAK6hC,WAAa,SAOlB7hC,KAAKuoC,SAAWjoC,IAQhBN,KAAK2oC,aAAe,SAMpB3oC,KAAKwoC,UAAY,OAMjBxoC,KAAKyoC,WAAa,EASlBzoC,KAAK0oC,WAAa,SAelB1oC,KAAKiN,SAAW,KAOhBjN,KAAKqN,MAAQ,KAWbrN,KAAK6/B,YAAc,KAQnB7/B,KAAKszC,YAAc,EAQnBtzC,KAAKgwC,SAAW,KAWhBhwC,KAAKuzC,YAhNW,OAwNhBvzC,KAAKwzC,oBAAsB,EAU3BxzC,KAAKo/B,aAAe,KAEpBp/B,KAAKyzC,UAAW,EAGbvmC,IAAOmmC,EAAK5E,UAAYvhC,GAC7BmmC,EAAK7mC,UAAYC,OAAOC,OAAQQ,GAAQA,EAAKV,WAC7C6mC,EAAK7mC,UAAUI,YAAcymC,EAE7B,IAAI3E,EAAqB,CAAEgF,eAAgB,CAAE/E,cAAc,GAAO1hC,SAAU,CAAE0hC,cAAc,GAAO6E,oBAAqB,CAAE7E,cAAc,GAAOgF,oBAAqB,CAAEhF,cAAc,GAAOiF,uBAAwB,CAAEjF,cAAc,IAoPnO,OA5OA0E,EAAK7mC,UAAUqnC,KAAO,SAAe7V,GACnC,IAAI8Q,EAAS9uC,KAETA,KAAK8zC,aACP9zC,KAAK8zC,YAAa,EAGd9zC,KAAK+zC,YACN/zC,KAAKg0C,eAAiBh0C,KAAKg0C,aAAe,KAAKhjC,KAAKgtB,IAErDh+B,KAAK+zC,YAAa,EAClB/zC,KAAK4D,cAAcovC,GAEnBvT,EAAkB,CAChB5B,KAAM79B,KAAK69B,KACXpnB,KAAMzW,KAAKyW,KACXqnB,SAAU99B,KAAK89B,UAAY,GAC3BC,cAAe/9B,KAAK+9B,eAAiB,EACrC8D,WAAY7hC,KAAK6hC,YAAc,SAC/B0G,SAAUvoC,KAAKuoC,SACfC,UAAWxoC,KAAKwoC,UAChBC,WAAYzoC,KAAKyoC,WACjBC,WAAY1oC,KAAK0oC,WACjBC,aAAc3oC,KAAK2oC,aACnBC,QAAS5oC,KAAK4oC,QACdC,QAAS7oC,KAAK6oC,QACdhJ,YAAa7/B,KAAK6/B,YAClBiJ,uBAAuB,EACvB1J,aAAcp/B,KAAKo/B,eAClB,SAAUsU,GACX5E,EAAOiF,YAAa,EAGpBjF,EAAOmF,gBAAkBP,EAGzB5E,EAAO9hC,SAASwiC,aACdkE,EAAenS,YACfmS,EAAelS,kBACfkS,EAAe3R,YACf2R,EAAe9R,cACf8R,EAAejS,aAIjB,IAAIyS,EAASpF,EAAOkF,aAChBE,IACFpF,EAAOkF,aAAe,KACtBlF,EAAOgF,YAAa,EACpBhF,EAAO+E,MAAK,WACVK,EAAOxX,SAAQ,SAAUyX,GAAM,OAAOA,GAAMA,WAIhDrF,EAAOlrC,cAAcqvC,GACjBjV,GACFA,UAaVqV,EAAK7mC,UAAU4nC,eAAiB,WAC9Bp0C,KAAK6zC,OACL7zC,KAAKq0C,qBAUPhB,EAAK7mC,UAAUvG,QAAU,WACvBjG,KAAKgN,SAAS/G,WAUhByoC,EAAmBgF,eAAerG,IAAM,WACtC,OAAOrtC,KAAKi0C,iBAAmB,MAKjCvF,EAAmBzhC,SAASogC,IAAM,WAChC,IAAIiH,EAAkBt0C,KAAKu0C,iBACvB7D,EAAe1wC,KAAKw0C,eAAiBhC,EASzC,OARK8B,GAAmBA,EAAgB5D,eAAiBA,IACvD4D,EAAkBt0C,KAAKu0C,iBAAmB9D,EAA0BC,GAEpEA,EAAajlC,iBAAiB,WAAW,SAASgpC,IAChD/D,EAAaxqC,oBAAoB,UAAWuuC,GAC5CH,EAAgBruC,cAGbquC,GAET5F,EAAmBzhC,SAAStH,IAAM,SAAU+qC,GACtCA,GAAgBA,EAAa0B,sBAC/BpyC,KAAKu0C,iBAAmB7D,EACxB1wC,KAAKw0C,cAAgB9D,EAAaA,cAElC1wC,KAAKw0C,cAAgB9D,GAIzBhC,EAAmB8E,oBAAoBnG,IAAM,WAC3C,OAAOrtC,KAAKgN,SAASohC,QAEvBM,EAAmB8E,oBAAoB7tC,IAAM,SAAUyoC,GACrDpuC,KAAKgN,SAASohC,OAASA,GAIzBM,EAAmBiF,oBAAoBtG,IAAM,WAC3C,OAAOrtC,KAAKiN,SAASynC,oBAEvBhG,EAAmBkF,uBAAuBvG,IAAM,WAC9C,OAAOrtC,KAAKiN,SAAS0nC,uBAGvBtB,EAAK7mC,UAAU6nC,kBAAoB,WACjC,IAAIpnC,EAAWjN,KAAKu0C,iBAChBxD,EAAW9jC,EAAS8jC,SACpB6D,EAAW50C,KAAK0zC,eACpB,GAAIkB,EAAU,CACZ,IAAIzU,EAAayU,EAASzU,WACtB4B,EAAc6S,EAAS7S,YAC3BgP,EAASC,kBAAkBzpB,MAAQ4Y,EACnC4Q,EAASE,sBAAsB1pB,MAAM5hB,IAAIw6B,EAAWW,MAAMtQ,MAAO2P,EAAWW,MAAME,QAClF+P,EAASG,oBAAoB3pB,MAAQqtB,EAASxV,aAC9C2R,EAASI,yBAAyB5pB,MAAQqtB,EAAStT,sBACnDyP,EAASK,mBAAmB7pB,MAAMstB,UAAU9S,GAC5CgP,EAASS,sBAAsBjqB,QAAUqtB,EAASnT,YAElD,IAAIuO,EAAWhwC,KAAKgwC,SACdA,GAAY8E,MAAMC,QAAQ/E,IAAiC,IAApBA,EAASjnC,OAGpDgoC,EAASM,gBAAgB9pB,MAAM5hB,IAC7BhF,KAAKqE,IAAI+8B,EAAY,GAAIiO,EAAS,IAClCrvC,KAAKqE,IAAI+8B,EAAY,GAAIiO,EAAS,IAClCrvC,KAAKsE,IAAI88B,EAAY,GAAIiO,EAAS,IAClCrvC,KAAKsE,IAAI88B,EAAY,GAAIiO,EAAS,KANpCe,EAASM,gBAAgB9pB,MAAMstB,UAAU9S,GAS3C/hC,KAAKgN,SAAS+iC,cAAcgB,EAASM,gBAAgB9pB,OAEvDwpB,EAASU,gBAAgBlqB,QAAUvnB,KAAKyzC,SACxCxmC,EAAS+nC,gBAAkBh1C,KAAKszC,YAChCrmC,EAASgoC,oBAAsBhoC,EAASioC,mBAAqBl1C,KAAKszC,aAAe,EAGjF,IAAIjmC,EAAQrN,KAAKqN,MACJ,MAATA,GAAiBJ,EAASI,OAASJ,EAASI,MAAM8nC,SAAW9nC,IAAUJ,EAASmoC,cAClFnoC,EAASI,MAAM1H,IAAIsH,EAASmoC,aAAe/nC,GAI7C,IAAIgoC,EAASr1C,KAAKuzC,aAhaF,OAiahB,GAAI8B,IAAWpoC,EAASqoC,aAAc,CACpC,IAAIC,EAASxE,EAASO,cAAc/pB,MAEhCilB,EApaU,UAmad6I,EAASA,EAAO9L,QAAQ,YAAa,MACG8L,EAAO7I,MAAM,gCACrD,GAAIA,EAAO,CACT,IAAIgJ,EAAQhJ,EAAM,GACdiJ,EAAQjJ,EAAM,GACdkJ,EAAQlJ,EAAM,GACdmJ,EAAQnJ,EAAM,GAClBoG,EAAUjtC,IAAI,EAAG,EAAG,GAAG8vC,GAAmB,MAAVD,EAAgB,GAAK,EACrD3C,EAAUltC,IAAI,EAAG,EAAG,GAAGgwC,GAAmB,MAAVD,GAAiB,EAAI,EACrD/C,EAASltC,OAAOwL,EAAQ2hC,EAAUgD,MAAM/C,GAAYA,GACpD0C,EAAOM,eAAelD,QAEtB4C,EAAOO,WAET7oC,EAASqoC,aAAeD,IAQ5BhC,EAAK7mC,UAAUoC,QAAU,SAAkBS,EAAWC,GACpD,IAAIslC,EAAW50C,KAAK0zC,eACpB,GAAIkB,EAAU,CACZ,IAAIvI,EAASuI,EAAS7S,YACtBgR,EAAY7iC,YAAYC,iBACtBnQ,KAAKkQ,YACLyiC,EAAShtC,IACP0mC,EAAO,GAAKA,EAAO,GAAI,EAAG,EAAGA,EAAO,GACpC,EAAGA,EAAO,GAAKA,EAAO,GAAI,EAAGA,EAAO,GACpC,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,IAGbyG,EAAU/pC,OAAS,EACnBgqC,EAAYnkC,QAAQS,EAAWyjC,GAC/B,IAAK,IAAI3kC,EAAI,EAAGA,EAAI2kC,EAAU/pC,OAAQoF,IACpC2kC,EAAU3kC,GAAG1O,OAASO,KACtBsP,EAAW0B,KAAK8hC,EAAU3kC,MAKhCklC,EAAK7mC,UAAU/I,KAAO,SAAekO,GACnC,IAAIm9B,EAAS9uC,KAMb,OAJAkN,EAAKV,UAAU/I,KAAKqJ,KAAK9M,KAAM2R,GAC/BwhC,EAAezW,SAAQ,SAAUwQ,GAC/B4B,EAAO5B,GAAQv7B,EAAOu7B,MAEjBltC,MAGTqzC,EAAK7mC,UAAU3J,MAAQ,WACrB,OAAO,IAAI7C,KAAK4M,aAAcnJ,KAAKzD,OAGrCyM,OAAOyjC,iBAAkBmD,EAAK7mC,UAAWkiC,GAElC2E,EAnbgB,CAobvBjhC,EAAMlF,MAIRgmC,EAAexW,SAAQ,SAAUwQ,GAC/B,IAAI6I,EAAa,YAAc7I,EAC/BzgC,OAAO2gC,eAAeiG,EAAK7mC,UAAW0gC,EAAM,CAC1CG,IAAK,WACH,OAAOrtC,KAAK+1C,IAEdpwC,IAAK,SAAa4hB,GACZA,IAAUvnB,KAAK+1C,KACjB/1C,KAAK+1C,GAAcxuB,EACnBvnB,KAAK8zC,YAAa,SAQ1B,IAAIkC,GAAe,EACnBvpC,OAAO2gC,eAAeiG,EAAK7mC,UAAW,SAAU,CAC9C6gC,IAAK,WACH,OAAOrtC,KAAKi2C,oBAEdtwC,IAAK,SAAawS,GAChBnY,KAAKi2C,mBAAqB99B,EACrB69B,IACHp2C,QAAQC,KAAK,gFACbm2C,GAAe,GAEblB,MAAMC,QAAQ58B,IAChBnY,KAAK4oC,QAA4B,MAAfzwB,EAAI,IAAM,GAAY,IACxCnY,KAAK6oC,QAA4B,MAAf1wB,EAAI,IAAM,GAAY,KAExCnY,KAAK4oC,QAAU5oC,KAAK6oC,QAAU,KA8CpC,IAAIqN,EAAc,IAAIC,QAyDlBC,EAAoB,IAAID,QAoC5BhkC,EAAQ+7B,eAAiBA,EACzB/7B,EAAQkhC,KAAOA,EACflhC,EAAQkkC,qBA/rCR,SAA8BvR,GAE1Bv3B,EAAO2xB,EAAQ4F,IA8rCnB3yB,EAAQs+B,0BAA4BA,EACpCt+B,EAAQiwB,0BAA4BA,EACpCjwB,EAAQmkC,gBAzHR,SAAyB5C,EAAgBrpC,EAAGC,GAC1C,IAAIisC,EAAe,KACf5U,EAAc+R,EAAe/R,YAC7B6U,EA+EN,SAA0B9C,GAExB,IAAI8C,EAAcJ,EAAkB/I,IAAIqG,GACxC,IAAK8C,EAAa,CAChB,IAAI9U,EAAiBgS,EAAehS,eAChCC,EAAc+R,EAAe/R,YACjC6U,EAAc,IAAIC,IAClB,IAAK,IAAItoC,EAAI,EAAGA,EAAIuzB,EAAe34B,OAAQoF,GAAK,EAAG,CACjD,IAAIuoC,EAAOhV,EAAevzB,EAAI,GAC1BwoC,EAAYH,EAAYnJ,IAAIqJ,GAC3BC,GACHH,EAAY7wC,IAAI+wC,EAAMC,EAAY,IAEpCA,EAAU3lC,KAAK,CACb3G,EAAGq3B,EAAevzB,GAClB7D,EAAGosC,EACH1V,OAAQW,EACRvD,UAAWjwB,EAAI,IAGbA,EAAI,GAAKuzB,EAAe34B,QAC1B4tC,EAAU3lC,KAAK,CACb3G,EAAGq3B,EAAevzB,EAAI,GACtB7D,EAAGosC,EACH1V,OAAQW,EACRvD,UAAWjwB,EAAI,EAAI,KAM3B,OADAioC,EAAkBzwC,IAAI+tC,EAAgB8C,GAC/BA,EA9GWI,CAAiBlD,GAG/BmD,EAAcv2C,IAalB,OAZAk2C,EAAY9Z,SAAQ,SAAUoa,EAAQJ,GAChC/1C,KAAKi2B,IAAItsB,GAAKosC,EAAO/U,EAAc,IAAMhhC,KAAKi2B,IAAItsB,GAAKusC,EAAclV,EAAc,MACrFkV,EAAcH,MAKlBF,EAAYnJ,IAAIwJ,GAAana,SAAQ,SAAUqa,KACxCR,GAAgB51C,KAAKi2B,IAAIvsB,EAAI0sC,EAAM1sC,GAAK1J,KAAKi2B,IAAIvsB,EAAIksC,EAAalsC,MACrEksC,EAAeQ,MAGZR,GAuGTpkC,EAAQ6kC,kBAzFR,SAA2BtD,EAAgBhmC,EAAOC,GAChD,IAAIspC,EACJ,GAAIvD,EAAgB,CAElB,IAAIwD,EAAahB,EAAY7I,IAAIqG,GACjC,GAAIwD,GAAcA,EAAWxpC,QAAUA,GAASwpC,EAAWvpC,MAAQA,EACjE,OAAOupC,EAAWD,MAGpB,IAAIvV,EAAiBgS,EAAehS,eAChCC,EAAc+R,EAAe/R,YAC7BI,EAAc2R,EAAe3R,YAGjC,GAAIp0B,EAAMD,EAAO,CACf,IAAI6H,EAAI7H,EACRA,EAAQC,EACRA,EAAM4H,EAER7H,EAAQ/M,KAAKqE,IAAI0I,EAAO,GACxBC,EAAMhN,KAAKsE,IAAI0I,EAAK+zB,EAAe34B,OAAS,GAI5C,IADA,IAAIouC,EAAO,IAAIV,IACNtoC,EAAIT,EAAOS,EAAIR,EAAKQ,IAAK,CAChC,IAAIghB,EAAKuS,EAAmB,EAAJvzB,GACpBkhB,EAAKqS,EAAmB,EAAJvzB,EAAQ,GAC5B7D,EAAIo3B,EAAmB,EAAJvzB,EAAQ,GAC3BsU,EAAM00B,EAAK9J,IAAI/iC,GACdmY,GAIHA,EAAInZ,KAAO3I,KAAKqE,IAAIrE,KAAKsE,IAAIwd,EAAInZ,KAAM6lB,GAAK4S,EAAY,IACxDtf,EAAIpZ,MAAQ1I,KAAKsE,IAAItE,KAAKqE,IAAIyd,EAAIpZ,MAAOgmB,GAAK0S,EAAY,MAJ1Dtf,EAAM,CAACnZ,KAAM6lB,EAAI9lB,MAAOgmB,EAAI5lB,OAAQa,EAAGd,IAAKc,EAAIq3B,GAChDwV,EAAKxxC,IAAI2E,EAAGmY,IAMhBw0B,EAAQ,GACRE,EAAKza,SAAQ,SAAU4P,GACrB2K,EAAMjmC,KAAKs7B,MAGb4J,EAAYvwC,IAAI+tC,EAAgB,CAAChmC,MAAOA,EAAOC,IAAKA,EAAKspC,MAAOA,IAElE,OAAOA,GA8CT9kC,EAAQilC,YApgCR,SAAqB9Y,EAAKN,GACxB,IAAIvnB,EAAO6nB,EAAI7nB,KACX4gC,EAAa/Y,EAAI+Y,WAIrB5X,EAAkB,CAAEhpB,KAAMA,EAAM2oB,aAHbd,EAAIc,aAGqCvB,KADjDiX,MAAMC,QAAQsC,GAAcA,EAAWliB,KAAK,MAAQ,GAAKkiB,GACMrZ,IAggC5EvxB,OAAO2gC,eAAej7B,EAAS,aAAc,CAAEoV,OAAO,IAl7KS+vB,CAAQnlC,EAASolC,EAAQ,IAAUA,EAAQ,KAAwBA,EAAQ,O,qBCGnI,SAAUplC,GAAW,aAoB5B,SAASqlC,IACP,IAEIjwB,EAFAxjB,EAAQ,EACR0zC,EAAQ,GAERC,EAAY,EACZC,EAAiB,EAkCjB9J,EAAU+J,GAAQ,SAAUz/B,GACzBw/B,GACHE,EAAS,EAAG1/B,MAIZ2/B,EAASF,GAAQ,SAAUG,GACxBJ,GACHE,GAAU,EAAGE,MAIjB,SAASF,EAASG,EAAI7/B,GACpBw/B,IACA,IAAIM,EAAc,EAClB,IACM9/B,IAAQ+/B,GACVC,IAEF,IAAIC,EAAUJ,EAAK,GAAKK,EAAgBlgC,GACpCigC,EACFA,EAAQtrC,KAAKqL,EAAKy/B,GAAQ,SAAUzvC,GAClC8vC,IACAJ,EAAS,EAAG1vC,MACVyvC,GAAQ,SAAUzvC,GACpB8vC,IACAJ,GAAU,EAAG1vC,QAGfpE,EAAQi0C,EACRzwB,EAAQpP,EACRmgC,KAEF,MAAM3iB,GACD5xB,GAAUk0C,GACbJ,GAAU,EAAGliB,IAKnB,SAAS2iB,IACFZ,IACHa,WAAWC,EAAY,GACvBd,EAAY,GAIhB,SAASc,IACP,IAAIC,EAAIhB,EACRC,EAAY,EACZD,EAAQ,GACRgB,EAAE/b,QAAQgc,GAGZ,SAASA,EAAOvE,GACdA,IAGF,SAASkE,EAAgBlgC,GACvB,IAAIigC,EAAUjgC,IAAQwgC,EAAKxgC,IAAuB,kBAARA,IAAqBA,EAAIqoB,KACnE,OAAOmY,EAAKP,IAAYA,EAG1B,SAASR,EAAQzD,GACf,IAAIyE,EAAS,EACb,OAAO,WAEL,IADA,IAAIlZ,EAAO,GAAIvqB,EAAMzD,UAAU3I,OACvBoM,KAAQuqB,EAAMvqB,GAAQzD,UAAWyD,GAEpCyjC,KACHzE,EAAGriC,MAAM9R,KAAM0/B,IAKrB,SAASyY,IACP,MAAM,IAAIU,UAAU,2BAGtB,IAAIF,EAAO,SAAUxwC,GAAK,MAAoB,oBAANA,GAEpC+vC,EAAc,CAChB1X,KAlHF,SAAcsY,EAAWC,GACvB,IAAIC,EAAexB,IA4BnB,OAJAC,EAAMzmC,MAtBN,WACE,IAAIo3B,EAAKrkC,EAAQ,EAAI+0C,EAAYC,EACjC,GAAIJ,EAAKvQ,GACP,IACE,IAAI3H,EAAS2H,EAAG7gB,GACZkZ,IAAWuY,GACbb,IAEF,IAAIc,EAAaZ,EAAgB5X,GAC7BwY,EACFA,EAAWnsC,KAAK2zB,EAAQuY,EAAanL,QAASmL,EAAalB,QAE3DkB,EAAanL,QAAQpN,GAEvB,MAAO+G,GACPwR,EAAalB,OAAOtQ,QAGtBwR,EAAaj1C,EAAQ,EAAI,UAAY,UAAUwjB,MAK/CxjB,GACFu0C,IAEKU,GAsFPnL,QAASA,EACTiK,OAAQA,GAEV,OAAOI,EAST,SAASgB,IACP,IAAIrL,EAASiK,EACTqB,EAAU,IAAIC,SAAQ,SAAUjf,EAAKkf,GACvCxL,EAAU1T,EACV2d,EAASuB,KAEX,MAAO,CACL7Y,KAAM2Y,EAAQ3Y,KAAKvJ,KAAKkiB,GACxBtL,QAASA,EACTiK,OAAQA,GAOZN,EAAgBrK,IAAM+L,EAAsB/L,IAAM,SAASmM,GACzD,IAAIC,EAAc,EACdC,EAAU,GACVn1B,EAAMo1B,IAgBV,OAfqB,IAAjBH,EAAMvwC,OACRsb,EAAIwpB,QAAQ,IAEZyL,EAAM5c,SAAQ,SAAUgd,EAAMvrC,GAC5B,IAAIwrC,EAAeF,IACnBE,EAAa9L,QAAQ6L,GACrBC,EAAanZ,MAAK,SAAUrG,GAC1Bof,IACAC,EAAQrrC,GAAKgsB,EACTof,IAAgBD,EAAMvwC,QACxBsb,EAAIwpB,QAAQ2L,KAEbn1B,EAAIyzB,WAGJzzB,GAOT,IAAIo1B,EAAqC,oBAAZL,QAAyBF,EAAwB1B,EAM9E,SAASoC,IACP,IAAIC,EAAUptC,OAAOC,OAAO,MAqF5B,SAASotC,EAAUpnC,EAAMiW,GACvB,IAAI8X,OAAS,EACb7tB,KAAKmnC,aAAe,SAAUlX,GAAK,OAAOpC,EAASoC,GACnD,IAAIwE,EAAM2S,IAAIC,gBACZ,IAAIC,KACF,CAAE,OAAUxnC,EAAK62B,QAAQ,MAAO,IAAO,0BAA4B5gB,EAAM,OACzE,CAAC/hB,KAAM,4BAGX,IACEuzC,cAAc9S,GACd,MAAMG,GACN5nC,QAAQG,MAAMynC,GAIhB,OAFAwS,IAAII,gBAAgB/S,UACbz0B,KAAKmnC,aACLtZ,EAIT7tB,KAAKnH,iBAAiB,WAAW,SAAUkqB,GACzC,IAAI2I,EAAM3I,EAAE1nB,KACRosC,EAAY/b,EAAI+b,UAChBC,EAAShc,EAAIgc,OACbrsC,EAAOqwB,EAAIrwB,KACf,IAEiB,mBAAXqsC,GA7GR,SAASC,EAAejc,EAAKN,GAC3B,IAAI3gB,EAAKihB,EAAIjhB,GACT3K,EAAO4rB,EAAI5rB,KACXC,EAAe2rB,EAAI3rB,kBAAoC,IAAjBA,IAA0BA,EAAe,IACnF,IAAImsB,EAAOR,EAAIQ,UAAoB,IAATA,IAAkBA,EAAO,cACnD,IAAIgP,EAAmBxP,EAAIwP,iBAG3B,QAHuE,IAArBA,IAA8BA,EAAmB,OAG/F+L,EAAQx8B,GAEZ,IAEE1K,EAAeA,EAAaiL,KAAI,SAAU48B,GAOxC,OANIA,GAAOA,EAAIC,iBACbF,EAAeC,GAAK,SAAUE,GAC5B,GAAIA,aAAqBtgB,MAAS,MAAMsgB,KAE1CF,EAAMX,EAAQW,EAAIn9B,IAAIkK,OAEjBizB,KAIT1b,EAAOgb,EAAW,IAAMpnC,EAAO,SAAWosB,GACtCgP,IACFA,EAAmBgM,EAAW,IAAMpnC,EAAO,qBAAuBo7B,IAIpE,IAAIvmB,EAAQ,KACQ,oBAATuX,EACTvX,EAAQuX,EAAKhtB,WAAM,EAAQa,GAE3B/S,QAAQG,MAAM,mDAEhB85C,EAAQx8B,GAAM,CACZA,GAAIA,EACJkK,MAAOA,EACPumB,iBAAkBA,GAEpB9P,EAASzW,GACT,MAAMigB,GACAA,GAAOA,EAAImT,OACf/6C,QAAQG,MAAMynC,GAEhBxJ,EAASwJ,IAiEP+S,CAAetsC,GAAM,SAAUwyB,GACzBA,aAAkBrG,MACpBwgB,YAAY,CACVP,UAAWA,EACXQ,SAAS,EACT96C,MAAO0gC,EAAOqa,UAGhBF,YAAY,CACVP,UAAWA,EACXQ,SAAS,EACTpa,OAAQ,CAACsa,WAA8B,oBAAXta,QAMrB,eAAX6Z,GA7ER,SAAoBhc,EAAKN,GACvB,IAAIgd,EAEA39B,EAAKihB,EAAIjhB,GACTqiB,EAAOpB,EAAIoB,KACVma,EAAQx8B,IAAoC,oBAAtBw8B,EAAQx8B,GAAIkK,OACrCyW,EAAS,IAAI5D,MAAO,iBAAmB/c,EAAK,wDAE9C,IACE,IAAIojB,GAAUua,EAAQnB,EAAQx8B,IAAKkK,MAAMzV,MAAMkpC,EAAOtb,GAClDe,GAAiC,oBAAhBA,EAAOD,KAC1BC,EAAOD,KAAKya,GAAc,SAAU5B,GAAO,OAAOrb,EAASqb,aAAejf,MAAQif,EAAM,IAAIjf,MAAM,GAAKif,OAEvG4B,EAAaxa,GAEf,MAAM+G,GACNxJ,EAASwJ,GAEX,SAASyT,EAAaxa,GACpB,IACE,IAAI/f,EAAKm5B,EAAQx8B,GAAIywB,kBAAoB+L,EAAQx8B,GAAIywB,iBAAiBrN,GACjE/f,GAAOo0B,MAAMC,QAAQr0B,IAAQA,EAAG3X,SACnC2X,OAAK/gB,GAEPq+B,EAASyC,EAAQ/f,GACjB,MAAM8mB,GACN5nC,QAAQG,MAAMynC,GACdxJ,EAASwJ,KAmDT0T,CAAWjtC,GAAM,SAAUwyB,EAAQsN,GAC7BtN,aAAkBrG,MACpBwgB,YAAY,CACVP,UAAWA,EACXQ,SAAS,EACT96C,MAAO0gC,EAAOqa,UAGhBF,YAAY,CACVP,UAAWA,EACXQ,SAAS,EACTpa,OAAQA,GACPsN,QAAiBpuC,MAI1B,MAAM6nC,GACNoT,YAAY,CACVP,UAAWA,EACXQ,SAAS,EACT96C,MAAOynC,EAAInX,YA8CnB,IAAI8qB,EAAkB,WACpB,IAAIC,GAAY,EAIhB,GAAsB,qBAAXjwC,QAAqD,qBAApBA,OAAOrL,SACjD,IAGe,IAAIu7C,OACfrB,IAAIC,gBACF,IAAIC,KAAK,CAAC,IAAK,CAAEtzC,KAAM,6BAGpB00C,YACPF,GAAY,EACZ,MAAO5T,GACP5nC,QAAQ+d,IAAK,sGAAyG6pB,EAAIsT,QAAW,KAMzI,OADAK,EAAkB,WAAc,OAAOC,GAChCA,GAGLG,EAAkB,EAClBC,EAAa,EACbC,GAAqB,EACrBC,EAAUjvC,OAAOC,OAAO,MACxBivC,EAAelvC,OAAOC,OAAO,MAoCjC,SAAS+F,EAAmBmpC,GAC1B,KAAMA,GAAmC,oBAAjBA,EAAQ9c,QAAyB2c,EACvD,MAAM,IAAIrhB,MAAM,oCAElB,IAAIznB,EAAeipC,EAAQjpC,aACvBmsB,EAAO8c,EAAQ9c,KACfgP,EAAmB8N,EAAQ9N,iBAC3B+N,EAAWD,EAAQC,SAEvB,IAAKV,IACH,OA/GJ,SAAgCS,GAC9B,IAAIE,EAAa,SAAbA,IAEF,IADA,IAAIpc,EAAO,GAAIvqB,EAAMzD,UAAU3I,OACvBoM,KAAQuqB,EAAMvqB,GAAQzD,UAAWyD,GAEzC,OAAO2mC,EAAWC,iBAAiBvb,MAAK,SAAUwb,GAChD,GAA0B,oBAAfA,EACT,OAAOA,EAAWlqC,WAAM,EAAQ4tB,GAEhC,MAAM,IAAItF,MAAM,uFAuBtB,OAnBA0hB,EAAWC,eAAiB,WAE1B,IAAIppC,EAAeipC,EAAQjpC,aACvBmsB,EAAO8c,EAAQ9c,KAGnBnsB,EAAemiC,MAAMC,QAAQpiC,GAAgBA,EAAaiL,KAAI,SAAU48B,GAAO,OAAOA,GAAOA,EAAIuB,eAAiBvB,EAAIuB,iBAAmBvB,KACrI,GAGJ,IAAIyB,EAAexC,EAAgBtM,IAAIx6B,GAAc6tB,MAAK,SAAU0b,GAClE,OAAOpd,EAAKhtB,MAAM,KAAMoqC,MAM1B,OAFAJ,EAAWC,eAAiB,WAAc,OAAOE,GAE1CA,GAEFH,EA+EEK,CAAuBP,GAGhB,MAAZC,IACFA,EAAW,YAEb,IAAIx+B,EAAK,kBAAoBk+B,EACzB7oC,EAAOkpC,EAAQlpC,MAAQ2K,EACvB++B,EAAuB,KAoB3B,SAASN,IAEP,IADA,IAAIpc,EAAO,GAAIvqB,EAAMzD,UAAU3I,OACvBoM,KAAQuqB,EAAMvqB,GAAQzD,UAAWyD,GAQzC,OALKinC,IACHA,EAAuBC,EAAWR,EAAS,iBAAkBC,EAAWQ,mBAInEF,EAAqB5b,MAAK,SAAUlC,GAGzC,GAFiBA,EAAIyc,WAGnB,OAAOsB,EAAWR,EAAS,aAAc,CAACx+B,GAAIA,EAAIqiB,KAAMA,IAExD,MAAM,IAAItF,MAAM,sFAYtB,OA9CAznB,EAAeA,GAAgBA,EAAaiL,KAAI,SAAU48B,GAexD,MAbmB,oBAARA,GAAuBA,EAAI8B,mBACpCb,GAAqB,EACrBjB,EAAM/nC,EAAmB,CACvBopC,SAAUA,EACVnpC,KAAO,IAAMA,EAAO,0BAA6B8nC,EAAI9nC,KACrDosB,KAAO,wBAA2Byd,EAAkB/B,GAAQ,SAE9DiB,GAAqB,GAGnBjB,GAAOA,EAAI8B,mBACb9B,EAAMA,EAAI8B,kBAEL9B,KAuBTsB,EAAWQ,iBAAmB,CAC5B7B,gBAAgB,EAChBp9B,GAAIA,EACJ3K,KAAMA,EACNC,aAAcA,EACdmsB,KAAMyd,EAAkBzd,GACxBgP,iBAAkBA,GAAoByO,EAAkBzO,IAEnDgO,EAOT,SAASS,EAAkBpI,GACzB,IAAIxrB,EAAMwrB,EAAGprB,WAKb,OAHK,YAAY6hB,KAAKjiB,IAAQ,YAAYiiB,KAAKjiB,KAC7CA,EAAM,YAAcA,GAEfA,EAqCT,SAAS0zB,EAAWR,EAAUvB,EAAQrsC,GACpC,IAAI2/B,EAAW6L,IACXY,IAAcmB,EAiBlB,OAhBAG,EAAatB,GAAa,SAAUtS,GAC9BA,EAAS8S,QACXjN,EAASC,QAAQ9F,EAAStH,QAE1BmN,EAASkK,OAAO,IAAI1d,MAAO,mBAAqBkgB,EAAS,UAAavS,EAAShoC,SAGnF47C,EAAaa,SACTb,EAAaztC,MAAQ,KACvBtO,QAAQC,KAAK,yEA7CjB,SAAmBg8C,GACjB,IAAIY,EAASf,EAAQG,GACrB,IAAKY,EAAQ,CAEX,IAAIC,EAAYH,EAAkB3C,IAGlC6C,EAASf,EAAQG,GAAY,IAAIR,OAC/BrB,IAAIC,gBACF,IAAIC,KACF,CAAE,gCAAmC2B,EAAStS,QAAQ,MAAO,IAAO,aAAemT,EAAY,OAC/F,CAAC91C,KAAM,8BAMN+1C,UAAY,SAAUhnB,GAC3B,IAAIoS,EAAWpS,EAAE1nB,KACb2uC,EAAQ7U,EAASsS,UACjBrc,EAAW2d,EAAaiB,GAC5B,IAAK5e,EACH,MAAM,IAAI5D,MAAM,gEAEXuhB,EAAaiB,GACpBjB,EAAaztC,QACb8vB,EAAS+J,IAGb,OAAO0U,EAkBPI,CAAUhB,GAAUjB,YAAY,CAC9BP,UAAWA,EACXC,OAAQA,EACRrsC,KAAMA,IAED2/B,EA1KT+N,EAAaa,OAAS,EAkLtB,IAAI/O,EAAuBh7B,EAAmB,CAC5CC,KAAM,WACNC,aAAc,CAAC8mC,GACf3a,KAAM,SAAS6O,GACb,OAAOA,KAIXx7B,EAAQw7B,SAAW8L,EACnBtnC,EAAQs7B,qBAAuBA,EAC/Bt7B,EAAQM,mBAAqBA,EAC7BN,EAAQoqC,kBAAoBA,EAE5B9vC,OAAO2gC,eAAej7B,EAAS,aAAc,CAAEoV,OAAO,IAjnBS+vB,CAAQnlC,I,qBCGhE,SAAUA,EAASC,GAAS,aAMnC,IAAI8/B,EAAiB,+BASrB,SAAS4K,EAAsBnrC,GAM7B,OAAOA,EAAO43B,QALA,oCACd,SAAiBiD,EAAOuQ,GACtB,IAAIxR,EAAQn5B,EAAM4qC,YAAYD,GAC9B,OAAOxR,EAAQuR,EAAqBvR,GAASiB,KAMjD,IAAIj/B,EAASd,OAAOc,QAAU,WAI5B,IAHA,IAAI0vC,EAAcvrC,UAEdxR,EAASwR,UAAU,GACdvD,EAAI,EAAGgH,EAAMzD,UAAU3I,OAAQoF,EAAIgH,EAAKhH,IAAK,CACpD,IAAIwD,EAASsrC,EAAY9uC,GACzB,GAAIwD,EACF,IAAK,IAAIu7B,KAAQv7B,EACXA,EAAOE,eAAeq7B,KACxBhtC,EAAOgtC,GAAQv7B,EAAOu7B,IAK9B,OAAOhtC,GAILg9C,EAAQrQ,KAAK5D,MACbkU,EAAQ,IAAIhH,QAyDhB,SAASvF,EAAsBF,EAAckL,GAI3C,IAAIwB,EAsPN,SAAwBxB,GACtB,OAAOyB,KAAKC,UAAU1B,EAAS2B,GAvPbC,CAAe5B,GAC7B6B,EAASN,EAAM9P,IAAIqD,GAKvB,GAJK+M,IACHA,EAAShxC,OAAOC,OAAO,MACvBywC,EAAMx3C,IAAI+qC,EAAc+M,IAEtBA,EAAOL,GACT,OAAOK,EAAOL,GAAav6C,QAO7B,IAGI66C,EAAqBC,EAHrBtgC,EAkPN,SAA6B+/B,GAC3B,IAAI//B,EAAKugC,EAAmBvQ,IAAI+P,GAIhC,OAHU,MAAN//B,GACFugC,EAAmBj4C,IAAIy3C,EAAc//B,IAAOwgC,GAEvCxgC,EAvPEygC,CAAoBV,GACzBW,EAA4B,kBAAoB1gC,EAChD2gC,EAA2B,mBAAqB3gC,EAKpD,SAAS4gC,EAAgBC,GACvBxN,EAAauN,gBAAgBnxC,KAAK9M,KAAMk+C,GAGxC,IAAI5f,EAAMt+B,KAAK+9C,KAA+B/9C,KAAK+9C,GAA6B,CAACI,OAAQ,GAAIC,SAAU,KACnGD,EAAS7f,EAAI6f,OACbC,EAAW9f,EAAI8f,SACnB,GAAID,EAAOxsC,SAAWusC,EAAWnM,cAAgBqM,EAASzsC,SAAWusC,EAAWlM,eAAgB,CAC9F,IAAIqM,EA2HV,SAAwB/f,EAAKsd,EAASv+B,GACpC,IAAI00B,EAAezT,EAAIyT,aACnBC,EAAiB1T,EAAI0T,eAErBN,EAAakK,EAAQlK,WACrB4M,EAAkB1C,EAAQ0C,gBAC1BC,EAAkB3C,EAAQ2C,gBAC1B5M,EAAkBiK,EAAQjK,gBAC1BC,EAAegK,EAAQhK,aACvB4M,EAAoB5C,EAAQ4C,kBAC5BC,EAAoB7C,EAAQ6C,kBAC5B5M,EAAyB+J,EAAQ/J,uBACjCC,EAAiB8J,EAAQ9J,eACzB4M,EAAc9C,EAAQ8C,YA0B1B,GAxBAhN,EAAaA,GAAc,GAC3B4M,EAAkBA,GAAmB,GACrCC,EAAkBA,GAAmB,GACrC3M,EAAeA,GAAgB,GAC/B4M,EAAoBA,GAAqB,GACzCC,EAAoBA,GAAqB,IAGrC9M,GAAmBG,KACrBC,EAAe+K,EAAqB/K,KAElCF,GAA0BC,KAS5BE,EAAiB8K,EAJjB9K,EAAiBA,EAAezI,QAC9B,6FACA,uDAMAuI,EAAgB,CAClB,IAAI3X,EAAM2X,EAAe,CAACC,aAAcA,EAAcC,eAAgBA,IACtED,EAAe5X,EAAI4X,aACnBC,EAAiB7X,EAAI6X,eAKvB,GAAIH,EAAwB,CAC1B,IAAI8M,EAAa,GACjB3M,EAAiBA,EAAezI,QAC9B,qDACA,SAAUiD,GAER,OADAmS,EAAW3tC,KAAKw7B,GACT,MAGXiS,EAAoB5M,EAAyB,KAAQ8M,EAAWxpB,KAAK,MAAS,KAAOspB,EAIvF,GAAIC,EAAa,CACf,IAAIljC,EAAO,mBAAqBkjC,EAAc,MAC9ChN,EAAal2B,EAAOk2B,EACpBE,EAAep2B,EAAOo2B,EAgBxB,OAZID,IACFD,EAAaA,EAAa,0BAA4Br0B,EAAK,yBAA2BA,EAAK,qBAAuBA,EAAK,gCAAkCA,EAAK,gEAAkEs0B,EAAkB,QAClP2M,EAAkB,qBAAuBjhC,EAAK,qCAAuCA,EAAK,+BAAiCA,EAAK,sCAAwCA,EAAK,oBAAsBA,EAAK,mBAAqBA,EAAK,eAAiBA,EAAK,OAASihC,EAAkB,KACnRvM,EAAeA,EAAaxI,QAAQ,6BAA6B,SAAUiD,EAAOoS,EAAQjoB,EAAOkoB,GAC/F,MAAO,4BAA4BjU,KAAKiU,EAAQC,OAAO,EAAGnoB,IAAUioB,EAAU,UAAYA,EAAS,IAAMvhC,MAK7G00B,EAAegN,EAAqBhN,EAAc10B,EAAIq0B,EAAY4M,EAAiBC,GACnFvM,EAAiB+M,EAAqB/M,EAAgB30B,EAAIu0B,EAAc4M,EAAmBC,GAEpF,CACL1M,aAAcA,EACdC,eAAgBA,GA5MCgN,CAAed,EAAYtC,EAASv+B,GACnD8gC,EAAOxsC,OAASusC,EAAWnM,aAC3BoM,EAAO1d,OAAS4d,EAAStM,aACzBqM,EAASzsC,OAASusC,EAAWlM,eAC7BoM,EAAS3d,OAAS4d,EAASrM,eAI7BkM,EAAWnM,aAAeoM,EAAO1d,OACjCyd,EAAWlM,eAAiBoM,EAAS3d,OACrClzB,EAAO2wC,EAAWnN,SAAU/wC,KAAK+wC,UAG7B6K,EAAQ8C,cACVR,EAAWnN,SAAS6K,EAAQ8C,aAAe,CACzC,YAAa,OAAO7R,KAAK5D,MAAQiU,KAKjCl9C,KAAKg+C,IACPh+C,KAAKg+C,GAA0BE,GAInC,SAASe,IACPvO,EAAa9jC,YAAYkF,MAAM9R,KAAM0R,WACrC1R,KAAKk/C,gBAAav/C,EAEpBs/C,EAAgBzyC,UAAYC,OAAOC,OAAOgkC,EAAc,CACtD9jC,YAAa,CAAC2a,MAAO03B,GACrBE,kBAAmB,CAAC53B,OAAO,GAC3BmpB,aAAc,CAACnpB,MAAOmpB,GAEtBuN,gBAAiB,CACf5Q,IAAK,WACH,OAAO4Q,GAETt4C,IAAK,SAAawuC,GAChBn0C,KAAKg+C,GAA4B7J,IAIrC1wC,KAAM,CACJ8jB,MAAO,SAAU5V,GAOf,OANA++B,EAAajtC,KAAKqJ,KAAK9M,KAAM2R,GACxB++B,EAAa0O,kBAAqB1O,EAAayO,oBAClDn/C,KAAK6wC,WAAatjC,EAAO,GAAIoE,EAAOk/B,YACpC7wC,KAAKq/C,QAAU9xC,EAAO,GAAIoE,EAAO0tC,SACjCr/C,KAAK+wC,SAAW3+B,EAAMktC,cAAcz8C,MAAM8O,EAAOo/B,WAE5C/wC,OAQX00C,iBAAkB,CAACntB,MAAO,WACxB,IAAIg4B,EAAgBv/C,KAAKw/C,eAczB,OAbKD,IACE5B,KACHA,EAAmB/M,EACjBF,EAAayO,kBACTzO,EAAagE,mBACb,IAAItiC,EAAMqtC,kBAAkB,CAACC,aAActtC,EAAMutC,mBACrD/D,IAEeyD,QAAQO,kBAAoB,KAE/CL,EAAgBv/C,KAAKw/C,eAAiB7B,EAAiB96C,SACzCkuC,SAAW/wC,KAAK+wC,UAEzBwO,IAOT5K,oBAAqB,CAACptB,MAAO,WAC3B,IAAIs4B,EAAmB7/C,KAAK8/C,kBAc5B,OAbKD,IACEnC,KACHA,EAAsB9M,EACpBF,EAAayO,kBACTzO,EAAaiE,sBACb,IAAIviC,EAAM2tC,qBACdnE,IAEkByD,QAAQW,qBAAuB,KAErDH,EAAmB7/C,KAAK8/C,kBAAoBpC,EAAoB76C,SAC/CkuC,SAAW/wC,KAAK+wC,UAE5B8O,IAGT55C,QAAS,CAACshB,MAAO,WACf,IACIi4B,EADMx/C,KACew/C,eACrBM,EAFM9/C,KAEkB8/C,kBACxBN,GAAkBA,EAAev5C,UACjC65C,GAAqBA,EAAkB75C,UAC3CyqC,EAAazqC,QAAQ6G,KAAK9M,UAI9B,IAAIiN,EAAW,IAAIgyC,EAUnB,OATAhyC,EAASxJ,KAAKitC,GAGdzjC,EAAS8jC,SAAWxjC,EAAO6E,EAAMktC,cAAcz8C,MAAM6tC,EAAaK,UAAY,IAAK6K,EAAQ7K,UAC3F9jC,EAASoyC,QAAU9xC,EAAO,GAAImjC,EAAa2O,QAASzD,EAAQyD,SAC5DpyC,EAASoyC,QAAS,2BAA6BhiC,GAAO,GACtDpQ,EAAS4jC,WAAatjC,EAAO,GAAImjC,EAAaG,WAAY+K,EAAQ/K,YAElE4M,EAAOL,GAAenwC,EACfA,EAASpK,QAyFlB,SAASk8C,EAAqBkB,EAAY5iC,EAAI6iC,EAAMC,EAAOC,GAMzD,OALID,GAASC,GAASF,KACpBD,EAAaA,EAAW1W,QAAQ2I,EAAiB,KAAOgO,EAAO,wBAA0B7iC,EAAK,QAE9F4iC,GAAc,sBAAwBE,EAAQ,qBAAuB9iC,EAAK,UAAY+iC,EAAQ,OAEzFH,EAOT,SAAS1C,EAAoB3rC,EAAK2V,GAChC,MAAe,aAAR3V,OAAqBjS,EAA6B,oBAAV4nB,EAAuBA,EAAMwB,WAAaxB,EAG3F,IAAIs2B,EAAS,EACTD,EAAqB,IAAInH,IAWzB4J,EAA4B,CAC9BZ,kBAAmB,QACnBM,qBAAsB,eACtBO,mBAAoB,SACpB7N,kBAAmB,QACnB8N,oBAAqB,UACrBC,kBAAmB,QACnBC,iBAAkB,QAClBC,qBAAsB,WACtBC,qBAAsB,WACtBC,mBAAoB,SACpBC,kBAAmB,QACnBC,mBAAoB,SACpBC,eAAgB,SAChBC,eAAgB,SAChBC,eAAgB,UAqDdC,EAAmB,SAA0BxuC,GAC/C1S,KAAK0S,KAAOA,EACZ1S,KAAKmhD,eAAiB,WAAazuC,EACnC1S,KAAKohD,mBAAqB,eAAiB1uC,EAC3C1S,KAAKqhD,kBAAoB,kBAAoB3uC,EAO7C1S,KAAKshD,gBAAkB,YAAc5uC,EAOrC1S,KAAKuhD,aAAe,YAAc7uC,EAElC1S,KAAKwhD,KAAO,IAAIxzC,aAAa,GAC7BhO,KAAKyhD,SAAW,IAAIrvC,EAAMguB,YAAY,IAAIntB,WAAW,GAAI,EAAG,GAC5DjT,KAAK0hD,QAAU,EACf1hD,KAAK2hD,YAAc,GAGjBjT,EAAqB,CAAE3lC,OAAQ,CAAE4lC,cAAc,IAuLnD,SAASiT,EAAsBr6B,EAAO5L,EAAOkmC,GAK3C,IAAIC,EAAO,IAAMv6B,EACbw6B,EAAcD,EAAO,EAAd,IACPE,EAAcD,EAAO,EAAd,IACPE,EAAcD,EAAO,EAAd,IAWX,OATAF,GAAc,IACdC,GAAc,IACdC,GAAc,IACdC,EAA0B,IAAnBthD,KAAKgiC,MAAMsf,GAElBtmC,EAAMkmC,GAAcC,EACpBnmC,EAAMkmC,EAAa,GAAKE,EACxBpmC,EAAMkmC,EAAa,GAAKG,EACxBrmC,EAAMkmC,EAAa,GAAKI,EACjBtmC,EApMT+yB,EAAmB3lC,OAAOpD,IAAM,SAAU4hB,GACxC,GAAIA,IAAUvnB,KAAK0hD,QAAS,CAE1B,IAAIplC,EAAO3b,KAAKoH,IAAI,EAAGpH,KAAKmsC,KAAKnsC,KAAKuhD,KAAK36B,KACvC46B,EAAMniD,KAAKwhD,KACXllC,EAAO6lC,EAAIp5C,OACb/I,KAAKwhD,KAAOW,EAAI7nB,SAAS,EAAGhe,GAEtBA,EAAO6lC,EAAIp5C,SACjB/I,KAAKwhD,KAAO,IAAIxzC,aAAasO,GAC7Btc,KAAKwhD,KAAK77C,IAAIw8C,IAEhBniD,KAAK0hD,QAAUn6B,IAGnBmnB,EAAmB3lC,OAAOskC,IAAM,WAC9B,OAAOrtC,KAAK0hD,SAOdR,EAAiB10C,UAAUwE,KAAO,SAAeuW,GAC/C,OAAOvnB,KAAK2F,IAAI3F,KAAK+I,SAAUwe,IAOjC25B,EAAiB10C,UAAU41C,SAAW,SAAmBzmC,GACvD3b,KAAK+I,OAAS4S,EAAM5S,OACpB/I,KAAKwhD,KAAK77C,IAAIgW,GACd3b,KAAKqiD,cAAe,GAQtBnB,EAAiB10C,UAAU6gC,IAAM,SAAc1W,GAC7C,OAAO32B,KAAKwhD,KAAK7qB,IAGnBuqB,EAAiB10C,UAAU7G,IAAM,SAAcgxB,EAAOpP,GAChDoP,EAAQ,EAAI32B,KAAK0hD,UACnB1hD,KAAK+I,OAAS4tB,EAAQ,GAEpBpP,IAAUvnB,KAAKwhD,KAAK7qB,KACtB32B,KAAKwhD,KAAK7qB,GAASpP,EACnBq6B,EACEr6B,EAAQvnB,KAAK2hD,YACb3hD,KAAKyhD,SAAS3gB,MAAM7yB,KACZ,EAAR0oB,GAEF32B,KAAKsiD,iBAAkB,IAQ3BpB,EAAiB10C,UAAU3J,MAAQ,WACjC,IAAIA,EAAQ,IAAIq+C,EAAiBlhD,KAAK0S,MAEtC,OADA7P,EAAMu/C,SAASpiD,KAAKwhD,MACb3+C,GAQTq+C,EAAiB10C,UAAU+1C,kBAAoB,WAC3C,IAAI1uC,EAEF2uC,EAAKxiD,KACT,OAAS6T,EAAM,IAAQ7T,KAAKmhD,gBAAkB,CAAC,YAE3C,OADAqB,EAAGC,QACID,EAAGf,WACR5tC,EAAI7T,KAAKohD,oBAAsB,CAAC,YAElC,OADAoB,EAAGC,QACID,EAAGf,SAAS3gB,MAAMtQ,QACvB3c,EAAI7T,KAAKshD,iBAAmB,CAAC,YAE/B,OADAkB,EAAGC,QACID,EAAGz5C,SACR8K,EAAI7T,KAAKqhD,mBAAqB,CAAC,YAEjC,OADAmB,EAAGC,QACID,EAAGb,cACR9tC,GAURqtC,EAAiB10C,UAAUk2C,oBAAsB,WAC/C,IACMvB,EADInhD,KACiBmhD,eACrBC,EAFIphD,KAEqBohD,mBACzBE,EAHIthD,KAGkBshD,gBACtBD,EAJIrhD,KAIoBqhD,kBAE9B,MAAQ,uBAAyBF,EAAiB,oBAAsBC,EAAqB,oBAAsBE,EAAkB,oBAAsBD,EAAoB,cANrKrhD,KAKeuhD,aACqL,wDAA0DH,EAAqB,qCAAuCD,EAAiB,iFAAmFE,EAAoB,UAM9bH,EAAiB10C,UAAUi2C,MAAQ,WACjC,IAAIE,EAAM3iD,KAAKyhD,SACXU,EAAMniD,KAAKwhD,KACXoB,EAAc5iD,KAAKqiD,aAgBvB,GAbIF,EAAIp5C,SAAW45C,EAAI7hB,MAAMtQ,QAC3BmyB,EAAI7hB,MAAQ,CACV7yB,KAAM,IAAIgF,WAAwB,EAAbkvC,EAAIp5C,QACzBynB,MAAO2xB,EAAIp5C,OACXi4B,OAAQ,GAEV4hB,GAAc,GAOZA,GAAe5iD,KAAKsiD,gBAAiB,CACvC,IAAIO,EAAS7iD,KAAKwhD,KAAKllB,QAAO,SAAU1nB,EAAG8H,GAAK,OAAO/b,KAAKqE,IAAI4P,EAAG8H,KAAO,GACtEomC,EAAOniD,KAAKoH,IAAI,EAAGpH,KAAKmsC,KAAKnsC,KAAKuhD,KAAKW,KACvCC,IAAS9iD,KAAK2hD,cAChB3hD,KAAK2hD,YAAcmB,EACnBF,GAAc,GAEhBD,EAAI52C,aAAc,EAClB/L,KAAKsiD,iBAAkB,EAIzB,GAAIM,EAAa,CACf,IAAK,IAAIz0C,EAAI,EAAGgH,EAAMgtC,EAAIp5C,OAAQg6C,EAAS/iD,KAAK2hD,YAAaxzC,EAAIgH,EAAKhH,IACpEyzC,EAAsBO,EAAIh0C,GAAK40C,EAAQJ,EAAI7hB,MAAM7yB,KAAU,EAAJE,GAEzDnO,KAAKqiD,cAAe,IAIxB51C,OAAOyjC,iBAAkBgR,EAAiB10C,UAAWkiC,GA4FrD,IAAI1hC,EAAW,KAEXg2C,EAAsB,IAAI5wC,EAAMsuC,qBAAqB,CAACrzC,MAAO,SAAUilC,KAAMlgC,EAAMsgC,aA8BnFuQ,EAA2B,SAAU/1C,GACvC,SAAS+1C,IACP/1C,EAAKJ,KACH9M,KAAMijD,EAAWC,cACjBF,GAGFhjD,KAAKmjD,OAAS,IAAI/wC,EAAMjS,QACxBH,KAAKojD,SAAW,IAAIhxC,EAAMjS,QAC1BH,KAAKqjD,SAAW,IAAIjxC,EAAMjS,QAC1BH,KAAKsjD,OAAS,IAAIlxC,EAAMjS,QACxBH,KAAKmF,OAAS,IACdnF,KAAKujD,UAAY,IAAInxC,EAAM/K,QAC3BrH,KAAKwjD,WAAa,EAIlBxjD,KAAKyjD,eAAgB,EAGlBv2C,IAAO+1C,EAAWxU,UAAYvhC,GACnC+1C,EAAWz2C,UAAYC,OAAOC,OAAQQ,GAAQA,EAAKV,WACnDy2C,EAAWz2C,UAAUI,YAAcq2C,EAEnC,IAAIvU,EAAqB,CAAEzhC,SAAU,CAAE0hC,cAAc,GAAOgF,oBAAqB,CAAEhF,cAAc,GAAOiF,uBAAwB,CAAEjF,cAAc,IA4DhJ,OAxDAsU,EAAWC,YAAc,WACvB,OAAOl2C,IAAaA,EAClB,IAAIoF,EAAMsxC,uBAAuB,EAAG,EAAG,EAAG,EAAG,IAAIvU,UAAU,EAAG,GAAK,KAIvET,EAAmBzhC,SAASogC,IAAM,WAChC,IAAIiH,EAAkBt0C,KAAKu0C,iBACvB7D,EAAe1wC,KAAKw0C,eAAiBwO,EASzC,OARK1O,GAAmBA,EAAgB5D,eAAiBA,IACvD4D,EAAkBt0C,KAAKu0C,iBA1F7B,SAAkC7D,GAChC,OAAOE,EACLF,EACA,CACEK,SAAU,CACRoS,OAAQ,CAAC57B,MAAO,IAAInV,EAAMjS,SAC1BijD,SAAU,CAAC77B,MAAO,IAAInV,EAAMjS,SAC5BkjD,SAAU,CAAC97B,MAAO,IAAInV,EAAMjS,SAC5BmjD,OAAQ,CAAC/7B,MAAO,IAAInV,EAAMjS,SAC1BgF,OAAQ,CAACoiB,MAAO,KAChBo8B,QAAS,CAACp8B,MAAO,IAAInV,EAAMjS,UAE7BuxC,WAlCW,soBAmCXC,gBAjCgB,ujCAkChBC,aAhCa,oDAiCb4M,kBA/BkB,qKA0GwBoF,CAAyBlT,GAEnEA,EAAajlC,iBAAiB,WAAW,SAASgpC,IAChD/D,EAAaxqC,oBAAoB,UAAWuuC,GAC5CH,EAAgBruC,cAGbquC,GAET5F,EAAmBzhC,SAAStH,IAAM,SAAU+qC,GAC1C1wC,KAAKw0C,cAAgB9D,GAIvBhC,EAAmBiF,oBAAoBtG,IAAM,WAC3C,OAAOrtC,KAAKiN,SAASynC,oBAEvBhG,EAAmBkF,uBAAuBvG,IAAM,WAC9C,OAAOrtC,KAAKiN,SAAS0nC,uBAGvBsO,EAAWz2C,UAAU4nC,eAAiB,SAAyB8J,GAC7D,IACInN,EADM/wC,KAAKiN,SACI8jC,SAEfoS,EADQnjD,KACOmjD,OACfC,EAFQpjD,KAESojD,SACjBC,EAHQrjD,KAGSqjD,SACjBC,EAJQtjD,KAIOsjD,OACfn+C,EALQnF,KAKOmF,OACfo+C,EANQvjD,KAMUujD,UAClBC,EAPQxjD,KAOWwjD,WACvBzS,EAASoS,OAAO57B,MAAM9jB,KAAK0/C,GAC3BpS,EAASqS,SAAS77B,MAAM9jB,KAAK2/C,GAC7BrS,EAASsS,SAAS97B,MAAM9jB,KAAK4/C,GAC7BtS,EAASuS,OAAO/7B,MAAM9jB,KAAK6/C,GAC3BvS,EAAS5rC,OAAOoiB,MAAQpiB,EACxB4rC,EAAS4S,QAAQp8B,MAAM5hB,IAAI49C,EAAUl5C,EAAGk5C,EAAUj5C,EAAGk5C,GAAc,IAGrEP,EAAWz2C,UAAUoC,QAAU,SAAkBS,EAAWC,KAI5D7C,OAAOyjC,iBAAkB+S,EAAWz2C,UAAWkiC,GAExCuU,EApFsB,CAqF7B7wC,EAAMlF,MAERiF,EAAQ8wC,WAAaA,EACrB9wC,EAAQ+uC,iBAAmBA,EAC3B/uC,EAAQy+B,sBAAwBA,EAChCz+B,EAAQ2qC,qBAAuBA,EAC/B3qC,EAAQ0xC,sBAjbR,SAA+BC,GAI7B,IAHA,IAEItX,EAFAuX,EAAY,uDACZhT,EAAWtkC,OAAOC,OAAO,MAEe,QAApC8/B,EAAQuX,EAAUC,KAAKF,KAC7B/S,EAASvE,EAAM,IAAMA,EAAM,GAE7B,OAAOuE,GA2aT5+B,EAAQ8xC,sBA7bR,SAA+Bh3C,GAC7B,IAAIi3C,EAAc7D,EAA0BpzC,EAASrG,MACrD,OAAOs9C,EAAc9xC,EAAM+xC,UAAUD,GAAej3C,GA4btDkF,EAAQ+/B,eAAiBA,EAEzBzlC,OAAO2gC,eAAej7B,EAAS,aAAc,CAAEoV,OAAO,IA/0BS+vB,CAAQnlC,EAASolC,EAAQ,M,gCCD1F,8CAsBA6M,cAAYl1C,KAAO,CAElBU,UAAW,CAAE2X,MAAO,GACpB7X,WAAY,CAAE6X,MAAO,IAAIlgB,UAAS,EAAG,IACrCg9C,UAAW,CAAE98B,MAAO,GACpB+8B,SAAU,CAAE/8B,MAAO,GACnBg9B,QAAS,CAAEh9B,MAAO,GAClBi9B,QAAS,CAAEj9B,MAAO,IAInB48B,YAAS,KAAa,CAErBpT,SAAUuO,gBAAcmF,MAAO,CAC9BL,cAAYM,OACZN,cAAYO,IACZP,cAAYl1C,OAGb6iC,aAAY,qvHAmJZC,eAAc,2uCA4Df,IAAI5kC,EAAe,SAAWi0B,GAE7BujB,iBAAe93C,KAAM9M,KAAM,CAE1B4G,KAAM,eAENmqC,SAAUuO,gBAAcz8C,MAAOshD,YAAS,KAAWpT,UAEnDgB,aAAcoS,YAAS,KAAWpS,aAClCC,eAAgBmS,YAAS,KAAWnS,eAEpC6S,UAAU,IAIX7kD,KAAK8kD,QAAS,EAEdr4C,OAAOyjC,iBAAkBlwC,KAAM,CAE9BqN,MAAO,CAEN03C,YAAY,EAEZ1X,IAAK,WAEJ,OAAOrtC,KAAK+wC,SAASiU,QAAQz9B,OAI9B5hB,IAAK,SAAW4hB,GAEfvnB,KAAK+wC,SAASiU,QAAQz9B,MAAQA,IAMhC3X,UAAW,CAEVm1C,YAAY,EAEZ1X,IAAK,WAEJ,OAAOrtC,KAAK+wC,SAASnhC,UAAU2X,OAIhC5hB,IAAK,SAAW4hB,GAEfvnB,KAAK+wC,SAASnhC,UAAU2X,MAAQA,IAMlC88B,UAAW,CAEVU,YAAY,EAEZ1X,IAAK,WAEJ,OAAOrtC,KAAK+wC,SAASsT,UAAU98B,OAIhC5hB,IAAK,SAAW4hB,GAEfvnB,KAAK+wC,SAASsT,UAAU98B,MAAQA,IAMlC+8B,SAAU,CAETS,YAAY,EAEZ1X,IAAK,WAEJ,OAAOrtC,KAAK+wC,SAASuT,SAAS/8B,OAI/B5hB,IAAK,SAAW4hB,GAEfvnB,KAAK+wC,SAASuT,SAAS/8B,MAAQA,IAMjCg9B,QAAS,CAERQ,YAAY,EAEZ1X,IAAK,WAEJ,OAAOrtC,KAAK+wC,SAASwT,QAAQh9B,OAI9B5hB,IAAK,SAAW4hB,GAEfvnB,KAAK+wC,SAASwT,QAAQh9B,MAAQA,IAMhCi9B,QAAS,CAERO,YAAY,EAEZ1X,IAAK,WAEJ,OAAOrtC,KAAK+wC,SAASyT,QAAQj9B,OAI9B5hB,IAAK,SAAW4hB,GAEfvnB,KAAK+wC,SAASyT,QAAQj9B,MAAQA,IAMhC7X,WAAY,CAEXq1C,YAAY,EAEZ1X,IAAK,WAEJ,OAAOrtC,KAAK+wC,SAASrhC,WAAW6X,OAIjC5hB,IAAK,SAAW4hB,GAEfvnB,KAAK+wC,SAASrhC,WAAW6X,MAAM9jB,KAAM8jB,OAQxCvnB,KAAKilD,UAAW5jB,IAIjBj0B,EAAaZ,UAAYC,OAAOC,OAAQk4C,iBAAep4C,WACvDY,EAAaZ,UAAUI,YAAcQ,EAErCA,EAAaZ,UAAU04C,gBAAiB,G,gCClZxC,8CAQI3zC,EAAe,WAElBpE,IAAqBL,KAAM9M,MAE3BA,KAAK4G,KAAO,gBAIb2K,EAAa/E,UAAYC,OAAOc,OAAQd,OAAOC,OAAQS,IAAqBX,WAAa,CAExFI,YAAa2E,EAEb4zC,gBAAgB,EAEhBC,aAAc,SAAWzpC,GAOxB,IAHA,IAAI5S,EAAS4S,EAAM5S,OAAS,EACxBs8C,EAAS,IAAIr3C,aAAc,EAAIjF,GAEzBoF,EAAI,EAAGA,EAAIpF,EAAQoF,GAAK,EAEjCk3C,EAAQ,EAAIl3C,GAAMwN,EAAOxN,GACzBk3C,EAAQ,EAAIl3C,EAAI,GAAMwN,EAAOxN,EAAI,GACjCk3C,EAAQ,EAAIl3C,EAAI,GAAMwN,EAAOxN,EAAI,GAEjCk3C,EAAQ,EAAIl3C,EAAI,GAAMwN,EAAOxN,EAAI,GACjCk3C,EAAQ,EAAIl3C,EAAI,GAAMwN,EAAOxN,EAAI,GACjCk3C,EAAQ,EAAIl3C,EAAI,GAAMwN,EAAOxN,EAAI,GAMlC,OAFAhB,IAAqBX,UAAU44C,aAAat4C,KAAM9M,KAAMqlD,GAEjDrlD,MAIRslD,UAAW,SAAW3pC,GAOrB,IAHA,IAAI5S,EAAS4S,EAAM5S,OAAS,EACxB+2B,EAAS,IAAI9xB,aAAc,EAAIjF,GAEzBoF,EAAI,EAAGA,EAAIpF,EAAQoF,GAAK,EAEjC2xB,EAAQ,EAAI3xB,GAAMwN,EAAOxN,GACzB2xB,EAAQ,EAAI3xB,EAAI,GAAMwN,EAAOxN,EAAI,GACjC2xB,EAAQ,EAAI3xB,EAAI,GAAMwN,EAAOxN,EAAI,GAEjC2xB,EAAQ,EAAI3xB,EAAI,GAAMwN,EAAOxN,EAAI,GACjC2xB,EAAQ,EAAI3xB,EAAI,GAAMwN,EAAOxN,EAAI,GACjC2xB,EAAQ,EAAI3xB,EAAI,GAAMwN,EAAOxN,EAAI,GAMlC,OAFAhB,IAAqBX,UAAU84C,UAAUx4C,KAAM9M,KAAM8/B,GAE9C9/B,MAIRulD,SAAU,SAAWr2C,GAEpB,IAAIlC,EAAWkC,EAAKlC,SAcpB,OAZKA,EAASw4C,WAEbxlD,KAAKolD,aAAcp4C,EAASy4C,UAEjBz4C,EAAS04C,kBAEpB1lD,KAAKolD,aAAcp4C,EAASa,WAAW9K,SAAS4Y,OAM1C3b,MAIRyD,KAAM,WAIL,OAAOzD,S,gCChGT,8CAgBImN,EAAuB,WAE1BghC,0BAAwBrhC,KAAM9M,MAE9BA,KAAK4G,KAAO,uBAMZ5G,KAAKsvC,SAFO,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGjEtvC,KAAK0O,aAAc,WAAY,IAAIi3C,yBALnB,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,GAK7B,IACtE3lD,KAAK0O,aAAc,KAAM,IAAIi3C,yBALnB,EAAI,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,GAAK,GAAK,GAAK,EAAG,GAAK,GAKf,KAI3Dx4C,EAAqBX,UAAYC,OAAOc,OAAQd,OAAOC,OAAQyhC,0BAAwB3hC,WAAa,CAEnGI,YAAaO,EAEby4C,wBAAwB,EAExB71C,aAAc,SAAW5G,GAExB,IAAIuE,EAAQ1N,KAAK6N,WAAWD,cACxBD,EAAM3N,KAAK6N,WAAWC,YAwB1B,YAtBenO,IAAV+N,IAEJA,EAAMqC,aAAc5G,GAEpBwE,EAAIoC,aAAc5G,GAElBuE,EAAMO,KAAKlC,aAAc,GAIA,OAArB/L,KAAKuuC,aAETvuC,KAAK6uC,qBAIuB,OAAxB7uC,KAAKquC,gBAETruC,KAAK4uC,wBAIC5uC,MAIRolD,aAAc,SAAWzpC,GAExB,IAAIkqC,EAEClqC,aAAiB3N,aAErB63C,EAAelqC,EAEJm5B,MAAMC,QAASp5B,KAE1BkqC,EAAe,IAAI73C,aAAc2N,IAIlC,IAAImqC,EAAiB,IAAIr3C,6BAA4Bo3C,EAAc,EAAG,GAUtE,OARA7lD,KAAK0O,aAAc,gBAAiB,IAAIC,6BAA4Bm3C,EAAgB,EAAG,IACvF9lD,KAAK0O,aAAc,cAAe,IAAIC,6BAA4Bm3C,EAAgB,EAAG,IAIrF9lD,KAAK6uC,qBACL7uC,KAAK4uC,wBAEE5uC,MAIRslD,UAAW,SAAW3pC,GAErB,IAAImkB,EAECnkB,aAAiB3N,aAErB8xB,EAASnkB,EAEEm5B,MAAMC,QAASp5B,KAE1BmkB,EAAS,IAAI9xB,aAAc2N,IAI5B,IAAIoqC,EAAsB,IAAIt3C,6BAA4BqxB,EAAQ,EAAG,GAKrE,OAHA9/B,KAAK0O,aAAc,qBAAsB,IAAIC,6BAA4Bo3C,EAAqB,EAAG,IACjG/lD,KAAK0O,aAAc,mBAAoB,IAAIC,6BAA4Bo3C,EAAqB,EAAG,IAExF/lD,MAIRgmD,sBAAuB,SAAWh5C,GAIjC,OAFAhN,KAAKolD,aAAcp4C,EAASa,WAAW9K,SAAS4Y,OAEzC3b,MAIRimD,kBAAmB,SAAWj5C,GAI7B,OAFAhN,KAAKolD,aAAcp4C,EAASa,WAAW9K,SAAS4Y,OAEzC3b,MAIRkmD,SAAU,SAAWC,GAMpB,OAJAnmD,KAAKgmD,sBAAuB,IAAII,oBAAmBD,EAAKn5C,WAIjDhN,MAIRqmD,iBAAkB,SAAWR,GAE5B,IAAI74C,EAAW64C,EAAa74C,SAc5B,OAZKA,EAASw4C,WAEbxlD,KAAKolD,aAAcp4C,EAASy4C,UAEjBz4C,EAAS04C,kBAEpB1lD,KAAKolD,aAAcp4C,EAASa,WAAW9K,SAAS4Y,OAM1C3b,MAIR6uC,mBAAoB,WAEnB,IAAIiB,EAAM,IAAItB,OAEd,OAAO,WAEoB,OAArBxuC,KAAKuuC,cAETvuC,KAAKuuC,YAAc,IAAIC,QAIxB,IAAI9gC,EAAQ1N,KAAK6N,WAAWD,cACxBD,EAAM3N,KAAK6N,WAAWC,iBAEXnO,IAAV+N,QAA+B/N,IAARgO,IAE3B3N,KAAKuuC,YAAY+X,uBAAwB54C,GAEzCoiC,EAAIwW,uBAAwB34C,GAE5B3N,KAAKuuC,YAAYgY,MAAOzW,KArBP,GA6BpBlB,sBAAuB,WAEtB,IAAI4X,EAAS,IAAIrmD,UAEjB,OAAO,WAEuB,OAAxBH,KAAKquC,iBAETruC,KAAKquC,eAAiB,IAAIC,UAID,OAArBtuC,KAAKuuC,aAETvuC,KAAK6uC,qBAIN,IAAInhC,EAAQ1N,KAAK6N,WAAWD,cACxBD,EAAM3N,KAAK6N,WAAWC,YAE1B,QAAenO,IAAV+N,QAA+B/N,IAARgO,EAAoB,CAE/C,IAAIkiC,EAAS7vC,KAAKquC,eAAewB,OAEjC7vC,KAAKuuC,YAAYkY,UAAW5W,GAI5B,IAFA,IAAI6W,EAAc,EAERv4C,EAAI,EAAG+iB,EAAKxjB,EAAMQ,MAAOC,EAAI+iB,EAAI/iB,IAE1Cq4C,EAAOl4C,oBAAqBZ,EAAOS,GACnCu4C,EAAc/lD,KAAKqE,IAAK0hD,EAAa7W,EAAOhqC,kBAAmB2gD,IAE/DA,EAAOl4C,oBAAqBX,EAAKQ,GACjCu4C,EAAc/lD,KAAKqE,IAAK0hD,EAAa7W,EAAOhqC,kBAAmB2gD,IAIhExmD,KAAKquC,eAAelpC,OAASxE,KAAKgK,KAAM+7C,GAEnC/Z,MAAO3sC,KAAKquC,eAAelpC,SAE/BvF,QAAQG,MAAO,wIAAyIC,QA3CrI,GAqDvB2mD,OAAQ,aAMRC,YAAa,SAAWz9C,GAIvB,OAFAvJ,QAAQC,KAAM,iFAEPG,KAAK+P,aAAc5G","file":"static/js/5.5ec8965a.chunk.js","sourcesContent":["/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */\n\nimport {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from \"../../../build/three.module.js\";\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.domElement.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyOut( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tvar mouseAction;\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tmouseAction = - 1;\n\n\t\t}\n\n\t\tswitch ( mouseAction ) {\n\n\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.PAN:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\tscope.domElement.addEventListener( 'keydown', onKeyDown, false );\n\n\t// make sure element can receive keys.\n\n\tif ( scope.domElement.tabIndex === - 1 ) {\n\n\t\tscope.domElement.tabIndex = 0;\n\n\t}\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nimport {\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tLine3,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\nimport { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\nimport { LineMaterial } from \"../lines/LineMaterial.js\";\n\nvar LineSegments2 = function ( geometry, material ) {\n\n\tMesh.call( this );\n\n\tthis.type = 'LineSegments2';\n\n\tthis.geometry = geometry !== undefined ? geometry : new LineSegmentsGeometry();\n\tthis.material = material !== undefined ? material : new LineMaterial( { color: Math.random() * 0xffffff } );\n\n};\n\nLineSegments2.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: LineSegments2,\n\n\tisLineSegments2: true,\n\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\n\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\n\n\t\t\t}\n\n\t\t\tvar instanceDistanceBuffer = new InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\t\tgeometry.setAttribute( 'instanceDistanceStart', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\t\tgeometry.setAttribute( 'instanceDistanceEnd', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar start = new Vector4();\n\t\tvar end = new Vector4();\n\n\t\tvar ssOrigin = new Vector4();\n\t\tvar ssOrigin3 = new Vector3();\n\t\tvar mvMatrix = new Matrix4();\n\t\tvar line = new Line3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.' );\n\n\t\t\t}\n\n\t\t\tvar ray = raycaster.ray;\n\t\t\tvar camera = raycaster.camera;\n\t\t\tvar projectionMatrix = camera.projectionMatrix;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar resolution = material.resolution;\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\n\t\t\t// pick a point 1 unit out along the ray to avoid the ray origin\n\t\t\t// sitting at the camera origin which will cause \"w\" to be 0 when\n\t\t\t// applying the projection matrix.\n\t\t\tray.at( 1, ssOrigin );\n\n\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\tssOrigin.w = 1;\n\t\t\tssOrigin.applyMatrix4( camera.matrixWorldInverse );\n\t\t\tssOrigin.applyMatrix4( projectionMatrix );\n\t\t\tssOrigin.multiplyScalar( 1 / ssOrigin.w );\n\n\t\t\t// screen space\n\t\t\tssOrigin.x *= resolution.x / 2;\n\t\t\tssOrigin.y *= resolution.y / 2;\n\t\t\tssOrigin.z = 0;\n\n\t\t\tssOrigin3.copy( ssOrigin );\n\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tmvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\n\n\t\t\tfor ( var i = 0, l = instanceStart.count; i < l; i ++ ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tstart.w = 1;\n\t\t\t\tend.w = 1;\n\n\t\t\t\t// camera space\n\t\t\t\tstart.applyMatrix4( mvMatrix );\n\t\t\t\tend.applyMatrix4( mvMatrix );\n\n\t\t\t\t// clip space\n\t\t\t\tstart.applyMatrix4( projectionMatrix );\n\t\t\t\tend.applyMatrix4( projectionMatrix );\n\n\t\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\t\tstart.multiplyScalar( 1 / start.w );\n\t\t\t\tend.multiplyScalar( 1 / end.w );\n\n\t\t\t\t// skip the segment if it's outside the camera near and far planes\n\t\t\t\tvar isBehindCameraNear = start.z < - 1 && end.z < - 1;\n\t\t\t\tvar isPastCameraFar = start.z > 1 && end.z > 1;\n\t\t\t\tif ( isBehindCameraNear || isPastCameraFar ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// screen space\n\t\t\t\tstart.x *= resolution.x / 2;\n\t\t\t\tstart.y *= resolution.y / 2;\n\n\t\t\t\tend.x *= resolution.x / 2;\n\t\t\t\tend.y *= resolution.y / 2;\n\n\t\t\t\t// create 2d segment\n\t\t\t\tline.start.copy( start );\n\t\t\t\tline.start.z = 0;\n\n\t\t\t\tline.end.copy( end );\n\t\t\t\tline.end.z = 0;\n\n\t\t\t\t// get closest point on ray to segment\n\t\t\t\tvar param = line.closestPointToPointParameter( ssOrigin3, true );\n\t\t\t\tline.at( param, closestPoint );\n\n\t\t\t\t// check if the intersection point is within clip space\n\t\t\t\tvar zPos = MathUtils.lerp( start.z, end.z, param );\n\t\t\t\tvar isInClipSpace = zPos >= - 1 && zPos <= 1;\n\n\t\t\t\tvar isInside = ssOrigin3.distanceTo( closestPoint ) < lineWidth * 0.5;\n\n\t\t\t\tif ( isInClipSpace && isInside ) {\n\n\t\t\t\t\tline.start.fromBufferAttribute( instanceStart, i );\n\t\t\t\t\tline.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\t\tline.start.applyMatrix4( matrixWorld );\n\t\t\t\t\tline.end.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar pointOnLine = new Vector3();\n\t\t\t\t\tvar point = new Vector3();\n\n\t\t\t\t\tray.distanceSqToSegment( line.start, line.end, point, pointOnLine );\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tpoint: point,\n\t\t\t\t\t\tpointOnLine: pointOnLine,\n\t\t\t\t\t\tdistance: ray.origin.distanceTo( point ),\n\n\t\t\t\t\t\tobject: this,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: i,\n\t\t\t\t\t\tuv: null,\n\t\t\t\t\t\tuv2: null,\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() )\n\n} );\n\nexport { LineSegments2 };\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\n\nimport { LineSegments2 } from \"../lines/LineSegments2.js\";\nimport { LineGeometry } from \"../lines/LineGeometry.js\";\nimport { LineMaterial } from \"../lines/LineMaterial.js\";\n\nvar Line2 = function ( geometry, material ) {\n\n\tLineSegments2.call( this );\n\n\tthis.type = 'Line2';\n\n\tthis.geometry = geometry !== undefined ? geometry : new LineGeometry();\n\tthis.material = material !== undefined ? material : new LineMaterial( { color: Math.random() * 0xffffff } );\n\n};\n\nLine2.prototype = Object.assign( Object.create( LineSegments2.prototype ), {\n\n\tconstructor: Line2,\n\n\tisLine2: true\n\n} );\n\nexport { Line2 };\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('three'), require('troika-worker-utils'), require('troika-three-utils')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'three', 'troika-worker-utils', 'troika-three-utils'], factory) :\n  (global = global || self, factory(global.troika_three_text = {}, global.THREE, global.troika_worker_utils, global.troika_three_utils));\n}(this, (function (exports, three, troikaWorkerUtils, troikaThreeUtils) { 'use strict';\n\n  /**\n   * Initializes and returns a function to generate an SDF texture for a given glyph.\n   * @param {function} createGlyphSegmentsQuadtree - factory for a GlyphSegmentsQuadtree implementation.\n   * @param {number} config.sdfDistancePercent - see docs for SDF_DISTANCE_PERCENT in TextBuilder.js\n   *\n   * @return {function(Object): {renderingBounds: [minX, minY, maxX, maxY], textureData: Uint8Array}}\n   */\n  function createSDFGenerator(createGlyphSegmentsQuadtree, config) {\n    var sdfDistancePercent = config.sdfDistancePercent;\n\n    /**\n     * How many straight line segments to use when approximating a glyph's quadratic/cubic bezier curves.\n     */\n    var CURVE_POINTS = 16;\n\n    /**\n     * Find the point on a quadratic bezier curve at t where t is in the range [0, 1]\n     */\n    function pointOnQuadraticBezier(x0, y0, x1, y1, x2, y2, t) {\n      var t2 = 1 - t;\n      return {\n        x: t2 * t2 * x0 + 2 * t2 * t * x1 + t * t * x2,\n        y: t2 * t2 * y0 + 2 * t2 * t * y1 + t * t * y2\n      }\n    }\n\n    /**\n     * Find the point on a cubic bezier curve at t where t is in the range [0, 1]\n     */\n    function pointOnCubicBezier(x0, y0, x1, y1, x2, y2, x3, y3, t) {\n      var t2 = 1 - t;\n      return {\n        x: t2 * t2 * t2 * x0 + 3 * t2 * t2 * t * x1 + 3 * t2 * t * t * x2 + t * t * t * x3,\n        y: t2 * t2 * t2 * y0 + 3 * t2 * t2 * t * y1 + 3 * t2 * t * t * y2 + t * t * t * y3\n      }\n    }\n\n    /**\n     * Generate an SDF texture segment for a single glyph.\n     * @param {object} glyphObj\n     * @param {number} sdfSize - the length of one side of the SDF image.\n     *        Larger images encode more details. Must be a power of 2.\n     * @return {{textureData: Uint8Array, renderingBounds: *[]}}\n     */\n    function generateSDF(glyphObj, sdfSize) {\n      //console.time('glyphSDF')\n\n      var textureData = new Uint8Array(sdfSize * sdfSize);\n\n      // Determine mapping between glyph grid coords and sdf grid coords\n      var glyphW = glyphObj.xMax - glyphObj.xMin;\n      var glyphH = glyphObj.yMax - glyphObj.yMin;\n\n      // Choose a maximum distance radius in font units, based on the glyph's max dimensions\n      var fontUnitsMaxDist = Math.max(glyphW, glyphH) * sdfDistancePercent;\n\n      // Use that, extending to the texture edges, to find conversion ratios between texture units and font units\n      var fontUnitsPerXTexel = (glyphW + fontUnitsMaxDist * 2) / sdfSize;\n      var fontUnitsPerYTexel = (glyphH + fontUnitsMaxDist * 2) / sdfSize;\n\n      var textureMinFontX = glyphObj.xMin - fontUnitsMaxDist - fontUnitsPerXTexel;\n      var textureMinFontY = glyphObj.yMin - fontUnitsMaxDist - fontUnitsPerYTexel;\n      var textureMaxFontX = glyphObj.xMax + fontUnitsMaxDist + fontUnitsPerXTexel;\n      var textureMaxFontY = glyphObj.yMax + fontUnitsMaxDist + fontUnitsPerYTexel;\n\n      function textureXToFontX(x) {\n        return textureMinFontX + (textureMaxFontX - textureMinFontX) * x / sdfSize\n      }\n\n      function textureYToFontY(y) {\n        return textureMinFontY + (textureMaxFontY - textureMinFontY) * y / sdfSize\n      }\n\n      if (glyphObj.pathCommandCount) { //whitespace chars will have no commands, so we can skip all this\n        // Decompose all paths into straight line segments and add them to a quadtree\n        var lineSegmentsIndex = createGlyphSegmentsQuadtree(glyphObj);\n        var firstX, firstY, prevX, prevY;\n        glyphObj.forEachPathCommand(function (type, x0, y0, x1, y1, x2, y2) {\n          switch (type) {\n            case 'M':\n              prevX = firstX = x0;\n              prevY = firstY = y0;\n              break\n            case 'L':\n              if (x0 !== prevX || y0 !== prevY) { //yup, some fonts have zero-length line commands\n                lineSegmentsIndex.addLineSegment(prevX, prevY, (prevX = x0), (prevY = y0));\n              }\n              break\n            case 'Q': {\n              var prevPoint = {x: prevX, y: prevY};\n              for (var i = 1; i < CURVE_POINTS; i++) {\n                var nextPoint = pointOnQuadraticBezier(\n                  prevX, prevY,\n                  x0, y0,\n                  x1, y1,\n                  i / (CURVE_POINTS - 1)\n                );\n                lineSegmentsIndex.addLineSegment(prevPoint.x, prevPoint.y, nextPoint.x, nextPoint.y);\n                prevPoint = nextPoint;\n              }\n              prevX = x1;\n              prevY = y1;\n              break\n            }\n            case 'C': {\n              var prevPoint$1 = {x: prevX, y: prevY};\n              for (var i$1 = 1; i$1 < CURVE_POINTS; i$1++) {\n                var nextPoint$1 = pointOnCubicBezier(\n                  prevX, prevY,\n                  x0, y0,\n                  x1, y1,\n                  x2, y2,\n                  i$1 / (CURVE_POINTS - 1)\n                );\n                lineSegmentsIndex.addLineSegment(prevPoint$1.x, prevPoint$1.y, nextPoint$1.x, nextPoint$1.y);\n                prevPoint$1 = nextPoint$1;\n              }\n              prevX = x2;\n              prevY = y2;\n              break\n            }\n            case 'Z':\n              if (prevX !== firstX || prevY !== firstY) {\n                lineSegmentsIndex.addLineSegment(prevX, prevY, firstX, firstY);\n              }\n              break\n          }\n        });\n\n        // For each target SDF texel, find the distance from its center to its nearest line segment,\n        // map that distance to an alpha value, and write that alpha to the texel\n        for (var sdfX = 0; sdfX < sdfSize; sdfX++) {\n          for (var sdfY = 0; sdfY < sdfSize; sdfY++) {\n            var signedDist = lineSegmentsIndex.findNearestSignedDistance(\n              textureXToFontX(sdfX + 0.5),\n              textureYToFontY(sdfY + 0.5),\n              fontUnitsMaxDist\n            );\n            //if (!isFinite(signedDist)) throw 'infinite distance!'\n            var alpha = isFinite(signedDist) ? Math.round(255 * (1 + signedDist / fontUnitsMaxDist) * 0.5) : signedDist;\n            alpha = Math.max(0, Math.min(255, alpha)); //clamp\n            textureData[sdfY * sdfSize + sdfX] = alpha;\n          }\n        }\n      }\n\n      //console.timeEnd('glyphSDF')\n\n      return {\n        textureData: textureData,\n\n        renderingBounds: [\n          textureMinFontX,\n          textureMinFontY,\n          textureMaxFontX,\n          textureMaxFontY\n        ]\n      }\n    }\n\n\n    return generateSDF\n  }\n\n  /**\n   * Creates a self-contained environment for processing text rendering requests.\n   *\n   * It is important that this function has no closure dependencies, so that it can be easily injected\n   * into the source for a Worker without requiring a build step or complex dependency loading. All its\n   * dependencies must be passed in at initialization.\n   *\n   * @param {function} fontParser - a function that accepts an ArrayBuffer of the font data and returns\n   * a standardized structure giving access to the font and its glyphs:\n   *   {\n   *     unitsPerEm: number,\n   *     ascender: number,\n   *     descender: number,\n   *     forEachGlyph(string, fontSize, letterSpacing, callback) {\n   *       //invokes callback for each glyph to render, passing it an object:\n   *       callback({\n   *         index: number,\n   *         advanceWidth: number,\n   *         xMin: number,\n   *         yMin: number,\n   *         xMax: number,\n   *         yMax: number,\n   *         pathCommandCount: number,\n   *         forEachPathCommand(callback) {\n   *           //invokes callback for each path command, with args:\n   *           callback(\n   *             type: 'M|L|C|Q|Z',\n   *             ...args //0 to 6 args depending on the type\n   *           )\n   *         }\n   *       })\n   *     }\n   *   }\n   * @param {function} sdfGenerator - a function that accepts a glyph object and generates an SDF texture\n   * from it.\n   * @param {Object} config\n   * @return {Object}\n   */\n  function createFontProcessor(fontParser, sdfGenerator, config) {\n\n    var defaultFontUrl = config.defaultFontUrl;\n\n\n    /**\n     * @private\n     * Holds data about font glyphs and how they relate to SDF atlases\n     *\n     * {\n     *   'fontUrl@sdfSize': {\n     *     fontObj: {}, //result of the fontParser\n     *     glyphs: {\n     *       [glyphIndex]: {\n     *         atlasIndex: 0,\n     *         glyphObj: {}, //glyph object from the fontParser\n     *         renderingBounds: [x0, y0, x1, y1]\n     *       },\n     *       ...\n     *     },\n     *     glyphCount: 123\n     *   }\n     * }\n     */\n    var fontAtlases = Object.create(null);\n\n    /**\n     * Holds parsed font objects by url\n     */\n    var fonts = Object.create(null);\n\n    var INF = Infinity;\n\n\n    /**\n     * Load a given font url\n     */\n    function doLoadFont(url, callback) {\n      function tryLoad() {\n        var onError = function (err) {\n          console.error((\"Failure loading font \" + url + (url === defaultFontUrl ? '' : '; trying fallback')), err);\n          if (url !== defaultFontUrl) {\n            url = defaultFontUrl;\n            tryLoad();\n          }\n        };\n        try {\n          var request = new XMLHttpRequest();\n          request.open('get', url, true);\n          request.responseType = 'arraybuffer';\n          request.onload = function () {\n            if (request.status >= 400) {\n              onError(new Error(request.statusText));\n            }\n            else if (request.status > 0) {\n              try {\n                var fontObj = fontParser(request.response);\n                callback(fontObj);\n              } catch (e) {\n                onError(e);\n              }\n            }\n          };\n          request.onerror = onError;\n          request.send();\n        } catch(err) {\n          onError(err);\n        }\n      }\n      tryLoad();\n    }\n\n\n    /**\n     * Load a given font url if needed, invoking a callback when it's loaded. If already\n     * loaded, the callback will be called synchronously.\n     */\n    function loadFont(fontUrl, callback) {\n      if (!fontUrl) { fontUrl = defaultFontUrl; }\n      var font = fonts[fontUrl];\n      if (font) {\n        // if currently loading font, add to callbacks, otherwise execute immediately\n        if (font.pending) {\n          font.pending.push(callback);\n        } else {\n          callback(font);\n        }\n      } else {\n        fonts[fontUrl] = {pending: [callback]};\n        doLoadFont(fontUrl, function (fontObj) {\n          var callbacks = fonts[fontUrl].pending;\n          fonts[fontUrl] = fontObj;\n          callbacks.forEach(function (cb) { return cb(fontObj); });\n        });\n      }\n    }\n\n\n    /**\n     * Get the atlas data for a given font url, loading it from the network and initializing\n     * its atlas data objects if necessary.\n     */\n    function getSdfAtlas(fontUrl, sdfGlyphSize, callback) {\n      if (!fontUrl) { fontUrl = defaultFontUrl; }\n      var atlasKey = fontUrl + \"@\" + sdfGlyphSize;\n      var atlas = fontAtlases[atlasKey];\n      if (atlas) {\n        callback(atlas);\n      } else {\n        loadFont(fontUrl, function (fontObj) {\n          atlas = fontAtlases[atlasKey] || (fontAtlases[atlasKey] = {\n            fontObj: fontObj,\n            glyphs: {},\n            glyphCount: 0\n          });\n          callback(atlas);\n        });\n      }\n    }\n\n\n    /**\n     * Main entry point.\n     * Process a text string with given font and formatting parameters, and return all info\n     * necessary to render all its glyphs.\n     */\n    function process(\n      ref,\n      callback,\n      metricsOnly\n    ) {\n      var text = ref.text; if ( text === void 0 ) text = '';\n      var font = ref.font; if ( font === void 0 ) font = defaultFontUrl;\n      var sdfGlyphSize = ref.sdfGlyphSize; if ( sdfGlyphSize === void 0 ) sdfGlyphSize = 64;\n      var fontSize = ref.fontSize; if ( fontSize === void 0 ) fontSize = 1;\n      var letterSpacing = ref.letterSpacing; if ( letterSpacing === void 0 ) letterSpacing = 0;\n      var lineHeight = ref.lineHeight; if ( lineHeight === void 0 ) lineHeight = 'normal';\n      var maxWidth = ref.maxWidth; if ( maxWidth === void 0 ) maxWidth = INF;\n      var textAlign = ref.textAlign; if ( textAlign === void 0 ) textAlign = 'left';\n      var textIndent = ref.textIndent; if ( textIndent === void 0 ) textIndent = 0;\n      var whiteSpace = ref.whiteSpace; if ( whiteSpace === void 0 ) whiteSpace = 'normal';\n      var overflowWrap = ref.overflowWrap; if ( overflowWrap === void 0 ) overflowWrap = 'normal';\n      var anchorX = ref.anchorX; if ( anchorX === void 0 ) anchorX = 0;\n      var anchorY = ref.anchorY; if ( anchorY === void 0 ) anchorY = 0;\n      var includeCaretPositions = ref.includeCaretPositions; if ( includeCaretPositions === void 0 ) includeCaretPositions = false;\n      var chunkedBoundsSize = ref.chunkedBoundsSize; if ( chunkedBoundsSize === void 0 ) chunkedBoundsSize = 8192;\n      var colorRanges = ref.colorRanges; if ( colorRanges === void 0 ) colorRanges = null;\n      if ( metricsOnly === void 0 ) metricsOnly=false;\n\n      var mainStart = now();\n      var timings = {total: 0, fontLoad: 0, layout: 0, sdf: {}, sdfTotal: 0};\n\n      // Ensure newlines are normalized\n      if (text.indexOf('\\r') > -1) {\n        console.warn('FontProcessor.process: got text with \\\\r chars; normalizing to \\\\n');\n        text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n      }\n\n      // Ensure we've got numbers not strings\n      fontSize = +fontSize;\n      letterSpacing = +letterSpacing;\n      maxWidth = +maxWidth;\n      lineHeight = lineHeight || 'normal';\n      textIndent = +textIndent;\n\n      getSdfAtlas(font, sdfGlyphSize, function (atlas) {\n        var fontObj = atlas.fontObj;\n        var hasMaxWidth = isFinite(maxWidth);\n        var newGlyphs = null;\n        var glyphBounds = null;\n        var glyphAtlasIndices = null;\n        var glyphColors = null;\n        var caretPositions = null;\n        var totalBounds = null;\n        var chunkedBounds = null;\n        var maxLineWidth = 0;\n        var renderableGlyphCount = 0;\n        var canWrap = whiteSpace !== 'nowrap';\n        var ascender = fontObj.ascender;\n        var descender = fontObj.descender;\n        var unitsPerEm = fontObj.unitsPerEm;\n        timings.fontLoad = now() - mainStart;\n        var layoutStart = now();\n\n        // Find conversion between native font units and fontSize units; this will already be done\n        // for the gx/gy values below but everything else we'll need to convert\n        var fontSizeMult = fontSize / unitsPerEm;\n\n        // Determine appropriate value for 'normal' line height based on the font's actual metrics\n        // TODO this does not guarantee individual glyphs won't exceed the line height, e.g. Roboto; should we use yMin/Max instead?\n        if (lineHeight === 'normal') {\n          lineHeight = (ascender - descender) / unitsPerEm;\n        }\n\n        // Determine line height and leading adjustments\n        lineHeight = lineHeight * fontSize;\n        var halfLeading = (lineHeight - (ascender - descender) * fontSizeMult) / 2;\n        var topBaseline = -(fontSize + halfLeading);\n        var caretHeight = Math.min(lineHeight, (ascender - descender) * fontSizeMult);\n        var caretBottomOffset = (ascender + descender) / 2 * fontSizeMult - caretHeight / 2;\n\n        // Distribute glyphs into lines based on wrapping\n        var lineXOffset = textIndent;\n        var currentLine = new TextLine();\n        var lines = [currentLine];\n        fontObj.forEachGlyph(text, fontSize, letterSpacing, function (glyphObj, glyphX, charIndex) {\n          var char = text.charAt(charIndex);\n          var glyphWidth = glyphObj.advanceWidth * fontSizeMult;\n          var curLineCount = currentLine.count;\n          var nextLine;\n\n          // Calc isWhitespace and isEmpty once per glyphObj\n          if (!('isEmpty' in glyphObj)) {\n            glyphObj.isWhitespace = !!char && /\\s/.test(char);\n            glyphObj.isEmpty = glyphObj.xMin === glyphObj.xMax || glyphObj.yMin === glyphObj.yMax;\n          }\n          if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n            renderableGlyphCount++;\n          }\n\n          // If a non-whitespace character overflows the max width, we need to soft-wrap\n          if (canWrap && hasMaxWidth && !glyphObj.isWhitespace && glyphX + glyphWidth + lineXOffset > maxWidth && curLineCount) {\n            // If it's the first char after a whitespace, start a new line\n            if (currentLine.glyphAt(curLineCount - 1).glyphObj.isWhitespace) {\n              nextLine = new TextLine();\n              lineXOffset = -glyphX;\n            } else {\n              // Back up looking for a whitespace character to wrap at\n              for (var i = curLineCount; i--;) {\n                // If we got the start of the line there's no soft break point; make hard break if overflowWrap='break-word'\n                if (i === 0 && overflowWrap === 'break-word') {\n                  nextLine = new TextLine();\n                  lineXOffset = -glyphX;\n                  break\n                }\n                // Found a soft break point; move all chars since it to a new line\n                else if (currentLine.glyphAt(i).glyphObj.isWhitespace) {\n                  nextLine = currentLine.splitAt(i + 1);\n                  var adjustX = nextLine.glyphAt(0).x;\n                  lineXOffset -= adjustX;\n                  for (var j = nextLine.count; j--;) {\n                    nextLine.glyphAt(j).x -= adjustX;\n                  }\n                  break\n                }\n              }\n            }\n            if (nextLine) {\n              currentLine.isSoftWrapped = true;\n              currentLine = nextLine;\n              lines.push(currentLine);\n              maxLineWidth = maxWidth; //after soft wrapping use maxWidth as calculated width\n            }\n          }\n\n          var fly = currentLine.glyphAt(currentLine.count);\n          fly.glyphObj = glyphObj;\n          fly.x = glyphX + lineXOffset;\n          fly.width = glyphWidth;\n          fly.charIndex = charIndex;\n\n          // Handle hard line breaks\n          if (char === '\\n') {\n            currentLine = new TextLine();\n            lines.push(currentLine);\n            lineXOffset = -(glyphX + glyphWidth + (letterSpacing * fontSize)) + textIndent;\n          }\n        });\n\n        // Calculate width of each line (excluding trailing whitespace) and maximum block width\n        lines.forEach(function (line) {\n          for (var i = line.count; i--;) {\n            var ref = line.glyphAt(i);\n            var glyphObj = ref.glyphObj;\n            var x = ref.x;\n            var width = ref.width;\n            if (!glyphObj.isWhitespace) {\n              line.width = x + width;\n              if (line.width > maxLineWidth) {\n                maxLineWidth = line.width;\n              }\n              return\n            }\n          }\n        });\n\n        if (!metricsOnly) {\n          // Find overall position adjustments for anchoring\n          var anchorXOffset = 0;\n          var anchorYOffset = 0;\n          if (anchorX) {\n            if (typeof anchorX === 'number') {\n              anchorXOffset = -anchorX;\n            }\n            else if (typeof anchorX === 'string') {\n              anchorXOffset = -maxLineWidth * (\n                anchorX === 'left' ? 0 :\n                anchorX === 'center' ? 0.5 :\n                anchorX === 'right' ? 1 :\n                parsePercent(anchorX)\n              );\n            }\n          }\n          if (anchorY) {\n            if (typeof anchorY === 'number') {\n              anchorYOffset = -anchorY;\n            }\n            else if (typeof anchorY === 'string') {\n              var height = lines.length * lineHeight;\n              anchorYOffset = anchorY === 'top' ? 0 :\n                anchorY === 'top-baseline' ? -topBaseline :\n                anchorY === 'middle' ? height / 2 :\n                anchorY === 'bottom' ? height :\n                anchorY === 'bottom-baseline' ? height - halfLeading + descender * fontSizeMult :\n                parsePercent(anchorY) * height;\n            }\n          }\n\n          // Process each line, applying alignment offsets, adding each glyph to the atlas, and\n          // collecting all renderable glyphs into a single collection.\n          glyphBounds = new Float32Array(renderableGlyphCount * 4);\n          glyphAtlasIndices = new Float32Array(renderableGlyphCount);\n          totalBounds = [INF, INF, -INF, -INF];\n          chunkedBounds = [];\n          var lineYOffset = topBaseline;\n          if (includeCaretPositions) {\n            caretPositions = new Float32Array(text.length * 3);\n          }\n          if (colorRanges) {\n            glyphColors = new Uint8Array(renderableGlyphCount * 3);\n          }\n          var renderableGlyphIndex = 0;\n          var prevCharIndex = -1;\n          var colorCharIndex = -1;\n          var chunk;\n          var currentColor;\n          lines.forEach(function (line) {\n            var lineGlyphCount = line.count;\n            var lineWidth = line.width;\n\n            // Ignore empty lines\n            if (lineGlyphCount > 0) {\n              // Find x offset for horizontal alignment\n              var lineXOffset = 0;\n              var justifyAdjust = 0;\n              if (textAlign === 'center') {\n                lineXOffset = (maxLineWidth - lineWidth) / 2;\n              } else if (textAlign === 'right') {\n                lineXOffset = maxLineWidth - lineWidth;\n              } else if (textAlign === 'justify' && line.isSoftWrapped) {\n                // just count the non-trailing whitespace characters, and we'll adjust the offsets per\n                // character in the next loop\n                var whitespaceCount = 0;\n                for (var i = lineGlyphCount; i--;) {\n                  if (!line.glyphAt(i).glyphObj.isWhitespace) {\n                    while (i--) {\n                      if (!line.glyphAt(i).glyphObj) {\n                        debugger\n                      }\n                      if (line.glyphAt(i).glyphObj.isWhitespace) {\n                        whitespaceCount++;\n                      }\n                    }\n                    break\n                  }\n                }\n                justifyAdjust = (maxLineWidth - lineWidth) / whitespaceCount;\n              }\n\n              for (var i$1 = 0; i$1 < lineGlyphCount; i$1++) {\n                var glyphInfo = line.glyphAt(i$1);\n                var glyphObj = glyphInfo.glyphObj;\n\n                // Apply position adjustments\n                if (lineXOffset) { glyphInfo.x += lineXOffset; }\n\n                // Expand whitespaces for justify alignment\n                if (justifyAdjust !== 0 && glyphObj.isWhitespace) {\n                  lineXOffset += justifyAdjust;\n                  glyphInfo.width += justifyAdjust;\n                }\n\n                // Add caret positions\n                if (includeCaretPositions) {\n                  var charIndex = glyphInfo.charIndex;\n                  caretPositions[charIndex * 3] = glyphInfo.x + anchorXOffset; //left edge x\n                  caretPositions[charIndex * 3 + 1] = glyphInfo.x + glyphInfo.width + anchorXOffset; //right edge x\n                  caretPositions[charIndex * 3 + 2] = lineYOffset + caretBottomOffset + anchorYOffset; //common bottom y\n\n                  // If we skipped any chars from the previous glyph (due to ligature subs), copy the\n                  // previous glyph's info to those missing char indices. In the future we may try to\n                  // use the font's LigatureCaretList table to get interior caret positions.\n                  while (charIndex - prevCharIndex > 1) {\n                    caretPositions[(prevCharIndex + 1) * 3] = caretPositions[prevCharIndex * 3 + 1];\n                    caretPositions[(prevCharIndex + 1) * 3 + 1] = caretPositions[prevCharIndex * 3 + 1];\n                    caretPositions[(prevCharIndex + 1) * 3 + 2] = caretPositions[prevCharIndex * 3 + 2];\n                    prevCharIndex++;\n                  }\n                  prevCharIndex = charIndex;\n                }\n\n                // Track current color range\n                if (colorRanges) {\n                  var charIndex$1 = glyphInfo.charIndex;\n                  while(charIndex$1 > colorCharIndex) {\n                    colorCharIndex++;\n                    if (colorRanges.hasOwnProperty(colorCharIndex)) {\n                      currentColor = colorRanges[colorCharIndex];\n                    }\n                  }\n                }\n\n                // Get atlas data for renderable glyphs\n                if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\n                  var idx = renderableGlyphIndex++;\n\n                  // If we haven't seen this glyph yet, generate its SDF\n                  var glyphAtlasInfo = atlas.glyphs[glyphObj.index];\n                  if (!glyphAtlasInfo) {\n                    var sdfStart = now();\n                    var glyphSDFData = sdfGenerator(glyphObj, sdfGlyphSize);\n                    timings.sdf[text.charAt(glyphInfo.charIndex)] = now() - sdfStart;\n\n                    // Assign this glyph the next available atlas index\n                    glyphSDFData.atlasIndex = atlas.glyphCount++;\n\n                    // Queue it up in the response's newGlyphs list\n                    if (!newGlyphs) { newGlyphs = []; }\n                    newGlyphs.push(glyphSDFData);\n\n                    // Store its metadata (not the texture) in our atlas info\n                    glyphAtlasInfo = atlas.glyphs[glyphObj.index] = {\n                      atlasIndex: glyphSDFData.atlasIndex,\n                      glyphObj: glyphObj,\n                      renderingBounds: glyphSDFData.renderingBounds\n                    };\n                  }\n\n                  // Determine final glyph bounds and add them to the glyphBounds array\n                  var bounds = glyphAtlasInfo.renderingBounds;\n                  var start = idx * 4;\n                  var x0 = glyphBounds[start] = glyphInfo.x + bounds[0] * fontSizeMult + anchorXOffset;\n                  var y0 = glyphBounds[start + 1] = lineYOffset + bounds[1] * fontSizeMult + anchorYOffset;\n                  var x1 = glyphBounds[start + 2] = glyphInfo.x + bounds[2] * fontSizeMult + anchorXOffset;\n                  var y1 = glyphBounds[start + 3] = lineYOffset + bounds[3] * fontSizeMult + anchorYOffset;\n\n                  // Track total bounds\n                  if (x0 < totalBounds[0]) { totalBounds[0] = x0; }\n                  if (y0 < totalBounds[1]) { totalBounds[1] = y0; }\n                  if (x1 > totalBounds[2]) { totalBounds[2] = x1; }\n                  if (y1 > totalBounds[3]) { totalBounds[3] = y1; }\n\n                  // Track bounding rects for each chunk of N glyphs\n                  if (idx % chunkedBoundsSize === 0) {\n                    chunk = {start: idx, end: idx, rect: [INF, INF, -INF, -INF]};\n                    chunkedBounds.push(chunk);\n                  }\n                  chunk.end++;\n                  if (x0 < chunk.rect[0]) { chunk.rect[0] = x0; }\n                  if (y0 < chunk.rect[1]) { chunk.rect[1] = y0; }\n                  if (x1 > chunk.rect[2]) { chunk.rect[2] = x1; }\n                  if (y1 > chunk.rect[3]) { chunk.rect[3] = y1; }\n\n                  // Add to atlas indices array\n                  glyphAtlasIndices[idx] = glyphAtlasInfo.atlasIndex;\n\n                  // Add colors\n                  if (colorRanges) {\n                    var start$1 = idx * 3;\n                    glyphColors[start$1] = currentColor >> 16 & 255;\n                    glyphColors[start$1 + 1] = currentColor >> 8 & 255;\n                    glyphColors[start$1 + 2] = currentColor & 255;\n                  }\n                }\n              }\n            }\n\n            // Increment y offset for next line\n            lineYOffset -= lineHeight;\n          });\n        }\n\n        // Timing stats\n        for (var ch in timings.sdf) {\n          timings.sdfTotal += timings.sdf[ch];\n        }\n        timings.layout = now() - layoutStart - timings.sdfTotal;\n        timings.total = now() - mainStart;\n\n        callback({\n          glyphBounds: glyphBounds, //rendering quad bounds for each glyph [x1, y1, x2, y2]\n          glyphAtlasIndices: glyphAtlasIndices, //atlas indices for each glyph\n          caretPositions: caretPositions, //x,y of bottom of cursor position before each char, plus one after last char\n          caretHeight: caretHeight, //height of cursor from bottom to top\n          glyphColors: glyphColors, //color for each glyph, if color ranges supplied\n          chunkedBounds: chunkedBounds, //total rects per (n=chunkedBoundsSize) consecutive glyphs\n          ascender: ascender * fontSizeMult, //font ascender\n          descender: descender * fontSizeMult, //font descender\n          lineHeight: lineHeight, //computed line height\n          topBaseline: topBaseline, //y coordinate of the top line's baseline\n          totalBounds: totalBounds, //total rect including all glyphBounds; will be slightly larger than glyph edges due to SDF padding\n          totalBlockSize: [maxLineWidth, lines.length * lineHeight], //width and height of the text block; accurate for layout measurement\n          newGlyphSDFs: newGlyphs, //if this request included any new SDFs for the atlas, they'll be included here\n          timings: timings\n        });\n      });\n    }\n\n\n    /**\n     * For a given text string and font parameters, determine the resulting block dimensions\n     * after wrapping for the given maxWidth.\n     * @param args\n     * @param callback\n     */\n    function measure(args, callback) {\n      process(args, function (result) {\n        callback({\n          width: result.totalBlockSize[0],\n          height: result.totalBlockSize[1]\n        });\n      }, {metricsOnly: true});\n    }\n\n    function parsePercent(str) {\n      var match = str.match(/^([\\d.]+)%$/);\n      var pct = match ? parseFloat(match[1]) : NaN;\n      return isNaN(pct) ? 0 : pct / 100\n    }\n\n    function now() {\n      return (self.performance || Date).now()\n    }\n\n    // Array-backed structure for a single line's glyphs data\n    function TextLine() {\n      this.data = [];\n    }\n    TextLine.prototype = {\n      width: 0,\n      isSoftWrapped: false,\n      get count() {\n        return Math.ceil(this.data.length / 4)\n      },\n      glyphAt: function glyphAt(i) {\n        var fly = TextLine.flyweight;\n        fly.data = this.data;\n        fly.index = i;\n        return fly\n      },\n      splitAt: function splitAt(i) {\n        var newLine = new TextLine();\n        newLine.data = this.data.splice(i * 4);\n        return newLine\n      }\n    };\n    TextLine.flyweight = ['glyphObj', 'x', 'width', 'charIndex'].reduce(function (obj, prop, i, all) {\n      Object.defineProperty(obj, prop, {\n        get: function get() {\n          return this.data[this.index * 4 + i]\n        },\n        set: function set(val) {\n          this.data[this.index * 4 + i] = val;\n        }\n      });\n      return obj\n    }, {data: null, index: 0});\n\n\n    return {\n      process: process,\n      measure: measure,\n      loadFont: loadFont\n    }\n  }\n\n  /**\n   * Basic quadtree impl for performing fast spatial searches of a glyph's line segments.\n   */\n  function createGlyphSegmentsQuadtree(glyphObj) {\n    // Pick a good initial power-of-two bounding box that will hold all possible segments\n    var xMin = glyphObj.xMin;\n    var yMin = glyphObj.yMin;\n    var xMax = glyphObj.xMax;\n    var yMax = glyphObj.yMax;\n    var dx = xMax - xMin;\n    var dy = yMax - yMin;\n    var cx = Math.round(xMin + dx / 2);\n    var cy = Math.round(yMin + dy / 2);\n    var r = Math.pow(2, Math.floor(Math.log(Math.max(dx, dy)) * Math.LOG2E));\n    var INF = Infinity;\n\n    var root = {\n      0: null,\n      1: null,\n      2: null,\n      3: null,\n      data: null,\n      cx: cx,\n      cy: cy,\n      r: r,\n      minX: INF,\n      minY: INF,\n      maxX: -INF,\n      maxY: -INF\n    };\n\n    /**\n     * Add a line segment to the quadtree.\n     * @param x0\n     * @param y0\n     * @param x1\n     * @param y1\n     */\n    function addLineSegment(x0, y0, x1, y1) {\n      var cx = (x0 + x1) / 2;\n      var cy = (y0 + y1) / 2;\n      var segment = {\n        x0: x0, y0: y0, x1: x1, y1: y1, cx: cx, cy: cy,\n        minX: Math.min(x0, x1),\n        minY: Math.min(y0, y1),\n        maxX: Math.max(x0, x1),\n        maxY: Math.max(y0, y1),\n        next: null\n      };\n      insertSegment(segment, root);\n    }\n\n    function insertSegment(segment, node) {\n      // update node min/max stats\n      var minX = segment.minX;\n      var minY = segment.minY;\n      var maxX = segment.maxX;\n      var maxY = segment.maxY;\n      var cx = segment.cx;\n      var cy = segment.cy;\n      if (minX < node.minX) { node.minX = minX; }\n      if (minY < node.minY) { node.minY = minY; }\n      if (maxX > node.maxX) { node.maxX = maxX; }\n      if (maxY > node.maxY) { node.maxY = maxY; }\n\n      // leaf\n      var leafSegment = node.data;\n      if (leafSegment) {\n        // coincident; push as linked list\n        if (leafSegment.cx === cx && leafSegment.cy === cy) {\n          while (leafSegment.next) { leafSegment = leafSegment.next; }\n          leafSegment.next = segment;\n        }\n        // non-coincident; split leaf to branch\n        else {\n          node.data = null;\n          insertSegment(leafSegment, node);\n          insertSegment(segment, node);\n        }\n      }\n      // branch\n      else {\n        // find target sub-index for the segment's centerpoint\n        var subIndex = (cy < node.cy ? 0 : 2) + (cx < node.cx ? 0 : 1);\n\n        // subnode already at index: recurse\n        if (node[subIndex]) {\n          insertSegment(segment, node[subIndex]);\n        }\n        // create new leaf\n        else {\n          node[subIndex] = {\n            0: null,\n            1: null,\n            2: null,\n            3: null,\n            data: segment,\n            cx: node.cx + node.r / 2 * (subIndex % 2 ? 1 : -1),\n            cy: node.cy + node.r / 2 * (subIndex < 2 ? -1 : 1),\n            r: node.r / 2,\n            minX: minX,\n            minY: minY,\n            maxX: maxX,\n            maxY: maxY\n          };\n        }\n      }\n    }\n\n    function walkTree(callback) {\n      walkBranch(root, callback);\n    }\n\n    function walkBranch(root, callback) {\n      if (callback(root) !== false && !root.data) {\n        for (var i = 0; i < 4; i++) {\n          if (root[i] !== null) {\n            walkBranch(root[i], callback);\n          }\n        }\n      }\n    }\n\n    /**\n     * For a given x/y, search the quadtree for the closest line segment and return\n     * its signed distance.\n     * @param x\n     * @param y\n     * @param maxSearchRadius\n     * @returns {number}\n     */\n    function findNearestSignedDistance(x, y, maxSearchRadius) {\n      var closestDist = maxSearchRadius;\n      var closestDistSq = closestDist * closestDist;\n\n      walkTree(function visit(node) {\n        // Ignore nodes that can't possibly have segments closer than what we've already found. We base\n        // this on a simple rect bounds check; radial would be more accurate but much slower.\n        if (\n          x - closestDist > node.maxX || x + closestDist < node.minX ||\n          y - closestDist > node.maxY || y + closestDist < node.minY\n        ) {\n          return false\n        }\n\n        // Leaf - check each segment's actual distance\n        for (var segment = node.data; segment; segment = segment.next) {\n          var distSq = absSquareDistanceToLineSegment(x, y, segment.x0, segment.y0, segment.x1, segment.y1);\n          if (distSq < closestDistSq) {\n            closestDistSq = distSq;\n            closestDist = Math.sqrt(distSq);\n          }\n        }\n      });\n\n      // Flip to negative distance if outside the poly\n      if (!isPointInPoly(x, y)) {\n        closestDist = -closestDist;\n      }\n      return closestDist\n    }\n\n    // Determine whether the given point lies inside or outside the glyph. Uses a simple\n    // ray casting algorithm using a ray pointing east from the point, optimized by using\n    // the quadtree search to test as few lines as possible.\n    function isPointInPoly(x, y) {\n      var inside = false;\n      walkTree(function (node) {\n        // Ignore nodes whose bounds can't possibly cross our east-pointing ray\n        if (node.maxX < x || node.minY > y || node.maxY < y) {\n          return false\n        }\n\n        // Leaf - test each segment for whether it crosses our east-pointing ray\n        for (var segment = node.data; segment; segment = segment.next) {\n          var x0 = segment.x0;\n          var y0 = segment.y0;\n          var x1 = segment.x1;\n          var y1 = segment.y1;\n          var intersects = ((y0 > y) !== (y1 > y)) && (x < (x1 - x0) * (y - y0) / (y1 - y0) + x0);\n          if (intersects) {\n            inside = !inside;\n          }\n        }\n      });\n      return inside\n    }\n\n    // Find the absolute distance from a point to a line segment at closest approach\n    function absSquareDistanceToLineSegment(x, y, lineX0, lineY0, lineX1, lineY1) {\n      var ldx = lineX1 - lineX0;\n      var ldy = lineY1 - lineY0;\n      var lengthSq = ldx * ldx + ldy * ldy;\n      var t = lengthSq ? Math.max(0, Math.min(1, ((x - lineX0) * ldx + (y - lineY0) * ldy) / lengthSq)) : 0;\n      var dx = x - (lineX0 + t * ldx);\n      var dy = y - (lineY0 + t * ldy);\n      return dx * dx + dy * dy\n    }\n\n    return {\n      addLineSegment: addLineSegment,\n      findNearestSignedDistance: findNearestSignedDistance\n    }\n  }\n\n  // Custom bundle of Typr.js (https://github.com/photopea/Typr.js) for use in troika-3d-text. \n  // Original MIT license applies: https://github.com/photopea/Typr.js/blob/gh-pages/LICENSE\n\n  function typrFactory() {\n\n  var window = self;\n\n  // Begin Typr.js\n\n\n  var Typr = {};\n\n  Typr.parse = function(buff)\n  {\n  \tvar bin = Typr._bin;\n  \tvar data = new Uint8Array(buff);\n  \t\n  \tvar tag = bin.readASCII(data, 0, 4);  \n  \tif(tag==\"ttcf\") {\n  \t\tvar offset = 4;\n  \t\tvar majV = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar minV = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar numF = bin.readUint  (data, offset);  offset+=4;\n  \t\tvar fnts = [];\n  \t\tfor(var i=0; i<numF; i++) {\n  \t\t\tvar foff = bin.readUint  (data, offset);  offset+=4;\n  \t\t\tfnts.push(Typr._readFont(data, foff));\n  \t\t}\n  \t\treturn fnts;\n  \t}\n  \telse { return [Typr._readFont(data, 0)]; }\n  };\n\n  Typr._readFont = function(data, offset) {\n  \tvar bin = Typr._bin;\n  \tvar ooff = offset;\n  \t\n  \tvar sfnt_version = bin.readFixed(data, offset);\n  \toffset += 4;\n  \tvar numTables = bin.readUshort(data, offset);\n  \toffset += 2;\n  \tvar searchRange = bin.readUshort(data, offset);\n  \toffset += 2;\n  \tvar entrySelector = bin.readUshort(data, offset);\n  \toffset += 2;\n  \tvar rangeShift = bin.readUshort(data, offset);\n  \toffset += 2;\n  \t\n  \tvar tags = [\n  \t\t\"cmap\",\n  \t\t\"head\",\n  \t\t\"hhea\",\n  \t\t\"maxp\",\n  \t\t\"hmtx\",\n  \t\t\"name\",\n  \t\t\"OS/2\",\n  \t\t\"post\",\n  \t\t\n  \t\t//\"cvt\",\n  \t\t//\"fpgm\",\n  \t\t\"loca\",\n  \t\t\"glyf\",\n  \t\t\"kern\",\n  \t\t\n  \t\t//\"prep\"\n  \t\t//\"gasp\"\n  \t\t\n  \t\t\"CFF \",\n  \t\t\n  \t\t\n  \t\t\"GPOS\",\n  \t\t\"GSUB\",\n  \t\t\n  \t\t\"SVG \" ];\n  \t\n  \tvar obj = {_data:data, _offset:ooff};\n  \t//console.log(sfnt_version, numTables, searchRange, entrySelector, rangeShift);\n  \t\n  \tvar tabs = {};\n  \t\n  \tfor(var i=0; i<numTables; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);   offset += 4;\n  \t\tvar checkSum = bin.readUint(data, offset);  offset += 4;\n  \t\tvar toffset = bin.readUint(data, offset);   offset += 4;\n  \t\tvar length = bin.readUint(data, offset);    offset += 4;\n  \t\ttabs[tag] = {offset:toffset, length:length};\n  \t\t\n  \t\t//if(tags.indexOf(tag)==-1) console.log(\"unknown tag\", tag, length);\n  \t}\n  \t\n  \tfor(var i=0; i< tags.length; i++)\n  \t{\n  \t\tvar t = tags[i];\n  \t\t//console.log(t);\n  \t\t//if(tabs[t]) console.log(t, tabs[t].offset, tabs[t].length);\n  \t\tif(tabs[t]) { obj[t.trim()] = Typr[t.trim()].parse(data, tabs[t].offset, tabs[t].length, obj); }\n  \t}\n  \t\n  \treturn obj;\n  };\n\n  Typr._tabOffset = function(data, tab, foff)\n  {\n  \tvar bin = Typr._bin;\n  \tvar numTables = bin.readUshort(data, foff+4);\n  \tvar offset = foff+12;\n  \tfor(var i=0; i<numTables; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);   offset += 4;\n  \t\tvar checkSum = bin.readUint(data, offset);  offset += 4;\n  \t\tvar toffset = bin.readUint(data, offset);   offset += 4;\n  \t\tvar length = bin.readUint(data, offset);    offset += 4;\n  \t\tif(tag==tab) { return toffset; }\n  \t}\n  \treturn 0;\n  };\n\n\n\n\n\n  Typr._bin = {\n  \treadFixed : function(data, o)\n  \t{\n  \t\treturn ((data[o]<<8) | data[o+1]) +  (((data[o+2]<<8)|data[o+3])/(256*256+4));\n  \t},\n  \treadF2dot14 : function(data, o)\n  \t{\n  \t\tvar num = Typr._bin.readShort(data, o);\n  \t\treturn num / 16384;\n  \t},\n  \treadInt : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar a = Typr._bin.t.uint8;\n  \t\ta[0] = buff[p+3];\n  \t\ta[1] = buff[p+2];\n  \t\ta[2] = buff[p+1];\n  \t\ta[3] = buff[p];\n  \t\treturn Typr._bin.t.int32[0];\n  \t},\n  \t\n  \treadInt8 : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar a = Typr._bin.t.uint8;\n  \t\ta[0] = buff[p];\n  \t\treturn Typr._bin.t.int8[0];\n  \t},\n  \treadShort : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar a = Typr._bin.t.uint8;\n  \t\ta[1] = buff[p]; a[0] = buff[p+1];\n  \t\treturn Typr._bin.t.int16[0];\n  \t},\n  \treadUshort : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\treturn (buff[p]<<8) | buff[p+1];\n  \t},\n  \treadUshorts : function(buff, p, len)\n  \t{\n  \t\tvar arr = [];\n  \t\tfor(var i=0; i<len; i++) { arr.push(Typr._bin.readUshort(buff, p+i*2)); }\n  \t\treturn arr;\n  \t},\n  \treadUint : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar a = Typr._bin.t.uint8;\n  \t\ta[3] = buff[p];  a[2] = buff[p+1];  a[1] = buff[p+2];  a[0] = buff[p+3];\n  \t\treturn Typr._bin.t.uint32[0];\n  \t},\n  \treadUint64 : function(buff, p)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\treturn (Typr._bin.readUint(buff, p)*(0xffffffff+1)) + Typr._bin.readUint(buff, p+4);\n  \t},\n  \treadASCII : function(buff, p, l)\t// l : length in Characters (not Bytes)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar s = \"\";\n  \t\tfor(var i = 0; i < l; i++) { s += String.fromCharCode(buff[p+i]); }\n  \t\treturn s;\n  \t},\n  \treadUnicode : function(buff, p, l)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar s = \"\";\n  \t\tfor(var i = 0; i < l; i++)\t\n  \t\t{\n  \t\t\tvar c = (buff[p++]<<8) | buff[p++];\n  \t\t\ts += String.fromCharCode(c);\n  \t\t}\n  \t\treturn s;\n  \t},\n  \t_tdec : window[\"TextDecoder\"] ? new window[\"TextDecoder\"]() : null,\n  \treadUTF8 : function(buff, p, l) {\n  \t\tvar tdec = Typr._bin._tdec;\n  \t\tif(tdec && p==0 && l==buff.length) { return tdec[\"decode\"](buff); }\n  \t\treturn Typr._bin.readASCII(buff,p,l);\n  \t},\n  \treadBytes : function(buff, p, l)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar arr = [];\n  \t\tfor(var i=0; i<l; i++) { arr.push(buff[p+i]); }\n  \t\treturn arr;\n  \t},\n  \treadASCIIArray : function(buff, p, l)\t// l : length in Characters (not Bytes)\n  \t{\n  \t\t//if(p>=buff.length) throw \"error\";\n  \t\tvar s = [];\n  \t\tfor(var i = 0; i < l; i++)\t\n  \t\t\t{ s.push(String.fromCharCode(buff[p+i])); }\n  \t\treturn s;\n  \t}\n  };\n\n  Typr._bin.t = {\n  \tbuff: new ArrayBuffer(8),\n  };\n  Typr._bin.t.int8   = new Int8Array  (Typr._bin.t.buff);\n  Typr._bin.t.uint8  = new Uint8Array (Typr._bin.t.buff);\n  Typr._bin.t.int16  = new Int16Array (Typr._bin.t.buff);\n  Typr._bin.t.uint16 = new Uint16Array(Typr._bin.t.buff);\n  Typr._bin.t.int32  = new Int32Array (Typr._bin.t.buff);\n  Typr._bin.t.uint32 = new Uint32Array(Typr._bin.t.buff);\n\n\n\n\n\n  // OpenType Layout Common Table Formats\n\n  Typr._lctf = {};\n\n  Typr._lctf.parse = function(data, offset, length, font, subt)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar offset0 = offset;\n  \tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\n  \t\n  \tvar offScriptList  = bin.readUshort(data, offset);  offset += 2;\n  \tvar offFeatureList = bin.readUshort(data, offset);  offset += 2;\n  \tvar offLookupList  = bin.readUshort(data, offset);  offset += 2;\n  \t\n  \t\n  \tobj.scriptList  = Typr._lctf.readScriptList (data, offset0 + offScriptList);\n  \tobj.featureList = Typr._lctf.readFeatureList(data, offset0 + offFeatureList);\n  \tobj.lookupList  = Typr._lctf.readLookupList (data, offset0 + offLookupList, subt);\n  \t\n  \treturn obj;\n  };\n\n  Typr._lctf.readLookupList = function(data, offset, subt)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = [];\n  \tvar count = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var i=0; i<count; i++) \n  \t{\n  \t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar lut = Typr._lctf.readLookupTable(data, offset0 + noff, subt);\n  \t\tobj.push(lut);\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.readLookupTable = function(data, offset, subt)\n  {\n  \t//console.log(\"Parsing lookup table\", offset);\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = {tabs:[]};\n  \t\n  \tobj.ltype = bin.readUshort(data, offset);  offset+=2;\n  \tobj.flag  = bin.readUshort(data, offset);  offset+=2;\n  \tvar cnt   = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tfor(var i=0; i<cnt; i++)\n  \t{\n  \t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar tab = subt(data, obj.ltype, offset0 + noff);\n  \t\t//console.log(obj.type, tab);\n  \t\tobj.tabs.push(tab);\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.numOfOnes = function(n)\n  {\n  \tvar num = 0;\n  \tfor(var i=0; i<32; i++) { if(((n>>>i)&1) != 0) { num++; } }\n  \treturn num;\n  };\n\n  Typr._lctf.readClassDef = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = [];\n  \tvar format = bin.readUshort(data, offset);  offset+=2;\n  \tif(format==1) \n  \t{\n  \t\tvar startGlyph  = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar glyphCount  = bin.readUshort(data, offset);  offset+=2;\n  \t\tfor(var i=0; i<glyphCount; i++)\n  \t\t{\n  \t\t\tobj.push(startGlyph+i);\n  \t\t\tobj.push(startGlyph+i);\n  \t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n  \t\t}\n  \t}\n  \tif(format==2)\n  \t{\n  \t\tvar count = bin.readUshort(data, offset);  offset+=2;\n  \t\tfor(var i=0; i<count; i++)\n  \t\t{\n  \t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n  \t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n  \t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\n  \t\t}\n  \t}\n  \treturn obj;\n  };\n  Typr._lctf.getInterval = function(tab, val)\n  {\n  \tfor(var i=0; i<tab.length; i+=3)\n  \t{\n  \t\tvar start = tab[i], end = tab[i+1], index = tab[i+2];\n  \t\tif(start<=val && val<=end) { return i; }\n  \t}\n  \treturn -1;\n  };\n\n\n  Typr._lctf.readCoverage = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar cvg = {};\n  \tcvg.fmt   = bin.readUshort(data, offset);  offset+=2;\n  \tvar count = bin.readUshort(data, offset);  offset+=2;\n  \t//console.log(\"parsing coverage\", offset-4, format, count);\n  \tif(cvg.fmt==1) { cvg.tab = bin.readUshorts(data, offset, count); } \n  \tif(cvg.fmt==2) { cvg.tab = bin.readUshorts(data, offset, count*3); }\n  \treturn cvg;\n  };\n\n  Typr._lctf.coverageIndex = function(cvg, val)\n  {\n  \tvar tab = cvg.tab;\n  \tif(cvg.fmt==1) { return tab.indexOf(val); }\n  \tif(cvg.fmt==2) {\n  \t\tvar ind = Typr._lctf.getInterval(tab, val);\n  \t\tif(ind!=-1) { return tab[ind+2] + (val - tab[ind]); }\n  \t}\n  \treturn -1;\n  };\n\n  Typr._lctf.readFeatureList = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = [];\n  \t\n  \tvar count = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tfor(var i=0; i<count; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\n  \t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n  \t\tobj.push({tag: tag.trim(), tab:Typr._lctf.readFeatureTable(data, offset0 + noff)});\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.readFeatureTable = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \t\n  \tvar featureParams = bin.readUshort(data, offset);  offset+=2;\t// = 0\n  \tvar lookupCount = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tvar indices = [];\n  \tfor(var i=0; i<lookupCount; i++) { indices.push(bin.readUshort(data, offset+2*i)); }\n  \treturn indices;\n  };\n\n\n  Typr._lctf.readScriptList = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = {};\n  \t\n  \tvar count = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tfor(var i=0; i<count; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\n  \t\tvar noff = bin.readUshort(data, offset);  offset+=2;\n  \t\tobj[tag.trim()] = Typr._lctf.readScriptTable(data, offset0 + noff);\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.readScriptTable = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = {};\n  \t\n  \tvar defLangSysOff = bin.readUshort(data, offset);  offset+=2;\n  \tobj.default = Typr._lctf.readLangSysTable(data, offset0 + defLangSysOff);\n  \t\n  \tvar langSysCount = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tfor(var i=0; i<langSysCount; i++)\n  \t{\n  \t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\n  \t\tvar langSysOff = bin.readUshort(data, offset);  offset+=2;\n  \t\tobj[tag.trim()] = Typr._lctf.readLangSysTable(data, offset0 + langSysOff);\n  \t}\n  \treturn obj;\n  };\n\n  Typr._lctf.readLangSysTable = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tvar lookupOrder = bin.readUshort(data, offset);  offset+=2;\n  \t//if(lookupOrder!=0)  throw \"lookupOrder not 0\";\n  \tobj.reqFeature = bin.readUshort(data, offset);  offset+=2;\n  \t//if(obj.reqFeature != 0xffff) throw \"reqFeatureIndex != 0xffff\";\n  \t\n  \t//console.log(lookupOrder, obj.reqFeature);\n  \t\n  \tvar featureCount = bin.readUshort(data, offset);  offset+=2;\n  \tobj.features = bin.readUshorts(data, offset, featureCount);\n  \treturn obj;\n  };\n\n  \tTypr.CFF = {};\n  \tTypr.CFF.parse = function(data, offset, length)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tdata = new Uint8Array(data.buffer, offset, length);\n  \t\toffset = 0;\n  \t\t\n  \t\t// Header\n  \t\tvar major = data[offset];  offset++;\n  \t\tvar minor = data[offset];  offset++;\n  \t\tvar hdrSize = data[offset];  offset++;\n  \t\tvar offsize = data[offset];  offset++;\n  \t\t//console.log(major, minor, hdrSize, offsize);\n  \t\t\n  \t\t// Name INDEX\n  \t\tvar ninds = [];\n  \t\toffset = Typr.CFF.readIndex(data, offset, ninds);\n  \t\tvar names = [];\n  \t\t\n  \t\tfor(var i=0; i<ninds.length-1; i++) { names.push(bin.readASCII(data, offset+ninds[i], ninds[i+1]-ninds[i])); }\n  \t\toffset += ninds[ninds.length-1];\n  \t\t\n  \t\t\n  \t\t// Top DICT INDEX\n  \t\tvar tdinds = [];\n  \t\toffset = Typr.CFF.readIndex(data, offset, tdinds);  //console.log(tdinds);\n  \t\t// Top DICT Data\n  \t\tvar topDicts = [];\n  \t\tfor(var i=0; i<tdinds.length-1; i++) { topDicts.push( Typr.CFF.readDict(data, offset+tdinds[i], offset+tdinds[i+1]) ); }\n  \t\toffset += tdinds[tdinds.length-1];\n  \t\tvar topdict = topDicts[0];\n  \t\t//console.log(topdict);\n  \t\t\n  \t\t// String INDEX\n  \t\tvar sinds = [];\n  \t\toffset = Typr.CFF.readIndex(data, offset, sinds);\n  \t\t// String Data\n  \t\tvar strings = [];\n  \t\tfor(var i=0; i<sinds.length-1; i++) { strings.push(bin.readASCII(data, offset+sinds[i], sinds[i+1]-sinds[i])); }\n  \t\toffset += sinds[sinds.length-1];\n  \t\t\n  \t\t// Global Subr INDEX  (subroutines)\t\t\n  \t\tTypr.CFF.readSubrs(data, offset, topdict);\n  \t\t\n  \t\t// charstrings\n  \t\tif(topdict.CharStrings)\n  \t\t{\n  \t\t\toffset = topdict.CharStrings;\n  \t\t\tvar sinds = [];\n  \t\t\toffset = Typr.CFF.readIndex(data, offset, sinds);\n  \t\t\t\n  \t\t\tvar cstr = [];\n  \t\t\tfor(var i=0; i<sinds.length-1; i++) { cstr.push(bin.readBytes(data, offset+sinds[i], sinds[i+1]-sinds[i])); }\n  \t\t\t//offset += sinds[sinds.length-1];\n  \t\t\ttopdict.CharStrings = cstr;\n  \t\t\t//console.log(topdict.CharStrings);\n  \t\t}\n  \t\t\n  \t\t// CID font\n  \t\tif(topdict.ROS) {\n  \t\t\toffset = topdict.FDArray;\n  \t\t\tvar fdind = [];\n  \t\t\toffset = Typr.CFF.readIndex(data, offset, fdind);\n  \t\t\t\n  \t\t\ttopdict.FDArray = [];\n  \t\t\tfor(var i=0; i<fdind.length-1; i++) {\n  \t\t\t\tvar dict = Typr.CFF.readDict(data, offset+fdind[i], offset+fdind[i+1]);\n  \t\t\t\tTypr.CFF._readFDict(data, dict, strings);\n  \t\t\t\ttopdict.FDArray.push( dict );\n  \t\t\t}\n  \t\t\toffset += fdind[fdind.length-1];\n  \t\t\t\n  \t\t\toffset = topdict.FDSelect;\n  \t\t\ttopdict.FDSelect = [];\n  \t\t\tvar fmt = data[offset];  offset++;\n  \t\t\tif(fmt==3) {\n  \t\t\t\tvar rns = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tfor(var i=0; i<rns+1; i++) {\n  \t\t\t\t\ttopdict.FDSelect.push(bin.readUshort(data, offset), data[offset+2]);  offset+=3;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t\telse { throw fmt; }\n  \t\t}\n  \t\t\n  \t\t// Encoding\n  \t\tif(topdict.Encoding) { topdict.Encoding = Typr.CFF.readEncoding(data, topdict.Encoding, topdict.CharStrings.length); }\n  \t\t\n  \t\t// charset\n  \t\tif(topdict.charset ) { topdict.charset  = Typr.CFF.readCharset (data, topdict.charset , topdict.CharStrings.length); }\n  \t\t\n  \t\tTypr.CFF._readFDict(data, topdict, strings);\n  \t\treturn topdict;\n  \t};\n  \tTypr.CFF._readFDict = function(data, dict, ss) {\n  \t\tvar offset;\n  \t\tif(dict.Private) {\n  \t\t\toffset = dict.Private[1];\n  \t\t\tdict.Private = Typr.CFF.readDict(data, offset, offset+dict.Private[0]);\n  \t\t\tif(dict.Private.Subrs)  { Typr.CFF.readSubrs(data, offset+dict.Private.Subrs, dict.Private); }\n  \t\t}\n  \t\tfor(var p in dict) { if([\"FamilyName\",\"FontName\",\"FullName\",\"Notice\",\"version\",\"Copyright\"].indexOf(p)!=-1)  { dict[p]=ss[dict[p] -426 + 35]; } }\n  \t};\n  \t\n  \tTypr.CFF.readSubrs = function(data, offset, obj)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\tvar gsubinds = [];\n  \t\toffset = Typr.CFF.readIndex(data, offset, gsubinds);\n  \t\t\n  \t\tvar bias, nSubrs = gsubinds.length;\n  \t\tif (nSubrs <  1240) { bias = 107; }\n  \t\telse if (nSubrs < 33900) { bias = 1131; }\n  \t\telse { bias = 32768; }\n  \t\tobj.Bias = bias;\n  \t\t\n  \t\tobj.Subrs = [];\n  \t\tfor(var i=0; i<gsubinds.length-1; i++) { obj.Subrs.push(bin.readBytes(data, offset+gsubinds[i], gsubinds[i+1]-gsubinds[i])); }\n  \t\t//offset += gsubinds[gsubinds.length-1];\n  \t};\n  \t\n  \tTypr.CFF.tableSE = [\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        1,   2,   3,   4,   5,   6,   7,   8,\n        9,  10,  11,  12,  13,  14,  15,  16,\n       17,  18,  19,  20,  21,  22,  23,  24,\n       25,  26,  27,  28,  29,  30,  31,  32,\n       33,  34,  35,  36,  37,  38,  39,  40,\n       41,  42,  43,  44,  45,  46,  47,  48,\n       49,  50,  51,  52,  53,  54,  55,  56,\n       57,  58,  59,  60,  61,  62,  63,  64,\n       65,  66,  67,  68,  69,  70,  71,  72,\n       73,  74,  75,  76,  77,  78,  79,  80,\n       81,  82,  83,  84,  85,  86,  87,  88,\n       89,  90,  91,  92,  93,  94,  95,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0,  96,  97,  98,  99, 100, 101, 102,\n      103, 104, 105, 106, 107, 108, 109, 110,\n        0, 111, 112, 113, 114,   0, 115, 116,\n      117, 118, 119, 120, 121, 122,   0, 123,\n        0, 124, 125, 126, 127, 128, 129, 130,\n      131,   0, 132, 133,   0, 134, 135, 136,\n      137,   0,   0,   0,   0,   0,   0,   0,\n        0,   0,   0,   0,   0,   0,   0,   0,\n        0, 138,   0, 139,   0,   0,   0,   0,\n      140, 141, 142, 143,   0,   0,   0,   0,\n        0, 144,   0,   0,   0, 145,   0,   0,\n      146, 147, 148, 149,   0,   0,   0,   0\n    ];\n    \n  \tTypr.CFF.glyphByUnicode = function(cff, code)\n  \t{\n  \t\tfor(var i=0; i<cff.charset.length; i++) { if(cff.charset[i]==code) { return i; } }\n  \t\treturn -1;\n  \t};\n  \t\n  \tTypr.CFF.glyphBySE = function(cff, charcode)\t// glyph by standard encoding\n  \t{\n  \t\tif ( charcode < 0 || charcode > 255 ) { return -1; }\n  \t\treturn Typr.CFF.glyphByUnicode(cff, Typr.CFF.tableSE[charcode]);\t\t\n  \t};\n  \t\n  \tTypr.CFF.readEncoding = function(data, offset, num)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tvar array = ['.notdef'];\n  \t\tvar format = data[offset];  offset++;\n  \t\t//console.log(\"Encoding\");\n  \t\t//console.log(format);\n  \t\t\n  \t\tif(format==0)\n  \t\t{\n  \t\t\tvar nCodes = data[offset];  offset++;\n  \t\t\tfor(var i=0; i<nCodes; i++)  { array.push(data[offset+i]); }\n  \t\t}\n  \t\t/*\n  \t\telse if(format==1 || format==2)\n  \t\t{\n  \t\t\twhile(charset.length<num)\n  \t\t\t{\n  \t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tvar nLeft=0;\n  \t\t\t\tif(format==1) {  nLeft = data[offset];  offset++;  }\n  \t\t\t\telse          {  nLeft = bin.readUshort(data, offset);  offset+=2;  }\n  \t\t\t\tfor(var i=0; i<=nLeft; i++)  {  charset.push(first);  first++;  }\n  \t\t\t}\n  \t\t}\n  \t\t*/\n  \t\telse { throw \"error: unknown encoding format: \" + format; }\n  \t\t\n  \t\treturn array;\n  \t};\n\n  \tTypr.CFF.readCharset = function(data, offset, num)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tvar charset = ['.notdef'];\n  \t\tvar format = data[offset];  offset++;\n  \t\t\n  \t\tif(format==0)\n  \t\t{\n  \t\t\tfor(var i=0; i<num; i++) \n  \t\t\t{\n  \t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tcharset.push(first);\n  \t\t\t}\n  \t\t}\n  \t\telse if(format==1 || format==2)\n  \t\t{\n  \t\t\twhile(charset.length<num)\n  \t\t\t{\n  \t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tvar nLeft=0;\n  \t\t\t\tif(format==1) {  nLeft = data[offset];  offset++;  }\n  \t\t\t\telse          {  nLeft = bin.readUshort(data, offset);  offset+=2;  }\n  \t\t\t\tfor(var i=0; i<=nLeft; i++)  {  charset.push(first);  first++;  }\n  \t\t\t}\n  \t\t}\n  \t\telse { throw \"error: format: \" + format; }\n  \t\t\n  \t\treturn charset;\n  \t};\n\n  \tTypr.CFF.readIndex = function(data, offset, inds)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tvar count = bin.readUshort(data, offset)+1;  offset+=2;\n  \t\tvar offsize = data[offset];  offset++;\n  \t\t\n  \t\tif     (offsize==1) { for(var i=0; i<count; i++) { inds.push( data[offset+i] ); } }\n  \t\telse if(offsize==2) { for(var i=0; i<count; i++) { inds.push( bin.readUshort(data, offset+i*2) ); } }\n  \t\telse if(offsize==3) { for(var i=0; i<count; i++) { inds.push( bin.readUint  (data, offset+i*3 - 1) & 0x00ffffff ); } }\n  \t\telse if(count!=1) { throw \"unsupported offset size: \" + offsize + \", count: \" + count; }\n  \t\t\n  \t\toffset += count*offsize;\n  \t\treturn offset-1;\n  \t};\n  \t\n  \tTypr.CFF.getCharString = function(data, offset, o)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t\n  \t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\n  \t\tvar vs = 1;\n  \t\tvar op=null, val=null;\n  \t\t// operand\n  \t\tif(b0<=20) { op = b0;  vs=1;  }\n  \t\tif(b0==12) { op = b0*100+b1;  vs=2;  }\n  \t\t//if(b0==19 || b0==20) { op = b0/*+\" \"+b1*/;  vs=2; }\n  \t\tif(21 <=b0 && b0<= 27) { op = b0;  vs=1; }\n  \t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\n  \t\tif(29 <=b0 && b0<= 31) { op = b0;  vs=1; }\n  \t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\n  \t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\n  \t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\n  \t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;   }\n  \t\t\n  \t\to.val = val!=null ? val : \"o\"+op;\n  \t\to.size = vs;\n  \t};\n  \t\n  \tTypr.CFF.readCharString = function(data, offset, length)\n  \t{\n  \t\tvar end = offset + length;\n  \t\tvar bin = Typr._bin;\n  \t\tvar arr = [];\n  \t\t\n  \t\twhile(offset<end)\n  \t\t{\n  \t\t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\n  \t\t\tvar vs = 1;\n  \t\t\tvar op=null, val=null;\n  \t\t\t// operand\n  \t\t\tif(b0<=20) { op = b0;  vs=1;  }\n  \t\t\tif(b0==12) { op = b0*100+b1;  vs=2;  }\n  \t\t\tif(b0==19 || b0==20) { op = b0/*+\" \"+b1*/;  vs=2; }\n  \t\t\tif(21 <=b0 && b0<= 27) { op = b0;  vs=1; }\n  \t\t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\n  \t\t\tif(29 <=b0 && b0<= 31) { op = b0;  vs=1; }\n  \t\t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\n  \t\t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\n  \t\t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\n  \t\t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;   }\n  \t\t\t\n  \t\t\tarr.push(val!=null ? val : \"o\"+op);\n  \t\t\toffset += vs;\t\n\n  \t\t\t//var cv = arr[arr.length-1];\n  \t\t\t//if(cv==undefined) throw \"error\";\n  \t\t\t//console.log()\n  \t\t}\t\n  \t\treturn arr;\n  \t};\n\n  \tTypr.CFF.readDict = function(data, offset, end)\n  \t{\n  \t\tvar bin = Typr._bin;\n  \t\t//var dict = [];\n  \t\tvar dict = {};\n  \t\tvar carr = [];\n  \t\t\n  \t\twhile(offset<end)\n  \t\t{\n  \t\t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\n  \t\t\tvar vs = 1;\n  \t\t\tvar key=null, val=null;\n  \t\t\t// operand\n  \t\t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\n  \t\t\tif(b0==29) { val = bin.readInt  (data,offset+1);  vs=5; }\n  \t\t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\n  \t\t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\n  \t\t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\n  \t\t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;  throw \"unknown number\";  }\n  \t\t\t\n  \t\t\tif(b0==30) \n  \t\t\t{  \n  \t\t\t\tvar nibs = [];\n  \t\t\t\tvs = 1;\n  \t\t\t\twhile(true)\n  \t\t\t\t{\n  \t\t\t\t\tvar b = data[offset+vs];  vs++;\n  \t\t\t\t\tvar nib0 = b>>4, nib1 = b&0xf;\n  \t\t\t\t\tif(nib0 != 0xf) { nibs.push(nib0); }  if(nib1!=0xf) { nibs.push(nib1); }\n  \t\t\t\t\tif(nib1==0xf) { break; }\n  \t\t\t\t}\n  \t\t\t\tvar s = \"\";\n  \t\t\t\tvar chars = [0,1,2,3,4,5,6,7,8,9,\".\",\"e\",\"e-\",\"reserved\",\"-\",\"endOfNumber\"];\n  \t\t\t\tfor(var i=0; i<nibs.length; i++) { s += chars[nibs[i]]; }\n  \t\t\t\t//console.log(nibs);\n  \t\t\t\tval = parseFloat(s);\n  \t\t\t}\n  \t\t\t\n  \t\t\tif(b0<=21)\t// operator\n  \t\t\t{\n  \t\t\t\tvar keys = [\"version\", \"Notice\", \"FullName\", \"FamilyName\", \"Weight\", \"FontBBox\", \"BlueValues\", \"OtherBlues\", \"FamilyBlues\",\"FamilyOtherBlues\",\n  \t\t\t\t\t\"StdHW\", \"StdVW\", \"escape\", \"UniqueID\", \"XUID\", \"charset\", \"Encoding\", \"CharStrings\", \"Private\", \"Subrs\", \n  \t\t\t\t\t\"defaultWidthX\", \"nominalWidthX\"];\n  \t\t\t\t\t\n  \t\t\t\tkey = keys[b0];  vs=1;\n  \t\t\t\tif(b0==12) { \n  \t\t\t\t\tvar keys = [ \"Copyright\", \"isFixedPitch\", \"ItalicAngle\", \"UnderlinePosition\", \"UnderlineThickness\", \"PaintType\", \"CharstringType\", \"FontMatrix\", \"StrokeWidth\", \"BlueScale\",\n  \t\t\t\t\t\"BlueShift\", \"BlueFuzz\", \"StemSnapH\", \"StemSnapV\", \"ForceBold\", 0,0, \"LanguageGroup\", \"ExpansionFactor\", \"initialRandomSeed\",\n  \t\t\t\t\t\"SyntheticBase\", \"PostScript\", \"BaseFontName\", \"BaseFontBlend\", 0,0,0,0,0,0, \n  \t\t\t\t\t\"ROS\", \"CIDFontVersion\", \"CIDFontRevision\", \"CIDFontType\", \"CIDCount\", \"UIDBase\", \"FDArray\", \"FDSelect\", \"FontName\"];\n  \t\t\t\t\tkey = keys[b1];  vs=2; \n  \t\t\t\t}\n  \t\t\t}\n  \t\t\t\n  \t\t\tif(key!=null) {  dict[key] = carr.length==1 ? carr[0] : carr;  carr=[]; }\n  \t\t\telse  { carr.push(val); }  \n  \t\t\t\n  \t\t\toffset += vs;\t\t\n  \t\t}\t\n  \t\treturn dict;\n  \t};\n\n\n  Typr.cmap = {};\n  Typr.cmap.parse = function(data, offset, length)\n  {\n  \tdata = new Uint8Array(data.buffer, offset, length);\n  \toffset = 0;\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar version   = bin.readUshort(data, offset);  offset += 2;\n  \tvar numTables = bin.readUshort(data, offset);  offset += 2;\n  \t\n  \t//console.log(version, numTables);\n  \t\n  \tvar offs = [];\n  \tobj.tables = [];\n  \t\n  \t\n  \tfor(var i=0; i<numTables; i++)\n  \t{\n  \t\tvar platformID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar encodingID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar noffset = bin.readUint(data, offset);       offset += 4;\n  \t\t\n  \t\tvar id = \"p\"+platformID+\"e\"+encodingID;\n  \t\t\n  \t\t//console.log(\"cmap subtable\", platformID, encodingID, noffset);\n  \t\t\n  \t\t\n  \t\tvar tind = offs.indexOf(noffset);\n  \t\t\n  \t\tif(tind==-1)\n  \t\t{\n  \t\t\ttind = obj.tables.length;\n  \t\t\tvar subt;\n  \t\t\toffs.push(noffset);\n  \t\t\tvar format = bin.readUshort(data, noffset);\n  \t\t\tif     (format== 0) { subt = Typr.cmap.parse0(data, noffset); }\n  \t\t\telse if(format== 4) { subt = Typr.cmap.parse4(data, noffset); }\n  \t\t\telse if(format== 6) { subt = Typr.cmap.parse6(data, noffset); }\n  \t\t\telse if(format==12) { subt = Typr.cmap.parse12(data,noffset); }\n  \t\t\telse { console.log(\"unknown format: \"+format, platformID, encodingID, noffset); }\n  \t\t\tobj.tables.push(subt);\n  \t\t}\n  \t\t\n  \t\tif(obj[id]!=null) { throw \"multiple tables for one platform+encoding\"; }\n  \t\tobj[id] = tind;\n  \t}\n  \treturn obj;\n  };\n\n  Typr.cmap.parse0 = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tobj.format = bin.readUshort(data, offset);  offset += 2;\n  \tvar len    = bin.readUshort(data, offset);  offset += 2;\n  \tvar lang   = bin.readUshort(data, offset);  offset += 2;\n  \tobj.map = [];\n  \tfor(var i=0; i<len-6; i++) { obj.map.push(data[offset+i]); }\n  \treturn obj;\n  };\n\n  Typr.cmap.parse4 = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar offset0 = offset;\n  \tvar obj = {};\n  \t\n  \tobj.format = bin.readUshort(data, offset);  offset+=2;\n  \tvar length = bin.readUshort(data, offset);  offset+=2;\n  \tvar language = bin.readUshort(data, offset);  offset+=2;\n  \tvar segCountX2 = bin.readUshort(data, offset);  offset+=2;\n  \tvar segCount = segCountX2/2;\n  \tobj.searchRange = bin.readUshort(data, offset);  offset+=2;\n  \tobj.entrySelector = bin.readUshort(data, offset);  offset+=2;\n  \tobj.rangeShift = bin.readUshort(data, offset);  offset+=2;\n  \tobj.endCount   = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n  \toffset+=2;\n  \tobj.startCount = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n  \tobj.idDelta = [];\n  \tfor(var i=0; i<segCount; i++) {obj.idDelta.push(bin.readShort(data, offset));  offset+=2;}\n  \tobj.idRangeOffset = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\n  \tobj.glyphIdArray = [];\n  \twhile(offset< offset0+length) {obj.glyphIdArray.push(bin.readUshort(data, offset));  offset+=2;}\n  \treturn obj;\n  };\n\n  Typr.cmap.parse6 = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tobj.format = bin.readUshort(data, offset);  offset+=2;\n  \tvar length = bin.readUshort(data, offset);  offset+=2;\n  \tvar language = bin.readUshort(data, offset);  offset+=2;\n  \tobj.firstCode = bin.readUshort(data, offset);  offset+=2;\n  \tvar entryCount = bin.readUshort(data, offset);  offset+=2;\n  \tobj.glyphIdArray = [];\n  \tfor(var i=0; i<entryCount; i++) {obj.glyphIdArray.push(bin.readUshort(data, offset));  offset+=2;}\n  \t\n  \treturn obj;\n  };\n\n  Typr.cmap.parse12 = function(data, offset)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tobj.format = bin.readUshort(data, offset);  offset+=2;\n  \toffset += 2;\n  \tvar length = bin.readUint(data, offset);  offset+=4;\n  \tvar lang   = bin.readUint(data, offset);  offset+=4;\n  \tvar nGroups= bin.readUint(data, offset);  offset+=4;\n  \tobj.groups = [];\n  \t\n  \tfor(var i=0; i<nGroups; i++)  \n  \t{\n  \t\tvar off = offset + i * 12;\n  \t\tvar startCharCode = bin.readUint(data, off+0);\n  \t\tvar endCharCode   = bin.readUint(data, off+4);\n  \t\tvar startGlyphID  = bin.readUint(data, off+8);\n  \t\tobj.groups.push([  startCharCode, endCharCode, startGlyphID  ]);\n  \t}\n  \treturn obj;\n  };\n\n  Typr.glyf = {};\n  Typr.glyf.parse = function(data, offset, length, font)\n  {\n  \tvar obj = [];\n  \tfor(var g=0; g<font.maxp.numGlyphs; g++) { obj.push(null); }\n  \treturn obj;\n  };\n\n  Typr.glyf._parseGlyf = function(font, g)\n  {\n  \tvar bin = Typr._bin;\n  \tvar data = font._data;\n  \t\n  \tvar offset = Typr._tabOffset(data, \"glyf\", font._offset) + font.loca[g];\n  \t\t\n  \tif(font.loca[g]==font.loca[g+1]) { return null; }\n  \t\t\n  \tvar gl = {};\n  \t\t\n  \tgl.noc  = bin.readShort(data, offset);  offset+=2;\t\t// number of contours\n  \tgl.xMin = bin.readShort(data, offset);  offset+=2;\n  \tgl.yMin = bin.readShort(data, offset);  offset+=2;\n  \tgl.xMax = bin.readShort(data, offset);  offset+=2;\n  \tgl.yMax = bin.readShort(data, offset);  offset+=2;\n  \t\n  \tif(gl.xMin>=gl.xMax || gl.yMin>=gl.yMax) { return null; }\n  \t\t\n  \tif(gl.noc>0)\n  \t{\n  \t\tgl.endPts = [];\n  \t\tfor(var i=0; i<gl.noc; i++) { gl.endPts.push(bin.readUshort(data,offset)); offset+=2; }\n  \t\t\n  \t\tvar instructionLength = bin.readUshort(data,offset); offset+=2;\n  \t\tif((data.length-offset)<instructionLength) { return null; }\n  \t\tgl.instructions = bin.readBytes(data, offset, instructionLength);   offset+=instructionLength;\n  \t\t\n  \t\tvar crdnum = gl.endPts[gl.noc-1]+1;\n  \t\tgl.flags = [];\n  \t\tfor(var i=0; i<crdnum; i++ ) \n  \t\t{ \n  \t\t\tvar flag = data[offset];  offset++; \n  \t\t\tgl.flags.push(flag); \n  \t\t\tif((flag&8)!=0)\n  \t\t\t{\n  \t\t\t\tvar rep = data[offset];  offset++;\n  \t\t\t\tfor(var j=0; j<rep; j++) { gl.flags.push(flag); i++; }\n  \t\t\t}\n  \t\t}\n  \t\tgl.xs = [];\n  \t\tfor(var i=0; i<crdnum; i++) {\n  \t\t\tvar i8=((gl.flags[i]&2)!=0), same=((gl.flags[i]&16)!=0);  \n  \t\t\tif(i8) { gl.xs.push(same ? data[offset] : -data[offset]);  offset++; }\n  \t\t\telse\n  \t\t\t{\n  \t\t\t\tif(same) { gl.xs.push(0); }\n  \t\t\t\telse { gl.xs.push(bin.readShort(data, offset));  offset+=2; }\n  \t\t\t}\n  \t\t}\n  \t\tgl.ys = [];\n  \t\tfor(var i=0; i<crdnum; i++) {\n  \t\t\tvar i8=((gl.flags[i]&4)!=0), same=((gl.flags[i]&32)!=0);  \n  \t\t\tif(i8) { gl.ys.push(same ? data[offset] : -data[offset]);  offset++; }\n  \t\t\telse\n  \t\t\t{\n  \t\t\t\tif(same) { gl.ys.push(0); }\n  \t\t\t\telse { gl.ys.push(bin.readShort(data, offset));  offset+=2; }\n  \t\t\t}\n  \t\t}\n  \t\tvar x = 0, y = 0;\n  \t\tfor(var i=0; i<crdnum; i++) { x += gl.xs[i]; y += gl.ys[i];  gl.xs[i]=x;  gl.ys[i]=y; }\n  \t\t//console.log(endPtsOfContours, instructionLength, instructions, flags, xCoordinates, yCoordinates);\n  \t}\n  \telse\n  \t{\n  \t\tvar ARG_1_AND_2_ARE_WORDS\t= 1<<0;\n  \t\tvar ARGS_ARE_XY_VALUES\t\t= 1<<1;\n  \t\tvar WE_HAVE_A_SCALE\t\t\t= 1<<3;\n  \t\tvar MORE_COMPONENTS\t\t\t= 1<<5;\n  \t\tvar WE_HAVE_AN_X_AND_Y_SCALE= 1<<6;\n  \t\tvar WE_HAVE_A_TWO_BY_TWO\t= 1<<7;\n  \t\tvar WE_HAVE_INSTRUCTIONS\t= 1<<8;\n  \t\t\n  \t\tgl.parts = [];\n  \t\tvar flags;\n  \t\tdo {\n  \t\t\tflags = bin.readUshort(data, offset);  offset += 2;\n  \t\t\tvar part = { m:{a:1,b:0,c:0,d:1,tx:0,ty:0}, p1:-1, p2:-1 };  gl.parts.push(part);\n  \t\t\tpart.glyphIndex = bin.readUshort(data, offset);  offset += 2;\n  \t\t\tif ( flags & ARG_1_AND_2_ARE_WORDS) {\n  \t\t\t\tvar arg1 = bin.readShort(data, offset);  offset += 2;\n  \t\t\t\tvar arg2 = bin.readShort(data, offset);  offset += 2;\n  \t\t\t} else {\n  \t\t\t\tvar arg1 = bin.readInt8(data, offset);  offset ++;\n  \t\t\t\tvar arg2 = bin.readInt8(data, offset);  offset ++;\n  \t\t\t}\n  \t\t\t\n  \t\t\tif(flags & ARGS_ARE_XY_VALUES) { part.m.tx = arg1;  part.m.ty = arg2; }\n  \t\t\telse  {  part.p1=arg1;  part.p2=arg2;  }\n  \t\t\t//part.m.tx = arg1;  part.m.ty = arg2;\n  \t\t\t//else { throw \"params are not XY values\"; }\n  \t\t\t\n  \t\t\tif ( flags & WE_HAVE_A_SCALE ) {\n  \t\t\t\tpart.m.a = part.m.d = bin.readF2dot14(data, offset);  offset += 2;    \n  \t\t\t} else if ( flags & WE_HAVE_AN_X_AND_Y_SCALE ) {\n  \t\t\t\tpart.m.a = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t\tpart.m.d = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t} else if ( flags & WE_HAVE_A_TWO_BY_TWO ) {\n  \t\t\t\tpart.m.a = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t\tpart.m.b = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t\tpart.m.c = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t\tpart.m.d = bin.readF2dot14(data, offset);  offset += 2; \n  \t\t\t}\n  \t\t} while ( flags & MORE_COMPONENTS ) \n  \t\tif (flags & WE_HAVE_INSTRUCTIONS){\n  \t\t\tvar numInstr = bin.readUshort(data, offset);  offset += 2;\n  \t\t\tgl.instr = [];\n  \t\t\tfor(var i=0; i<numInstr; i++) { gl.instr.push(data[offset]);  offset++; }\n  \t\t}\n  \t}\n  \treturn gl;\n  };\n\n\n  Typr.GPOS = {};\n  Typr.GPOS.parse = function(data, offset, length, font) {  return Typr._lctf.parse(data, offset, length, font, Typr.GPOS.subt);  };\n\n\n  Typr.GPOS.subt = function(data, ltype, offset)\t// lookup type\n  {\n  \tvar bin = Typr._bin, offset0 = offset, tab = {};\n  \t\n  \ttab.fmt  = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \t//console.log(ltype, tab.fmt);\n  \t\n  \tif(ltype==1 || ltype==2 || ltype==3 || ltype==7 || (ltype==8 && tab.fmt<=2)) {\n  \t\tvar covOff  = bin.readUshort(data, offset);  offset+=2;\n  \t\ttab.coverage = Typr._lctf.readCoverage(data, covOff+offset0);\n  \t}\n  \tif(ltype==1 && tab.fmt==1) {\n  \t\tvar valFmt1 = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar ones1 = Typr._lctf.numOfOnes(valFmt1);\n  \t\tif(valFmt1!=0)  { tab.pos = Typr.GPOS.readValueRecord(data, offset, valFmt1); }\n  \t}\n  \telse if(ltype==2) {\n  \t\tvar valFmt1 = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar valFmt2 = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar ones1 = Typr._lctf.numOfOnes(valFmt1);\n  \t\tvar ones2 = Typr._lctf.numOfOnes(valFmt2);\n  \t\tif(tab.fmt==1)\n  \t\t{\n  \t\t\ttab.pairsets = [];\n  \t\t\tvar psc = bin.readUshort(data, offset);  offset+=2;  // PairSetCount\n  \t\t\t\n  \t\t\tfor(var i=0; i<psc; i++)\n  \t\t\t{\n  \t\t\t\tvar psoff = offset0 + bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\t\n  \t\t\t\tvar pvc = bin.readUshort(data, psoff);  psoff+=2;\n  \t\t\t\tvar arr = [];\n  \t\t\t\tfor(var j=0; j<pvc; j++)\n  \t\t\t\t{\n  \t\t\t\t\tvar gid2 = bin.readUshort(data, psoff);  psoff+=2;\n  \t\t\t\t\tvar value1, value2;\n  \t\t\t\t\tif(valFmt1!=0) {  value1 = Typr.GPOS.readValueRecord(data, psoff, valFmt1);  psoff+=ones1*2;  }\n  \t\t\t\t\tif(valFmt2!=0) {  value2 = Typr.GPOS.readValueRecord(data, psoff, valFmt2);  psoff+=ones2*2;  }\n  \t\t\t\t\t//if(value1!=null) throw \"e\";\n  \t\t\t\t\tarr.push({gid2:gid2, val1:value1, val2:value2});\n  \t\t\t\t}\n  \t\t\t\ttab.pairsets.push(arr);\n  \t\t\t}\n  \t\t}\n  \t\tif(tab.fmt==2)\n  \t\t{\n  \t\t\tvar classDef1 = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar classDef2 = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar class1Count = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar class2Count = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\n  \t\t\ttab.classDef1 = Typr._lctf.readClassDef(data, offset0 + classDef1);\n  \t\t\ttab.classDef2 = Typr._lctf.readClassDef(data, offset0 + classDef2);\n  \t\t\t\n  \t\t\ttab.matrix = [];\n  \t\t\tfor(var i=0; i<class1Count; i++)\n  \t\t\t{\n  \t\t\t\tvar row = [];\n  \t\t\t\tfor(var j=0; j<class2Count; j++)\n  \t\t\t\t{\n  \t\t\t\t\tvar value1 = null, value2 = null;\n  \t\t\t\t\tif(tab.valFmt1!=0) { value1 = Typr.GPOS.readValueRecord(data, offset, tab.valFmt1);  offset+=ones1*2; }\n  \t\t\t\t\tif(tab.valFmt2!=0) { value2 = Typr.GPOS.readValueRecord(data, offset, tab.valFmt2);  offset+=ones2*2; }\n  \t\t\t\t\trow.push({val1:value1, val2:value2});\n  \t\t\t\t}\n  \t\t\t\ttab.matrix.push(row);\n  \t\t\t}\n  \t\t}\n  \t}\n  \treturn tab;\n  };\n\n\n  Typr.GPOS.readValueRecord = function(data, offset, valFmt)\n  {\n  \tvar bin = Typr._bin;\n  \tvar arr = [];\n  \tarr.push( (valFmt&1) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&1) ? 2 : 0;  // X_PLACEMENT\n  \tarr.push( (valFmt&2) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&2) ? 2 : 0;  // Y_PLACEMENT\n  \tarr.push( (valFmt&4) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&4) ? 2 : 0;  // X_ADVANCE\n  \tarr.push( (valFmt&8) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&8) ? 2 : 0;  // Y_ADVANCE\n  \treturn arr;\n  };\n\n  Typr.GSUB = {};\n  Typr.GSUB.parse = function(data, offset, length, font) {  return Typr._lctf.parse(data, offset, length, font, Typr.GSUB.subt);  };\n\n\n  Typr.GSUB.subt = function(data, ltype, offset)\t// lookup type\n  {\n  \tvar bin = Typr._bin, offset0 = offset, tab = {};\n  \t\n  \ttab.fmt  = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tif(ltype!=1 && ltype!=4 && ltype!=5 && ltype!=6) { return null; }\n  \t\n  \tif(ltype==1 || ltype==4 || (ltype==5 && tab.fmt<=2) || (ltype==6 && tab.fmt<=2)) {\n  \t\tvar covOff  = bin.readUshort(data, offset);  offset+=2;\n  \t\ttab.coverage = Typr._lctf.readCoverage(data, offset0+covOff);\t// not always is coverage here\n  \t}\n  \t\n  \tif(ltype==1) {\t\n  \t\tif(tab.fmt==1) {\n  \t\t\ttab.delta = bin.readShort(data, offset);  offset+=2;\n  \t\t}\n  \t\telse if(tab.fmt==2) {\n  \t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\t\ttab.newg = bin.readUshorts(data, offset, cnt);  offset+=tab.newg.length*2;\n  \t\t}\n  \t}\n  \t//  Ligature Substitution Subtable\n  \telse if(ltype==4) {\n  \t\ttab.vals = [];\n  \t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\tfor(var i=0; i<cnt; i++) {\n  \t\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n  \t\t\ttab.vals.push(Typr.GSUB.readLigatureSet(data, offset0+loff));\n  \t\t}\n  \t\t//console.log(tab.coverage);\n  \t\t//console.log(tab.vals);\n  \t} \n  \t//  Contextual Substitution Subtable\n  \telse if(ltype==5) {\n  \t\tif(tab.fmt==2) {\n  \t\t\tvar cDefOffset = bin.readUshort(data, offset);  offset+=2;\n  \t\t\ttab.cDef = Typr._lctf.readClassDef(data, offset0 + cDefOffset);\n  \t\t\ttab.scset = [];\n  \t\t\tvar subClassSetCount = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tfor(var i=0; i<subClassSetCount; i++)\n  \t\t\t{\n  \t\t\t\tvar scsOff = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\ttab.scset.push(  scsOff==0 ? null : Typr.GSUB.readSubClassSet(data, offset0 + scsOff)  );\n  \t\t\t}\n  \t\t}\n  \t\t//else console.log(\"unknown table format\", tab.fmt);\n  \t}\n  \t//*\n  \telse if(ltype==6) {\n  \t\t/*\n  \t\tif(tab.fmt==2) {\n  \t\t\tvar btDef = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar inDef = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tvar laDef = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\n  \t\t\ttab.btDef = Typr._lctf.readClassDef(data, offset0 + btDef);\n  \t\t\ttab.inDef = Typr._lctf.readClassDef(data, offset0 + inDef);\n  \t\t\ttab.laDef = Typr._lctf.readClassDef(data, offset0 + laDef);\n  \t\t\t\n  \t\t\ttab.scset = [];\n  \t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\t\tfor(var i=0; i<cnt; i++) {\n  \t\t\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\ttab.scset.push(Typr.GSUB.readChainSubClassSet(data, offset0+loff));\n  \t\t\t}\n  \t\t}\n  \t\t*/\n  \t\tif(tab.fmt==3) {\n  \t\t\tfor(var i=0; i<3; i++) {\n  \t\t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\t\t\tvar cvgs = [];\n  \t\t\t\tfor(var j=0; j<cnt; j++) { cvgs.push(  Typr._lctf.readCoverage(data, offset0 + bin.readUshort(data, offset+j*2))   ); }\n  \t\t\t\toffset+=cnt*2;\n  \t\t\t\tif(i==0) { tab.backCvg = cvgs; }\n  \t\t\t\tif(i==1) { tab.inptCvg = cvgs; }\n  \t\t\t\tif(i==2) { tab.ahedCvg = cvgs; }\n  \t\t\t}\n  \t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \t\t\ttab.lookupRec = Typr.GSUB.readSubstLookupRecords(data, offset, cnt);\n  \t\t}\n  \t\t//console.log(tab);\n  \t} //*/\n  \t//if(tab.coverage.indexOf(3)!=-1) console.log(ltype, fmt, tab);\n  \t\n  \treturn tab;\n  };\n\n  Typr.GSUB.readSubClassSet = function(data, offset)\n  {\n  \tvar rUs = Typr._bin.readUshort, offset0 = offset, lset = [];\n  \tvar cnt = rUs(data, offset);  offset+=2;\n  \tfor(var i=0; i<cnt; i++) {\n  \t\tvar loff = rUs(data, offset);  offset+=2;\n  \t\tlset.push(Typr.GSUB.readSubClassRule(data, offset0+loff));\n  \t}\n  \treturn lset;\n  };\n  Typr.GSUB.readSubClassRule= function(data, offset)\n  {\n  \tvar rUs = Typr._bin.readUshort, rule = {};\n  \tvar gcount = rUs(data, offset);  offset+=2;\n  \tvar scount = rUs(data, offset);  offset+=2;\n  \trule.input = [];\n  \tfor(var i=0; i<gcount-1; i++) {\n  \t\trule.input.push(rUs(data, offset));  offset+=2;\n  \t}\n  \trule.substLookupRecords = Typr.GSUB.readSubstLookupRecords(data, offset, scount);\n  \treturn rule;\n  };\n  Typr.GSUB.readSubstLookupRecords = function(data, offset, cnt)\n  {\n  \tvar rUs = Typr._bin.readUshort;\n  \tvar out = [];\n  \tfor(var i=0; i<cnt; i++) {  out.push(rUs(data, offset), rUs(data, offset+2));  offset+=4;  }\n  \treturn out;\n  };\n\n  Typr.GSUB.readChainSubClassSet = function(data, offset)\n  {\n  \tvar bin = Typr._bin, offset0 = offset, lset = [];\n  \tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var i=0; i<cnt; i++) {\n  \t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n  \t\tlset.push(Typr.GSUB.readChainSubClassRule(data, offset0+loff));\n  \t}\n  \treturn lset;\n  };\n  Typr.GSUB.readChainSubClassRule= function(data, offset)\n  {\n  \tvar bin = Typr._bin, rule = {};\n  \tvar pps = [\"backtrack\", \"input\", \"lookahead\"];\n  \tfor(var pi=0; pi<pps.length; pi++) {\n  \t\tvar cnt = bin.readUshort(data, offset);  offset+=2;  if(pi==1) { cnt--; }\n  \t\trule[pps[pi]]=bin.readUshorts(data, offset, cnt);  offset+= rule[pps[pi]].length*2;\n  \t}\n  \tvar cnt = bin.readUshort(data, offset);  offset+=2;\n  \trule.subst = bin.readUshorts(data, offset, cnt*2);  offset += rule.subst.length*2;\n  \treturn rule;\n  };\n\n  Typr.GSUB.readLigatureSet = function(data, offset)\n  {\n  \tvar bin = Typr._bin, offset0 = offset, lset = [];\n  \tvar lcnt = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var j=0; j<lcnt; j++) {\n  \t\tvar loff = bin.readUshort(data, offset);  offset+=2;\n  \t\tlset.push(Typr.GSUB.readLigature(data, offset0+loff));\n  \t}\n  \treturn lset;\n  };\n  Typr.GSUB.readLigature = function(data, offset)\n  {\n  \tvar bin = Typr._bin, lig = {chain:[]};\n  \tlig.nglyph = bin.readUshort(data, offset);  offset+=2;\n  \tvar ccnt = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var k=0; k<ccnt-1; k++) {  lig.chain.push(bin.readUshort(data, offset));  offset+=2;  }\n  \treturn lig;\n  };\n\n\n\n  Typr.head = {};\n  Typr.head.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\n  \tobj.fontRevision = bin.readFixed(data, offset);  offset += 4;\n  \tvar checkSumAdjustment = bin.readUint(data, offset);  offset += 4;\n  \tvar magicNumber = bin.readUint(data, offset);  offset += 4;\n  \tobj.flags = bin.readUshort(data, offset);  offset += 2;\n  \tobj.unitsPerEm = bin.readUshort(data, offset);  offset += 2;\n  \tobj.created  = bin.readUint64(data, offset);  offset += 8;\n  \tobj.modified = bin.readUint64(data, offset);  offset += 8;\n  \tobj.xMin = bin.readShort(data, offset);  offset += 2;\n  \tobj.yMin = bin.readShort(data, offset);  offset += 2;\n  \tobj.xMax = bin.readShort(data, offset);  offset += 2;\n  \tobj.yMax = bin.readShort(data, offset);  offset += 2;\n  \tobj.macStyle = bin.readUshort(data, offset);  offset += 2;\n  \tobj.lowestRecPPEM = bin.readUshort(data, offset);  offset += 2;\n  \tobj.fontDirectionHint = bin.readShort(data, offset);  offset += 2;\n  \tobj.indexToLocFormat  = bin.readShort(data, offset);  offset += 2;\n  \tobj.glyphDataFormat   = bin.readShort(data, offset);  offset += 2;\n  \treturn obj;\n  };\n\n\n  Typr.hhea = {};\n  Typr.hhea.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\n  \tobj.ascender  = bin.readShort(data, offset);  offset += 2;\n  \tobj.descender = bin.readShort(data, offset);  offset += 2;\n  \tobj.lineGap = bin.readShort(data, offset);  offset += 2;\n  \t\n  \tobj.advanceWidthMax = bin.readUshort(data, offset);  offset += 2;\n  \tobj.minLeftSideBearing  = bin.readShort(data, offset);  offset += 2;\n  \tobj.minRightSideBearing = bin.readShort(data, offset);  offset += 2;\n  \tobj.xMaxExtent = bin.readShort(data, offset);  offset += 2;\n  \t\n  \tobj.caretSlopeRise = bin.readShort(data, offset);  offset += 2;\n  \tobj.caretSlopeRun  = bin.readShort(data, offset);  offset += 2;\n  \tobj.caretOffset    = bin.readShort(data, offset);  offset += 2;\n  \t\n  \toffset += 4*2;\n  \t\n  \tobj.metricDataFormat = bin.readShort (data, offset);  offset += 2;\n  \tobj.numberOfHMetrics = bin.readUshort(data, offset);  offset += 2;\n  \treturn obj;\n  };\n\n\n  Typr.hmtx = {};\n  Typr.hmtx.parse = function(data, offset, length, font)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tobj.aWidth = [];\n  \tobj.lsBearing = [];\n  \t\n  \t\n  \tvar aw = 0, lsb = 0;\n  \t\n  \tfor(var i=0; i<font.maxp.numGlyphs; i++)\n  \t{\n  \t\tif(i<font.hhea.numberOfHMetrics) {  aw=bin.readUshort(data, offset);  offset += 2;  lsb=bin.readShort(data, offset);  offset+=2;  }\n  \t\tobj.aWidth.push(aw);\n  \t\tobj.lsBearing.push(lsb);\n  \t}\n  \t\n  \treturn obj;\n  };\n\n\n  Typr.kern = {};\n  Typr.kern.parse = function(data, offset, length, font)\n  {\n  \tvar bin = Typr._bin;\n  \t\n  \tvar version = bin.readUshort(data, offset);  offset+=2;\n  \tif(version==1) { return Typr.kern.parseV1(data, offset-2, length, font); }\n  \tvar nTables = bin.readUshort(data, offset);  offset+=2;\n  \t\n  \tvar map = {glyph1: [], rval:[]};\n  \tfor(var i=0; i<nTables; i++)\n  \t{\n  \t\toffset+=2;\t// skip version\n  \t\tvar length  = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar coverage = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar format = coverage>>>8;\n  \t\t/* I have seen format 128 once, that's why I do */ format &= 0xf;\n  \t\tif(format==0) { offset = Typr.kern.readFormat0(data, offset, map); }\n  \t\telse { throw \"unknown kern table format: \"+format; }\n  \t}\n  \treturn map;\n  };\n\n  Typr.kern.parseV1 = function(data, offset, length, font)\n  {\n  \tvar bin = Typr._bin;\n  \t\n  \tvar version = bin.readFixed(data, offset);  offset+=4;\n  \tvar nTables = bin.readUint(data, offset);  offset+=4;\n  \t\n  \tvar map = {glyph1: [], rval:[]};\n  \tfor(var i=0; i<nTables; i++)\n  \t{\n  \t\tvar length = bin.readUint(data, offset);   offset+=4;\n  \t\tvar coverage = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar tupleIndex = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar format = coverage>>>8;\n  \t\t/* I have seen format 128 once, that's why I do */ format &= 0xf;\n  \t\tif(format==0) { offset = Typr.kern.readFormat0(data, offset, map); }\n  \t\telse { throw \"unknown kern table format: \"+format; }\n  \t}\n  \treturn map;\n  };\n\n  Typr.kern.readFormat0 = function(data, offset, map)\n  {\n  \tvar bin = Typr._bin;\n  \tvar pleft = -1;\n  \tvar nPairs        = bin.readUshort(data, offset);  offset+=2;\n  \tvar searchRange   = bin.readUshort(data, offset);  offset+=2;\n  \tvar entrySelector = bin.readUshort(data, offset);  offset+=2;\n  \tvar rangeShift    = bin.readUshort(data, offset);  offset+=2;\n  \tfor(var j=0; j<nPairs; j++)\n  \t{\n  \t\tvar left  = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar right = bin.readUshort(data, offset);  offset+=2;\n  \t\tvar value = bin.readShort (data, offset);  offset+=2;\n  \t\tif(left!=pleft) { map.glyph1.push(left);  map.rval.push({ glyph2:[], vals:[] }); }\n  \t\tvar rval = map.rval[map.rval.length-1];\n  \t\trval.glyph2.push(right);   rval.vals.push(value);\n  \t\tpleft = left;\n  \t}\n  \treturn offset;\n  };\n\n\n\n  Typr.loca = {};\n  Typr.loca.parse = function(data, offset, length, font)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = [];\n  \t\n  \tvar ver = font.head.indexToLocFormat;\n  \t//console.log(\"loca\", ver, length, 4*font.maxp.numGlyphs);\n  \tvar len = font.maxp.numGlyphs+1;\n  \t\n  \tif(ver==0) { for(var i=0; i<len; i++) { obj.push(bin.readUshort(data, offset+(i<<1))<<1); } }\n  \tif(ver==1) { for(var i=0; i<len; i++) { obj.push(bin.readUint  (data, offset+(i<<2))   ); } }\n  \t\n  \treturn obj;\n  };\n\n\n  Typr.maxp = {};\n  Typr.maxp.parse = function(data, offset, length)\n  {\n  \t//console.log(data.length, offset, length);\n  \t\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \t// both versions 0.5 and 1.0\n  \tvar ver = bin.readUint(data, offset); offset += 4;\n  \tobj.numGlyphs = bin.readUshort(data, offset);  offset += 2;\n  \t\n  \t// only 1.0\n  \tif(ver == 0x00010000)\n  \t{\n  \t\tobj.maxPoints             = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxContours           = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxCompositePoints    = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxCompositeContours  = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxZones              = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxTwilightPoints     = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxStorage            = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxFunctionDefs       = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxInstructionDefs    = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxStackElements      = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxSizeOfInstructions = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxComponentElements  = bin.readUshort(data, offset);  offset += 2;\n  \t\tobj.maxComponentDepth     = bin.readUshort(data, offset);  offset += 2;\n  \t}\n  \t\n  \treturn obj;\n  };\n\n\n  Typr.name = {};\n  Typr.name.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \tvar format = bin.readUshort(data, offset);  offset += 2;\n  \tvar count  = bin.readUshort(data, offset);  offset += 2;\n  \tvar stringOffset = bin.readUshort(data, offset);  offset += 2;\n  \t\n  \t//console.log(format,count);\n  \t\n  \tvar names = [\n  \t\t\"copyright\",\n  \t\t\"fontFamily\",\n  \t\t\"fontSubfamily\",\n  \t\t\"ID\",\n  \t\t\"fullName\",\n  \t\t\"version\",\n  \t\t\"postScriptName\",\n  \t\t\"trademark\",\n  \t\t\"manufacturer\",\n  \t\t\"designer\",\n  \t\t\"description\",\n  \t\t\"urlVendor\",\n  \t\t\"urlDesigner\",\n  \t\t\"licence\",\n  \t\t\"licenceURL\",\n  \t\t\"---\",\n  \t\t\"typoFamilyName\",\n  \t\t\"typoSubfamilyName\",\n  \t\t\"compatibleFull\",\n  \t\t\"sampleText\",\n  \t\t\"postScriptCID\",\n  \t\t\"wwsFamilyName\",\n  \t\t\"wwsSubfamilyName\",\n  \t\t\"lightPalette\",\n  \t\t\"darkPalette\"\n  \t];\n  \t\n  \tvar offset0 = offset;\n  \t\n  \tfor(var i=0; i<count; i++)\n  \t{\n  \t\tvar platformID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar encodingID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar languageID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar nameID     = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar slen       = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar noffset    = bin.readUshort(data, offset);  offset += 2;\n  \t\t//console.log(platformID, encodingID, languageID.toString(16), nameID, length, noffset);\n  \t\t\n  \t\tvar cname = names[nameID];\n  \t\tvar soff = offset0 + count*12 + noffset;\n  \t\tvar str;\n  \t\tif(platformID == 0) { str = bin.readUnicode(data, soff, slen/2); }\n  \t\telse if(platformID == 3 && encodingID == 0) { str = bin.readUnicode(data, soff, slen/2); }\n  \t\telse if(encodingID == 0) { str = bin.readASCII  (data, soff, slen); }\n  \t\telse if(encodingID == 1) { str = bin.readUnicode(data, soff, slen/2); }\n  \t\telse if(encodingID == 3) { str = bin.readUnicode(data, soff, slen/2); }\n  \t\t\n  \t\telse if(platformID == 1) { str = bin.readASCII(data, soff, slen);  console.log(\"reading unknown MAC encoding \"+encodingID+\" as ASCII\"); }\n  \t\telse { throw \"unknown encoding \"+encodingID + \", platformID: \"+platformID; }\n  \t\t\n  \t\tvar tid = \"p\"+platformID+\",\"+(languageID).toString(16);//Typr._platforms[platformID];\n  \t\tif(obj[tid]==null) { obj[tid] = {}; }\n  \t\tobj[tid][cname] = str;\n  \t\tobj[tid]._lang = languageID;\n  \t\t//console.log(tid, obj[tid]);\n  \t}\n  \t/*\n  \tif(format == 1)\n  \t{\n  \t\tvar langTagCount = bin.readUshort(data, offset);  offset += 2;\n  \t\tfor(var i=0; i<langTagCount; i++)\n  \t\t{\n  \t\t\tvar length  = bin.readUshort(data, offset);  offset += 2;\n  \t\t\tvar noffset = bin.readUshort(data, offset);  offset += 2;\n  \t\t}\n  \t}\n  \t*/\n  \t\n  \t//console.log(obj);\n  \t\n  \tfor(var p in obj) { if(obj[p].postScriptName!=null && obj[p]._lang==0x0409) { return obj[p]; } }\t\t// United States\n  \tfor(var p in obj) { if(obj[p].postScriptName!=null && obj[p]._lang==0x0000) { return obj[p]; } }\t\t// Universal\n  \tfor(var p in obj) { if(obj[p].postScriptName!=null && obj[p]._lang==0x0c0c) { return obj[p]; } }\t\t// Canada\n  \tfor(var p in obj) { if(obj[p].postScriptName!=null) { return obj[p]; } }\n  \t\n  \tvar tname;\n  \tfor(var p in obj) { tname=p; break; }\n  \tconsole.log(\"returning name table with languageID \"+ obj[tname]._lang);\n  \treturn obj[tname];\n  };\n\n\n  Typr[\"OS/2\"] = {};\n  Typr[\"OS/2\"].parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar ver = bin.readUshort(data, offset); offset += 2;\n  \t\n  \tvar obj = {};\n  \tif     (ver==0) { Typr[\"OS/2\"].version0(data, offset, obj); }\n  \telse if(ver==1) { Typr[\"OS/2\"].version1(data, offset, obj); }\n  \telse if(ver==2 || ver==3 || ver==4) { Typr[\"OS/2\"].version2(data, offset, obj); }\n  \telse if(ver==5) { Typr[\"OS/2\"].version5(data, offset, obj); }\n  \telse { throw \"unknown OS/2 table version: \"+ver; }\n  \t\n  \treturn obj;\n  };\n\n  Typr[\"OS/2\"].version0 = function(data, offset, obj)\n  {\n  \tvar bin = Typr._bin;\n  \tobj.xAvgCharWidth = bin.readShort(data, offset); offset += 2;\n  \tobj.usWeightClass = bin.readUshort(data, offset); offset += 2;\n  \tobj.usWidthClass  = bin.readUshort(data, offset); offset += 2;\n  \tobj.fsType = bin.readUshort(data, offset); offset += 2;\n  \tobj.ySubscriptXSize = bin.readShort(data, offset); offset += 2;\n  \tobj.ySubscriptYSize = bin.readShort(data, offset); offset += 2;\n  \tobj.ySubscriptXOffset = bin.readShort(data, offset); offset += 2;\n  \tobj.ySubscriptYOffset = bin.readShort(data, offset); offset += 2; \n  \tobj.ySuperscriptXSize = bin.readShort(data, offset); offset += 2; \n  \tobj.ySuperscriptYSize = bin.readShort(data, offset); offset += 2; \n  \tobj.ySuperscriptXOffset = bin.readShort(data, offset); offset += 2;\n  \tobj.ySuperscriptYOffset = bin.readShort(data, offset); offset += 2;\n  \tobj.yStrikeoutSize = bin.readShort(data, offset); offset += 2;\n  \tobj.yStrikeoutPosition = bin.readShort(data, offset); offset += 2;\n  \tobj.sFamilyClass = bin.readShort(data, offset); offset += 2;\n  \tobj.panose = bin.readBytes(data, offset, 10);  offset += 10;\n  \tobj.ulUnicodeRange1\t= bin.readUint(data, offset);  offset += 4;\n  \tobj.ulUnicodeRange2\t= bin.readUint(data, offset);  offset += 4;\n  \tobj.ulUnicodeRange3\t= bin.readUint(data, offset);  offset += 4;\n  \tobj.ulUnicodeRange4\t= bin.readUint(data, offset);  offset += 4;\n  \tobj.achVendID = [bin.readInt8(data, offset), bin.readInt8(data, offset+1),bin.readInt8(data, offset+2),bin.readInt8(data, offset+3)];  offset += 4;\n  \tobj.fsSelection\t = bin.readUshort(data, offset); offset += 2;\n  \tobj.usFirstCharIndex = bin.readUshort(data, offset); offset += 2;\n  \tobj.usLastCharIndex = bin.readUshort(data, offset); offset += 2;\n  \tobj.sTypoAscender = bin.readShort(data, offset); offset += 2;\n  \tobj.sTypoDescender = bin.readShort(data, offset); offset += 2;\n  \tobj.sTypoLineGap = bin.readShort(data, offset); offset += 2;\n  \tobj.usWinAscent = bin.readUshort(data, offset); offset += 2;\n  \tobj.usWinDescent = bin.readUshort(data, offset); offset += 2;\n  \treturn offset;\n  };\n\n  Typr[\"OS/2\"].version1 = function(data, offset, obj)\n  {\n  \tvar bin = Typr._bin;\n  \toffset = Typr[\"OS/2\"].version0(data, offset, obj);\n  \t\n  \tobj.ulCodePageRange1 = bin.readUint(data, offset); offset += 4;\n  \tobj.ulCodePageRange2 = bin.readUint(data, offset); offset += 4;\n  \treturn offset;\n  };\n\n  Typr[\"OS/2\"].version2 = function(data, offset, obj)\n  {\n  \tvar bin = Typr._bin;\n  \toffset = Typr[\"OS/2\"].version1(data, offset, obj);\n  \t\n  \tobj.sxHeight = bin.readShort(data, offset); offset += 2;\n  \tobj.sCapHeight = bin.readShort(data, offset); offset += 2;\n  \tobj.usDefault = bin.readUshort(data, offset); offset += 2;\n  \tobj.usBreak = bin.readUshort(data, offset); offset += 2;\n  \tobj.usMaxContext = bin.readUshort(data, offset); offset += 2;\n  \treturn offset;\n  };\n\n  Typr[\"OS/2\"].version5 = function(data, offset, obj)\n  {\n  \tvar bin = Typr._bin;\n  \toffset = Typr[\"OS/2\"].version2(data, offset, obj);\n\n  \tobj.usLowerOpticalPointSize = bin.readUshort(data, offset); offset += 2;\n  \tobj.usUpperOpticalPointSize = bin.readUshort(data, offset); offset += 2;\n  \treturn offset;\n  };\n\n  Typr.post = {};\n  Typr.post.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = {};\n  \t\n  \tobj.version           = bin.readFixed(data, offset);  offset+=4;\n  \tobj.italicAngle       = bin.readFixed(data, offset);  offset+=4;\n  \tobj.underlinePosition = bin.readShort(data, offset);  offset+=2;\n  \tobj.underlineThickness = bin.readShort(data, offset);  offset+=2;\n\n  \treturn obj;\n  };\n  Typr.SVG = {};\n  Typr.SVG.parse = function(data, offset, length)\n  {\n  \tvar bin = Typr._bin;\n  \tvar obj = { entries: []};\n\n  \tvar offset0 = offset;\n\n  \tvar tableVersion = bin.readUshort(data, offset);\toffset += 2;\n  \tvar svgDocIndexOffset = bin.readUint(data, offset);\toffset += 4;\n  \tvar reserved = bin.readUint(data, offset); offset += 4;\n\n  \toffset = svgDocIndexOffset + offset0;\n\n  \tvar numEntries = bin.readUshort(data, offset);\toffset += 2;\n\n  \tfor(var i=0; i<numEntries; i++)\n  \t{\n  \t\tvar startGlyphID = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar endGlyphID   = bin.readUshort(data, offset);  offset += 2;\n  \t\tvar svgDocOffset = bin.readUint  (data, offset);  offset += 4;\n  \t\tvar svgDocLength = bin.readUint  (data, offset);  offset += 4;\n\n  \t\tvar sbuf = new Uint8Array(data.buffer, offset0 + svgDocOffset + svgDocIndexOffset, svgDocLength);\n  \t\tvar svg = bin.readUTF8(sbuf, 0, sbuf.length);\n  \t\t\n  \t\tfor(var f=startGlyphID; f<=endGlyphID; f++) {\n  \t\t\tobj.entries[f] = svg;\n  \t\t}\n  \t}\n  \treturn obj;\n  };\n\n  Typr.SVG.toPath = function(str)\n  {\n  \tvar pth = {cmds:[], crds:[]};\n  \tif(str==null) { return pth; }\n  \t\n  \tvar prsr = new DOMParser();\n  \tvar doc = prsr[\"parseFromString\"](str,\"image/svg+xml\");\n  \t\n  \tvar svg = doc.firstChild;  while(svg.tagName!=\"svg\") { svg = svg.nextSibling; }\n  \tvar vb = svg.getAttribute(\"viewBox\");\n  \tif(vb) { vb = vb.trim().split(\" \").map(parseFloat); }  else   { vb = [0,0,1000,1000]; }\n  \tTypr.SVG._toPath(svg.children, pth);\n  \tfor(var i=0; i<pth.crds.length; i+=2) {\n  \t\tvar x = pth.crds[i], y = pth.crds[i+1];\n  \t\tx -= vb[0];\n  \t\ty -= vb[1];\n  \t\ty = -y;\n  \t\tpth.crds[i] = x;\n  \t\tpth.crds[i+1] = y;\n  \t}\n  \treturn pth;\n  };\n\n  Typr.SVG._toPath = function(nds, pth, fill) {\n  \tfor(var ni=0; ni<nds.length; ni++) {\n  \t\tvar nd = nds[ni], tn = nd.tagName;\n  \t\tvar cfl = nd.getAttribute(\"fill\");  if(cfl==null) { cfl = fill; }\n  \t\tif(tn==\"g\") { Typr.SVG._toPath(nd.children, pth, cfl); }\n  \t\telse if(tn==\"path\") {\n  \t\t\tpth.cmds.push(cfl?cfl:\"#000000\");\n  \t\t\tvar d = nd.getAttribute(\"d\");  //console.log(d);\n  \t\t\tvar toks = Typr.SVG._tokens(d);  //console.log(toks);\n  \t\t\tTypr.SVG._toksToPath(toks, pth);  pth.cmds.push(\"X\");\n  \t\t}\n  \t\telse if(tn==\"defs\") ;\n  \t\telse { console.log(tn, nd); }\n  \t}\n  };\n\n  Typr.SVG._tokens = function(d) {\n  \tvar ts = [], off = 0, rn=false, cn=\"\";  // reading number, current number\n  \twhile(off<d.length){\n  \t\tvar cc=d.charCodeAt(off), ch = d.charAt(off);  off++;\n  \t\tvar isNum = (48<=cc && cc<=57) || ch==\".\" || ch==\"-\";\n  \t\t\n  \t\tif(rn) {\n  \t\t\tif(ch==\"-\") {  ts.push(parseFloat(cn));  cn=ch;  }\n  \t\t\telse if(isNum) { cn+=ch; }\n  \t\t\telse {  ts.push(parseFloat(cn));  if(ch!=\",\" && ch!=\" \") { ts.push(ch); }  rn=false;  }\n  \t\t}\n  \t\telse {\n  \t\t\tif(isNum) {  cn=ch;  rn=true;  }\n  \t\t\telse if(ch!=\",\" && ch!=\" \") { ts.push(ch); }\n  \t\t}\n  \t}\n  \tif(rn) { ts.push(parseFloat(cn)); }\n  \treturn ts;\n  };\n\n  Typr.SVG._toksToPath = function(ts, pth) {\t\n  \tvar i = 0, x = 0, y = 0, ox = 0, oy = 0;\n  \tvar pc = {\"M\":2,\"L\":2,\"H\":1,\"V\":1,   \"S\":4,   \"C\":6};\n  \tvar cmds = pth.cmds, crds = pth.crds;\n  \t\n  \twhile(i<ts.length) {\n  \t\tvar cmd = ts[i];  i++;\n  \t\t\n  \t\tif(cmd==\"z\") {  cmds.push(\"Z\");  x=ox;  y=oy;  }\n  \t\telse {\n  \t\t\tvar cmu = cmd.toUpperCase();\n  \t\t\tvar ps = pc[cmu], reps = Typr.SVG._reps(ts, i, ps);\n  \t\t\n  \t\t\tfor(var j=0; j<reps; j++) {\n  \t\t\t\tvar xi = 0, yi = 0;   if(cmd!=cmu) {  xi=x;  yi=y;  }\n  \t\t\t\t\n  \t\t\t\tif(cmu==\"M\") {  x = xi+ts[i++];  y = yi+ts[i++];  cmds.push(\"M\");  crds.push(x,y);  ox=x;  oy=y; }\n  \t\t\t\telse if(cmu==\"L\") {  x = xi+ts[i++];  y = yi+ts[i++];  cmds.push(\"L\");  crds.push(x,y);  }\n  \t\t\t\telse if(cmu==\"H\") {  x = xi+ts[i++];                   cmds.push(\"L\");  crds.push(x,y);  }\n  \t\t\t\telse if(cmu==\"V\") {  y = yi+ts[i++];                   cmds.push(\"L\");  crds.push(x,y);  }\n  \t\t\t\telse if(cmu==\"C\") {\n  \t\t\t\t\tvar x1=xi+ts[i++], y1=yi+ts[i++], x2=xi+ts[i++], y2=yi+ts[i++], x3=xi+ts[i++], y3=yi+ts[i++];\n  \t\t\t\t\tcmds.push(\"C\");  crds.push(x1,y1,x2,y2,x3,y3);  x=x3;  y=y3;\n  \t\t\t\t}\n  \t\t\t\telse if(cmu==\"S\") {\n  \t\t\t\t\tvar co = Math.max(crds.length-4, 0);\n  \t\t\t\t\tvar x1 = x+x-crds[co], y1 = y+y-crds[co+1];\n  \t\t\t\t\tvar x2=xi+ts[i++], y2=yi+ts[i++], x3=xi+ts[i++], y3=yi+ts[i++];  \n  \t\t\t\t\tcmds.push(\"C\");  crds.push(x1,y1,x2,y2,x3,y3);  x=x3;  y=y3;\n  \t\t\t\t}\n  \t\t\t\telse { console.log(\"Unknown SVG command \"+cmd); }\n  \t\t\t}\n  \t\t}\n  \t}\n  };\n  Typr.SVG._reps = function(ts, off, ps) {\n  \tvar i = off;\n  \twhile(i<ts.length) {  if((typeof ts[i]) == \"string\") { break; }  i+=ps;  }\n  \treturn (i-off)/ps;\n  };\n  // End Typr.js\n\n  // Begin Typr.U.js\n\n  if(Typr  ==null) { Typr   = {}; }\n  if(Typr.U==null) { Typr.U = {}; }\n\n\n  Typr.U.codeToGlyph = function(font, code)\n  {\n  \tvar cmap = font.cmap;\n  \t\n  \tvar tind = -1;\n  \tif(cmap.p0e4!=null) { tind = cmap.p0e4; }\n  \telse if(cmap.p3e1!=null) { tind = cmap.p3e1; }\n  \telse if(cmap.p1e0!=null) { tind = cmap.p1e0; }\n  \telse if(cmap.p0e3!=null) { tind = cmap.p0e3; }\n  \t\n  \tif(tind==-1) { throw \"no familiar platform and encoding!\"; }\n  \t\n  \tvar tab = cmap.tables[tind];\n  \t\n  \tif(tab.format==0)\n  \t{\n  \t\tif(code>=tab.map.length) { return 0; }\n  \t\treturn tab.map[code];\n  \t}\n  \telse if(tab.format==4)\n  \t{\n  \t\tvar sind = -1;\n  \t\tfor(var i=0; i<tab.endCount.length; i++)   { if(code<=tab.endCount[i]){  sind=i;  break;  } } \n  \t\tif(sind==-1) { return 0; }\n  \t\tif(tab.startCount[sind]>code) { return 0; }\n  \t\t\n  \t\tvar gli = 0;\n  \t\tif(tab.idRangeOffset[sind]!=0) { gli = tab.glyphIdArray[(code-tab.startCount[sind]) + (tab.idRangeOffset[sind]>>1) - (tab.idRangeOffset.length-sind)]; }\n  \t\telse                           { gli = code + tab.idDelta[sind]; }\n  \t\treturn gli & 0xFFFF;\n  \t}\n  \telse if(tab.format==12)\n  \t{\n  \t\tif(code>tab.groups[tab.groups.length-1][1]) { return 0; }\n  \t\tfor(var i=0; i<tab.groups.length; i++)\n  \t\t{\n  \t\t\tvar grp = tab.groups[i];\n  \t\t\tif(grp[0]<=code && code<=grp[1]) { return grp[2] + (code-grp[0]); }\n  \t\t}\n  \t\treturn 0;\n  \t}\n  \telse { throw \"unknown cmap table format \"+tab.format; }\n  };\n\n\n  Typr.U.glyphToPath = function(font, gid)\n  {\n  \tvar path = { cmds:[], crds:[] };\n  \tif(font.SVG && font.SVG.entries[gid]) {\n  \t\tvar p = font.SVG.entries[gid];  if(p==null) { return path; }\n  \t\tif(typeof p == \"string\") {  p = Typr.SVG.toPath(p);  font.SVG.entries[gid]=p;  }\n  \t\treturn p;\n  \t}\n  \telse if(font.CFF) {\n  \t\tvar state = {x:0,y:0,stack:[],nStems:0,haveWidth:false,width: font.CFF.Private ? font.CFF.Private.defaultWidthX : 0,open:false};\n  \t\tvar cff=font.CFF, pdct = font.CFF.Private;\n  \t\tif(cff.ROS) {\n  \t\t\tvar gi = 0;\n  \t\t\twhile(cff.FDSelect[gi+2]<=gid) { gi+=2; }\n  \t\t\tpdct = cff.FDArray[cff.FDSelect[gi+1]].Private;\n  \t\t}\n  \t\tTypr.U._drawCFF(font.CFF.CharStrings[gid], state, cff, pdct, path);\n  \t}\n  \telse if(font.glyf) {  Typr.U._drawGlyf(gid, font, path);  }\n  \treturn path;\n  };\n\n  Typr.U._drawGlyf = function(gid, font, path)\n  {\n  \tvar gl = font.glyf[gid];\n  \tif(gl==null) { gl = font.glyf[gid] = Typr.glyf._parseGlyf(font, gid); }\n  \tif(gl!=null){\n  \t\tif(gl.noc>-1) { Typr.U._simpleGlyph(gl, path); }\n  \t\telse          { Typr.U._compoGlyph (gl, font, path); }\n  \t}\n  };\n  Typr.U._simpleGlyph = function(gl, p)\n  {\n  \tfor(var c=0; c<gl.noc; c++)\n  \t{\n  \t\tvar i0 = (c==0) ? 0 : (gl.endPts[c-1] + 1);\n  \t\tvar il = gl.endPts[c];\n  \t\t\n  \t\tfor(var i=i0; i<=il; i++)\n  \t\t{\n  \t\t\tvar pr = (i==i0)?il:(i-1);\n  \t\t\tvar nx = (i==il)?i0:(i+1);\n  \t\t\tvar onCurve = gl.flags[i]&1;\n  \t\t\tvar prOnCurve = gl.flags[pr]&1;\n  \t\t\tvar nxOnCurve = gl.flags[nx]&1;\n  \t\t\t\n  \t\t\tvar x = gl.xs[i], y = gl.ys[i];\n  \t\t\t\n  \t\t\tif(i==i0) { \n  \t\t\t\tif(onCurve)  \n  \t\t\t\t{\n  \t\t\t\t\tif(prOnCurve) { Typr.U.P.moveTo(p, gl.xs[pr], gl.ys[pr]); } \n  \t\t\t\t\telse          {  Typr.U.P.moveTo(p,x,y);  continue;  /*  will do curveTo at il  */  }\n  \t\t\t\t}\n  \t\t\t\telse        \n  \t\t\t\t{\n  \t\t\t\t\tif(prOnCurve) { Typr.U.P.moveTo(p,  gl.xs[pr],       gl.ys[pr]        ); }\n  \t\t\t\t\telse          { Typr.U.P.moveTo(p, (gl.xs[pr]+x)/2, (gl.ys[pr]+y)/2   ); } \n  \t\t\t\t}\n  \t\t\t}\n  \t\t\tif(onCurve)\n  \t\t\t{\n  \t\t\t\tif(prOnCurve) { Typr.U.P.lineTo(p,x,y); }\n  \t\t\t}\n  \t\t\telse\n  \t\t\t{\n  \t\t\t\tif(nxOnCurve) { Typr.U.P.qcurveTo(p, x, y, gl.xs[nx], gl.ys[nx]); } \n  \t\t\t\telse          { Typr.U.P.qcurveTo(p, x, y, (x+gl.xs[nx])/2, (y+gl.ys[nx])/2); } \n  \t\t\t}\n  \t\t}\n  \t\tTypr.U.P.closePath(p);\n  \t}\n  };\n  Typr.U._compoGlyph = function(gl, font, p)\n  {\n  \tfor(var j=0; j<gl.parts.length; j++)\n  \t{\n  \t\tvar path = { cmds:[], crds:[] };\n  \t\tvar prt = gl.parts[j];\n  \t\tTypr.U._drawGlyf(prt.glyphIndex, font, path);\n  \t\t\n  \t\tvar m = prt.m;\n  \t\tfor(var i=0; i<path.crds.length; i+=2)\n  \t\t{\n  \t\t\tvar x = path.crds[i  ], y = path.crds[i+1];\n  \t\t\tp.crds.push(x*m.a + y*m.b + m.tx);\n  \t\t\tp.crds.push(x*m.c + y*m.d + m.ty);\n  \t\t}\n  \t\tfor(var i=0; i<path.cmds.length; i++) { p.cmds.push(path.cmds[i]); }\n  \t}\n  };\n\n\n  Typr.U._getGlyphClass = function(g, cd)\n  {\n  \tvar intr = Typr._lctf.getInterval(cd, g);\n  \treturn intr==-1 ? 0 : cd[intr+2];\n  \t//for(var i=0; i<cd.start.length; i++) \n  \t//\tif(cd.start[i]<=g && cd.end[i]>=g) return cd.class[i];\n  \t//return 0;\n  };\n\n  Typr.U.getPairAdjustment = function(font, g1, g2)\n  {\n  \t//return 0;\n  \tif(font.GPOS) {\n  \t\tvar gpos = font[\"GPOS\"];\n  \t\tvar llist = gpos.lookupList, flist = gpos.featureList;\n  \t\tvar tused = [];\n  \t\tfor(var i=0; i<flist.length; i++) \n  \t\t{\n  \t\t\tvar fl = flist[i];  //console.log(fl);\n  \t\t\tif(fl.tag!=\"kern\") { continue; }\n  \t\t\tfor(var ti=0; ti<fl.tab.length; ti++) {\n  \t\t\t\tif(tused[fl.tab[ti]]) { continue; }  tused[fl.tab[ti]] = true;\n  \t\t\t\tvar tab = llist[fl.tab[ti]];\n  \t\t\t\t//console.log(tab);\n  \t\t\t\t\n  \t\t\t\tfor(var j=0; j<tab.tabs.length; j++)\n  \t\t\t\t{\n  \t\t\t\t\tif(tab.tabs[i]==null) { continue; }\n  \t\t\t\t\tvar ltab = tab.tabs[j], ind;\n  \t\t\t\t\tif(ltab.coverage) {  ind = Typr._lctf.coverageIndex(ltab.coverage, g1);  if(ind==-1) { continue; }  }\n  \t\t\t\t\t\n  \t\t\t\t\tif(tab.ltype==1) ;\n  \t\t\t\t\telse if(tab.ltype==2)\n  \t\t\t\t\t{\n  \t\t\t\t\t\tvar adj;\n  \t\t\t\t\t\tif(ltab.fmt==1)\n  \t\t\t\t\t\t{\n  \t\t\t\t\t\t\tvar right = ltab.pairsets[ind];\n  \t\t\t\t\t\t\tfor(var i=0; i<right.length; i++) { if(right[i].gid2==g2) { adj = right[i]; } }\n  \t\t\t\t\t\t}\n  \t\t\t\t\t\telse if(ltab.fmt==2)\n  \t\t\t\t\t\t{\n  \t\t\t\t\t\t\tvar c1 = Typr.U._getGlyphClass(g1, ltab.classDef1);\n  \t\t\t\t\t\t\tvar c2 = Typr.U._getGlyphClass(g2, ltab.classDef2);\n  \t\t\t\t\t\t\tadj = ltab.matrix[c1][c2];\n  \t\t\t\t\t\t}\n  \t\t\t\t\t\t//if(adj) console.log(ltab, adj);\n  \t\t\t\t\t\tif(adj && adj.val2) { return adj.val2[2]; }\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  \tif(font.kern)\n  \t{\n  \t\tvar ind1 = font.kern.glyph1.indexOf(g1);\n  \t\tif(ind1!=-1)\n  \t\t{\n  \t\t\tvar ind2 = font.kern.rval[ind1].glyph2.indexOf(g2);\n  \t\t\tif(ind2!=-1) { return font.kern.rval[ind1].vals[ind2]; }\n  \t\t}\n  \t}\n  \t\n  \treturn 0;\n  };\n\n  Typr.U.stringToGlyphs = function(font, str)\n  {\n  \tvar gls = [];\n  \tfor(var i=0; i<str.length; i++) {\n  \t\tvar cc = str.codePointAt(i);  if(cc>0xffff) { i++; }\n  \t\tgls.push(Typr.U.codeToGlyph(font, cc));\n  \t}\n  \tfor(var i=0; i<str.length; i++) {\n  \t\tvar cc = str.codePointAt(i);  //\n  \t\tif(cc==2367) {  var t=gls[i-1];  gls[i-1]=gls[i];  gls[i]=t;  }\n  \t\t//if(cc==2381) {  var t=gls[i+1];  gls[i+1]=gls[i];  gls[i]=t;  }\n  \t\tif(cc>0xffff) { i++; }\n  \t}\n  \t//console.log(gls.slice(0));\n  \t\n  \t//console.log(gls);  return gls;\n  \t\n  \tvar gsub = font[\"GSUB\"];  if(gsub==null) { return gls; }\n  \tvar llist = gsub.lookupList, flist = gsub.featureList;\n  \t\n  \tvar cligs = [\"rlig\", \"liga\", \"mset\",  \"isol\",\"init\",\"fina\",\"medi\",   \"half\", \"pres\", \n  \t\t\t\t\"blws\" /* Tibetan fonts like Himalaya.ttf */ ];\n  \t\n  \t//console.log(gls.slice(0));\n  \tvar tused = [];\n  \tfor(var fi=0; fi<flist.length; fi++)\n  \t{\n  \t\tvar fl = flist[fi];  if(cligs.indexOf(fl.tag)==-1) { continue; }\n  \t\t//if(fl.tag==\"blwf\") continue;\n  \t\t//console.log(fl);\n  \t\t//console.log(fl.tag);\n  \t\tfor(var ti=0; ti<fl.tab.length; ti++) {\n  \t\t\tif(tused[fl.tab[ti]]) { continue; }  tused[fl.tab[ti]] = true;\n  \t\t\tvar tab = llist[fl.tab[ti]];\n  \t\t\t//console.log(fl.tab[ti], tab.ltype);\n  \t\t\t//console.log(fl.tag, tab);\n  \t\t\tfor(var ci=0; ci<gls.length; ci++) {\n  \t\t\t\tvar feat = Typr.U._getWPfeature(str, ci);\n  \t\t\t\tif(\"isol,init,fina,medi\".indexOf(fl.tag)!=-1 && fl.tag!=feat) { continue; }\n  \t\t\t\t\n  \t\t\t\tTypr.U._applySubs(gls, ci, tab, llist);\n  \t\t\t}\n  \t\t}\n  \t}\n  \t\n  \treturn gls;\n  };\n  Typr.U._getWPfeature = function(str, ci) {  // get Word Position feature\n  \tvar wsep = \"\\n\\t\\\" ,.:;!?()  ،\";\n  \tvar R = \"آأؤإاةدذرزوٱٲٳٵٶٷڈډڊڋڌڍڎڏڐڑڒړڔڕږڗژڙۀۃۄۅۆۇۈۉۊۋۍۏےۓەۮۯܐܕܖܗܘܙܞܨܪܬܯݍݙݚݛݫݬݱݳݴݸݹࡀࡆࡇࡉࡔࡧࡩࡪࢪࢫࢬࢮࢱࢲࢹૅેૉ૊૎૏ૐ૑૒૝ૡ૤૯஁ஃ஄அஉ஌எஏ஑னப஫஬\";\n  \tvar L = \"ꡲ્૗\";\n  \t\n  \tvar slft = ci==0            || wsep.indexOf(str[ci-1])!=-1;\n  \tvar srgt = ci==str.length-1 || wsep.indexOf(str[ci+1])!=-1;\n  \t\t\n  \tif(!slft && R.indexOf(str[ci-1])!=-1) { slft=true; }\n  \tif(!srgt && R.indexOf(str[ci  ])!=-1) { srgt=true; }\n  \t\t\n  \tif(!srgt && L.indexOf(str[ci+1])!=-1) { srgt=true; }\n  \tif(!slft && L.indexOf(str[ci  ])!=-1) { slft=true; }\n  \t\t\n  \tvar feat = null;\n  \tif(slft) { feat = srgt ? \"isol\" : \"init\"; }\n  \telse     { feat = srgt ? \"fina\" : \"medi\"; }\n  \t\n  \treturn feat;\n  };\n  Typr.U._applySubs = function(gls, ci, tab, llist) {\n  \tvar rlim = gls.length-ci-1;\n  \t//if(ci==0) console.log(\"++++ \", tab.ltype);\n  \tfor(var j=0; j<tab.tabs.length; j++)\n  \t{\n  \t\tif(tab.tabs[j]==null) { continue; }\n  \t\tvar ltab = tab.tabs[j], ind;\n  \t\tif(ltab.coverage) {  ind = Typr._lctf.coverageIndex(ltab.coverage, gls[ci]);  if(ind==-1) { continue; }  }\n  \t\t//if(ci==0) console.log(ind, ltab);\n  \t\t//*\n  \t\tif(tab.ltype==1) {\n  \t\t\tvar gl = gls[ci];\n  \t\t\tif(ltab.fmt==1) { gls[ci] = gls[ci]+ltab.delta; }\n  \t\t\telse            { gls[ci] = ltab.newg[ind]; }\n  \t\t\t//console.log(\"applying ... 1\", ci, gl, gls[ci]);\n  \t\t}//*\n  \t\telse if(tab.ltype==4) {\n  \t\t\tvar vals = ltab.vals[ind];\n  \t\t\t\n  \t\t\tfor(var k=0; k<vals.length; k++) {\n  \t\t\t\tvar lig = vals[k], rl = lig.chain.length;  if(rl>rlim) { continue; }\n  \t\t\t\tvar good = true, em1 = 0;\n  \t\t\t\tfor(var l=0; l<rl; l++) {  while(gls[ci+em1+(1+l)]==-1){ em1++; }  if(lig.chain[l]!=gls[ci+em1+(1+l)]) { good=false; }  }\n  \t\t\t\tif(!good) { continue; }\n  \t\t\t\tgls[ci]=lig.nglyph;\n  \t\t\t\tfor(var l=0; l<rl+em1; l++) { gls[ci+l+1]=-1; }   break;  // first character changed, other ligatures do not apply anymore\n  \t\t\t\t//console.log(\"lig\", ci, lig.chain, lig.nglyph);\n  \t\t\t\t//console.log(\"applying ...\");\n  \t\t\t}\n  \t\t}\n  \t\telse  if(tab.ltype==5 && ltab.fmt==2) {\n  \t\t\tvar cind = Typr._lctf.getInterval(ltab.cDef, gls[ci]);\n  \t\t\tvar cls = ltab.cDef[cind+2], scs = ltab.scset[cls]; \n  \t\t\tfor(var i=0; i<scs.length; i++) {\n  \t\t\t\tvar sc = scs[i], inp = sc.input;\n  \t\t\t\tif(inp.length>rlim) { continue; }\n  \t\t\t\tvar good = true;\n  \t\t\t\tfor(var l=0; l<inp.length; l++) {\n  \t\t\t\t\tvar cind2 = Typr._lctf.getInterval(ltab.cDef, gls[ci+1+l]);\n  \t\t\t\t\tif(cind==-1 && ltab.cDef[cind2+2]!=inp[l]) {  good=false;  break;  }\n  \t\t\t\t}\n  \t\t\t\tif(!good) { continue; }\n  \t\t\t\t//console.log(ci, gl);\n  \t\t\t\tvar lrs = sc.substLookupRecords;\n  \t\t\t\tfor(var k=0; k<lrs.length; k+=2)\n  \t\t\t\t{\n  \t\t\t\t\tvar gi = lrs[k], tabi = lrs[k+1];\n  \t\t\t\t\t//Typr.U._applyType1(gls, ci+gi, llist[tabi]);\n  \t\t\t\t\t//console.log(tabi, gls[ci+gi], llist[tabi]);\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t\telse if(tab.ltype==6 && ltab.fmt==3) {\n  \t\t\t//if(ltab.backCvg.length==0) return;\n  \t\t\tif(!Typr.U._glsCovered(gls, ltab.backCvg, ci-ltab.backCvg.length)) { continue; }\n  \t\t\tif(!Typr.U._glsCovered(gls, ltab.inptCvg, ci)) { continue; }\n  \t\t\tif(!Typr.U._glsCovered(gls, ltab.ahedCvg, ci+ltab.inptCvg.length)) { continue; }\n  \t\t\t//console.log(ci, ltab);\n  \t\t\tvar lr = ltab.lookupRec;  //console.log(ci, gl, lr);\n  \t\t\tfor(var i=0; i<lr.length; i+=2) {\n  \t\t\t\tvar cind = lr[i], tab2 = llist[lr[i+1]];\n  \t\t\t\t//console.log(\"-\", lr[i+1], tab2);\n  \t\t\t\tTypr.U._applySubs(gls, ci+cind, tab2, llist);\n  \t\t\t}\n  \t\t}\n  \t\t//else console.log(\"Unknown table\", tab.ltype, ltab.fmt);\n  \t\t//*/\n  \t}\n  };\n\n  Typr.U._glsCovered = function(gls, cvgs, ci) {\n  \tfor(var i=0; i<cvgs.length; i++) {\n  \t\tvar ind = Typr._lctf.coverageIndex(cvgs[i], gls[ci+i]);  if(ind==-1) { return false; }\n  \t}\n  \treturn true;\n  };\n\n  Typr.U.glyphsToPath = function(font, gls, clr)\n  {\t\n  \t//gls = gls.reverse();//gls.slice(0,12).concat(gls.slice(12).reverse());\n  \t\n  \tvar tpath = {cmds:[], crds:[]};\n  \tvar x = 0;\n  \t\n  \tfor(var i=0; i<gls.length; i++)\n  \t{\n  \t\tvar gid = gls[i];  if(gid==-1) { continue; }\n  \t\tvar gid2 = (i<gls.length-1 && gls[i+1]!=-1)  ? gls[i+1] : 0;\n  \t\tvar path = Typr.U.glyphToPath(font, gid);\n  \t\tfor(var j=0; j<path.crds.length; j+=2)\n  \t\t{\n  \t\t\ttpath.crds.push(path.crds[j] + x);\n  \t\t\ttpath.crds.push(path.crds[j+1]);\n  \t\t}\n  \t\tif(clr) { tpath.cmds.push(clr); }\n  \t\tfor(var j=0; j<path.cmds.length; j++) { tpath.cmds.push(path.cmds[j]); }\n  \t\tif(clr) { tpath.cmds.push(\"X\"); }\n  \t\tx += font.hmtx.aWidth[gid];// - font.hmtx.lsBearing[gid];\n  \t\tif(i<gls.length-1) { x += Typr.U.getPairAdjustment(font, gid, gid2); }\n  \t}\n  \treturn tpath;\n  };\n\n  Typr.U.pathToSVG = function(path, prec)\n  {\n  \tif(prec==null) { prec = 5; }\n  \tvar out = [], co = 0, lmap = {\"M\":2,\"L\":2,\"Q\":4,\"C\":6};\n  \tfor(var i=0; i<path.cmds.length; i++)\n  \t{\n  \t\tvar cmd = path.cmds[i], cn = co+(lmap[cmd]?lmap[cmd]:0);  \n  \t\tout.push(cmd);\n  \t\twhile(co<cn) {  var c = path.crds[co++];  out.push(parseFloat(c.toFixed(prec))+(co==cn?\"\":\" \"));  }\n  \t}\n  \treturn out.join(\"\");\n  };\n\n  Typr.U.pathToContext = function(path, ctx)\n  {\n  \tvar c = 0, crds = path.crds;\n  \t\n  \tfor(var j=0; j<path.cmds.length; j++)\n  \t{\n  \t\tvar cmd = path.cmds[j];\n  \t\tif     (cmd==\"M\") {\n  \t\t\tctx.moveTo(crds[c], crds[c+1]);\n  \t\t\tc+=2;\n  \t\t}\n  \t\telse if(cmd==\"L\") {\n  \t\t\tctx.lineTo(crds[c], crds[c+1]);\n  \t\t\tc+=2;\n  \t\t}\n  \t\telse if(cmd==\"C\") {\n  \t\t\tctx.bezierCurveTo(crds[c], crds[c+1], crds[c+2], crds[c+3], crds[c+4], crds[c+5]);\n  \t\t\tc+=6;\n  \t\t}\n  \t\telse if(cmd==\"Q\") {\n  \t\t\tctx.quadraticCurveTo(crds[c], crds[c+1], crds[c+2], crds[c+3]);\n  \t\t\tc+=4;\n  \t\t}\n  \t\telse if(cmd.charAt(0)==\"#\") {\n  \t\t\tctx.beginPath();\n  \t\t\tctx.fillStyle = cmd;\n  \t\t}\n  \t\telse if(cmd==\"Z\") {\n  \t\t\tctx.closePath();\n  \t\t}\n  \t\telse if(cmd==\"X\") {\n  \t\t\tctx.fill();\n  \t\t}\n  \t}\n  };\n\n\n  Typr.U.P = {};\n  Typr.U.P.moveTo = function(p, x, y)\n  {\n  \tp.cmds.push(\"M\");  p.crds.push(x,y);\n  };\n  Typr.U.P.lineTo = function(p, x, y)\n  {\n  \tp.cmds.push(\"L\");  p.crds.push(x,y);\n  };\n  Typr.U.P.curveTo = function(p, a,b,c,d,e,f)\n  {\n  \tp.cmds.push(\"C\");  p.crds.push(a,b,c,d,e,f);\n  };\n  Typr.U.P.qcurveTo = function(p, a,b,c,d)\n  {\n  \tp.cmds.push(\"Q\");  p.crds.push(a,b,c,d);\n  };\n  Typr.U.P.closePath = function(p) {  p.cmds.push(\"Z\");  };\n\n\n\n\n  Typr.U._drawCFF = function(cmds, state, font, pdct, p)\n  {\n  \tvar stack = state.stack;\n  \tvar nStems = state.nStems, haveWidth=state.haveWidth, width=state.width, open=state.open;\n  \tvar i=0;\n  \tvar x=state.x, y=state.y, c1x=0, c1y=0, c2x=0, c2y=0, c3x=0, c3y=0, c4x=0, c4y=0, jpx=0, jpy=0;\n  \t\n  \tvar o = {val:0,size:0};\n  \t//console.log(cmds);\n  \twhile(i<cmds.length)\n  \t{\n  \t\tTypr.CFF.getCharString(cmds, i, o);\n  \t\tvar v = o.val;\n  \t\ti += o.size;\n  \t\t\t\n  \t\tif(v==\"o1\" || v==\"o18\")  //  hstem || hstemhm\n  \t\t{\n  \t\t\tvar hasWidthArg;\n\n  \t\t\t// The number of stem operators on the stack is always even.\n  \t\t\t// If the value is uneven, that means a width is specified.\n  \t\t\thasWidthArg = stack.length % 2 !== 0;\n  \t\t\tif (hasWidthArg && !haveWidth) {\n  \t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\n  \t\t\t}\n\n  \t\t\tnStems += stack.length >> 1;\n  \t\t\tstack.length = 0;\n  \t\t\thaveWidth = true;\n  \t\t}\n  \t\telse if(v==\"o3\" || v==\"o23\")  // vstem || vstemhm\n  \t\t{\n  \t\t\tvar hasWidthArg;\n\n  \t\t\t// The number of stem operators on the stack is always even.\n  \t\t\t// If the value is uneven, that means a width is specified.\n  \t\t\thasWidthArg = stack.length % 2 !== 0;\n  \t\t\tif (hasWidthArg && !haveWidth) {\n  \t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\n  \t\t\t}\n\n  \t\t\tnStems += stack.length >> 1;\n  \t\t\tstack.length = 0;\n  \t\t\thaveWidth = true;\n  \t\t}\n  \t\telse if(v==\"o4\")\n  \t\t{\n  \t\t\tif (stack.length > 1 && !haveWidth) {\n                          width = stack.shift() + pdct.nominalWidthX;\n                          haveWidth = true;\n                      }\n  \t\t\tif(open) { Typr.U.P.closePath(p); }\n\n                      y += stack.pop();\n  \t\t\t\t\tTypr.U.P.moveTo(p,x,y);   open=true;\n  \t\t}\n  \t\telse if(v==\"o5\")\n  \t\t{\n  \t\t\twhile (stack.length > 0) {\n                          x += stack.shift();\n                          y += stack.shift();\n                          Typr.U.P.lineTo(p, x, y);\n                      }\n  \t\t}\n  \t\telse if(v==\"o6\" || v==\"o7\")  // hlineto || vlineto\n  \t\t{\n  \t\t\tvar count = stack.length;\n  \t\t\tvar isX = (v == \"o6\");\n  \t\t\t\n  \t\t\tfor(var j=0; j<count; j++) {\n  \t\t\t\tvar sval = stack.shift();\n  \t\t\t\t\n  \t\t\t\tif(isX) { x += sval; }  else  { y += sval; }\n  \t\t\t\tisX = !isX;\n  \t\t\t\tTypr.U.P.lineTo(p, x, y);\n  \t\t\t}\n  \t\t}\n  \t\telse if(v==\"o8\" || v==\"o24\")\t// rrcurveto || rcurveline\n  \t\t{\n  \t\t\tvar count = stack.length;\n  \t\t\tvar index = 0;\n  \t\t\twhile(index+6 <= count) {\n  \t\t\t\tc1x = x + stack.shift();\n  \t\t\t\tc1y = y + stack.shift();\n  \t\t\t\tc2x = c1x + stack.shift();\n  \t\t\t\tc2y = c1y + stack.shift();\n  \t\t\t\tx = c2x + stack.shift();\n  \t\t\t\ty = c2y + stack.shift();\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n  \t\t\t\tindex+=6;\n  \t\t\t}\n  \t\t\tif(v==\"o24\")\n  \t\t\t{\n  \t\t\t\tx += stack.shift();\n  \t\t\t\ty += stack.shift();\n  \t\t\t\tTypr.U.P.lineTo(p, x, y);\n  \t\t\t}\n  \t\t}\n  \t\telse if(v==\"o11\")  { break; }\n  \t\telse if(v==\"o1234\" || v==\"o1235\" || v==\"o1236\" || v==\"o1237\")//if((v+\"\").slice(0,3)==\"o12\")\n  \t\t{\n  \t\t\tif(v==\"o1234\")\n  \t\t\t{\n  \t\t\t\tc1x = x   + stack.shift();    // dx1\n                  c1y = y;                      // dy1\n  \t\t\t\tc2x = c1x + stack.shift();    // dx2\n  \t\t\t\tc2y = c1y + stack.shift();    // dy2\n  \t\t\t\tjpx = c2x + stack.shift();    // dx3\n  \t\t\t\tjpy = c2y;                    // dy3\n  \t\t\t\tc3x = jpx + stack.shift();    // dx4\n  \t\t\t\tc3y = c2y;                    // dy4\n  \t\t\t\tc4x = c3x + stack.shift();    // dx5\n  \t\t\t\tc4y = y;                      // dy5\n  \t\t\t\tx = c4x + stack.shift();      // dx6\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n  \t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n  \t\t\t\t\n  \t\t\t}\n  \t\t\tif(v==\"o1235\")\n  \t\t\t{\n  \t\t\t\tc1x = x   + stack.shift();    // dx1\n  \t\t\t\tc1y = y   + stack.shift();    // dy1\n  \t\t\t\tc2x = c1x + stack.shift();    // dx2\n  \t\t\t\tc2y = c1y + stack.shift();    // dy2\n  \t\t\t\tjpx = c2x + stack.shift();    // dx3\n  \t\t\t\tjpy = c2y + stack.shift();    // dy3\n  \t\t\t\tc3x = jpx + stack.shift();    // dx4\n  \t\t\t\tc3y = jpy + stack.shift();    // dy4\n  \t\t\t\tc4x = c3x + stack.shift();    // dx5\n  \t\t\t\tc4y = c3y + stack.shift();    // dy5\n  \t\t\t\tx = c4x + stack.shift();      // dx6\n  \t\t\t\ty = c4y + stack.shift();      // dy6\n  \t\t\t\tstack.shift();                // flex depth\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n  \t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n  \t\t\t}\n  \t\t\tif(v==\"o1236\")\n  \t\t\t{\n  \t\t\t\tc1x = x   + stack.shift();    // dx1\n  \t\t\t\tc1y = y   + stack.shift();    // dy1\n  \t\t\t\tc2x = c1x + stack.shift();    // dx2\n  \t\t\t\tc2y = c1y + stack.shift();    // dy2\n  \t\t\t\tjpx = c2x + stack.shift();    // dx3\n  \t\t\t\tjpy = c2y;                    // dy3\n  \t\t\t\tc3x = jpx + stack.shift();    // dx4\n  \t\t\t\tc3y = c2y;                    // dy4\n  \t\t\t\tc4x = c3x + stack.shift();    // dx5\n  \t\t\t\tc4y = c3y + stack.shift();    // dy5\n  \t\t\t\tx = c4x + stack.shift();      // dx6\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n  \t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n  \t\t\t}\n  \t\t\tif(v==\"o1237\")\n  \t\t\t{\n  \t\t\t\tc1x = x   + stack.shift();    // dx1\n  \t\t\t\tc1y = y   + stack.shift();    // dy1\n  \t\t\t\tc2x = c1x + stack.shift();    // dx2\n  \t\t\t\tc2y = c1y + stack.shift();    // dy2\n  \t\t\t\tjpx = c2x + stack.shift();    // dx3\n  \t\t\t\tjpy = c2y + stack.shift();    // dy3\n  \t\t\t\tc3x = jpx + stack.shift();    // dx4\n  \t\t\t\tc3y = jpy + stack.shift();    // dy4\n  \t\t\t\tc4x = c3x + stack.shift();    // dx5\n  \t\t\t\tc4y = c3y + stack.shift();    // dy5\n  \t\t\t\tif (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n  \t\t\t\t    x = c4x + stack.shift();\n  \t\t\t\t} else {\n  \t\t\t\t    y = c4y + stack.shift();\n  \t\t\t\t}\n  \t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n  \t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\n  \t\t\t}\n  \t\t}\n  \t\telse if(v==\"o14\")\n  \t\t{\n  \t\t\tif (stack.length > 0 && !haveWidth) {\n                          width = stack.shift() + font.nominalWidthX;\n                          haveWidth = true;\n                      }\n  \t\t\tif(stack.length==4) // seac = standard encoding accented character\n  \t\t\t{\n  \t\t\t\tvar adx = stack.shift();\n  \t\t\t\tvar ady = stack.shift();\n  \t\t\t\tvar bchar = stack.shift();\n  \t\t\t\tvar achar = stack.shift();\n  \t\t\t\n  \t\t\t\t\n  \t\t\t\tvar bind = Typr.CFF.glyphBySE(font, bchar);\n  \t\t\t\tvar aind = Typr.CFF.glyphBySE(font, achar);\n  \t\t\t\t\n  \t\t\t\t//console.log(bchar, bind);\n  \t\t\t\t//console.log(achar, aind);\n  \t\t\t\t//state.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width;  state.open=open;\n  \t\t\t\t\n  \t\t\t\tTypr.U._drawCFF(font.CharStrings[bind], state,font,pdct,p);\n  \t\t\t\tstate.x = adx; state.y = ady;\n  \t\t\t\tTypr.U._drawCFF(font.CharStrings[aind], state,font,pdct,p);\n  \t\t\t\t\n  \t\t\t\t//x=state.x; y=state.y; nStems=state.nStems; haveWidth=state.haveWidth; width=state.width;  open=state.open;\n  \t\t\t}\n  \t\t\tif(open) {  Typr.U.P.closePath(p);  open=false;  }\n  \t\t}\t\t\n  \t\telse if(v==\"o19\" || v==\"o20\") \n  \t\t{ \n  \t\t\tvar hasWidthArg;\n\n  \t\t\t// The number of stem operators on the stack is always even.\n  \t\t\t// If the value is uneven, that means a width is specified.\n  \t\t\thasWidthArg = stack.length % 2 !== 0;\n  \t\t\tif (hasWidthArg && !haveWidth) {\n  \t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\n  \t\t\t}\n\n  \t\t\tnStems += stack.length >> 1;\n  \t\t\tstack.length = 0;\n  \t\t\thaveWidth = true;\n  \t\t\t\n  \t\t\ti += (nStems + 7) >> 3;\n  \t\t}\n  \t\t\n  \t\telse if(v==\"o21\") {\n  \t\t\tif (stack.length > 2 && !haveWidth) {\n                          width = stack.shift() + pdct.nominalWidthX;\n                          haveWidth = true;\n                      }\n\n                      y += stack.pop();\n                      x += stack.pop();\n  \t\t\t\t\t\n  \t\t\t\t\tif(open) { Typr.U.P.closePath(p); }\n                      Typr.U.P.moveTo(p,x,y);   open=true;\n  \t\t}\n  \t\telse if(v==\"o22\")\n  \t\t{\n  \t\t\t if (stack.length > 1 && !haveWidth) {\n                          width = stack.shift() + pdct.nominalWidthX;\n                          haveWidth = true;\n                      }\n  \t\t\t\t\t\n                      x += stack.pop();\n  \t\t\t\t\t\n  \t\t\t\t\tif(open) { Typr.U.P.closePath(p); }\n  \t\t\t\t\tTypr.U.P.moveTo(p,x,y);   open=true;                    \n  \t\t}\n  \t\telse if(v==\"o25\")\n  \t\t{\n  \t\t\twhile (stack.length > 6) {\n                          x += stack.shift();\n                          y += stack.shift();\n                          Typr.U.P.lineTo(p, x, y);\n                      }\n\n                      c1x = x + stack.shift();\n                      c1y = y + stack.shift();\n                      c2x = c1x + stack.shift();\n                      c2y = c1y + stack.shift();\n                      x = c2x + stack.shift();\n                      y = c2y + stack.shift();\n                      Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n  \t\t}\n  \t\telse if(v==\"o26\") \n  \t\t{\n  \t\t\tif (stack.length % 2) {\n                          x += stack.shift();\n                      }\n\n                      while (stack.length > 0) {\n                          c1x = x;\n                          c1y = y + stack.shift();\n                          c2x = c1x + stack.shift();\n                          c2y = c1y + stack.shift();\n                          x = c2x;\n                          y = c2y + stack.shift();\n                          Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n                      }\n\n  \t\t}\n  \t\telse if(v==\"o27\")\n  \t\t{\n  \t\t\tif (stack.length % 2) {\n                          y += stack.shift();\n                      }\n\n                      while (stack.length > 0) {\n                          c1x = x + stack.shift();\n                          c1y = y;\n                          c2x = c1x + stack.shift();\n                          c2y = c1y + stack.shift();\n                          x = c2x + stack.shift();\n                          y = c2y;\n                          Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n                      }\n  \t\t}\n  \t\telse if(v==\"o10\" || v==\"o29\")\t// callsubr || callgsubr\n  \t\t{\n  \t\t\tvar obj = (v==\"o10\" ? pdct : font);\n  \t\t\tif(stack.length==0) { console.log(\"error: empty stack\");  }\n  \t\t\telse {\n  \t\t\t\tvar ind = stack.pop();\n  \t\t\t\tvar subr = obj.Subrs[ ind + obj.Bias ];\n  \t\t\t\tstate.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width;  state.open=open;\n  \t\t\t\tTypr.U._drawCFF(subr, state,font,pdct,p);\n  \t\t\t\tx=state.x; y=state.y; nStems=state.nStems; haveWidth=state.haveWidth; width=state.width;  open=state.open;\n  \t\t\t}\n  \t\t}\n  \t\telse if(v==\"o30\" || v==\"o31\")   // vhcurveto || hvcurveto\n  \t\t{\n  \t\t\tvar count, count1 = stack.length;\n  \t\t\tvar index = 0;\n  \t\t\tvar alternate = v == \"o31\";\n  \t\t\t\n  \t\t\tcount  = count1 & ~2;\n  \t\t\tindex += count1 - count;\n  \t\t\t\n  \t\t\twhile ( index < count ) \n  \t\t\t{\n  \t\t\t\tif(alternate)\n  \t\t\t\t{\n  \t\t\t\t\tc1x = x + stack.shift();\n  \t\t\t\t\tc1y = y;\n  \t\t\t\t\tc2x = c1x + stack.shift();\n  \t\t\t\t\tc2y = c1y + stack.shift();\n  \t\t\t\t\ty = c2y + stack.shift();\n  \t\t\t\t\tif(count-index == 5) {  x = c2x + stack.shift();  index++;  }\n  \t\t\t\t\telse { x = c2x; }\n  \t\t\t\t\talternate = false;\n  \t\t\t\t}\n  \t\t\t\telse\n  \t\t\t\t{\n  \t\t\t\t\tc1x = x;\n  \t\t\t\t\tc1y = y + stack.shift();\n  \t\t\t\t\tc2x = c1x + stack.shift();\n  \t\t\t\t\tc2y = c1y + stack.shift();\n  \t\t\t\t\tx = c2x + stack.shift();\n  \t\t\t\t\tif(count-index == 5) {  y = c2y + stack.shift();  index++;  }\n  \t\t\t\t\telse { y = c2y; }\n  \t\t\t\t\talternate = true;\n  \t\t\t\t}\n                  Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\n  \t\t\t\tindex += 4;\n  \t\t\t}\n  \t\t}\n  \t\t\n  \t\telse if((v+\"\").charAt(0)==\"o\") {   console.log(\"Unknown operation: \"+v, cmds); throw v;  }\n  \t\telse { stack.push(v); }\n  \t}\n  \t//console.log(cmds);\n  \tstate.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width; state.open=open;\n  };\n\n  // End Typr.U.js\n\n  return Typr\n\n  }\n\n  // Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with tiny-inflate \n  // (https://github.com/foliojs/tiny-inflate) for use in troika-3d-text. \n  // Original licenses apply: \n  // - tiny-inflate: https://github.com/foliojs/tiny-inflate/blob/master/LICENSE (MIT)\n  // - woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)\n\n  function woff2otfFactory() {\n\n  // Begin tinyInflate\n  var tinyInflate = (function() {\n    var module = {};\n    var TINF_OK = 0;\n  var TINF_DATA_ERROR = -3;\n\n  function Tree() {\n    this.table = new Uint16Array(16);   /* table of code length counts */\n    this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n  }\n\n  function Data(source, dest) {\n    this.source = source;\n    this.sourceIndex = 0;\n    this.tag = 0;\n    this.bitcount = 0;\n    \n    this.dest = dest;\n    this.destLen = 0;\n    \n    this.ltree = new Tree();  /* dynamic length/symbol tree */\n    this.dtree = new Tree();  /* dynamic distance tree */\n  }\n\n  /* --------------------------------------------------- *\n   * -- uninitialized global data (static structures) -- *\n   * --------------------------------------------------- */\n\n  var sltree = new Tree();\n  var sdtree = new Tree();\n\n  /* extra bits and base tables for length codes */\n  var length_bits = new Uint8Array(30);\n  var length_base = new Uint16Array(30);\n\n  /* extra bits and base tables for distance codes */\n  var dist_bits = new Uint8Array(30);\n  var dist_base = new Uint16Array(30);\n\n  /* special ordering of code length codes */\n  var clcidx = new Uint8Array([\n    16, 17, 18, 0, 8, 7, 9, 6,\n    10, 5, 11, 4, 12, 3, 13, 2,\n    14, 1, 15\n  ]);\n\n  /* used by tinf_decode_trees, avoids allocations every call */\n  var code_tree = new Tree();\n  var lengths = new Uint8Array(288 + 32);\n\n  /* ----------------------- *\n   * -- utility functions -- *\n   * ----------------------- */\n\n  /* build extra bits and base tables */\n  function tinf_build_bits_base(bits, base, delta, first) {\n    var i, sum;\n\n    /* build bits table */\n    for (i = 0; i < delta; ++i) { bits[i] = 0; }\n    for (i = 0; i < 30 - delta; ++i) { bits[i + delta] = i / delta | 0; }\n\n    /* build base table */\n    for (sum = first, i = 0; i < 30; ++i) {\n      base[i] = sum;\n      sum += 1 << bits[i];\n    }\n  }\n\n  /* build the fixed huffman trees */\n  function tinf_build_fixed_trees(lt, dt) {\n    var i;\n\n    /* build fixed length tree */\n    for (i = 0; i < 7; ++i) { lt.table[i] = 0; }\n\n    lt.table[7] = 24;\n    lt.table[8] = 152;\n    lt.table[9] = 112;\n\n    for (i = 0; i < 24; ++i) { lt.trans[i] = 256 + i; }\n    for (i = 0; i < 144; ++i) { lt.trans[24 + i] = i; }\n    for (i = 0; i < 8; ++i) { lt.trans[24 + 144 + i] = 280 + i; }\n    for (i = 0; i < 112; ++i) { lt.trans[24 + 144 + 8 + i] = 144 + i; }\n\n    /* build fixed distance tree */\n    for (i = 0; i < 5; ++i) { dt.table[i] = 0; }\n\n    dt.table[5] = 32;\n\n    for (i = 0; i < 32; ++i) { dt.trans[i] = i; }\n  }\n\n  /* given an array of code lengths, build a tree */\n  var offs = new Uint16Array(16);\n\n  function tinf_build_tree(t, lengths, off, num) {\n    var i, sum;\n\n    /* clear code length count table */\n    for (i = 0; i < 16; ++i) { t.table[i] = 0; }\n\n    /* scan symbol lengths, and sum code length counts */\n    for (i = 0; i < num; ++i) { t.table[lengths[off + i]]++; }\n\n    t.table[0] = 0;\n\n    /* compute offset table for distribution sort */\n    for (sum = 0, i = 0; i < 16; ++i) {\n      offs[i] = sum;\n      sum += t.table[i];\n    }\n\n    /* create code->symbol translation table (symbols sorted by code) */\n    for (i = 0; i < num; ++i) {\n      if (lengths[off + i]) { t.trans[offs[lengths[off + i]]++] = i; }\n    }\n  }\n\n  /* ---------------------- *\n   * -- decode functions -- *\n   * ---------------------- */\n\n  /* get one bit from source stream */\n  function tinf_getbit(d) {\n    /* check if tag is empty */\n    if (!d.bitcount--) {\n      /* load next tag */\n      d.tag = d.source[d.sourceIndex++];\n      d.bitcount = 7;\n    }\n\n    /* shift bit out of tag */\n    var bit = d.tag & 1;\n    d.tag >>>= 1;\n\n    return bit;\n  }\n\n  /* read a num bit value from a stream and add base */\n  function tinf_read_bits(d, num, base) {\n    if (!num)\n      { return base; }\n\n    while (d.bitcount < 24) {\n      d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n      d.bitcount += 8;\n    }\n\n    var val = d.tag & (0xffff >>> (16 - num));\n    d.tag >>>= num;\n    d.bitcount -= num;\n    return val + base;\n  }\n\n  /* given a data stream and a tree, decode a symbol */\n  function tinf_decode_symbol(d, t) {\n    while (d.bitcount < 24) {\n      d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n      d.bitcount += 8;\n    }\n    \n    var sum = 0, cur = 0, len = 0;\n    var tag = d.tag;\n\n    /* get more bits while code value is above sum */\n    do {\n      cur = 2 * cur + (tag & 1);\n      tag >>>= 1;\n      ++len;\n\n      sum += t.table[len];\n      cur -= t.table[len];\n    } while (cur >= 0);\n    \n    d.tag = tag;\n    d.bitcount -= len;\n\n    return t.trans[sum + cur];\n  }\n\n  /* given a data stream, decode dynamic trees from it */\n  function tinf_decode_trees(d, lt, dt) {\n    var hlit, hdist, hclen;\n    var i, num, length;\n\n    /* get 5 bits HLIT (257-286) */\n    hlit = tinf_read_bits(d, 5, 257);\n\n    /* get 5 bits HDIST (1-32) */\n    hdist = tinf_read_bits(d, 5, 1);\n\n    /* get 4 bits HCLEN (4-19) */\n    hclen = tinf_read_bits(d, 4, 4);\n\n    for (i = 0; i < 19; ++i) { lengths[i] = 0; }\n\n    /* read code lengths for code length alphabet */\n    for (i = 0; i < hclen; ++i) {\n      /* get 3 bits code length (0-7) */\n      var clen = tinf_read_bits(d, 3, 0);\n      lengths[clcidx[i]] = clen;\n    }\n\n    /* build code length tree */\n    tinf_build_tree(code_tree, lengths, 0, 19);\n\n    /* decode code lengths for the dynamic trees */\n    for (num = 0; num < hlit + hdist;) {\n      var sym = tinf_decode_symbol(d, code_tree);\n\n      switch (sym) {\n        case 16:\n          /* copy previous code length 3-6 times (read 2 bits) */\n          var prev = lengths[num - 1];\n          for (length = tinf_read_bits(d, 2, 3); length; --length) {\n            lengths[num++] = prev;\n          }\n          break;\n        case 17:\n          /* repeat code length 0 for 3-10 times (read 3 bits) */\n          for (length = tinf_read_bits(d, 3, 3); length; --length) {\n            lengths[num++] = 0;\n          }\n          break;\n        case 18:\n          /* repeat code length 0 for 11-138 times (read 7 bits) */\n          for (length = tinf_read_bits(d, 7, 11); length; --length) {\n            lengths[num++] = 0;\n          }\n          break;\n        default:\n          /* values 0-15 represent the actual code lengths */\n          lengths[num++] = sym;\n          break;\n      }\n    }\n\n    /* build dynamic trees */\n    tinf_build_tree(lt, lengths, 0, hlit);\n    tinf_build_tree(dt, lengths, hlit, hdist);\n  }\n\n  /* ----------------------------- *\n   * -- block inflate functions -- *\n   * ----------------------------- */\n\n  /* given a stream and two trees, inflate a block of data */\n  function tinf_inflate_block_data(d, lt, dt) {\n    while (1) {\n      var sym = tinf_decode_symbol(d, lt);\n\n      /* check for end of block */\n      if (sym === 256) {\n        return TINF_OK;\n      }\n\n      if (sym < 256) {\n        d.dest[d.destLen++] = sym;\n      } else {\n        var length, dist, offs;\n        var i;\n\n        sym -= 257;\n\n        /* possibly get more bits from length code */\n        length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n        dist = tinf_decode_symbol(d, dt);\n\n        /* possibly get more bits from distance code */\n        offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n        /* copy match */\n        for (i = offs; i < offs + length; ++i) {\n          d.dest[d.destLen++] = d.dest[i];\n        }\n      }\n    }\n  }\n\n  /* inflate an uncompressed block of data */\n  function tinf_inflate_uncompressed_block(d) {\n    var length, invlength;\n    var i;\n    \n    /* unread from bitbuffer */\n    while (d.bitcount > 8) {\n      d.sourceIndex--;\n      d.bitcount -= 8;\n    }\n\n    /* get length */\n    length = d.source[d.sourceIndex + 1];\n    length = 256 * length + d.source[d.sourceIndex];\n\n    /* get one's complement of length */\n    invlength = d.source[d.sourceIndex + 3];\n    invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n    /* check length */\n    if (length !== (~invlength & 0x0000ffff))\n      { return TINF_DATA_ERROR; }\n\n    d.sourceIndex += 4;\n\n    /* copy block */\n    for (i = length; i; --i)\n      { d.dest[d.destLen++] = d.source[d.sourceIndex++]; }\n\n    /* make sure we start next block on a byte boundary */\n    d.bitcount = 0;\n\n    return TINF_OK;\n  }\n\n  /* inflate stream from source to dest */\n  function tinf_uncompress(source, dest) {\n    var d = new Data(source, dest);\n    var bfinal, btype, res;\n\n    do {\n      /* read final block flag */\n      bfinal = tinf_getbit(d);\n\n      /* read block type (2 bits) */\n      btype = tinf_read_bits(d, 2, 0);\n\n      /* decompress block */\n      switch (btype) {\n        case 0:\n          /* decompress uncompressed block */\n          res = tinf_inflate_uncompressed_block(d);\n          break;\n        case 1:\n          /* decompress block with fixed huffman trees */\n          res = tinf_inflate_block_data(d, sltree, sdtree);\n          break;\n        case 2:\n          /* decompress block with dynamic huffman trees */\n          tinf_decode_trees(d, d.ltree, d.dtree);\n          res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n          break;\n        default:\n          res = TINF_DATA_ERROR;\n      }\n\n      if (res !== TINF_OK)\n        { throw new Error('Data error'); }\n\n    } while (!bfinal);\n\n    if (d.destLen < d.dest.length) {\n      if (typeof d.dest.slice === 'function')\n        { return d.dest.slice(0, d.destLen); }\n      else\n        { return d.dest.subarray(0, d.destLen); }\n    }\n    \n    return d.dest;\n  }\n\n  /* -------------------- *\n   * -- initialization -- *\n   * -------------------- */\n\n  /* build fixed huffman trees */\n  tinf_build_fixed_trees(sltree, sdtree);\n\n  /* build extra bits and base tables */\n  tinf_build_bits_base(length_bits, length_base, 4, 3);\n  tinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n  /* fix a special case */\n  length_bits[28] = 0;\n  length_base[28] = 258;\n\n  module.exports = tinf_uncompress;\n\n    return module.exports\n  })();\n  // End tinyInflate\n\n  // Begin woff2otf.js\n  /*\n   Copyright 2012, Steffen Hanikel (https://github.com/hanikesn)\n   Modified by Artemy Tregubenko, 2014 (https://github.com/arty-name/woff2otf)\n   Modified by Jason Johnston, 2019 (pako --> tiny-inflate)\n   \n     Licensed under the Apache License, Version 2.0 (the \"License\");\n     you may not use this file except in compliance with the License.\n     You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n     Unless required by applicable law or agreed to in writing, software\n     distributed under the License is distributed on an \"AS IS\" BASIS,\n     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     See the License for the specific language governing permissions and\n     limitations under the License.\n\n   A tool to convert a WOFF back to a TTF/OTF font file, in pure Javascript\n  */\n\n  function convert_streams(bufferIn, tinyInflate) {\n      var dataViewIn = new DataView(bufferIn);\n      var offsetIn = 0;\n\n      function read2() {\n          var uint16 = dataViewIn.getUint16(offsetIn);\n          offsetIn += 2;\n          return uint16;\n      }\n\n      function read4() {\n          var uint32 = dataViewIn.getUint32(offsetIn);\n          offsetIn += 4;\n          return uint32;\n      }\n\n      function write2(uint16) {\n          dataViewOut.setUint16(offsetOut, uint16);\n          offsetOut += 2;\n      }\n\n      function write4(uint32) {\n          dataViewOut.setUint32(offsetOut, uint32);\n          offsetOut += 4;\n      }\n\n      var WOFFHeader = {\n          signature: read4(),\n          flavor: read4(),\n          length: read4(),\n          numTables: read2(),\n          reserved: read2(),\n          totalSfntSize: read4(),\n          majorVersion: read2(),\n          minorVersion: read2(),\n          metaOffset: read4(),\n          metaLength: read4(),\n          metaOrigLength: read4(),\n          privOffset: read4(),\n          privLength: read4()\n      };\n\n      var entrySelector = 0;\n      while (Math.pow(2, entrySelector) <= WOFFHeader.numTables) {\n          entrySelector++;\n      }\n      entrySelector--;\n\n      var searchRange = Math.pow(2, entrySelector) * 16;\n      var rangeShift = WOFFHeader.numTables * 16 - searchRange;\n\n      var offset = 4 + 2 + 2 + 2 + 2;\n      var TableDirectoryEntries = [];\n      for (var i = 0; i < WOFFHeader.numTables; i++) {\n          TableDirectoryEntries.push({\n              tag: read4(),\n              offset: read4(),\n              compLength: read4(),\n              origLength: read4(),\n              origChecksum: read4()\n          });\n          offset += 4 * 4;\n      }\n\n      var arrayOut = new Uint8Array(\n          4 + 2 + 2 + 2 + 2 +\n          TableDirectoryEntries.length * (4 + 4 + 4 + 4) +\n          TableDirectoryEntries.reduce(function(acc, entry) { return acc + entry.origLength + 4; }, 0)\n      );\n      var bufferOut = arrayOut.buffer;\n      var dataViewOut = new DataView(bufferOut);\n      var offsetOut = 0;\n\n      write4(WOFFHeader.flavor);\n      write2(WOFFHeader.numTables);\n      write2(searchRange);\n      write2(entrySelector);\n      write2(rangeShift);\n\n      TableDirectoryEntries.forEach(function(TableDirectoryEntry) {\n          write4(TableDirectoryEntry.tag);\n          write4(TableDirectoryEntry.origChecksum);\n          write4(offset);\n          write4(TableDirectoryEntry.origLength);\n\n          TableDirectoryEntry.outOffset = offset;\n          offset += TableDirectoryEntry.origLength;\n          if ((offset % 4) != 0) {\n              offset += 4 - (offset % 4);\n          }\n      });\n\n      var size;\n\n      TableDirectoryEntries.forEach(function(TableDirectoryEntry) {\n          var compressedData = bufferIn.slice(\n              TableDirectoryEntry.offset,\n              TableDirectoryEntry.offset + TableDirectoryEntry.compLength\n          );\n\n          if (TableDirectoryEntry.compLength != TableDirectoryEntry.origLength) {\n              var uncompressedData = new Uint8Array(TableDirectoryEntry.origLength);\n              tinyInflate(\n                new Uint8Array(compressedData, 2), //skip deflate header\n                uncompressedData\n              );\n          } else {\n              uncompressedData = new Uint8Array(compressedData);\n          }\n\n          arrayOut.set(uncompressedData, TableDirectoryEntry.outOffset);\n          offset = TableDirectoryEntry.outOffset + TableDirectoryEntry.origLength;\n\n          var padding = 0;\n          if ((offset % 4) != 0) {\n              padding = 4 - (offset % 4);\n          }\n          arrayOut.set(\n              new Uint8Array(padding).buffer,\n              TableDirectoryEntry.outOffset + TableDirectoryEntry.origLength\n          );\n\n          size = offset + padding;\n      });\n\n      return bufferOut.slice(0, size);\n  }\n\n  // End woff2otf.js\n\n  return function(buffer) {\n    return convert_streams(buffer, tinyInflate)\n  }\n\n  }\n\n  /**\n   * An adapter that allows Typr.js to be used as if it were (a subset of) the OpenType.js API.\n   * Also adds support for WOFF files (not WOFF2).\n   */\n\n  function parserFactory(Typr, woff2otf) {\n    var cmdArgLengths = {\n      M: 2,\n      L: 2,\n      Q: 4,\n      C: 6,\n      Z: 0\n    };\n\n    function wrapFontObj(typrFont) {\n      var glyphMap = Object.create(null);\n\n      var fontObj = {\n        unitsPerEm: typrFont.head.unitsPerEm,\n        ascender: typrFont.hhea.ascender,\n        descender: typrFont.hhea.descender,\n        forEachGlyph: function forEachGlyph(text, fontSize, letterSpacing, callback) {\n          var glyphX = 0;\n          var fontScale = 1 / fontObj.unitsPerEm * fontSize;\n\n          var glyphIndices = Typr.U.stringToGlyphs(typrFont, text);\n          var charIndex = 0;\n          glyphIndices.forEach(function (glyphIndex) {\n            // Typr returns a glyph index per string codepoint, with -1s in place of those that\n            // were omitted due to ligature substitution. So we can track original index in the\n            // string via simple increment, and skip everything else when seeing a -1.\n            if (glyphIndex !== -1) {\n              var glyphObj = glyphMap[glyphIndex];\n              if (!glyphObj) {\n                var ref = Typr.U.glyphToPath(typrFont, glyphIndex);\n                var cmds = ref.cmds;\n                var crds = ref.crds;\n\n                // Find extents - Glyf gives this in metadata but not CFF, and Typr doesn't\n                // normalize the two, so it's simplest just to iterate ourselves.\n                var xMin, yMin, xMax, yMax;\n                if (crds.length) {\n                  xMin = yMin = Infinity;\n                  xMax = yMax = -Infinity;\n                  for (var i = 0, len = crds.length; i < len; i += 2) {\n                    var x = crds[i];\n                    var y = crds[i + 1];\n                    if (x < xMin) { xMin = x; }\n                    if (y < yMin) { yMin = y; }\n                    if (x > xMax) { xMax = x; }\n                    if (y > yMax) { yMax = y; }\n                  }\n                } else {\n                  xMin = xMax = yMin = yMax = 0;\n                }\n\n                glyphObj = glyphMap[glyphIndex] = {\n                  index: glyphIndex,\n                  advanceWidth: typrFont.hmtx.aWidth[glyphIndex],\n                  xMin: xMin,\n                  yMin: yMin,\n                  xMax: xMax,\n                  yMax: yMax,\n                  pathCommandCount: cmds.length,\n                  forEachPathCommand: function forEachPathCommand(callback) {\n                    var argsIndex = 0;\n                    var argsArray = [];\n                    for (var i = 0, len = cmds.length; i < len; i++) {\n                      var numArgs = cmdArgLengths[cmds[i]];\n                      argsArray.length = 1 + numArgs;\n                      argsArray[0] = cmds[i];\n                      for (var j = 1; j <= numArgs; j++) {\n                        argsArray[j] = crds[argsIndex++];\n                      }\n                      callback.apply(null, argsArray);\n                    }\n                  }\n                };\n              }\n\n              callback.call(null, glyphObj, glyphX, charIndex);\n\n              if (glyphObj.advanceWidth) {\n                glyphX += glyphObj.advanceWidth * fontScale;\n              }\n              if (letterSpacing) {\n                glyphX += letterSpacing * fontSize;\n              }\n            }\n            charIndex += (text.codePointAt(charIndex) > 0xffff ? 2 : 1);\n          });\n          return glyphX\n        }\n      };\n\n      return fontObj\n    }\n\n    return function parse(buffer) {\n      // Look to see if we have a WOFF file and convert it if so:\n      var peek = new Uint8Array(buffer, 0, 4);\n      var tag = Typr._bin.readASCII(peek, 0, 4);\n      if (tag === 'wOFF') {\n        buffer = woff2otf(buffer);\n      } else if (tag === 'wOF2') {\n        throw new Error('woff2 fonts not supported')\n      }\n      return wrapFontObj(Typr.parse(buffer)[0])\n    }\n  }\n\n\n  var workerModule = troikaWorkerUtils.defineWorkerModule({\n    name: 'Typr Font Parser',\n    dependencies: [typrFactory, woff2otfFactory, parserFactory],\n    init: function init(typrFactory, woff2otfFactory, parserFactory) {\n      var Typr = typrFactory();\n      var woff2otf = woff2otfFactory();\n      return parserFactory(Typr, woff2otf)\n    }\n  });\n\n  //import fontParser from './FontParser_OpenType.js'\n\n\n  var CONFIG = {\n    defaultFontURL: 'https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff', //Roboto Regular\n    sdfGlyphSize: 64,\n    textureWidth: 2048\n  };\n  var tempColor = new three.Color();\n\n  /**\n   * Customizes the text builder configuration. This must be called prior to the first font processing\n   * request, and applies to all fonts.\n   *\n   * @param {String} config.defaultFontURL - The URL of the default font to use for text processing\n   *                 requests, in case none is specified or the specifiede font fails to load or parse.\n   *                 Defaults to \"Roboto Regular\" from Google Fonts.\n   * @param {Number} config.sdfGlyphSize - The default size of each glyph's SDF (signed distance field)\n   *                 texture used for rendering. Must be a power-of-two number, and applies to all fonts,\n   *                 but note that this can also be overridden per call to `getTextRenderInfo()`.\n   *                 Larger sizes can improve the quality of glyph rendering by increasing the sharpness\n   *                 of corners and preventing loss of very thin lines, at the expense of memory. Defaults\n   *                 to 64 which is generally a good balance of size and quality.\n   * @param {Number} config.textureWidth - The width of the SDF texture; must be a power of 2. Defaults to\n   *                 2048 which is a safe maximum texture dimension according to the stats at\n   *                 https://webglstats.com/webgl/parameter/MAX_TEXTURE_SIZE and should allow for a\n   *                 reasonably large number of glyphs (default glyph size of 64 and safe texture size of\n   *                 2048^2 allows for 1024 glyphs.) This can be increased if you need to increase the\n   *                 glyph size and/or have an extraordinary number of glyphs.\n   */\n  function configureTextBuilder(config) {\n    {\n      assign(CONFIG, config);\n    }\n  }\n\n\n  /**\n   * The radial distance from glyph edges over which the SDF alpha will be calculated; if the alpha\n   * at distance:0 is 0.5, then the alpha at this distance will be zero. This is defined as a percentage\n   * of each glyph's maximum dimension in font space units so that it maps to the same minimum number of\n   * SDF texels regardless of the glyph's size. A larger value provides greater alpha gradient resolution\n   * and improves readability/antialiasing quality at small display sizes, but also decreases the number\n   * of texels available for encoding path details.\n   */\n  var SDF_DISTANCE_PERCENT = 1 / 8;\n\n\n  /**\n   * Repository for all font SDF atlas textures\n   *\n   *   {\n   *     [font]: {\n   *       sdfTexture: DataTexture\n   *     }\n   *   }\n   */\n  var atlases = Object.create(null);\n\n  /**\n   * @typedef {object} TroikaTextRenderInfo - Format of the result from `getTextRenderInfo`.\n   * @property {object} parameters - The normalized input arguments to the render call.\n   * @property {DataTexture} sdfTexture - The SDF atlas texture.\n   * @property {number} sdfGlyphSize - The size of each glyph's SDF.\n   * @property {number} sdfMinDistancePercent - See `SDF_DISTANCE_PERCENT`\n   * @property {Float32Array} glyphBounds - List of [minX, minY, maxX, maxY] quad bounds for each glyph.\n   * @property {Float32Array} glyphAtlasIndices - List holding each glyph's index in the SDF atlas.\n   * @property {Uint8Array} [glyphColors] - List holding each glyph's [r, g, b] color, if `colorRanges` was supplied.\n   * @property {Float32Array} [caretPositions] - A list of caret positions for all glyphs; this is\n   *           the bottom [x,y] of the cursor position before each char, plus one after the last char.\n   * @property {number} [caretHeight] - An appropriate height for all selection carets.\n   * @property {number} ascender - The font's ascender metric.\n   * @property {number} descender - The font's descender metric.\n   * @property {number} lineHeight - The final computed lineHeight measurement.\n   * @property {number} topBaseline - The y position of the top line's baseline.\n   * @property {Array<number>} totalBounds - The total [minX, minY, maxX, maxY] rect including all glyph\n   *           quad bounds; this will be slightly larger than the actual glyph path edges due to SDF padding.\n   * @property {Array<number>} totalBlockSize - The [width, height] of the text block; this does not include\n   *           extra SDF padding so it is accurate to use for measurement.\n   * @property {Array<number>} chunkedBounds - List of bounding rects for each consecutive set of N glyphs,\n   *           in the format `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`.\n   * @property {object} timings - Timing info for various parts of the rendering logic including SDF\n   *           generation, layout, etc.\n   * @frozen\n   */\n\n  /**\n   * @callback getTextRenderInfo~callback\n   * @param {TroikaTextRenderInfo} textRenderInfo\n   */\n\n  /**\n   * Main entry point for requesting the data needed to render a text string with given font parameters.\n   * This is an asynchronous call, performing most of the logic in a web worker thread.\n   * @param {object} args\n   * @param {getTextRenderInfo~callback} callback\n   */\n  function getTextRenderInfo(args, callback) {\n    args = assign({}, args);\n\n    // Apply default font here to avoid a 'null' atlas, and convert relative\n    // URLs to absolute so they can be resolved in the worker\n    args.font = toAbsoluteURL(args.font || CONFIG.defaultFontURL);\n\n    // Normalize text to a string\n    args.text = '' + args.text;\n\n    args.sdfGlyphSize = args.sdfGlyphSize || CONFIG.sdfGlyphSize;\n\n    // Normalize colors\n    if (args.colorRanges != null) {\n      var colors = {};\n      for (var key in args.colorRanges) {\n        if (args.colorRanges.hasOwnProperty(key)) {\n          var val = args.colorRanges[key];\n          if (typeof val !== 'number') {\n            val = tempColor.set(val).getHex();\n          }\n          colors[key] = val;\n        }\n      }\n      args.colorRanges = colors;\n    }\n\n    Object.freeze(args);\n\n    // Init the atlas for this font if needed\n    var textureWidth = CONFIG.textureWidth;\n    var sdfGlyphSize = args.sdfGlyphSize;\n    var atlasKey = (args.font) + \"@\" + sdfGlyphSize;\n    var atlas = atlases[atlasKey];\n    if (!atlas) {\n      atlas = atlases[atlasKey] = {\n        sdfTexture: new three.DataTexture(\n          new Uint8Array(sdfGlyphSize * textureWidth),\n          textureWidth,\n          sdfGlyphSize,\n          three.LuminanceFormat,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          three.LinearFilter,\n          three.LinearFilter\n        )\n      };\n      atlas.sdfTexture.font = args.font;\n    }\n\n    // Issue request to the FontProcessor in the worker\n    processInWorker(args).then(function (result) {\n      // If the response has newGlyphs, copy them into the atlas texture at the specified indices\n      if (result.newGlyphSDFs) {\n        result.newGlyphSDFs.forEach(function (ref) {\n          var textureData = ref.textureData;\n          var atlasIndex = ref.atlasIndex;\n\n          var texImg = atlas.sdfTexture.image;\n\n          // Grow the texture by power of 2 if needed\n          while (texImg.data.length < (atlasIndex + 1) * sdfGlyphSize * sdfGlyphSize) {\n            var biggerArray = new Uint8Array(texImg.data.length * 2);\n            biggerArray.set(texImg.data);\n            texImg.data = biggerArray;\n            texImg.height *= 2;\n          }\n\n          // Insert the new glyph's data into the full texture image at the correct offsets\n          var cols = texImg.width / sdfGlyphSize;\n          for (var y = 0; y < sdfGlyphSize; y++) {\n            var srcStartIndex = y * sdfGlyphSize;\n            var tgtStartIndex = texImg.width * sdfGlyphSize * Math.floor(atlasIndex / cols) //full rows\n              + (atlasIndex % cols) * sdfGlyphSize //partial row\n              + (y * texImg.width); //row within glyph\n            for (var x = 0; x < sdfGlyphSize; x++) {\n              texImg.data[tgtStartIndex + x] = textureData[srcStartIndex + x];\n            }\n          }\n        });\n        atlas.sdfTexture.needsUpdate = true;\n      }\n\n      // Invoke callback with the text layout arrays and updated texture\n      callback(Object.freeze({\n        parameters: args,\n        sdfTexture: atlas.sdfTexture,\n        sdfGlyphSize: sdfGlyphSize,\n        sdfMinDistancePercent: SDF_DISTANCE_PERCENT,\n        glyphBounds: result.glyphBounds,\n        glyphAtlasIndices: result.glyphAtlasIndices,\n        glyphColors: result.glyphColors,\n        caretPositions: result.caretPositions,\n        caretHeight: result.caretHeight,\n        chunkedBounds: result.chunkedBounds,\n        ascender: result.ascender,\n        descender: result.descender,\n        lineHeight: result.lineHeight,\n        topBaseline: result.topBaseline,\n        totalBounds: result.totalBounds,\n        totalBlockSize: result.totalBlockSize,\n        timings: result.timings\n      }));\n    });\n  }\n\n\n  /**\n   * Preload a given font and optionally pre-generate glyph SDFs for one or more character sequences.\n   * This can be useful to avoid long pauses when first showing text in a scene, by preloading the\n   * needed fonts and glyphs up front along with other assets.\n   *\n   * @param {object} options\n   * @param {string} options.font - URL of the font file to preload. If not given, the default font will\n   *        be loaded.\n   * @param {string|string[]} options.characters - One or more character sequences for which to pre-\n   *        generate glyph SDFs. Note that this will honor ligature substitution, so you may need\n   *        to specify ligature sequences in addition to their individual characters to get all\n   *        possible glyphs, e.g. `[\"t\", \"h\", \"th\"]` to get the \"t\" and \"h\" glyphs plus the \"th\" ligature.\n   * @param {number} options.sdfGlyphSize - The size at which to prerender the SDF textures for the\n   *        specified `characters`.\n   * @param {function} callback - A function that will be called when the preloading is complete.\n   */\n  function preloadFont(ref, callback) {\n    var font = ref.font;\n    var characters = ref.characters;\n    var sdfGlyphSize = ref.sdfGlyphSize;\n\n    var text = Array.isArray(characters) ? characters.join('\\n') : '' + characters;\n    getTextRenderInfo({ font: font, sdfGlyphSize: sdfGlyphSize, text: text }, callback);\n  }\n\n\n  // Local assign impl so we don't have to import troika-core\n  function assign(toObj, fromObj) {\n    for (var key in fromObj) {\n      if (fromObj.hasOwnProperty(key)) {\n        toObj[key] = fromObj[key];\n      }\n    }\n    return toObj\n  }\n\n  // Utility for making URLs absolute\n  var linkEl;\n  function toAbsoluteURL(path) {\n    if (!linkEl) {\n      linkEl = typeof document === 'undefined' ? {} : document.createElement('a');\n    }\n    linkEl.href = path;\n    return linkEl.href\n  }\n\n\n  var fontProcessorWorkerModule = troikaWorkerUtils.defineWorkerModule({\n    name: 'FontProcessor',\n    dependencies: [\n      CONFIG,\n      SDF_DISTANCE_PERCENT,\n      workerModule,\n      createGlyphSegmentsQuadtree,\n      createSDFGenerator,\n      createFontProcessor\n    ],\n    init: function init(config, sdfDistancePercent, fontParser, createGlyphSegmentsQuadtree, createSDFGenerator, createFontProcessor) {\n      var sdfGenerator = createSDFGenerator(\n        createGlyphSegmentsQuadtree,\n        {\n          sdfDistancePercent: sdfDistancePercent\n        }\n      );\n      return createFontProcessor(fontParser, sdfGenerator, {\n        defaultFontUrl: config.defaultFontURL\n      })\n    }\n  });\n\n  var processInWorker = troikaWorkerUtils.defineWorkerModule({\n    name: 'TextBuilder',\n    dependencies: [fontProcessorWorkerModule, troikaWorkerUtils.ThenableWorkerModule],\n    init: function init(fontProcessor, Thenable) {\n      return function(args) {\n        var thenable = new Thenable();\n        fontProcessor.process(args, thenable.resolve);\n        return thenable\n      }\n    },\n    getTransferables: function getTransferables(result) {\n      // Mark array buffers as transferable to avoid cloning during postMessage\n      var transferables = [\n        result.glyphBounds.buffer,\n        result.glyphAtlasIndices.buffer\n      ];\n      if (result.caretPositions) {\n        transferables.push(result.caretPositions.buffer);\n      }\n      if (result.newGlyphSDFs) {\n        result.newGlyphSDFs.forEach(function (d) {\n          transferables.push(d.textureData.buffer);\n        });\n      }\n      return transferables\n    }\n  });\n\n  var templateGeometries = {};\n  function getTemplateGeometry(detail) {\n    var geom = templateGeometries[detail];\n    if (!geom) {\n      geom = templateGeometries[detail] = new three.PlaneBufferGeometry(1, 1, detail, detail).translate(0.5, 0.5, 0);\n    }\n    return geom\n  }\n  var tempVec3 = new three.Vector3();\n\n  var glyphBoundsAttrName = 'aTroikaGlyphBounds';\n  var glyphIndexAttrName = 'aTroikaGlyphIndex';\n  var glyphColorAttrName = 'aTroikaGlyphColor';\n\n\n\n  /**\n  @class GlyphsGeometry\n\n  A specialized Geometry for rendering a set of text glyphs. Uses InstancedBufferGeometry to\n  render the glyphs using GPU instancing of a single quad, rather than constructing a whole\n  geometry with vertices, for much smaller attribute arraybuffers according to this math:\n\n    Where N = number of glyphs...\n\n    Instanced:\n    - position: 4 * 3\n    - index: 2 * 3\n    - normal: 4 * 3\n    - uv: 4 * 2\n    - glyph x/y bounds: N * 4\n    - glyph indices: N * 1\n    = 5N + 38\n\n    Non-instanced:\n    - position: N * 4 * 3\n    - index: N * 2 * 3\n    - normal: N * 4 * 3\n    - uv: N * 4 * 2\n    - glyph indices: N * 1\n    = 39N\n\n  A downside of this is the rare-but-possible lack of the instanced arrays extension,\n  which we could potentially work around with a fallback non-instanced implementation.\n\n  */\n  var GlyphsGeometry = /*@__PURE__*/(function (InstancedBufferGeometry) {\n    function GlyphsGeometry() {\n      InstancedBufferGeometry.call(this);\n\n      this.detail = 1;\n\n      // Preallocate zero-radius bounding sphere\n      this.boundingSphere = new three.Sphere();\n      this.boundingBox = new three.Box3();\n    }\n\n    if ( InstancedBufferGeometry ) GlyphsGeometry.__proto__ = InstancedBufferGeometry;\n    GlyphsGeometry.prototype = Object.create( InstancedBufferGeometry && InstancedBufferGeometry.prototype );\n    GlyphsGeometry.prototype.constructor = GlyphsGeometry;\n\n    var prototypeAccessors = { detail: { configurable: true } };\n\n    GlyphsGeometry.prototype.computeBoundingSphere = function computeBoundingSphere () {\n      // No-op; we'll sync the boundingSphere proactively in `updateGlyphs`.\n    };\n\n    GlyphsGeometry.prototype.computeBoundingBox = function computeBoundingBox () {\n      // No-op; we'll sync the boundingBox proactively in `updateGlyphs`.\n    };\n\n    prototypeAccessors.detail.set = function (detail) {\n      var this$1 = this;\n\n      if (detail !== this._detail) {\n        this._detail = detail;\n        if (typeof detail !== 'number' || detail < 1) {\n          detail = 1;\n        }\n        var tpl = getTemplateGeometry(detail)\n        ;['position', 'normal', 'uv'].forEach(function (attr) {\n          this$1.attributes[attr] = tpl.attributes[attr].clone();\n        });\n        this.setIndex(tpl.getIndex().clone());\n      }\n    };\n    prototypeAccessors.detail.get = function () {\n      return this._detail\n    };\n\n    /**\n     * Update the geometry for a new set of glyphs.\n     * @param {Float32Array} glyphBounds - An array holding the planar bounds for all glyphs\n     *        to be rendered, 4 entries for each glyph: x1,x2,y1,y1\n     * @param {Float32Array} glyphAtlasIndices - An array holding the index of each glyph within\n     *        the SDF atlas texture.\n     * @param {Array} totalBounds - An array holding the [minX, minY, maxX, maxY] across all glyphs\n     * @param {Array} [chunkedBounds] - An array of objects describing bounds for each chunk of N\n     *        consecutive glyphs: `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`. This can be\n     *        used with `applyClipRect` to choose an optimized `instanceCount`.\n     * @param {Uint8Array} [glyphColors] - An array holding r,g,b values for each glyph.\n     */\n    GlyphsGeometry.prototype.updateGlyphs = function updateGlyphs (glyphBounds, glyphAtlasIndices, totalBounds, chunkedBounds, glyphColors) {\n      // Update the instance attributes\n      updateBufferAttr(this, glyphBoundsAttrName, glyphBounds, 4);\n      updateBufferAttr(this, glyphIndexAttrName, glyphAtlasIndices, 1);\n      updateBufferAttr(this, glyphColorAttrName, glyphColors, 3);\n      this._chunkedBounds = chunkedBounds;\n      setInstanceCount(this, glyphAtlasIndices.length);\n\n      // Update the boundingSphere based on the total bounds\n      var sphere = this.boundingSphere;\n      sphere.center.set(\n        (totalBounds[0] + totalBounds[2]) / 2,\n        (totalBounds[1] + totalBounds[3]) / 2,\n        0\n      );\n      sphere.radius = sphere.center.distanceTo(tempVec3.set(totalBounds[0], totalBounds[1], 0));\n\n      // Update the boundingBox based on the total bounds\n      var box = this.boundingBox;\n      box.min.set(totalBounds[0], totalBounds[1], 0);\n      box.max.set(totalBounds[2], totalBounds[3], 0);\n    };\n\n    /**\n     * Given a clipping rect, and the chunkedBounds from the last updateGlyphs call, choose the lowest\n     * `instanceCount` that will show all glyphs within the clipped view. This is an optimization\n     * for long blocks of text that are clipped, to skip vertex shader evaluation for glyphs that would\n     * be clipped anyway.\n     *\n     * Note that since `drawElementsInstanced[ANGLE]` only accepts an instance count and not a starting\n     * offset, this optimization becomes less effective as the clipRect moves closer to the end of the\n     * text block. We could fix that by switching from instancing to a full geometry with a drawRange,\n     * but at the expense of much larger attribute buffers (see classdoc above.)\n     *\n     * @param {Vector4} clipRect\n     */\n    GlyphsGeometry.prototype.applyClipRect = function applyClipRect (clipRect) {\n      var count = this.getAttribute(glyphIndexAttrName).count;\n      var chunks = this._chunkedBounds;\n      if (chunks) {\n        for (var i = chunks.length; i--;) {\n          count = chunks[i].end;\n          var rect = chunks[i].rect;\n          // note: both rects are l-b-r-t\n          if (rect[1] < clipRect.w && rect[3] > clipRect.y && rect[0] < clipRect.z && rect[2] > clipRect.x) {\n            break\n          }\n        }\n      }\n      setInstanceCount(this, count);\n    };\n\n    Object.defineProperties( GlyphsGeometry.prototype, prototypeAccessors );\n\n    return GlyphsGeometry;\n  }(three.InstancedBufferGeometry));\n\n  // Compat for pre r109:\n  if (!GlyphsGeometry.prototype.setAttribute) {\n    GlyphsGeometry.prototype.setAttribute = function(name, attribute) {\n      this.attributes[ name ] = attribute;\n      return this\n    };\n  }\n\n\n  function updateBufferAttr(geom, attrName, newArray, itemSize) {\n    var attr = geom.getAttribute(attrName);\n    if (newArray) {\n      // If length isn't changing, just update the attribute's array data\n      if (attr && attr.array.length === newArray.length) {\n        attr.array.set(newArray);\n        attr.needsUpdate = true;\n      } else {\n        geom.setAttribute(attrName, new three.InstancedBufferAttribute(newArray, itemSize));\n        // If the new attribute has a different size, we also have to (as of r117) manually clear the\n        // internal cached max instance count. See https://github.com/mrdoob/three.js/issues/19706\n        // It's unclear if this is a threejs bug or a truly unsupported scenario; discussion in\n        // that ticket is ambiguous as to whether replacing a BufferAttribute with one of a\n        // different size is supported, but https://github.com/mrdoob/three.js/pull/17418 strongly\n        // implies it should be supported. It's possible we need to\n        delete geom._maxInstanceCount; //for r117+, could be fragile\n        geom.dispose(); //for r118+, more robust feeling, but more heavy-handed than I'd like\n      }\n    } else if (attr) {\n      geom.deleteAttribute(attrName);\n    }\n  }\n\n  // Handle maxInstancedCount -> instanceCount rename that happened in three r117\n  function setInstanceCount(geom, count) {\n    geom[geom.hasOwnProperty('instanceCount') ? 'instanceCount' : 'maxInstancedCount'] = count;\n  }\n\n  // language=GLSL\n  var VERTEX_DEFS = \"\\nuniform vec2 uTroikaSDFTextureSize;\\nuniform float uTroikaSDFGlyphSize;\\nuniform vec4 uTroikaTotalBounds;\\nuniform vec4 uTroikaClipRect;\\nuniform mat3 uTroikaOrient;\\nuniform bool uTroikaUseGlyphColors;\\nattribute vec4 aTroikaGlyphBounds;\\nattribute float aTroikaGlyphIndex;\\nattribute vec3 aTroikaGlyphColor;\\nvarying vec2 vTroikaSDFTextureUV;\\nvarying vec2 vTroikaGlyphUV;\\nvarying vec3 vTroikaGlyphColor;\\n\";\n\n  // language=GLSL prefix=\"void main() {\" suffix=\"}\"\n  var VERTEX_TRANSFORM = \"\\nvec4 bounds = aTroikaGlyphBounds;\\nvec4 clippedBounds = vec4(\\n  clamp(bounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\\n  clamp(bounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\\n);\\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\\nvTroikaGlyphUV = clippedXY.xy;\\n\\nfloat cols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\\nvTroikaSDFTextureUV = vec2(\\n  mod(aTroikaGlyphIndex, cols) + clippedXY.x,\\n  floor(aTroikaGlyphIndex / cols) + clippedXY.y\\n) * uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\\n\\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\\n\\nuv = vec2(\\n  (position.x - uTroikaTotalBounds.x) / (uTroikaTotalBounds.z - uTroikaTotalBounds.x),\\n  (position.y - uTroikaTotalBounds.y) / (uTroikaTotalBounds.w - uTroikaTotalBounds.y)\\n);\\n\\nposition = uTroikaOrient * position;\\nnormal = uTroikaOrient * normal;\\n\";\n\n  // language=GLSL\n  var FRAGMENT_DEFS = \"\\nuniform sampler2D uTroikaSDFTexture;\\nuniform float uTroikaSDFMinDistancePct;\\nuniform bool uTroikaSDFDebug;\\nvarying vec2 vTroikaSDFTextureUV;\\nvarying vec2 vTroikaGlyphUV;\\n\\nfloat troikaGetTextAlpha() {\\n  float troikaSDFValue = texture2D(uTroikaSDFTexture, vTroikaSDFTextureUV).r;\\n  \\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\\n  float alpha = step(0.5, troikaSDFValue);\\n  #else\\n  \" + ('') + \"\\n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\\n  float aaDist = min(\\n    0.5,\\n    0.5 * min(\\n      fwidth(vTroikaGlyphUV.x),\\n      fwidth(vTroikaGlyphUV.y)\\n    )\\n  ) / uTroikaSDFMinDistancePct;\\n  #else\\n  float aaDist = 0.01;\\n  #endif\\n  \\n  float alpha = uTroikaSDFDebug ? troikaSDFValue : smoothstep(\\n    0.5 - aaDist,\\n    0.5 + aaDist,\\n    troikaSDFValue\\n  );\\n  #endif\\n  \\n  return alpha;\\n}\\n\";\n\n  // language=GLSL prefix=\"void main() {\" suffix=\"}\"\n  var FRAGMENT_TRANSFORM = \"\\nfloat troikaAlphaMult = troikaGetTextAlpha();\\nif (troikaAlphaMult == 0.0) {\\n  discard;\\n} else {\\n  gl_FragColor.a *= troikaAlphaMult;\\n}\\n\";\n\n\n  /**\n   * Create a material for rendering text, derived from a baseMaterial\n   */\n  function createTextDerivedMaterial(baseMaterial) {\n    var textMaterial = troikaThreeUtils.createDerivedMaterial(baseMaterial, {\n      extensions: {derivatives: true},\n      uniforms: {\n        uTroikaSDFTexture: {value: null},\n        uTroikaSDFTextureSize: {value: new three.Vector2()},\n        uTroikaSDFGlyphSize: {value: 0},\n        uTroikaSDFMinDistancePct: {value: 0},\n        uTroikaTotalBounds: {value: new three.Vector4(0,0,0,0)},\n        uTroikaClipRect: {value: new three.Vector4(0,0,0,0)},\n        uTroikaOrient: {value: new three.Matrix3()},\n        uTroikaUseGlyphColors: {value: true},\n        uTroikaSDFDebug: {value: false}\n      },\n      vertexDefs: VERTEX_DEFS,\n      vertexTransform: VERTEX_TRANSFORM,\n      fragmentDefs: FRAGMENT_DEFS,\n      fragmentColorTransform: FRAGMENT_TRANSFORM,\n      customRewriter: function customRewriter(ref) {\n        var vertexShader = ref.vertexShader;\n        var fragmentShader = ref.fragmentShader;\n\n        var uDiffuseRE = /\\buniform\\s+vec3\\s+diffuse\\b/;\n        if (uDiffuseRE.test(fragmentShader)) {\n          // Replace all instances of `diffuse` with our varying\n          fragmentShader = fragmentShader\n            .replace(uDiffuseRE, 'varying vec3 vTroikaGlyphColor')\n            .replace(/\\bdiffuse\\b/g, 'vTroikaGlyphColor');\n          // Make sure the vertex shader declares the uniform so we can grab it as a fallback\n          if (!uDiffuseRE.test(vertexShader)) {\n            vertexShader = vertexShader.replace(\n              troikaThreeUtils.voidMainRegExp,\n              'uniform vec3 diffuse;\\n$&\\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\\n'\n            );\n          }\n        }\n        return { vertexShader: vertexShader, fragmentShader: fragmentShader }\n      }\n    });\n\n    // Force transparency - TODO is this reasonable?\n    textMaterial.transparent = true;\n\n    Object.defineProperties(textMaterial, {\n      isTroikaTextMaterial: {value: true},\n\n      // WebGLShadowMap reverses the side of the shadow material by default, which fails\n      // for planes, so here we force the `shadowSide` to always match the main side.\n      shadowSide: {\n        get: function get() {\n          return this.side\n        },\n        set: function set() {\n          //no-op\n        }\n      }\n    });\n\n    return textMaterial\n  }\n\n  var defaultMaterial = new three.MeshBasicMaterial({\n    color: 0xffffff,\n    side: three.DoubleSide,\n    transparent: true\n  });\n\n  var tempMat4 = new three.Matrix4();\n  var tempVec3a = new three.Vector3();\n  var tempVec3b = new three.Vector3();\n  var tempArray = [];\n  var origin = new three.Vector3();\n  var defaultOrient = '+x+y';\n\n  var raycastMesh = new three.Mesh(\n    new three.PlaneBufferGeometry(1, 1).translate(0.5, 0.5, 0),\n    defaultMaterial\n  );\n\n  var syncStartEvent = {type: 'syncstart'};\n  var syncCompleteEvent = {type: 'synccomplete'};\n\n  var SYNCABLE_PROPS = [\n    'font',\n    'fontSize',\n    'letterSpacing',\n    'lineHeight',\n    'maxWidth',\n    'overflowWrap',\n    'text',\n    'textAlign',\n    'textIndent',\n    'whiteSpace',\n    'anchorX',\n    'anchorY',\n    'colorRanges',\n    'sdfGlyphSize'\n  ];\n\n  var COPYABLE_PROPS = SYNCABLE_PROPS.concat(\n    'material',\n    'color',\n    'depthOffset',\n    'clipRect',\n    'orientation',\n    'glyphGeometryDetail'\n  );\n\n\n\n  /**\n   * @class Text\n   *\n   * A ThreeJS Mesh that renders a string of text on a plane in 3D space using signed distance\n   * fields (SDF).\n   */\n  var Text = /*@__PURE__*/(function (Mesh) {\n    function Text() {\n      var geometry = new GlyphsGeometry();\n      Mesh.call(this, geometry, null);\n\n      // === Text layout properties: === //\n\n      /**\n       * @member {string} text\n       * The string of text to be rendered.\n       */\n      this.text = '';\n\n      /**\n       * @deprecated Use `anchorX` and `anchorY` instead\n       * @member {Array<number>} anchor\n       * Defines where in the text block should correspond to the mesh's local position, as a set\n       * of horizontal and vertical percentages from 0 to 1. A value of `[0, 0]` (the default)\n       * anchors at the top-left, `[1, 1]` at the bottom-right, and `[0.5, 0.5]` centers the\n       * block at the mesh's position.\n       */\n      //this.anchor = null\n\n      /**\n       * @member {number|string} anchorX\n       * Defines the horizontal position in the text block that should line up with the local origin.\n       * Can be specified as a numeric x position in local units, a string percentage of the total\n       * text block width e.g. `'25%'`, or one of the following keyword strings: 'left', 'center',\n       * or 'right'.\n       */\n      this.anchorX = 0;\n\n      /**\n       * @member {number|string} anchorX\n       * Defines the vertical position in the text block that should line up with the local origin.\n       * Can be specified as a numeric y position in local units (note: down is negative y), a string\n       * percentage of the total text block height e.g. `'25%'`, or one of the following keyword strings:\n       * 'top', 'top-baseline', 'middle', 'bottom-baseline', or 'bottom'.\n       */\n      this.anchorY = 0;\n\n      /**\n       * @member {string} font\n       * URL of a custom font to be used. Font files can be any of the formats supported by\n       * OpenType (see https://github.com/opentypejs/opentype.js).\n       * Defaults to the Roboto font loaded from Google Fonts.\n       */\n      this.font = null; //will use default from TextBuilder\n\n      /**\n       * @member {number} fontSize\n       * The size at which to render the font in local units; corresponds to the em-box height\n       * of the chosen `font`.\n       */\n      this.fontSize = 0.1;\n\n      /**\n       * @member {number} letterSpacing\n       * Sets a uniform adjustment to spacing between letters after kerning is applied. Positive\n       * numbers increase spacing and negative numbers decrease it.\n       */\n      this.letterSpacing = 0;\n\n      /**\n       * @member {number|string} lineHeight\n       * Sets the height of each line of text, as a multiple of the `fontSize`. Defaults to 'normal'\n       * which chooses a reasonable height based on the chosen font's ascender/descender metrics.\n       */\n      this.lineHeight = 'normal';\n\n      /**\n       * @member {number} maxWidth\n       * The maximum width of the text block, above which text may start wrapping according to the\n       * `whiteSpace` and `overflowWrap` properties.\n       */\n      this.maxWidth = Infinity;\n\n      /**\n       * @member {string} overflowWrap\n       * Defines how text wraps if the `whiteSpace` property is `normal`. Can be either `'normal'`\n       * to break at whitespace characters, or `'break-word'` to allow breaking within words.\n       * Defaults to `'normal'`.\n       */\n      this.overflowWrap = 'normal';\n\n      /**\n       * @member {string} textAlign\n       * The horizontal alignment of each line of text within the overall text bounding box.\n       */\n      this.textAlign = 'left';\n\n      /**\n       * @member {number} textIndent\n       * Indentation for the first character of a line; see CSS `text-indent`.\n       */\n      this.textIndent = 0;\n\n      /**\n       * @member {string} whiteSpace\n       * Defines whether text should wrap when a line reaches the `maxWidth`. Can\n       * be either `'normal'` (the default), to allow wrapping according to the `overflowWrap` property,\n       * or `'nowrap'` to prevent wrapping. Note that `'normal'` here honors newline characters to\n       * manually break lines, making it behave more like `'pre-wrap'` does in CSS.\n       */\n      this.whiteSpace = 'normal';\n\n\n      // === Presentation properties: === //\n\n      /**\n       * @member {THREE.Material} material\n       * Defines a _base_ material to be used when rendering the text. This material will be\n       * automatically replaced with a material derived from it, that adds shader code to\n       * decrease the alpha for each fragment (pixel) outside the text glyphs, with antialiasing.\n       * By default it will derive from a simple white MeshBasicMaterial, but you can use any\n       * of the other mesh materials to gain other features like lighting, texture maps, etc.\n       *\n       * Also see the `color` shortcut property.\n       */\n      this.material = null;\n\n      /**\n       * @member {string|number|THREE.Color} color\n       * This is a shortcut for setting the `color` of the text's material. You can use this\n       * if you don't want to specify a whole custom `material`.\n       */\n      this.color = null;\n\n      /**\n       * @member {object|null} colorRanges\n       * WARNING: This API is experimental and may change.\n       * This allows more fine-grained control of colors for individual or ranges of characters,\n       * taking precedence over the material's `color`. Its format is an Object whose keys each\n       * define a starting character index for a range, and whose values are the color for each\n       * range. The color value can be a numeric hex color value, a `THREE.Color` object, or\n       * any of the strings accepted by `THREE.Color`.\n       */\n      this.colorRanges = null;\n\n      /**\n       * @member {number} depthOffset\n       * This is a shortcut for setting the material's `polygonOffset` and related properties,\n       * which can be useful in preventing z-fighting when this text is laid on top of another\n       * plane in the scene. Positive numbers are further from the camera, negatives closer.\n       */\n      this.depthOffset = 0;\n\n      /**\n       * @member {Array<number>} clipRect\n       * If specified, defines a `[minX, minY, maxX, maxY]` of a rectangle outside of which all\n       * pixels will be discarded. This can be used for example to clip overflowing text when\n       * `whiteSpace='nowrap'`.\n       */\n      this.clipRect = null;\n\n      /**\n       * @member {string} orientation\n       * Defines the axis plane on which the text should be laid out when the mesh has no extra\n       * rotation transform. It is specified as a string with two axes: the horizontal axis with\n       * positive pointing right, and the vertical axis with positive pointing up. By default this\n       * is '+x+y', meaning the text sits on the xy plane with the text's top toward positive y\n       * and facing positive z. A value of '+x-z' would place it on the xz plane with the text's\n       * top toward negative z and facing positive y.\n       */\n      this.orientation = defaultOrient;\n\n      /**\n       * @member {number} glyphGeometryDetail\n       * Controls number of vertical/horizontal segments that make up each glyph's rectangular\n       * plane. Defaults to 1. This can be increased to provide more geometrical detail for custom\n       * vertex shader effects, for example.\n       */\n      this.glyphGeometryDetail = 1;\n\n      /**\n       * @member {number|null} sdfGlyphSize\n       * The size of each glyph's SDF (signed distance field) used for rendering. This must be a\n       * power-of-two number. Defaults to 64 which is generally a good balance of size and quality\n       * for most fonts. Larger sizes can improve the quality of glyph rendering by increasing\n       * the sharpness of corners and preventing loss of very thin lines, at the expense of\n       * increased memory footprint and longer SDF generation time.\n       */\n      this.sdfGlyphSize = null;\n\n      this.debugSDF = false;\n    }\n\n    if ( Mesh ) Text.__proto__ = Mesh;\n    Text.prototype = Object.create( Mesh && Mesh.prototype );\n    Text.prototype.constructor = Text;\n\n    var prototypeAccessors = { textRenderInfo: { configurable: true },material: { configurable: true },glyphGeometryDetail: { configurable: true },customDepthMaterial: { configurable: true },customDistanceMaterial: { configurable: true } };\n\n    /**\n     * Updates the text rendering according to the current text-related configuration properties.\n     * This is an async process, so you can pass in a callback function to be executed when it\n     * finishes.\n     * @param {function} [callback]\n     */\n    Text.prototype.sync = function sync (callback) {\n      var this$1 = this;\n\n      if (this._needsSync) {\n        this._needsSync = false;\n\n        // If there's another sync still in progress, queue\n        if (this._isSyncing) {\n          (this._queuedSyncs || (this._queuedSyncs = [])).push(callback);\n        } else {\n          this._isSyncing = true;\n          this.dispatchEvent(syncStartEvent);\n\n          getTextRenderInfo({\n            text: this.text,\n            font: this.font,\n            fontSize: this.fontSize || 0.1,\n            letterSpacing: this.letterSpacing || 0,\n            lineHeight: this.lineHeight || 'normal',\n            maxWidth: this.maxWidth,\n            textAlign: this.textAlign,\n            textIndent: this.textIndent,\n            whiteSpace: this.whiteSpace,\n            overflowWrap: this.overflowWrap,\n            anchorX: this.anchorX,\n            anchorY: this.anchorY,\n            colorRanges: this.colorRanges,\n            includeCaretPositions: true, //TODO parameterize\n            sdfGlyphSize: this.sdfGlyphSize\n          }, function (textRenderInfo) {\n            this$1._isSyncing = false;\n\n            // Save result for later use in onBeforeRender\n            this$1._textRenderInfo = textRenderInfo;\n\n            // Update the geometry attributes\n            this$1.geometry.updateGlyphs(\n              textRenderInfo.glyphBounds,\n              textRenderInfo.glyphAtlasIndices,\n              textRenderInfo.totalBounds,\n              textRenderInfo.chunkedBounds,\n              textRenderInfo.glyphColors\n            );\n\n            // If we had extra sync requests queued up, kick it off\n            var queued = this$1._queuedSyncs;\n            if (queued) {\n              this$1._queuedSyncs = null;\n              this$1._needsSync = true;\n              this$1.sync(function () {\n                queued.forEach(function (fn) { return fn && fn(); });\n              });\n            }\n\n            this$1.dispatchEvent(syncCompleteEvent);\n            if (callback) {\n              callback();\n            }\n          });\n        }\n      }\n    };\n\n    /**\n     * Initiate a sync if needed - note it won't complete until next frame at the\n     * earliest so if possible it's a good idea to call sync() manually as soon as\n     * all the properties have been set.\n     * @override\n     */\n    Text.prototype.onBeforeRender = function onBeforeRender () {\n      this.sync();\n      this._prepareForRender();\n    };\n\n    /**\n     * Shortcut to dispose the geometry specific to this instance.\n     * Note: we don't also dispose the derived material here because if anything else is\n     * sharing the same base material it will result in a pause next frame as the program\n     * is recompiled. Instead users can dispose the base material manually, like normal,\n     * and we'll also dispose the derived material at that time.\n     */\n    Text.prototype.dispose = function dispose () {\n      this.geometry.dispose();\n    };\n\n    /**\n     * @property {TroikaTextRenderInfo|null} textRenderInfo\n     * @readonly\n     * The current processed rendering data for this TextMesh, returned by the TextBuilder after\n     * a `sync()` call. This will be `null` initially, and may be stale for a short period until\n     * the asynchrous `sync()` process completes.\n     */\n    prototypeAccessors.textRenderInfo.get = function () {\n      return this._textRenderInfo || null\n    };\n\n    // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\n    // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\n    prototypeAccessors.material.get = function () {\n      var derivedMaterial = this._derivedMaterial;\n      var baseMaterial = this._baseMaterial || defaultMaterial;\n      if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\n        derivedMaterial = this._derivedMaterial = createTextDerivedMaterial(baseMaterial);\n        // dispose the derived material when its base material is disposed:\n        baseMaterial.addEventListener('dispose', function onDispose() {\n          baseMaterial.removeEventListener('dispose', onDispose);\n          derivedMaterial.dispose();\n        });\n      }\n      return derivedMaterial\n    };\n    prototypeAccessors.material.set = function (baseMaterial) {\n      if (baseMaterial && baseMaterial.isTroikaTextMaterial) { //prevent double-derivation\n        this._derivedMaterial = baseMaterial;\n        this._baseMaterial = baseMaterial.baseMaterial;\n      } else {\n        this._baseMaterial = baseMaterial;\n      }\n    };\n\n    prototypeAccessors.glyphGeometryDetail.get = function () {\n      return this.geometry.detail\n    };\n    prototypeAccessors.glyphGeometryDetail.set = function (detail) {\n      this.geometry.detail = detail;\n    };\n\n    // Create and update material for shadows upon request:\n    prototypeAccessors.customDepthMaterial.get = function () {\n      return this.material.getDepthMaterial()\n    };\n    prototypeAccessors.customDistanceMaterial.get = function () {\n      return this.material.getDistanceMaterial()\n    };\n\n    Text.prototype._prepareForRender = function _prepareForRender () {\n      var material = this._derivedMaterial;\n      var uniforms = material.uniforms;\n      var textInfo = this.textRenderInfo;\n      if (textInfo) {\n        var sdfTexture = textInfo.sdfTexture;\n        var totalBounds = textInfo.totalBounds;\n        uniforms.uTroikaSDFTexture.value = sdfTexture;\n        uniforms.uTroikaSDFTextureSize.value.set(sdfTexture.image.width, sdfTexture.image.height);\n        uniforms.uTroikaSDFGlyphSize.value = textInfo.sdfGlyphSize;\n        uniforms.uTroikaSDFMinDistancePct.value = textInfo.sdfMinDistancePercent;\n        uniforms.uTroikaTotalBounds.value.fromArray(totalBounds);\n        uniforms.uTroikaUseGlyphColors.value = !!textInfo.glyphColors;\n\n        var clipRect = this.clipRect;\n        if (!(clipRect && Array.isArray(clipRect) && clipRect.length === 4)) {\n          uniforms.uTroikaClipRect.value.fromArray(totalBounds);\n        } else {\n          uniforms.uTroikaClipRect.value.set(\n            Math.max(totalBounds[0], clipRect[0]),\n            Math.max(totalBounds[1], clipRect[1]),\n            Math.min(totalBounds[2], clipRect[2]),\n            Math.min(totalBounds[3], clipRect[3])\n          );\n        }\n        this.geometry.applyClipRect(uniforms.uTroikaClipRect.value);\n      }\n      uniforms.uTroikaSDFDebug.value = !!this.debugSDF;\n      material.polygonOffset = !!this.depthOffset;\n      material.polygonOffsetFactor = material.polygonOffsetUnits = this.depthOffset || 0;\n\n      // shortcut for setting material color via `color` prop on the mesh:\n      var color = this.color;\n      if (color != null && material.color && material.color.isColor && color !== material._troikaColor) {\n        material.color.set(material._troikaColor = color);\n      }\n\n      // base orientation\n      var orient = this.orientation || defaultOrient;\n      if (orient !== material._orientation) {\n        var rotMat = uniforms.uTroikaOrient.value;\n        orient = orient.replace(/[^-+xyz]/g, '');\n        var match = orient !== defaultOrient && orient.match(/^([-+])([xyz])([-+])([xyz])$/);\n        if (match) {\n          var hSign = match[1];\n          var hAxis = match[2];\n          var vSign = match[3];\n          var vAxis = match[4];\n          tempVec3a.set(0, 0, 0)[hAxis] = hSign === '-' ? 1 : -1;\n          tempVec3b.set(0, 0, 0)[vAxis] = vSign === '-' ? -1 : 1;\n          tempMat4.lookAt(origin, tempVec3a.cross(tempVec3b), tempVec3b);\n          rotMat.setFromMatrix4(tempMat4);\n        } else {\n          rotMat.identity();\n        }\n        material._orientation = orient;\n      }\n    };\n\n    /**\n     * @override Custom raycasting to test against the whole text block's max rectangular bounds\n     * TODO is there any reason to make this more granular, like within individual line or glyph rects?\n     */\n    Text.prototype.raycast = function raycast (raycaster, intersects) {\n      var textInfo = this.textRenderInfo;\n      if (textInfo) {\n        var bounds = textInfo.totalBounds;\n        raycastMesh.matrixWorld.multiplyMatrices(\n          this.matrixWorld,\n          tempMat4.set(\n            bounds[2] - bounds[0], 0, 0, bounds[0],\n            0, bounds[3] - bounds[1], 0, bounds[1],\n            0, 0, 1, 0,\n            0, 0, 0, 1\n          )\n        );\n        tempArray.length = 0;\n        raycastMesh.raycast(raycaster, tempArray);\n        for (var i = 0; i < tempArray.length; i++) {\n          tempArray[i].object = this;\n          intersects.push(tempArray[i]);\n        }\n      }\n    };\n\n    Text.prototype.copy = function copy (source) {\n      var this$1 = this;\n\n      Mesh.prototype.copy.call(this, source);\n      COPYABLE_PROPS.forEach(function (prop) {\n        this$1[prop] = source[prop];\n      });\n      return this\n    };\n\n    Text.prototype.clone = function clone () {\n      return new this.constructor().copy(this)\n    };\n\n    Object.defineProperties( Text.prototype, prototypeAccessors );\n\n    return Text;\n  }(three.Mesh));\n\n\n  // Create setters for properties that affect text layout:\n  SYNCABLE_PROPS.forEach(function (prop) {\n    var privateKey = '_private_' + prop;\n    Object.defineProperty(Text.prototype, prop, {\n      get: function get() {\n        return this[privateKey]\n      },\n      set: function set(value) {\n        if (value !== this[privateKey]) {\n          this[privateKey] = value;\n          this._needsSync = true;\n        }\n      }\n    });\n  });\n\n\n  // Deprecation handler for `anchor` array:\n  var deprMsgShown = false;\n  Object.defineProperty(Text.prototype, 'anchor', {\n    get: function get() {\n      return this._deprecated_anchor\n    },\n    set: function set(val) {\n      this._deprecated_anchor = val;\n      if (!deprMsgShown) {\n        console.warn('TextMesh: `anchor` has been deprecated; use `anchorX` and `anchorY` instead.');\n        deprMsgShown = true;\n      }\n      if (Array.isArray(val)) {\n        this.anchorX = ((+val[0] || 0) * 100) + \"%\";\n        this.anchorY = ((+val[1] || 0) * 100) + \"%\";\n      } else {\n        this.anchorX = this.anchorY = 0;\n      }\n    }\n  });\n\n  //=== Utility functions for dealing with carets and selection ranges ===//\n\n  /**\n   * @typedef {object} TextCaret\n   * @property {number} x - x position of the caret\n   * @property {number} y - y position of the caret's bottom\n   * @property {number} height - height of the caret\n   * @property {number} charIndex - the index in the original input string of this caret's target\n   *   character; the caret will be for the position _before_ that character.\n   */\n\n  /**\n   * Given a local x/y coordinate in the text block plane, find the nearest caret position.\n   * @param {TroikaTextRenderInfo} textRenderInfo - a result object from TextBuilder#getTextRenderInfo\n   * @param {number} x\n   * @param {number} y\n   * @return {TextCaret | null}\n   */\n  function getCaretAtPoint(textRenderInfo, x, y) {\n    var closestCaret = null;\n    var caretHeight = textRenderInfo.caretHeight;\n    var caretsByRow = groupCaretsByRow(textRenderInfo);\n\n    // Find nearest row by y first\n    var closestRowY = Infinity;\n    caretsByRow.forEach(function (carets, rowY) {\n      if (Math.abs(y - (rowY + caretHeight / 2)) < Math.abs(y - (closestRowY + caretHeight / 2))) {\n        closestRowY = rowY;\n      }\n    });\n\n    // Then find closest caret by x within that row\n    caretsByRow.get(closestRowY).forEach(function (caret) {\n      if (!closestCaret || Math.abs(x - caret.x) < Math.abs(x - closestCaret.x)) {\n        closestCaret = caret;\n      }\n    });\n    return closestCaret\n  }\n\n\n  var _rectsCache = new WeakMap();\n\n  /**\n   * Given start and end character indexes, return a list of rectangles covering all the\n   * characters within that selection.\n   * @param {TroikaTextRenderInfo} textRenderInfo\n   * @param {number} start - index of the first char in the selection\n   * @param {number} end - index of the first char after the selection\n   * @return {Array<{left, top, right, bottom}> | null}\n   */\n  function getSelectionRects(textRenderInfo, start, end) {\n    var rects;\n    if (textRenderInfo) {\n      // Check cache - textRenderInfo is frozen so it's safe to cache based on it\n      var prevResult = _rectsCache.get(textRenderInfo);\n      if (prevResult && prevResult.start === start && prevResult.end === end) {\n        return prevResult.rects\n      }\n\n      var caretPositions = textRenderInfo.caretPositions;\n      var caretHeight = textRenderInfo.caretHeight;\n      var totalBounds = textRenderInfo.totalBounds;\n\n      // Normalize\n      if (end < start) {\n        var s = start;\n        start = end;\n        end = s;\n      }\n      start = Math.max(start, 0);\n      end = Math.min(end, caretPositions.length + 1);\n\n      // Collect into one rect per row\n      var rows = new Map();\n      for (var i = start; i < end; i++) {\n        var x1 = caretPositions[i * 3];\n        var x2 = caretPositions[i * 3 + 1];\n        var y = caretPositions[i * 3 + 2];\n        var row = rows.get(y);\n        if (!row) {\n          row = {left: x1, right: x2, bottom: y, top: y + caretHeight};\n          rows.set(y, row);\n        } else {\n          row.left = Math.max(Math.min(row.left, x1), totalBounds[0]);\n          row.right = Math.min(Math.max(row.right, x2), totalBounds[2]);\n        }\n      }\n      rects = [];\n      rows.forEach(function (rect) {\n        rects.push(rect);\n      });\n\n      _rectsCache.set(textRenderInfo, {start: start, end: end, rects: rects});\n    }\n    return rects\n  }\n\n  var _caretsByRowCache = new WeakMap();\n\n  function groupCaretsByRow(textRenderInfo) {\n    // textRenderInfo is frozen so it's safe to cache based on it\n    var caretsByRow = _caretsByRowCache.get(textRenderInfo);\n    if (!caretsByRow) {\n      var caretPositions = textRenderInfo.caretPositions;\n      var caretHeight = textRenderInfo.caretHeight;\n      caretsByRow = new Map();\n      for (var i = 0; i < caretPositions.length; i += 3) {\n        var rowY = caretPositions[i + 2];\n        var rowCarets = caretsByRow.get(rowY);\n        if (!rowCarets) {\n          caretsByRow.set(rowY, rowCarets = []);\n        }\n        rowCarets.push({\n          x: caretPositions[i],\n          y: rowY,\n          height: caretHeight,\n          charIndex: i / 3\n        });\n        // Add one more caret after the final char\n        if (i + 3 >= caretPositions.length) {\n          rowCarets.push({\n            x: caretPositions[i + 1],\n            y: rowY,\n            height: caretHeight,\n            charIndex: i / 3 + 1\n          });\n        }\n      }\n    }\n    _caretsByRowCache.set(textRenderInfo, caretsByRow);\n    return caretsByRow\n  }\n\n  exports.GlyphsGeometry = GlyphsGeometry;\n  exports.Text = Text;\n  exports.configureTextBuilder = configureTextBuilder;\n  exports.createTextDerivedMaterial = createTextDerivedMaterial;\n  exports.fontProcessorWorkerModule = fontProcessorWorkerModule;\n  exports.getCaretAtPoint = getCaretAtPoint;\n  exports.getSelectionRects = getSelectionRects;\n  exports.preloadFont = preloadFont;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.troika_worker_utils = {}));\n}(this, (function (exports) { 'use strict';\n\n  /**\n   * Lightweight thenable implementation that is entirely self-contained within a single\n   * function with no external dependencies so it can be easily shipped across to a WorkerModule.\n   *\n   * This implementation conforms fully to the Promises/A+ spec so it can safely interoperate\n   * with other thenable implementations. https://github.com/promises-aplus/promises-spec\n   *\n   * *However*, it is _not_ a full implementation of ES2015 Promises, e.g. it does not\n   * have the same constructor signature and does not expose a `catch` method or the static\n   * `resolve`/`reject`/`all`/`race` initializer methods. If you need to hand a Thenable\n   * instance off to consuming code that may expect a true Promise, you'll want to wrap it\n   * in a native-or-polyfilled Promise first.\n   *\n   * (Why yet another Promises/A+ implementation? Great question. We needed a polyfill-like\n   * thing that was (a) wrapped in a single function for easy serialization across to a Worker,\n   * and (b) was as small as possible -- at ~900B minified (~500B gzipped) this is the smallest\n   * implementation I've found. And also, exercises like this are challenging and fun.)\n   */\n  function BespokeThenable() {\n    var state = 0; // 0=pending, 1=fulfilled, -1=rejected\n    var queue = [];\n    var value;\n    var scheduled = 0;\n    var completeCalled = 0;\n\n    function then(onResolve, onReject) {\n      var nextThenable = BespokeThenable();\n\n      function handleNext() {\n        var cb = state > 0 ? onResolve : onReject;\n        if (isFn(cb)) {\n          try {\n            var result = cb(value);\n            if (result === nextThenable) {\n              recursiveError();\n            }\n            var resultThen = getThenableThen(result);\n            if (resultThen) {\n              resultThen.call(result, nextThenable.resolve, nextThenable.reject);\n            } else {\n              nextThenable.resolve(result);\n            }\n          } catch (err) {\n            nextThenable.reject(err);\n          }\n        } else {\n          nextThenable[state > 0 ? 'resolve' : 'reject'](value);\n        }\n      }\n\n      queue.push(handleNext);\n      if (state) {\n        scheduleQueueFlush();\n      }\n      return nextThenable\n    }\n\n    var resolve = oneTime(function (val) {\n      if (!completeCalled) {\n        complete(1, val);\n      }\n    });\n\n    var reject = oneTime(function (reason) {\n      if (!completeCalled) {\n        complete(-1, reason);\n      }\n    });\n\n    function complete(st, val) {\n      completeCalled++;\n      var ignoreThrow = 0;\n      try {\n        if (val === thenableObj) {\n          recursiveError();\n        }\n        var valThen = st > 0 && getThenableThen(val);\n        if (valThen) {\n          valThen.call(val, oneTime(function (v) {\n            ignoreThrow++;\n            complete(1, v);\n          }), oneTime(function (v) {\n            ignoreThrow++;\n            complete(-1, v);\n          }));\n        } else {\n          state = st;\n          value = val;\n          scheduleQueueFlush();\n        }\n      } catch(e) {\n        if (!state && !ignoreThrow) {\n          complete(-1, e);\n        }\n      }\n    }\n\n    function scheduleQueueFlush() {\n      if (!scheduled) {\n        setTimeout(flushQueue, 0); //TODO setImmediate or postMessage approach if available?\n        scheduled = 1;\n      }\n    }\n\n    function flushQueue() {\n      var q = queue;\n      scheduled = 0;\n      queue = [];\n      q.forEach(callIt);\n    }\n\n    function callIt(fn) {\n      fn();\n    }\n\n    function getThenableThen(val) {\n      var valThen = val && (isFn(val) || typeof val === 'object') && val.then;\n      return isFn(valThen) && valThen\n    }\n\n    function oneTime(fn) {\n      var called = 0;\n      return function() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        if (!called++) {\n          fn.apply(this, args);\n        }\n      }\n    }\n\n    function recursiveError() {\n      throw new TypeError('Chaining cycle detected')\n    }\n\n    var isFn = function (v) { return typeof v === 'function'; };\n\n    var thenableObj = {\n      then: then,\n      resolve: resolve,\n      reject: reject\n    };\n    return thenableObj\n  }\n\n\n  /**\n   * Thenable implementation that uses a native Promise under the covers. This implementation\n   * is preferred if Promise is available, for better performance and dev tools integration.\n   * @constructor\n   */\n  function NativePromiseThenable() {\n    var resolve, reject;\n    var promise = new Promise(function (res, rej) {\n      resolve = res;\n      reject = rej;\n    });\n    return {\n      then: promise.then.bind(promise),\n      resolve: resolve,\n      reject: reject\n    }\n  }\n\n  /**\n   * Promise.all() impl:\n   */\n  BespokeThenable.all = NativePromiseThenable.all = function(items) {\n    var resultCount = 0;\n    var results = [];\n    var out = DefaultThenable();\n    if (items.length === 0) {\n      out.resolve([]);\n    } else {\n      items.forEach(function (item, i) {\n        var itemThenable = DefaultThenable();\n        itemThenable.resolve(item);\n        itemThenable.then(function (res) {\n          resultCount++;\n          results[i] = res;\n          if (resultCount === items.length) {\n            out.resolve(results);\n          }\n        }, out.reject);\n      });\n    }\n    return out\n  };\n\n\n  /**\n   * Choose the best Thenable implementation and export it as the default.\n   */\n  var DefaultThenable = typeof Promise === 'function' ? NativePromiseThenable : BespokeThenable;\n\n  /**\n   * Main content for the worker that handles the loading and execution of\n   * modules within it.\n   */\n  function workerBootstrap() {\n    var modules = Object.create(null);\n\n    // Handle messages for registering a module\n    function registerModule(ref, callback) {\n      var id = ref.id;\n      var name = ref.name;\n      var dependencies = ref.dependencies; if ( dependencies === void 0 ) dependencies = [];\n      var init = ref.init; if ( init === void 0 ) init = function(){};\n      var getTransferables = ref.getTransferables; if ( getTransferables === void 0 ) getTransferables = null;\n\n      // Only register once\n      if (modules[id]) { return }\n\n      try {\n        // If any dependencies are modules, ensure they're registered and grab their value\n        dependencies = dependencies.map(function (dep) {\n          if (dep && dep.isWorkerModule) {\n            registerModule(dep, function (depResult) {\n              if (depResult instanceof Error) { throw depResult }\n            });\n            dep = modules[dep.id].value;\n          }\n          return dep\n        });\n\n        // Rehydrate functions\n        init = rehydrate((\"<\" + name + \">.init\"), init);\n        if (getTransferables) {\n          getTransferables = rehydrate((\"<\" + name + \">.getTransferables\"), getTransferables);\n        }\n\n        // Initialize the module and store its value\n        var value = null;\n        if (typeof init === 'function') {\n          value = init.apply(void 0, dependencies);\n        } else {\n          console.error('worker module init function failed to rehydrate');\n        }\n        modules[id] = {\n          id: id,\n          value: value,\n          getTransferables: getTransferables\n        };\n        callback(value);\n      } catch(err) {\n        if (!(err && err.noLog)) {\n          console.error(err);\n        }\n        callback(err);\n      }\n    }\n\n    // Handle messages for calling a registered module's result function\n    function callModule(ref, callback) {\n      var ref$1;\n\n      var id = ref.id;\n      var args = ref.args;\n      if (!modules[id] || typeof modules[id].value !== 'function') {\n        callback(new Error((\"Worker module \" + id + \": not found or its 'init' did not return a function\")));\n      }\n      try {\n        var result = (ref$1 = modules[id]).value.apply(ref$1, args);\n        if (result && typeof result.then === 'function') {\n          result.then(handleResult, function (rej) { return callback(rej instanceof Error ? rej : new Error('' + rej)); });\n        } else {\n          handleResult(result);\n        }\n      } catch(err) {\n        callback(err);\n      }\n      function handleResult(result) {\n        try {\n          var tx = modules[id].getTransferables && modules[id].getTransferables(result);\n          if (!tx || !Array.isArray(tx) || !tx.length) {\n            tx = undefined; //postMessage is very picky about not passing null or empty transferables\n          }\n          callback(result, tx);\n        } catch(err) {\n          console.error(err);\n          callback(err);\n        }\n      }\n    }\n\n    function rehydrate(name, str) {\n      var result = void 0;\n      self.troikaDefine = function (r) { return result = r; };\n      var url = URL.createObjectURL(\n        new Blob(\n          [(\"/** \" + (name.replace(/\\*/g, '')) + \" **/\\n\\ntroikaDefine(\\n\" + str + \"\\n)\")],\n          {type: 'application/javascript'}\n        )\n      );\n      try {\n        importScripts(url);\n      } catch(err) {\n        console.error(err);\n      }\n      URL.revokeObjectURL(url);\n      delete self.troikaDefine;\n      return result\n    }\n\n    // Handler for all messages within the worker\n    self.addEventListener('message', function (e) {\n      var ref = e.data;\n      var messageId = ref.messageId;\n      var action = ref.action;\n      var data = ref.data;\n      try {\n        // Module registration\n        if (action === 'registerModule') {\n          registerModule(data, function (result) {\n            if (result instanceof Error) {\n              postMessage({\n                messageId: messageId,\n                success: false,\n                error: result.message\n              });\n            } else {\n              postMessage({\n                messageId: messageId,\n                success: true,\n                result: {isCallable: typeof result === 'function'}\n              });\n            }\n          });\n        }\n        // Invocation\n        if (action === 'callModule') {\n          callModule(data, function (result, transferables) {\n            if (result instanceof Error) {\n              postMessage({\n                messageId: messageId,\n                success: false,\n                error: result.message\n              });\n            } else {\n              postMessage({\n                messageId: messageId,\n                success: true,\n                result: result\n              }, transferables || undefined);\n            }\n          });\n        }\n      } catch(err) {\n        postMessage({\n          messageId: messageId,\n          success: false,\n          error: err.stack\n        });\n      }\n    });\n  }\n\n  /**\n   * Fallback for `defineWorkerModule` that behaves identically but runs in the main\n   * thread, for when the execution environment doesn't support web workers or they\n   * are disallowed due to e.g. CSP security restrictions.\n   */\n  function defineMainThreadModule(options) {\n    var moduleFunc = function() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      return moduleFunc._getInitResult().then(function (initResult) {\n        if (typeof initResult === 'function') {\n          return initResult.apply(void 0, args)\n        } else {\n          throw new Error('Worker module function was called but `init` did not return a callable function')\n        }\n      })\n    };\n    moduleFunc._getInitResult = function() {\n      // We can ignore getTransferables in main thread. TODO workerId?\n      var dependencies = options.dependencies;\n      var init = options.init;\n\n      // Resolve dependencies\n      dependencies = Array.isArray(dependencies) ? dependencies.map(function (dep) { return dep && dep._getInitResult ? dep._getInitResult() : dep; }\n      ) : [];\n\n      // Invoke init with the resolved dependencies\n      var initThenable = DefaultThenable.all(dependencies).then(function (deps) {\n        return init.apply(null, deps)\n      });\n\n      // Cache the resolved promise for subsequent calls\n      moduleFunc._getInitResult = function () { return initThenable; };\n\n      return initThenable\n    };\n    return moduleFunc\n  }\n\n  var supportsWorkers = function () {\n    var supported = false;\n\n    // Only attempt worker initialization in browsers; elsewhere it would just be\n    // noise e.g. loading into a Node environment for SSR.\n    if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\n      try {\n        // TODO additional checks for things like importScripts within the worker?\n        //  Would need to be an async check.\n        var worker = new Worker(\n          URL.createObjectURL(\n            new Blob([''], { type: 'application/javascript' })\n          )\n        );\n        worker.terminate();\n        supported = true;\n      } catch (err) {\n        console.log((\"Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [\" + (err.message) + \"]\"));\n      }\n    }\n\n    // Cached result\n    supportsWorkers = function () { return supported; };\n    return supported\n  };\n\n  var _workerModuleId = 0;\n  var _messageId = 0;\n  var _allowInitAsString = false;\n  var workers = Object.create(null);\n  var openRequests = Object.create(null);\n  openRequests._count = 0;\n\n\n  /**\n   * Define a module of code that will be executed with a web worker. This provides a simple\n   * interface for moving chunks of logic off the main thread, and managing their dependencies\n   * among one another.\n   *\n   * @param {object} options\n   * @param {function} options.init - The main function that initializes the module. This will be run\n   *        within the worker, and will be passed the resolved dependencies as arguments. Its\n   *        return value becomes the module's content, which can then be used by other modules\n   *        that depend on it. This function can perform any logic using those dependencies, but\n   *        must not depend on anything from its parent closures.\n   * @param {array} [options.dependencies] - Provides any dependencies required by the init function:\n   *        - Primitives like strings, numbers, booleans\n   *        - Raw functions; these will be stringified and rehydrated within the worker so they\n   *          must not depend on anything from their parent closures\n   *        - Other worker modules; these will be resolved within the worker, and therefore modules\n   *          that provide functions can be called without having to cross the worker/main thread\n   *          boundary.\n   * @param {function} [options.getTransferables] - An optional function that will be run in the worker\n   *        just before posting the response value from a module call back to the main thread.\n   *        It will be passed that response value, and if it returns an array then that will be\n   *        used as the \"transferables\" parameter to `postMessage`. Use this if there are values\n   *        in the response that can/should be transfered rather than cloned.\n   * @param {string} [options.name] - A descriptive name for this module; this can be useful for\n   *        debugging but is not currently used for anything else.\n   * @param {string} [options.workerId] - By default all modules will run in the same dedicated worker,\n   *        but if you want to use multiple workers you can pass a `workerId` to indicate a specific\n   *        worker to spawn. Note that each worker is completely standalone and no data or state will\n   *        be shared between them. If a worker module is used as a dependency by worker modules\n   *        using different `workerId`s, then that dependency will be re-registered in each worker.\n   * @return {function(...[*]): {then}}\n   */\n  function defineWorkerModule(options) {\n    if ((!options || typeof options.init !== 'function') && !_allowInitAsString) {\n      throw new Error('requires `options.init` function')\n    }\n    var dependencies = options.dependencies;\n    var init = options.init;\n    var getTransferables = options.getTransferables;\n    var workerId = options.workerId;\n\n    if (!supportsWorkers()) {\n      return defineMainThreadModule(options)\n    }\n\n    if (workerId == null) {\n      workerId = '#default';\n    }\n    var id = \"workerModule\" + (++_workerModuleId);\n    var name = options.name || id;\n    var registrationThenable = null;\n\n    dependencies = dependencies && dependencies.map(function (dep) {\n      // Wrap raw functions as worker modules with no dependencies\n      if (typeof dep === 'function' && !dep.workerModuleData) {\n        _allowInitAsString = true;\n        dep = defineWorkerModule({\n          workerId: workerId,\n          name: (\"<\" + name + \"> function dependency: \" + (dep.name)),\n          init: (\"function(){return (\\n\" + (stringifyFunction(dep)) + \"\\n)}\")\n        });\n        _allowInitAsString = false;\n      }\n      // Grab postable data for worker modules\n      if (dep && dep.workerModuleData) {\n        dep = dep.workerModuleData;\n      }\n      return dep\n    });\n\n    function moduleFunc() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      // Register this module if needed\n      if (!registrationThenable) {\n        registrationThenable = callWorker(workerId,'registerModule', moduleFunc.workerModuleData);\n      }\n\n      // Invoke the module, returning a thenable\n      return registrationThenable.then(function (ref) {\n        var isCallable = ref.isCallable;\n\n        if (isCallable) {\n          return callWorker(workerId,'callModule', {id: id, args: args})\n        } else {\n          throw new Error('Worker module function was called but `init` did not return a callable function')\n        }\n      })\n    }\n    moduleFunc.workerModuleData = {\n      isWorkerModule: true,\n      id: id,\n      name: name,\n      dependencies: dependencies,\n      init: stringifyFunction(init),\n      getTransferables: getTransferables && stringifyFunction(getTransferables)\n    };\n    return moduleFunc\n  }\n\n  /**\n   * Stringifies a function into a form that can be deserialized in the worker\n   * @param fn\n   */\n  function stringifyFunction(fn) {\n    var str = fn.toString();\n    // If it was defined in object method/property format, it needs to be modified\n    if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\n      str = 'function ' + str;\n    }\n    return str\n  }\n\n\n  function getWorker(workerId) {\n    var worker = workers[workerId];\n    if (!worker) {\n      // Bootstrap the worker's content\n      var bootstrap = stringifyFunction(workerBootstrap);\n\n      // Create the worker from the bootstrap function content\n      worker = workers[workerId] = new Worker(\n        URL.createObjectURL(\n          new Blob(\n            [(\"/** Worker Module Bootstrap: \" + (workerId.replace(/\\*/g, '')) + \" **/\\n\\n;(\" + bootstrap + \")()\")],\n            {type: 'application/javascript'}\n          )\n        )\n      );\n\n      // Single handler for response messages from the worker\n      worker.onmessage = function (e) {\n        var response = e.data;\n        var msgId = response.messageId;\n        var callback = openRequests[msgId];\n        if (!callback) {\n          throw new Error('WorkerModule response with empty or unknown messageId')\n        }\n        delete openRequests[msgId];\n        openRequests.count--;\n        callback(response);\n      };\n    }\n    return worker\n  }\n\n  // Issue a call to the worker with a callback to handle the response\n  function callWorker(workerId, action, data) {\n    var thenable = DefaultThenable();\n    var messageId = ++_messageId;\n    openRequests[messageId] = function (response) {\n      if (response.success) {\n        thenable.resolve(response.result);\n      } else {\n        thenable.reject(new Error((\"Error in worker \" + action + \" call: \" + (response.error))));\n      }\n    };\n    openRequests._count++;\n    if (openRequests.count > 1000) { //detect leaks\n      console.warn('Large number of open WorkerModule requests, some may not be returning');\n    }\n    getWorker(workerId).postMessage({\n      messageId: messageId,\n      action: action,\n      data: data\n    });\n    return thenable\n  }\n\n  /**\n   * Just the {@link Thenable} function wrapped as a worker module. If another worker\n   * module needs Thenable as a dependency, it's better to pass this module rather than\n   * the raw function in its `dependencies` array so it only gets registered once.\n   */\n  var ThenableWorkerModule = defineWorkerModule({\n    name: 'Thenable',\n    dependencies: [DefaultThenable],\n    init: function(Thenable) {\n      return Thenable\n    }\n  });\n\n  exports.Thenable = DefaultThenable;\n  exports.ThenableWorkerModule = ThenableWorkerModule;\n  exports.defineWorkerModule = defineWorkerModule;\n  exports.stringifyFunction = stringifyFunction;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('three')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'three'], factory) :\n  (global = global || self, factory(global.troika_three_utils = {}, global.THREE));\n}(this, (function (exports, three) { 'use strict';\n\n  /**\n   * Regular expression for matching the `void main() {` opener line in GLSL.\n   * @type {RegExp}\n   */\n  var voidMainRegExp = /\\bvoid\\s+main\\s*\\(\\s*\\)\\s*{/g;\n\n  /**\n   * Recursively expands all `#include <xyz>` statements within string of shader code.\n   * Copied from three's WebGLProgram#parseIncludes for external use.\n   *\n   * @param {string} source - The GLSL source code to evaluate\n   * @return {string} The GLSL code with all includes expanded\n   */\n  function expandShaderIncludes( source ) {\n    var pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n    function replace(match, include) {\n      var chunk = three.ShaderChunk[include];\n      return chunk ? expandShaderIncludes(chunk) : match\n    }\n    return source.replace( pattern, replace )\n  }\n\n  // Local assign polyfill to avoid importing troika-core\n  var assign = Object.assign || function(/*target, ...sources*/) {\n    var arguments$1 = arguments;\n\n    var target = arguments[0];\n    for (var i = 1, len = arguments.length; i < len; i++) {\n      var source = arguments$1[i];\n      if (source) {\n        for (var prop in source) {\n          if (source.hasOwnProperty(prop)) {\n            target[prop] = source[prop];\n          }\n        }\n      }\n    }\n    return target\n  };\n\n\n  var epoch = Date.now();\n  var CACHE = new WeakMap(); //threejs requires WeakMap internally so should be safe to assume support\n\n\n  /**\n   * A utility for creating a custom shader material derived from another material's\n   * shaders. This allows you to inject custom shader logic and transforms into the\n   * builtin ThreeJS materials without having to recreate them from scratch.\n   *\n   * @param {THREE.Material} baseMaterial - the original material to derive from\n   *\n   * @param {Object} options - How the base material should be modified.\n   * @param {Object} options.defines - Custom `defines` for the material\n   * @param {Object} options.extensions - Custom `extensions` for the material, e.g. `{derivatives: true}`\n   * @param {Object} options.uniforms - Custom `uniforms` for use in the modified shader. These can\n   *        be accessed and manipulated via the resulting material's `uniforms` property, just like\n   *        in a ShaderMaterial. You do not need to repeat the base material's own uniforms here.\n   * @param {String} options.timeUniform - If specified, a uniform of this name will be injected into\n   *        both shaders, and it will automatically be updated on each render frame with a number of\n   *        elapsed milliseconds. The \"zero\" epoch time is not significant so don't rely on this as a\n   *        true calendar time.\n   * @param {String} options.vertexDefs - Custom GLSL code to inject into the vertex shader's top-level\n   *        definitions, above the `void main()` function.\n   * @param {String} options.vertexMainIntro - Custom GLSL code to inject at the top of the vertex\n   *        shader's `void main` function.\n   * @param {String} options.vertexMainOutro - Custom GLSL code to inject at the end of the vertex\n   *        shader's `void main` function.\n   * @param {String} options.vertexTransform - Custom GLSL code to manipulate the `position`, `normal`,\n   *        and/or `uv` vertex attributes. This code will be wrapped within a standalone function with\n   *        those attributes exposed by their normal names as read/write values.\n   * @param {String} options.fragmentDefs - Custom GLSL code to inject into the fragment shader's top-level\n   *        definitions, above the `void main()` function.\n   * @param {String} options.fragmentMainIntro - Custom GLSL code to inject at the top of the fragment\n   *        shader's `void main` function.\n   * @param {String} options.fragmentMainOutro - Custom GLSL code to inject at the end of the fragment\n   *        shader's `void main` function. You can manipulate `gl_FragColor` here but keep in mind it goes\n   *        after any of ThreeJS's color postprocessing shader chunks (tonemapping, fog, etc.), so if you\n   *        want those to apply to your changes use `fragmentColorTransform` instead.\n   * @param {String} options.fragmentColorTransform - Custom GLSL code to manipulate the `gl_FragColor`\n   *        output value. Will be injected near the end of the `void main` function, but before any\n   *        of ThreeJS's color postprocessing shader chunks (tonemapping, fog, etc.), and before the\n   *        `fragmentMainOutro`.\n   * @param {function<{vertexShader,fragmentShader}>:{vertexShader,fragmentShader}} options.customRewriter - A function\n   *        for performing custom rewrites of the full shader code. Useful if you need to do something\n   *        special that's not covered by the other builtin options. This function will be executed before\n   *        any other transforms are applied.\n   *\n   * @return {THREE.Material}\n   *\n   * The returned material will also have two new methods, `getDepthMaterial()` and `getDistanceMaterial()`,\n   * which can be called to get a variant of the derived material for use in shadow casting. If the\n   * target mesh is expected to cast shadows, then you can assign these to the mesh's `customDepthMaterial`\n   * (for directional and spot lights) and/or `customDistanceMaterial` (for point lights) properties to\n   * allow the cast shadow to honor your derived shader's vertex transforms and discarded fragments. These\n   * will also set a custom `#define IS_DEPTH_MATERIAL` or `#define IS_DISTANCE_MATERIAL` that you can look\n   * for in your derived shaders with `#ifdef` to customize their behavior for the depth or distance\n   * scenarios, e.g. skipping antialiasing or expensive shader logic.\n   */\n  function createDerivedMaterial(baseMaterial, options) {\n    // First check the cache to see if we've already derived from this baseMaterial using\n    // this unique set of options, and if so just return a clone instead of a new subclass\n    // which is faster and allows their shader program to be shared when rendering.\n    var optionsHash = getOptionsHash(options);\n    var cached = CACHE.get(baseMaterial);\n    if (!cached) {\n      cached = Object.create(null);\n      CACHE.set(baseMaterial, cached);\n    }\n    if (cached[optionsHash]) {\n      return cached[optionsHash].clone()\n    }\n\n    // Even if baseMaterial is changing, use a consistent id in shader rewrites based on the\n    // optionsHash. This makes it more likely that deriving from base materials of the same\n    // type/class, e.g. multiple instances of MeshStandardMaterial, will produce identical\n    // rewritten shader code so they can share a single WebGLProgram behind the scenes.\n    var id = getIdForOptionsHash(optionsHash);\n    var privateDerivedShadersProp = \"_derivedShaders\" + id;\n    var privateBeforeCompileProp = \"_onBeforeCompile\" + id;\n    var distanceMaterialTpl, depthMaterialTpl;\n\n    // Private onBeforeCompile handler that injects the modified shaders and uniforms when\n    // the renderer switches to this material's program\n    function onBeforeCompile(shaderInfo) {\n      baseMaterial.onBeforeCompile.call(this, shaderInfo);\n\n      // Upgrade the shaders, caching the result\n      var ref = this[privateDerivedShadersProp] || (this[privateDerivedShadersProp] = {vertex: {}, fragment: {}});\n      var vertex = ref.vertex;\n      var fragment = ref.fragment;\n      if (vertex.source !== shaderInfo.vertexShader || fragment.source !== shaderInfo.fragmentShader) {\n        var upgraded = upgradeShaders(shaderInfo, options, id);\n        vertex.source = shaderInfo.vertexShader;\n        vertex.result = upgraded.vertexShader;\n        fragment.source = shaderInfo.fragmentShader;\n        fragment.result = upgraded.fragmentShader;\n      }\n\n      // Inject upgraded shaders and uniforms into the program\n      shaderInfo.vertexShader = vertex.result;\n      shaderInfo.fragmentShader = fragment.result;\n      assign(shaderInfo.uniforms, this.uniforms);\n\n      // Inject auto-updating time uniform if requested\n      if (options.timeUniform) {\n        shaderInfo.uniforms[options.timeUniform] = {\n          get value() {return Date.now() - epoch}\n        };\n      }\n\n      // Users can still add their own handlers on top of ours\n      if (this[privateBeforeCompileProp]) {\n        this[privateBeforeCompileProp](shaderInfo);\n      }\n    }\n\n    function DerivedMaterial() {\n      baseMaterial.constructor.apply(this, arguments);\n      this._listeners = undefined; //don't inherit EventDispatcher listeners\n    }\n    DerivedMaterial.prototype = Object.create(baseMaterial, {\n      constructor: {value: DerivedMaterial},\n      isDerivedMaterial: {value: true},\n      baseMaterial: {value: baseMaterial},\n\n      onBeforeCompile: {\n        get: function get() {\n          return onBeforeCompile\n        },\n        set: function set(fn) {\n          this[privateBeforeCompileProp] = fn;\n        }\n      },\n\n      copy: {\n        value: function (source) {\n          baseMaterial.copy.call(this, source);\n          if (!baseMaterial.isShaderMaterial && !baseMaterial.isDerivedMaterial) {\n            this.extensions = assign({}, source.extensions);\n            this.defines = assign({}, source.defines);\n            this.uniforms = three.UniformsUtils.clone(source.uniforms);\n          }\n          return this\n        }\n      },\n\n      /**\n       * Utility to get a MeshDepthMaterial that will honor this derived material's vertex\n       * transformations and discarded fragments.\n       */\n      getDepthMaterial: {value: function() {\n        var depthMaterial = this._depthMaterial;\n        if (!depthMaterial) {\n          if (!depthMaterialTpl) {\n            depthMaterialTpl = createDerivedMaterial(\n              baseMaterial.isDerivedMaterial\n                ? baseMaterial.getDepthMaterial()\n                : new three.MeshDepthMaterial({depthPacking: three.RGBADepthPacking}),\n              options\n            );\n            depthMaterialTpl.defines.IS_DEPTH_MATERIAL = '';\n          }\n          depthMaterial = this._depthMaterial = depthMaterialTpl.clone();\n          depthMaterial.uniforms = this.uniforms; //automatically recieve same uniform values\n        }\n        return depthMaterial\n      }},\n\n      /**\n       * Utility to get a MeshDistanceMaterial that will honor this derived material's vertex\n       * transformations and discarded fragments.\n       */\n      getDistanceMaterial: {value: function() {\n        var distanceMaterial = this._distanceMaterial;\n        if (!distanceMaterial) {\n          if (!distanceMaterialTpl) {\n            distanceMaterialTpl = createDerivedMaterial(\n              baseMaterial.isDerivedMaterial\n                ? baseMaterial.getDistanceMaterial()\n                : new three.MeshDistanceMaterial(),\n              options\n            );\n            distanceMaterialTpl.defines.IS_DISTANCE_MATERIAL = '';\n          }\n          distanceMaterial = this._distanceMaterial = distanceMaterialTpl.clone();\n          distanceMaterial.uniforms = this.uniforms; //automatically recieve same uniform values\n        }\n        return distanceMaterial\n      }},\n\n      dispose: {value: function value() {\n        var ref = this;\n        var _depthMaterial = ref._depthMaterial;\n        var _distanceMaterial = ref._distanceMaterial;\n        if (_depthMaterial) { _depthMaterial.dispose(); }\n        if (_distanceMaterial) { _distanceMaterial.dispose(); }\n        baseMaterial.dispose.call(this);\n      }}\n    });\n\n    var material = new DerivedMaterial();\n    material.copy(baseMaterial);\n\n    // Merge uniforms, defines, and extensions\n    material.uniforms = assign(three.UniformsUtils.clone(baseMaterial.uniforms || {}), options.uniforms);\n    material.defines = assign({}, baseMaterial.defines, options.defines);\n    material.defines[(\"TROIKA_DERIVED_MATERIAL_\" + id)] = ''; //force a program change from the base material\n    material.extensions = assign({}, baseMaterial.extensions, options.extensions);\n\n    cached[optionsHash] = material;\n    return material.clone() //return a clone so changes made to it don't affect the cached object\n  }\n\n\n  function upgradeShaders(ref, options, id) {\n    var vertexShader = ref.vertexShader;\n    var fragmentShader = ref.fragmentShader;\n\n    var vertexDefs = options.vertexDefs;\n    var vertexMainIntro = options.vertexMainIntro;\n    var vertexMainOutro = options.vertexMainOutro;\n    var vertexTransform = options.vertexTransform;\n    var fragmentDefs = options.fragmentDefs;\n    var fragmentMainIntro = options.fragmentMainIntro;\n    var fragmentMainOutro = options.fragmentMainOutro;\n    var fragmentColorTransform = options.fragmentColorTransform;\n    var customRewriter = options.customRewriter;\n    var timeUniform = options.timeUniform;\n\n    vertexDefs = vertexDefs || '';\n    vertexMainIntro = vertexMainIntro || '';\n    vertexMainOutro = vertexMainOutro || '';\n    fragmentDefs = fragmentDefs || '';\n    fragmentMainIntro = fragmentMainIntro || '';\n    fragmentMainOutro = fragmentMainOutro || '';\n\n    // Expand includes if needed\n    if (vertexTransform || customRewriter) {\n      vertexShader = expandShaderIncludes(vertexShader);\n    }\n    if (fragmentColorTransform || customRewriter) {\n      // We need to be able to find postprocessing chunks after include expansion in order to\n      // put them after the fragmentColorTransform, so mark them with comments first. Even if\n      // this particular derivation doesn't have a fragmentColorTransform, other derivations may,\n      // so we still mark them.\n      fragmentShader = fragmentShader.replace(\n        /^[ \\t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,\n        '\\n//!BEGIN_POST_CHUNK $1\\n$&\\n//!END_POST_CHUNK\\n'\n      );\n      fragmentShader = expandShaderIncludes(fragmentShader);\n    }\n\n    // Apply custom rewriter function\n    if (customRewriter) {\n      var res = customRewriter({vertexShader: vertexShader, fragmentShader: fragmentShader});\n      vertexShader = res.vertexShader;\n      fragmentShader = res.fragmentShader;\n    }\n\n    // The fragmentColorTransform needs to go before any postprocessing chunks, so extract\n    // those and re-insert them into the outro in the correct place:\n    if (fragmentColorTransform) {\n      var postChunks = [];\n      fragmentShader = fragmentShader.replace(\n        /^\\/\\/!BEGIN_POST_CHUNK[^]+?^\\/\\/!END_POST_CHUNK/gm, // [^]+? = non-greedy match of any chars including newlines\n        function (match) {\n          postChunks.push(match);\n          return ''\n        }\n      );\n      fragmentMainOutro = fragmentColorTransform + \"\\n\" + (postChunks.join('\\n')) + \"\\n\" + fragmentMainOutro;\n    }\n\n    // Inject auto-updating time uniform if requested\n    if (timeUniform) {\n      var code = \"\\nuniform float \" + timeUniform + \";\\n\";\n      vertexDefs = code + vertexDefs;\n      fragmentDefs = code + fragmentDefs;\n    }\n\n    // Inject a function for the vertexTransform and rename all usages of position/normal/uv\n    if (vertexTransform) {\n      vertexDefs = vertexDefs + \"\\nvec3 troika_position_\" + id + \";\\nvec3 troika_normal_\" + id + \";\\nvec2 troika_uv_\" + id + \";\\nvoid troikaVertexTransform\" + id + \"(inout vec3 position, inout vec3 normal, inout vec2 uv) {\\n  \" + vertexTransform + \"\\n}\\n\";\n      vertexMainIntro = \"\\ntroika_position_\" + id + \" = vec3(position);\\ntroika_normal_\" + id + \" = vec3(normal);\\ntroika_uv_\" + id + \" = vec2(uv);\\ntroikaVertexTransform\" + id + \"(troika_position_\" + id + \", troika_normal_\" + id + \", troika_uv_\" + id + \");\\n\" + vertexMainIntro + \"\\n\";\n      vertexShader = vertexShader.replace(/\\b(position|normal|uv)\\b/g, function (match, match1, index, fullStr) {\n        return /\\battribute\\s+vec[23]\\s+$/.test(fullStr.substr(0, index)) ? match1 : (\"troika_\" + match1 + \"_\" + id)\n      });\n    }\n\n    // Inject defs and intro/outro snippets\n    vertexShader = injectIntoShaderCode(vertexShader, id, vertexDefs, vertexMainIntro, vertexMainOutro);\n    fragmentShader = injectIntoShaderCode(fragmentShader, id, fragmentDefs, fragmentMainIntro, fragmentMainOutro);\n\n    return {\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader\n    }\n  }\n\n  function injectIntoShaderCode(shaderCode, id, defs, intro, outro) {\n    if (intro || outro || defs) {\n      shaderCode = shaderCode.replace(voidMainRegExp, (\"\\n\" + defs + \"\\nvoid troikaOrigMain\" + id + \"() {\")\n      );\n      shaderCode += \"\\nvoid main() {\\n  \" + intro + \"\\n  troikaOrigMain\" + id + \"();\\n  \" + outro + \"\\n}\";\n    }\n    return shaderCode\n  }\n\n  function getOptionsHash(options) {\n    return JSON.stringify(options, optionsJsonReplacer)\n  }\n\n  function optionsJsonReplacer(key, value) {\n    return key === 'uniforms' ? undefined : typeof value === 'function' ? value.toString() : value\n  }\n\n  var _idCtr = 0;\n  var optionsHashesToIds = new Map();\n  function getIdForOptionsHash(optionsHash) {\n    var id = optionsHashesToIds.get(optionsHash);\n    if (id == null) {\n      optionsHashesToIds.set(optionsHash, (id = ++_idCtr));\n    }\n    return id\n  }\n\n  // Copied from threejs WebGLPrograms.js so we can resolve builtin materials to their shaders\n  // TODO how can we keep this from getting stale?\n  var MATERIAL_TYPES_TO_SHADERS = {\n    MeshDepthMaterial: 'depth',\n    MeshDistanceMaterial: 'distanceRGBA',\n    MeshNormalMaterial: 'normal',\n    MeshBasicMaterial: 'basic',\n    MeshLambertMaterial: 'lambert',\n    MeshPhongMaterial: 'phong',\n    MeshToonMaterial: 'phong',\n    MeshStandardMaterial: 'physical',\n    MeshPhysicalMaterial: 'physical',\n    MeshMatcapMaterial: 'matcap',\n    LineBasicMaterial: 'basic',\n    LineDashedMaterial: 'dashed',\n    PointsMaterial: 'points',\n    ShadowMaterial: 'shadow',\n    SpriteMaterial: 'sprite'\n  };\n\n  /**\n   * Given a Three.js `Material` instance, find the shaders/uniforms that will be\n   * used to render that material.\n   *\n   * @param material - the Material instance\n   * @return {object} - the material's shader info: `{uniforms:{}, fragmentShader:'', vertexShader:''}`\n   */\n  function getShadersForMaterial(material) {\n    var builtinType = MATERIAL_TYPES_TO_SHADERS[material.type];\n    return builtinType ? three.ShaderLib[builtinType] : material //TODO fallback for unknown type?\n  }\n\n  /**\n   * Find all uniforms and their types within a shader code string.\n   *\n   * @param {string} shader - The shader code to parse\n   * @return {object} mapping of uniform names to their glsl type\n   */\n  function getShaderUniformTypes(shader) {\n    var uniformRE = /\\buniform\\s+(int|float|vec[234])\\s+([A-Za-z_][\\w]*)/g;\n    var uniforms = Object.create(null);\n    var match;\n    while ((match = uniformRE.exec(shader)) !== null) {\n      uniforms[match[2]] = match[1];\n    }\n    return uniforms\n  }\n\n  /**\n   * @class ShaderFloatArray\n   *\n   * When writing a custom WebGL shader, sometimes you need to pass it an array of floating\n   * point numbers that it can read from. Unfortunately this is very difficult to do in WebGL,\n   * because:\n   *\n   *   - GLSL \"array\" uniforms can only be of a constant length.\n   *   - Textures can only hold floating point numbers in WebGL1 if the `OES_texture_float`\n   *     extension is available.\n   *\n   * ShaderFloatArray is an array-like abstraction that encodes its floating point data into\n   * an RGBA texture's four Uint8 components, and provides the corresponding ThreeJS uniforms\n   * and GLSL code for you to put in your custom shader to query the float values by array index.\n   *\n   * This should generally only be used within a fragment shader, as some environments (e.g. iOS)\n   * only allow texture lookups in fragment shaders.\n   *\n   * TODO:\n   *   - Fix texture to fill both dimensions so we don't easily hit max texture size limits\n   *   - Use a float texture if the extension is available so we can skip the encoding process\n   */\n  var ShaderFloatArray = function ShaderFloatArray(name) {\n    this.name = name;\n    this.textureUniform = \"dataTex_\" + name;\n    this.textureSizeUniform = \"dataTexSize_\" + name;\n    this.multiplierUniform = \"dataMultiplier_\" + name;\n\n    /**\n     * @property dataSizeUniform - the name of the GLSL uniform that will hold the\n     * length of the data array.\n     * @type {string}\n     */\n    this.dataSizeUniform = \"dataSize_\" + name;\n\n    /**\n     * @property readFunction - the name of the GLSL function that should be called to\n     * read data out of the array by index.\n     * @type {string}\n     */\n    this.readFunction = \"readData_\" + name;\n\n    this._raw = new Float32Array(0);\n    this._texture = new three.DataTexture(new Uint8Array(0), 0, 1);\n    this._length = 0;\n    this._multiplier = 1;\n  };\n\n  var prototypeAccessors = { length: { configurable: true } };\n\n  /**\n   * @property length - the current length of the data array\n   * @type {number}\n   */\n  prototypeAccessors.length.set = function (value) {\n    if (value !== this._length) {\n      // Find nearest power-of-2 that holds the new length\n      var size = Math.pow(2, Math.ceil(Math.log2(value)));\n      var raw = this._raw;\n      if (size < raw.length) {\n        this._raw = raw.subarray(0, size);\n      }\n      else if(size > raw.length) {\n        this._raw = new Float32Array(size);\n        this._raw.set(raw);\n      }\n      this._length = value;\n    }\n  };\n  prototypeAccessors.length.get = function () {\n    return this._length\n  };\n\n  /**\n   * Add a value to the end of the data array\n   * @param {number} value\n   */\n  ShaderFloatArray.prototype.push = function push (value) {\n    return this.set(this.length++, value)\n  };\n\n  /**\n   * Replace the existing data with that from a new array\n   * @param {ArrayLike<number>} array\n   */\n  ShaderFloatArray.prototype.setArray = function setArray (array) {\n    this.length = array.length;\n    this._raw.set(array);\n    this._needsRepack = true;\n  };\n\n  /**\n   * Get the current value at index\n   * @param {number} index\n   * @return {number}\n   */\n  ShaderFloatArray.prototype.get = function get (index) {\n    return this._raw[index]\n  };\n\n  ShaderFloatArray.prototype.set = function set (index, value) {\n    if (index + 1 > this._length) {\n      this.length = index + 1;\n    }\n    if (value !== this._raw[index]) {\n      this._raw[index] = value;\n      encodeFloatToFourInts(\n        value / this._multiplier,\n        this._texture.image.data,\n        index * 4\n      );\n      this._needsMultCheck = true;\n    }\n  };\n\n  /**\n   * Make a copy of this ShaderFloatArray\n   * @return {ShaderFloatArray}\n   */\n  ShaderFloatArray.prototype.clone = function clone () {\n    var clone = new ShaderFloatArray(this.name);\n    clone.setArray(this._raw);\n    return clone\n  };\n\n  /**\n   * Retrieve the set of Uniforms that must to be added to the target ShaderMaterial or\n   * DerivedMaterial, to feed the GLSL code generated by {@link #getShaderHeaderCode}.\n   * @return {Object}\n   */\n  ShaderFloatArray.prototype.getShaderUniforms = function getShaderUniforms () {\n      var obj;\n\n    var me = this;\n    return ( obj = {}, obj[this.textureUniform] = {get value() {\n        me._sync();\n        return me._texture\n      }}, obj[this.textureSizeUniform] = {get value() {\n        me._sync();\n        return me._texture.image.width\n      }}, obj[this.dataSizeUniform] = {get value() {\n        me._sync();\n        return me.length\n      }}, obj[this.multiplierUniform] = {get value() {\n        me._sync();\n        return me._multiplier\n      }}, obj )\n  };\n\n  /**\n   * Retrieve the GLSL code that must be injected into the shader's definitions area to\n   * enable reading from the data array. This exposes a function with a name matching\n   * the {@link #readFunction} property, which other shader code can call to read values\n   * from the array by their index.\n   * @return {string}\n   */\n  ShaderFloatArray.prototype.getShaderHeaderCode = function getShaderHeaderCode () {\n    var ref = this;\n      var textureUniform = ref.textureUniform;\n      var textureSizeUniform = ref.textureSizeUniform;\n      var dataSizeUniform = ref.dataSizeUniform;\n      var multiplierUniform = ref.multiplierUniform;\n      var readFunction = ref.readFunction;\n    return (\"\\nuniform sampler2D \" + textureUniform + \";\\nuniform float \" + textureSizeUniform + \";\\nuniform float \" + dataSizeUniform + \";\\nuniform float \" + multiplierUniform + \";\\n\\nfloat \" + readFunction + \"(float index) {\\n  vec2 texUV = vec2((index + 0.5) / \" + textureSizeUniform + \", 0.5);\\n  vec4 pixel = texture2D(\" + textureUniform + \", texUV);\\n  return dot(pixel, 1.0 / vec4(1.0, 255.0, 65025.0, 16581375.0)) * \" + multiplierUniform + \";\\n}\\n\")\n  };\n\n  /**\n   * @private Synchronize any pending changes to the underlying DataTexture\n   */\n  ShaderFloatArray.prototype._sync = function _sync () {\n    var tex = this._texture;\n    var raw = this._raw;\n    var needsRepack = this._needsRepack;\n\n    // If the size of the raw array changed, resize the texture to match\n    if (raw.length !== tex.image.width) {\n      tex.image = {\n        data: new Uint8Array(raw.length * 4),\n        width: raw.length,\n        height: 1\n      };\n      needsRepack = true;\n    }\n\n    // If the values changed, check the multiplier. This should be a value by which\n    // all the values are divided to constrain them to the [0,1] range required by\n    // the Uint8 packing algorithm. We pick the nearest power of 2 that holds the\n    // maximum value for greatest accuracy.\n    if (needsRepack || this._needsMultCheck) {\n      var maxVal = this._raw.reduce(function (a, b) { return Math.max(a, b); }, 0);\n      var mult = Math.pow(2, Math.ceil(Math.log2(maxVal)));\n      if (mult !== this._multiplier) {\n        this._multiplier = mult;\n        needsRepack = true;\n      }\n      tex.needsUpdate = true;\n      this._needsMultCheck = false;\n    }\n\n    // If things changed in a way we need to repack, do so\n    if (needsRepack) {\n      for (var i = 0, len = raw.length, mult$1 = this._multiplier; i < len; i++) {\n        encodeFloatToFourInts(raw[i] / mult$1, tex.image.data, i * 4);\n      }\n      this._needsRepack = false;\n    }\n  };\n\n  Object.defineProperties( ShaderFloatArray.prototype, prototypeAccessors );\n\n\n\n  /**\n   * Encode a floating point number into a set of four 8-bit integers.\n   * Also see the companion decoder function #decodeFloatFromFourInts.\n   *\n   * This is adapted to JavaScript from the basic approach at\n   * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\n   * but writes out integers in the range 0-255 instead of floats in the range 0-1\n   * so they can be more easily used in a Uint8Array for standard WebGL rgba textures.\n   *\n   * Some precision will necessarily be lost during the encoding and decoding process.\n   * Testing shows that the maximum precision error is ~1.18e-10 which should be good\n   * enough for most cases.\n   *\n   * @param {Number} value - the floating point number to encode. Must be in the range [0, 1]\n   *        otherwise the results will be incorrect.\n   * @param {Array|Uint8Array} array - an array into which the four ints should be written\n   * @param {Number} startIndex - index in the output array at which to start writing the ints\n   * @return {Array|Uint8Array}\n   */\n  function encodeFloatToFourInts(value, array, startIndex) {\n    // This is adapted to JS from the basic approach at\n    // http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\n    // but writes to a Uint8Array instead of floats. Input values must be in\n    // the range [0, 1]. The maximum error after encoding and decoding is ~1.18e-10\n    var enc0 = 255 * value;\n    var enc1 = 255 * (enc0 % 1);\n    var enc2 = 255 * (enc1 % 1);\n    var enc3 = 255 * (enc2 % 1);\n\n    enc0 = enc0 & 255;\n    enc1 = enc1 & 255;\n    enc2 = enc2 & 255;\n    enc3 = Math.round(enc3) & 255;\n\n    array[startIndex] = enc0;\n    array[startIndex + 1] = enc1;\n    array[startIndex + 2] = enc2;\n    array[startIndex + 3] = enc3;\n    return array\n  }\n\n  /*\n  Input geometry is a cylinder with r=1, height in y dimension from 0 to 1,\n  divided into a reasonable number of height segments.\n  */\n\n  var vertexDefs = \"\\nuniform vec3 pointA;\\nuniform vec3 controlA;\\nuniform vec3 controlB;\\nuniform vec3 pointB;\\nuniform float radius;\\nvarying float bezierT;\\n\\nvec3 cubicBezier(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\\n  float t2 = 1.0 - t;\\n  float b0 = t2 * t2 * t2;\\n  float b1 = 3.0 * t * t2 * t2;\\n  float b2 = 3.0 * t * t * t2;\\n  float b3 = t * t * t;\\n  return b0 * p1 + b1 * c1 + b2 * c2 + b3 * p2;\\n}\\n\\nvec3 cubicBezierDerivative(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\\n  float t2 = 1.0 - t;\\n  return -3.0 * p1 * t2 * t2 +\\n    c1 * (3.0 * t2 * t2 - 6.0 * t2 * t) +\\n    c2 * (6.0 * t2 * t - 3.0 * t * t) +\\n    3.0 * p2 * t * t;\\n}\\n\";\n\n  var vertexTransform = \"\\nfloat t = position.y;\\nbezierT = t;\\nvec3 bezierCenterPos = cubicBezier(pointA, controlA, controlB, pointB, t);\\nvec3 bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t));\\n\\n// Make \\\"sideways\\\" always perpendicular to the camera ray; this ensures that any twists\\n// in the cylinder occur where you won't see them: \\nvec3 viewDirection = normalMatrix * vec3(0.0, 0.0, 1.0);\\nif (bezierDir == viewDirection) {\\n  bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t == 1.0 ? t - 0.0001 : t + 0.0001));\\n}\\nvec3 sideways = normalize(cross(bezierDir, viewDirection));\\nvec3 upish = normalize(cross(sideways, bezierDir));\\n\\n// Build a matrix for transforming this disc in the cylinder:\\nmat4 discTx;\\ndiscTx[0].xyz = sideways * radius;\\ndiscTx[1].xyz = bezierDir * radius;\\ndiscTx[2].xyz = upish * radius;\\ndiscTx[3].xyz = bezierCenterPos;\\ndiscTx[3][3] = 1.0;\\n\\n// Apply transform, ignoring original y\\nposition = (discTx * vec4(position.x, 0.0, position.z, 1.0)).xyz;\\nnormal = normalize(mat3(discTx) * normal);\\n\";\n\n  var fragmentDefs = \"\\nuniform vec3 dashing;\\nvarying float bezierT;\\n\";\n\n  var fragmentMainIntro = \"\\nif (dashing.x + dashing.y > 0.0) {\\n  float dashFrac = mod(bezierT - dashing.z, dashing.x + dashing.y);\\n  if (dashFrac > dashing.x) {\\n    discard;\\n  }\\n}\\n\";\n\n  // Debugging: separate color for each of the 6 sides:\n  // const fragmentColorTransform = `\n  // float sideNum = floor(vUV.x * 6.0);\n  // vec3 mixColor = sideNum < 1.0 ? vec3(1.0, 0.0, 0.0) :\n  //   sideNum < 2.0 ? vec3(0.0, 1.0, 1.0) :\n  //   sideNum < 3.0 ? vec3(1.0, 1.0, 0.0) :\n  //   sideNum < 4.0 ? vec3(0.0, 0.0, 1.0) :\n  //   sideNum < 5.0 ? vec3(0.0, 1.0, 0.0) :\n  //   vec3(1.0, 0.0, 1.0);\n  // gl_FragColor.xyz = mix(gl_FragColor.xyz, mixColor, 0.5);\n  // `\n\n\n\n  function createBezierMeshMaterial(baseMaterial) {\n    return createDerivedMaterial(\n      baseMaterial,\n      {\n        uniforms: {\n          pointA: {value: new three.Vector3()},\n          controlA: {value: new three.Vector3()},\n          controlB: {value: new three.Vector3()},\n          pointB: {value: new three.Vector3()},\n          radius: {value: 0.01},\n          dashing: {value: new three.Vector3()} //on, off, offset\n        },\n        vertexDefs: vertexDefs,\n        vertexTransform: vertexTransform,\n        fragmentDefs: fragmentDefs,\n        fragmentMainIntro: fragmentMainIntro\n      }\n    )\n  }\n\n  var geometry = null;\n\n  var defaultBaseMaterial = new three.MeshStandardMaterial({color: 0xffffff, side: three.DoubleSide});\n\n\n  /**\n   * A ThreeJS `Mesh` that bends a tube shape along a 3D cubic bezier path. The bending is done\n   * by deforming a straight cylindrical geometry in the vertex shader based on a set of four\n   * control point uniforms. It patches the necessary GLSL into the mesh's assigned `material`\n   * automatically.\n   *\n   * The cubiz bezier path is determined by its four `Vector3` properties:\n   * - `pointA`\n   * - `controlA`\n   * - `controlB`\n   * - `pointB`\n   *\n   * The tube's radius is controlled by its `radius` property, which defaults to `0.01`.\n   *\n   * You can also give the tube a dashed appearance with two properties:\n   *\n   * - `dashArray` - an array of two numbers, defining the length of \"on\" and \"off\" parts of\n   *   the dash. Each is a 0-1 ratio of the entire path's length. (Actually this is the `t` length\n   *   used as input to the cubic bezier function, not its visible length.)\n   * - `dashOffset` - offset of where the dash starts. You can animate this to make the dashes move.\n   *\n   * Note that the dashes will appear like a hollow tube, not solid. This will be more apparent on\n   * thicker tubes.\n   *\n   * TODO: proper geometry bounding sphere and raycasting\n   * TODO: allow control of the geometry's segment counts\n   */\n  var BezierMesh = /*@__PURE__*/(function (Mesh) {\n    function BezierMesh() {\n      Mesh.call(\n        this, BezierMesh.getGeometry(),\n        defaultBaseMaterial\n      );\n\n      this.pointA = new three.Vector3();\n      this.controlA = new three.Vector3();\n      this.controlB = new three.Vector3();\n      this.pointB = new three.Vector3();\n      this.radius = 0.01;\n      this.dashArray = new three.Vector2();\n      this.dashOffset = 0;\n\n      // TODO - disabling frustum culling until I figure out how to customize the\n      //  geometry's bounding sphere that gets used\n      this.frustumCulled = false;\n    }\n\n    if ( Mesh ) BezierMesh.__proto__ = Mesh;\n    BezierMesh.prototype = Object.create( Mesh && Mesh.prototype );\n    BezierMesh.prototype.constructor = BezierMesh;\n\n    var prototypeAccessors = { material: { configurable: true },customDepthMaterial: { configurable: true },customDistanceMaterial: { configurable: true } };\n\n    // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\n    // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\n    BezierMesh.getGeometry = function getGeometry () {\n      return geometry || (geometry =\n        new three.CylinderBufferGeometry(1, 1, 1, 6, 64).translate(0, 0.5, 0)\n      )\n    };\n\n    prototypeAccessors.material.get = function () {\n      var derivedMaterial = this._derivedMaterial;\n      var baseMaterial = this._baseMaterial || defaultBaseMaterial;\n      if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\n        derivedMaterial = this._derivedMaterial = createBezierMeshMaterial(baseMaterial);\n        // dispose the derived material when its base material is disposed:\n        baseMaterial.addEventListener('dispose', function onDispose() {\n          baseMaterial.removeEventListener('dispose', onDispose);\n          derivedMaterial.dispose();\n        });\n      }\n      return derivedMaterial\n    };\n    prototypeAccessors.material.set = function (baseMaterial) {\n      this._baseMaterial = baseMaterial;\n    };\n\n    // Create and update material for shadows upon request:\n    prototypeAccessors.customDepthMaterial.get = function () {\n      return this.material.getDepthMaterial()\n    };\n    prototypeAccessors.customDistanceMaterial.get = function () {\n      return this.material.getDistanceMaterial()\n    };\n\n    BezierMesh.prototype.onBeforeRender = function onBeforeRender (shaderInfo) {\n      var ref = this.material;\n      var uniforms = ref.uniforms;\n      var ref$1 = this;\n      var pointA = ref$1.pointA;\n      var controlA = ref$1.controlA;\n      var controlB = ref$1.controlB;\n      var pointB = ref$1.pointB;\n      var radius = ref$1.radius;\n      var dashArray = ref$1.dashArray;\n      var dashOffset = ref$1.dashOffset;\n      uniforms.pointA.value.copy(pointA);\n      uniforms.controlA.value.copy(controlA);\n      uniforms.controlB.value.copy(controlB);\n      uniforms.pointB.value.copy(pointB);\n      uniforms.radius.value = radius;\n      uniforms.dashing.value.set(dashArray.x, dashArray.y, dashOffset || 0);\n    };\n\n    BezierMesh.prototype.raycast = function raycast (raycaster, intersects) {\n      // TODO - just fail for now\n    };\n\n    Object.defineProperties( BezierMesh.prototype, prototypeAccessors );\n\n    return BezierMesh;\n  }(three.Mesh));\n\n  exports.BezierMesh = BezierMesh;\n  exports.ShaderFloatArray = ShaderFloatArray;\n  exports.createDerivedMaterial = createDerivedMaterial;\n  exports.expandShaderIncludes = expandShaderIncludes;\n  exports.getShaderUniformTypes = getShaderUniformTypes;\n  exports.getShadersForMaterial = getShadersForMaterial;\n  exports.voidMainRegExp = voidMainRegExp;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nimport {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n} from \"../../../build/three.module.js\";\n\nUniformsLib.line = {\n\n\tlinewidth: { value: 1 },\n\tresolution: { value: new Vector2( 1, 1 ) },\n\tdashScale: { value: 1 },\n\tdashSize: { value: 1 },\n\tgapSize: { value: 1 }, // todo FIX - maybe change to totalSize\n\topacity: { value: 1 }\n\n};\n\nShaderLib[ 'line' ] = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tUniformsLib.common,\n\t\tUniformsLib.fog,\n\t\tUniformsLib.line\n\t] ),\n\n\tvertexShader:\n\t\t`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\n\tfragmentShader:\n\t\t`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t`\n};\n\nvar LineMaterial = function ( parameters ) {\n\n\tShaderMaterial.call( this, {\n\n\t\ttype: 'LineMaterial',\n\n\t\tuniforms: UniformsUtils.clone( ShaderLib[ 'line' ].uniforms ),\n\n\t\tvertexShader: ShaderLib[ 'line' ].vertexShader,\n\t\tfragmentShader: ShaderLib[ 'line' ].fragmentShader,\n\n\t\tclipping: true // required for clipping support\n\n\t} );\n\n\tthis.dashed = false;\n\n\tObject.defineProperties( this, {\n\n\t\tcolor: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.diffuse.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.diffuse.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tlinewidth: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.linewidth.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.linewidth.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashScale: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashScale.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashScale.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgapSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.gapSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.gapSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\topacity: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.opacity.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.opacity.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tresolution: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.resolution.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.resolution.value.copy( value );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tthis.setValues( parameters );\n\n};\n\nLineMaterial.prototype = Object.create( ShaderMaterial.prototype );\nLineMaterial.prototype.constructor = LineMaterial;\n\nLineMaterial.prototype.isLineMaterial = true;\n\n\nexport { LineMaterial };\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\n\nimport { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\n\nvar LineGeometry = function () {\n\n\tLineSegmentsGeometry.call( this );\n\n\tthis.type = 'LineGeometry';\n\n};\n\nLineGeometry.prototype = Object.assign( Object.create( LineSegmentsGeometry.prototype ), {\n\n\tconstructor: LineGeometry,\n\n\tisLineGeometry: true,\n\n\tsetPositions: function ( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setPositions.call( this, points );\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setColors.call( this, colors );\n\n\t\treturn this;\n\n\t},\n\n\tfromLine: function ( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport { LineGeometry };\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nimport {\n\tBox3,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from \"../../../build/three.module.js\";\n\nvar LineSegmentsGeometry = function () {\n\n\tInstancedBufferGeometry.call( this );\n\n\tthis.type = 'LineSegmentsGeometry';\n\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\tthis.setIndex( index );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n};\n\nLineSegmentsGeometry.prototype = Object.assign( Object.create( InstancedBufferGeometry.prototype ), {\n\n\tconstructor: LineSegmentsGeometry,\n\n\tisLineSegmentsGeometry: true,\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar start = this.attributes.instanceStart;\n\t\tvar end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\n\t\t\tend.applyMatrix4( matrix );\n\n\t\t\tstart.data.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetPositions: function ( array ) {\n\n\t\tvar lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceBuffer = new InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.setAttribute( 'instanceStart', new InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.setAttribute( 'instanceEnd', new InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\tvar colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceColorBuffer = new InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.setAttribute( 'instanceColorStart', new InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.setAttribute( 'instanceColorEnd', new InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t},\n\n\tfromWireframeGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromEdgesGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromMesh: function ( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tfromLineSegments: function ( lineSegments ) {\n\n\t\tvar geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t\tbox.setFromBufferAttribute( end );\n\n\t\t\t\tthis.boundingBox.union( box );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function () {\n\n\t\t// todo\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nexport { LineSegmentsGeometry };\n"],"sourceRoot":""}
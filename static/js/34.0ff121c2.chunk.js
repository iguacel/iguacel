(this["webpackJsonpraster-react-canvas2"]=this["webpackJsonpraster-react-canvas2"]||[]).push([[34],{119:function(t,e,i){(function(){"use strict";var r=this.THREE||i(72);if(!r)throw new Error("MeshLine requires three.js");function s(){r.BufferGeometry.call(this),this.type="MeshLine",this.positions=[],this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],this.counters=[],this._vertices=[],this._bufferArray=[],this.widthCallback=null,this.matrixWorld=new r.Matrix4,Object.defineProperties(this,{geometry:{enumerable:!0,get:function(){return this},set:function(t){this.setFromGeometry(t)}},vertices:{enumerable:!0,get:function(){return this._vertices},set:function(t){this.setVertices(t)}},bufferArray:{enumerable:!0,get:function(){return this._bufferArray},set:function(t){this.setBufferArray(t)}}})}function a(t,e){var i=new r.Matrix4,s=new r.Ray,a=new r.Sphere,n=new r.Vector3,o=this.geometry;if(a.copy(o.boundingSphere),a.applyMatrix4(this.matrixWorld),!1!==t.ray.intersectSphere(a,n)){i.getInverse(this.matrixWorld),s.copy(t.ray).applyMatrix4(i);var u=new r.Vector3,h=new r.Vector3,l=new r.Vector3,c=this instanceof r.LineSegments?2:1,p=o.index,f=o.attributes;if(null!==p)for(var v=p.array,d=f.position.array,y=f.width.array,m=0,b=v.length-1;m<b;m+=c){var x=v[m],A=v[m+1];u.fromArray(d,3*x),h.fromArray(d,3*A);var w=void 0!=y[Math.floor(m/3)]?y[Math.floor(m/3)]:1,g=t.params.Line.threshold+this.material.lineWidth*w/2,M=g*g;if(!(s.distanceSqToSegment(u,h,n,l)>M)){n.applyMatrix4(this.matrixWorld);var _=t.ray.origin.distanceTo(n);_<t.near||_>t.far||(e.push({distance:_,point:l.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this}),m=b)}}}}function n(t,e,i,r,s){var a;if(t=t.subarray||t.slice?t:t.buffer,i=i.subarray||i.slice?i:i.buffer,t=e?t.subarray?t.subarray(e,s&&e+s):t.slice(e,s&&e+s):t,i.set)i.set(t,r);else for(a=0;a<t.length;a++)i[a+r]=t[a];return i}function o(t){r.ShaderMaterial.call(this,{uniforms:Object.assign({},r.UniformsLib.fog,{lineWidth:{value:1},map:{value:null},useMap:{value:0},alphaMap:{value:null},useAlphaMap:{value:0},color:{value:new r.Color(16777215)},opacity:{value:1},resolution:{value:new r.Vector2(1,1)},sizeAttenuation:{value:1},dashArray:{value:0},dashOffset:{value:0},dashRatio:{value:.5},useDash:{value:0},visibility:{value:1},alphaTest:{value:0},repeat:{value:new r.Vector2(1,1)}}),vertexShader:r.ShaderChunk.meshline_vert,fragmentShader:r.ShaderChunk.meshline_frag}),this.type="MeshLineMaterial",Object.defineProperties(this,{lineWidth:{enumerable:!0,get:function(){return this.uniforms.lineWidth.value},set:function(t){this.uniforms.lineWidth.value=t}},map:{enumerable:!0,get:function(){return this.uniforms.map.value},set:function(t){this.uniforms.map.value=t}},useMap:{enumerable:!0,get:function(){return this.uniforms.useMap.value},set:function(t){this.uniforms.useMap.value=t}},alphaMap:{enumerable:!0,get:function(){return this.uniforms.alphaMap.value},set:function(t){this.uniforms.alphaMap.value=t}},useAlphaMap:{enumerable:!0,get:function(){return this.uniforms.useAlphaMap.value},set:function(t){this.uniforms.useAlphaMap.value=t}},color:{enumerable:!0,get:function(){return this.uniforms.color.value},set:function(t){this.uniforms.color.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}},sizeAttenuation:{enumerable:!0,get:function(){return this.uniforms.sizeAttenuation.value},set:function(t){this.uniforms.sizeAttenuation.value=t}},dashArray:{enumerable:!0,get:function(){return this.uniforms.dashArray.value},set:function(t){this.uniforms.dashArray.value=t,this.useDash=0!==t?1:0}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},dashRatio:{enumerable:!0,get:function(){return this.uniforms.dashRatio.value},set:function(t){this.uniforms.dashRatio.value=t}},useDash:{enumerable:!0,get:function(){return this.uniforms.useDash.value},set:function(t){this.uniforms.useDash.value=t}},visibility:{enumerable:!0,get:function(){return this.uniforms.visibility.value},set:function(t){this.uniforms.visibility.value=t}},alphaTest:{enumerable:!0,get:function(){return this.uniforms.alphaTest.value},set:function(t){this.uniforms.alphaTest.value=t}},repeat:{enumerable:!0,get:function(){return this.uniforms.repeat.value},set:function(t){this.uniforms.repeat.value.copy(t)}}}),this.setValues(t)}s.prototype=Object.create(r.BufferGeometry.prototype),s.prototype.constructor=s,s.prototype.isMeshLine=!0,s.prototype.setMatrixWorld=function(t){this.matrixWorld=t},s.prototype.setFromGeometry=function(t,e){t instanceof r.Geometry&&this.setVertices(t.vertices,e),t instanceof r.BufferGeometry&&this.setBufferArray(t.getAttribute("position").array,e),(t instanceof Float32Array||t instanceof Array)&&this.setBufferArray(t,e)},s.prototype.setGeometry=function(t,e){this.setFromGeometry(t,e)},s.prototype.setVertices=function(t,e){this._vertices=t,this.widthCallback=e||this.widthCallback,this.positions=[],this.counters=[];for(var i=0;i<t.length;i++){var r=t[i],s=i/t.length;this.positions.push(r.x,r.y,r.z),this.positions.push(r.x,r.y,r.z),this.counters.push(s),this.counters.push(s)}this.process()},s.prototype.setBufferArray=function(t,e){this._bufferArray=t,this.widthCallback=e||this.widthCallback,this.positions=[],this.counters=[];for(var i=0;i<t.length;i+=3){var r=i/t.length;this.positions.push(t[i],t[i+1],t[i+2]),this.positions.push(t[i],t[i+1],t[i+2]),this.counters.push(r),this.counters.push(r)}this.process()},s.prototype.raycast=a,s.prototype.compareV3=function(t,e){var i=6*t,r=6*e;return this.positions[i]===this.positions[r]&&this.positions[i+1]===this.positions[r+1]&&this.positions[i+2]===this.positions[r+2]},s.prototype.copyV3=function(t){var e=6*t;return[this.positions[e],this.positions[e+1],this.positions[e+2]]},s.prototype.process=function(){var t,e,i=this.positions.length/6;this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],e=this.compareV3(0,i-1)?this.copyV3(i-2):this.copyV3(0),this.previous.push(e[0],e[1],e[2]),this.previous.push(e[0],e[1],e[2]);for(var s=0;s<i;s++){if(this.side.push(1),this.side.push(-1),t=this.widthCallback?this.widthCallback(s/(i-1)):1,this.width.push(t),this.width.push(t),this.uvs.push(s/(i-1),0),this.uvs.push(s/(i-1),1),s<i-1){e=this.copyV3(s),this.previous.push(e[0],e[1],e[2]),this.previous.push(e[0],e[1],e[2]);var a=2*s;this.indices_array.push(a,a+1,a+2),this.indices_array.push(a+2,a+1,a+3)}s>0&&(e=this.copyV3(s),this.next.push(e[0],e[1],e[2]),this.next.push(e[0],e[1],e[2]))}e=this.compareV3(i-1,0)?this.copyV3(1):this.copyV3(i-1),this.next.push(e[0],e[1],e[2]),this.next.push(e[0],e[1],e[2]),this._attributes&&this._attributes.position.count===this.positions.length?(this._attributes.position.copyArray(new Float32Array(this.positions)),this._attributes.position.needsUpdate=!0,this._attributes.previous.copyArray(new Float32Array(this.previous)),this._attributes.previous.needsUpdate=!0,this._attributes.next.copyArray(new Float32Array(this.next)),this._attributes.next.needsUpdate=!0,this._attributes.side.copyArray(new Float32Array(this.side)),this._attributes.side.needsUpdate=!0,this._attributes.width.copyArray(new Float32Array(this.width)),this._attributes.width.needsUpdate=!0,this._attributes.uv.copyArray(new Float32Array(this.uvs)),this._attributes.uv.needsUpdate=!0,this._attributes.index.copyArray(new Uint16Array(this.indices_array)),this._attributes.index.needsUpdate=!0):this._attributes={position:new r.BufferAttribute(new Float32Array(this.positions),3),previous:new r.BufferAttribute(new Float32Array(this.previous),3),next:new r.BufferAttribute(new Float32Array(this.next),3),side:new r.BufferAttribute(new Float32Array(this.side),1),width:new r.BufferAttribute(new Float32Array(this.width),1),uv:new r.BufferAttribute(new Float32Array(this.uvs),2),index:new r.BufferAttribute(new Uint16Array(this.indices_array),1),counters:new r.BufferAttribute(new Float32Array(this.counters),1)},this.setAttribute("position",this._attributes.position),this.setAttribute("previous",this._attributes.previous),this.setAttribute("next",this._attributes.next),this.setAttribute("side",this._attributes.side),this.setAttribute("width",this._attributes.width),this.setAttribute("uv",this._attributes.uv),this.setAttribute("counters",this._attributes.counters),this.setIndex(this._attributes.index),this.computeBoundingSphere(),this.computeBoundingBox()},s.prototype.advance=function(t){var e=this._attributes.position.array,i=this._attributes.previous.array,r=this._attributes.next.array,s=e.length;n(e,0,i,0,s),n(e,6,e,0,s-6),e[s-6]=t.x,e[s-5]=t.y,e[s-4]=t.z,e[s-3]=t.x,e[s-2]=t.y,e[s-1]=t.z,n(e,6,r,0,s-6),r[s-6]=t.x,r[s-5]=t.y,r[s-4]=t.z,r[s-3]=t.x,r[s-2]=t.y,r[s-1]=t.z,this._attributes.position.needsUpdate=!0,this._attributes.previous.needsUpdate=!0,this._attributes.next.needsUpdate=!0},r.ShaderChunk.meshline_vert=["",r.ShaderChunk.logdepthbuf_pars_vertex,r.ShaderChunk.fog_pars_vertex,"","attribute vec3 previous;","attribute vec3 next;","attribute float side;","attribute float width;","attribute float counters;","","uniform vec2 resolution;","uniform float lineWidth;","uniform vec3 color;","uniform float opacity;","uniform float sizeAttenuation;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","vec2 fix( vec4 i, float aspect ) {","","    vec2 res = i.xy / i.w;","    res.x *= aspect;","\t vCounters = counters;","    return res;","","}","","void main() {","","    float aspect = resolution.x / resolution.y;","","    vColor = vec4( color, opacity );","    vUV = uv;","","    mat4 m = projectionMatrix * modelViewMatrix;","    vec4 finalPosition = m * vec4( position, 1.0 );","    vec4 prevPos = m * vec4( previous, 1.0 );","    vec4 nextPos = m * vec4( next, 1.0 );","","    vec2 currentP = fix( finalPosition, aspect );","    vec2 prevP = fix( prevPos, aspect );","    vec2 nextP = fix( nextPos, aspect );","","    float w = lineWidth * width;","","    vec2 dir;","    if( nextP == currentP ) dir = normalize( currentP - prevP );","    else if( prevP == currentP ) dir = normalize( nextP - currentP );","    else {","        vec2 dir1 = normalize( currentP - prevP );","        vec2 dir2 = normalize( nextP - currentP );","        dir = normalize( dir1 + dir2 );","","        vec2 perp = vec2( -dir1.y, dir1.x );","        vec2 miter = vec2( -dir.y, dir.x );","        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );","","    }","","    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;","    vec4 normal = vec4( -dir.y, dir.x, 0., 1. );","    normal.xy *= .5 * w;","    normal *= projectionMatrix;","    if( sizeAttenuation == 0. ) {","        normal.xy *= finalPosition.w;","        normal.xy /= ( vec4( resolution, 0., 1. ) * projectionMatrix ).xy;","    }","","    finalPosition.xy += normal.xy * side;","","    gl_Position = finalPosition;","",r.ShaderChunk.logdepthbuf_vertex,r.ShaderChunk.fog_vertex&&"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",r.ShaderChunk.fog_vertex,"}"].join("\n"),r.ShaderChunk.meshline_frag=["",r.ShaderChunk.fog_pars_fragment,r.ShaderChunk.logdepthbuf_pars_fragment,"","uniform sampler2D map;","uniform sampler2D alphaMap;","uniform float useMap;","uniform float useAlphaMap;","uniform float useDash;","uniform float dashArray;","uniform float dashOffset;","uniform float dashRatio;","uniform float visibility;","uniform float alphaTest;","uniform vec2 repeat;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","void main() {","",r.ShaderChunk.logdepthbuf_fragment,"","    vec4 c = vColor;","    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );","    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;","    if( c.a < alphaTest ) discard;","    if( useDash == 1. ){","        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));","    }","    gl_FragColor = c;","    gl_FragColor.a *= step(vCounters, visibility);","",r.ShaderChunk.fog_fragment,"}"].join("\n"),o.prototype=Object.create(r.ShaderMaterial.prototype),o.prototype.constructor=o,o.prototype.isMeshLineMaterial=!0,o.prototype.copy=function(t){return r.ShaderMaterial.prototype.copy.call(this,t),this.lineWidth=t.lineWidth,this.map=t.map,this.useMap=t.useMap,this.alphaMap=t.alphaMap,this.useAlphaMap=t.useAlphaMap,this.color.copy(t.color),this.opacity=t.opacity,this.resolution.copy(t.resolution),this.sizeAttenuation=t.sizeAttenuation,this.dashArray.copy(t.dashArray),this.dashOffset.copy(t.dashOffset),this.dashRatio.copy(t.dashRatio),this.useDash=t.useDash,this.visibility=t.visibility,this.alphaTest=t.alphaTest,this.repeat.copy(t.repeat),this},t.exports&&(e=t.exports={MeshLine:s,MeshLineMaterial:o,MeshLineRaycast:a}),e.MeshLine=s,e.MeshLineMaterial=o,e.MeshLineRaycast=a}).call(this)},291:function(t,e,i){"use strict";i.r(e);var r=i(0),s=i.n(r),a=i(72),n=i(119),o=i(74),u=i(19);Object(o.e)(n);var h=function(t){var e=t.mouse,i=Object(o.i)().camera;return Object(o.g)((function(){i.position.x+=.05*(-e.current[0]/50-i.position.x),i.position.y+=.05*(e.current[1]/50-i.position.y),i.lookAt(0,0,0)})),null},l=["#CAE8E6","#EFDE0B","#F39A02","#F04902","#C81412","#780235","#401238","#1E0D2A","#130E11","#0D0B0E"],c=function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,e=[],i=0;i<2*Math.PI;i+=2*Math.PI/200)e.push(new a.Vector3(Math.cos(i)*t,Math.sin(i)*t,Math.sin(t)));return e},p=function(t){var e=t.width,i=t.color,a=t.speed,n=t.radius,u=Object(r.useRef)();return Object(o.g)((function(){return u.current.uniforms.dashOffset.value-=a})),s.a.createElement("mesh",null,s.a.createElement("meshLine",{attach:"geometry",vertices:c(n)}),s.a.createElement("meshLineMaterial",{opacity:.9,attach:"material",ref:u,transparent:!0,depthTest:!1,lineWidth:e,color:i,dashArray:.2,dashRatio:.9}))},f=function(t){var e=t.count,i=t.colors,a=t.radius;return Object(r.useMemo)((function(){return new Array(e).fill().map((function(t,e){return{color:i[parseInt(i.length*Math.random())],width:.1,speed:Math.max(1e-4,.0012*Math.random())}}))}),[i,e]).map((function(t,e){return s.a.createElement(p,Object.assign({key:"lineMesh".concat(e),radius:a},t))}))};e.default=function(){var t=Object(r.useRef)([0,0]),e=Object(r.useContext)(u.b).dark?"#141920":"#ECECDE";return s.a.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",flexFlow:"column",zIndex:3,width:"100%",height:"100vh",cursor:"pointer",background:e}},s.a.createElement(o.a,{pixelRatio:window.devicePixelRatio||1,camera:{position:[0,0,10],near:.01,far:25,fov:25},onMouseMove:function(e){return t.current=[e.clientX-window.innerWidth/2,e.clientY-window.innerHeight/2]}},new Array(10).fill().map((function(t,e){return s.a.createElement(f,{key:"line".concat(e),count:e<1?0:e+2,colors:l,radius:.4*e+.2})})),s.a.createElement(h,{mouse:t})))}}}]);
//# sourceMappingURL=34.0ff121c2.chunk.js.map
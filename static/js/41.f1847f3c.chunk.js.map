{"version":3,"sources":["../node_modules/react-use/esm/useInterval.js","exp/Exp9.js"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","interval_1","setInterval","clearInterval","extend","TrackballControls","data","Array","fill","map","_","id","colors","factorizationLayout","int","numPoints","length","fact","number","primes","PI","Math","ide","primefactor","ans","pi","draw","cx","cy","s","oy","r","d","push","x","y","z","f","cos","i","sin","factorization","datum","useSourceTargetLayout","React","sourceX","sourceY","sourceZ","sourceS","useLayout","targetX","targetY","targetZ","targetS","scratch","THREE","Boxes","meshRef","attRef","numInstances","onFrame","prevInt","useSpring","animationProgress","from","reset","progress","interpolateSourceTarget","useAnimatedLayout","mesh","position","set","scale","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","updateInstancedMeshMatrices","useFrame","state","time","clock","getElapsedTime","rotation","ref","args","frustumCulled","attach","attachArray","color","Trackball","controls","useThree","camera","gl","update","domElement","dynamicDampingFactor","keys","mouseButtons","LEFT","PAN","MIDDLE","ZOOM","RIGHT","ROTATE","useState","setInt","style","width","height","cursor","top","left","right","bottom","zIndex","display","justifyContent","alignItems","fontSize","opacity","fontFeatureSettings","fontVariantNumeric","colorManagement","pixelRatio","window","devicePixelRatio","antialias","alpha","fov"],"mappings":"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","file":"static/js/41.f1847f3c.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n","import * as THREE from \"three\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Canvas, useFrame, useThree, extend } from \"react-three-fiber\";\nimport { useSpring } from \"react-spring/three\";\nimport { useInterval } from \"react-use\";\nimport { TrackballControls } from \"three/examples/jsm/controls/TrackballControls\";\nextend({ TrackballControls });\n\n// Check out this: https://medium.com/cortico/3d-data-visualization-with-react-and-three-js-7272fb6de432. All credit to Peter Beshai and Paul Henschel\n\nconst data = new Array(10000).fill().map((_, id) => ({ id }));\n\nconst colors = {\n  red: \"#D42A1F\",\n  blue: \"#2B638E\",\n  yellow: \"#F5C22C\",\n  green: \"#2F8E5C\",\n};\n\nconst factorization = (number) => {\n  // Jon Palin,\n  // inspired by https://bit.ly/2wCr7vA\n  // console.log(\"factorization\", number);\n\n  let primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271,\n  ];\n\n  const smallfirst = false;\n  const PI = Math.PI;\n  const off2 = 0;\n  const data = [];\n  let ide = 1;\n\n  const draw = (number, cx, cy, s) => {\n    let oy;\n    let r;\n    let d;\n    if (number === 1) {\n      ide++;\n      data.push({ x: cx, y: cy, z: 0, s: (s * PI) / 2, ide });\n    } else {\n      let f = primefactor(number);\n      if (f === 2) {\n        oy = 0;\n        if (number % 4 === 0) {\n          f = 4;\n          r = (2 * s) / (f + 2);\n          d = (f * s) / (f + 2);\n        } else {\n          f = 2;\n          r = (0.75 * 2 * s) / (2 + 2);\n          d = (2 * s) / (2 + 2);\n        }\n      } else {\n        r = (2 * s) / (f + 2);\n        d = (f * s) / (f + 2);\n        oy = (d / 2) * (1 - Math.cos(PI / f));\n      }\n\n      for (let i = 0; i < f; i++) {\n        let x = Math.sin(PI + (2 * PI * (i + 0.5)) / f + off2);\n        let y = Math.cos(PI + (2 * PI * (i + 0.5)) / f + off2);\n        draw(number / f, cx + x * d, cy - y * d + oy, r);\n      }\n    }\n  };\n\n  const primefactor = (number) => {\n    let ans = number;\n    for (let pi in primes) {\n      if (number % primes[pi] === 0) {\n        ans = primes[pi];\n        if (smallfirst) {\n          return ans;\n        }\n      }\n    }\n    return ans;\n  };\n\n  draw(number, 0, 0, 30);\n  return data;\n};\n\n\nfunction factorizationLayout(data, int) {\n  // console.log(\"factorizationLayout\", data);\n\n  const numPoints = data.length;\n\n  const fact = factorization(int);\n\n  for (let i = 0; i < numPoints; ++i) {\n    const datum = data[i];\n\n    if (i < fact.length) {\n      datum.x = fact[i].x;\n      datum.y = fact[i].y;\n      datum.z = fact[i].z;\n      datum.s = fact[i].s;\n    } else {\n      datum.x = 0;\n      datum.y = 0;\n      datum.z = 0;\n      datum.s = 0;\n    }\n  }\n}\n\nconst useLayout = ({ data, int = 1 }) => {\n  // console.log(\"useLayout\", data)\n\n  useEffect(() => {\n    factorizationLayout(data, int);\n  }, [data, int]);\n};\n\nfunction useSourceTargetLayout({ data, int }) {\n  // prep for new animation by storing source\n  // console.log(\"useSourceTargetLayout\", data)\n\n  React.useEffect(() => {\n    for (let i = 0; i < data.length; ++i) {\n      data[i].sourceX = data[i].x || 0;\n      data[i].sourceY = data[i].y || 0;\n      data[i].sourceZ = data[i].z || 0;\n      data[i].sourceS = data[i].s || 0;\n    }\n  }, [data, int]);\n\n  // run layout\n  useLayout({ data, int });\n\n  // store target\n  React.useEffect(() => {\n    for (let i = 0; i < data.length; ++i) {\n      data[i].targetX = data[i].x;\n      data[i].targetY = data[i].y;\n      data[i].targetZ = data[i].z;\n      data[i].targetS = data[i].s;\n    }\n  }, [data, int]);\n}\n\nfunction interpolateSourceTarget(data, progress) {\n  // console.log(\"interpolateSourceTarget\", data)\n\n  for (let i = 0; i < data.length; ++i) {\n    data[i].x = (1 - progress) * data[i].sourceX + progress * data[i].targetX;\n    data[i].y = (1 - progress) * data[i].sourceY + progress * data[i].targetY;\n    data[i].z = (1 - progress) * data[i].sourceZ + progress * data[i].targetZ;\n    data[i].s = (1 - progress) * data[i].sourceS + progress * data[i].targetS;\n  }\n}\n\nfunction useAnimatedLayout({ data, int, onFrame }) {\n  // compute layout remembering initial position as source and\n  // end position as target\n  // console.log(\"useAnimatedLayout\", data)\n  useSourceTargetLayout({ data, int });\n\n  // do the actual animation when layout changes\n  const prevInt = React.useRef(int);\n\n  useSpring({\n    animationProgress: 1,\n    from: { animationProgress: 0 },\n    reset: int !== prevInt.current,\n    onFrame: ({ animationProgress }) => {\n      // interpolate based on progress\n      interpolateSourceTarget(data, animationProgress);\n      // callback to indicate data has updated\n      onFrame({ animationProgress });\n    },\n  });\n  prevInt.current = int;\n}\n\n\n// re-use for instance computations\nconst scratch = new THREE.Object3D();\n\nfunction updateInstancedMeshMatrices({ mesh, data }) {\n  // console.log(\"updateInstancedMeshMatrices\", data)\n  if (!mesh) return;\n\n  // set the transform matrix for each instance\n  for (let i = 0; i < data.length; ++i) {\n    const { x, y, z, s } = data[i];\n\n    scratch.position.set(x, y, z);\n    scratch.position.set(x, y, z);\n    scratch.scale.set(s, s, s);\n\n    scratch.updateMatrix();\n    mesh.setMatrixAt(i, scratch.matrix);\n  }\n\n  mesh.instanceMatrix.needsUpdate = true;\n}\n\nfunction Boxes({ data, int }) {\n  const meshRef = useRef();\n  const attRef = useRef();\n  const numInstances = data.length;\n\n  // run the layout, animating on change\n  useAnimatedLayout({\n    data,\n    int,\n    onFrame: () => {\n      updateInstancedMeshMatrices({ mesh: meshRef.current, data });\n    },\n  });\n\n  useFrame(state => {\n    const time = state.clock.getElapsedTime()\n    meshRef.current.rotation.x = Math.sin(time / Math.PI * 2)\n    meshRef.current.rotation.y = Math.sin(time / Math.PI)\n    meshRef.current.instanceMatrix.needsUpdate = true\n  })\n\n  return (\n    <instancedMesh\n      ref={meshRef}\n      args={[null, null, numInstances]}\n      frustumCulled={false}\n    >\n      <boxBufferGeometry attach=\"geometry\">\n        <instancedBufferAttribute ref={attRef} />\n      </boxBufferGeometry>\n\n      {/* material */}\n      <meshBasicMaterial attachArray=\"material\" color={colors.green} />\n      <meshBasicMaterial attachArray=\"material\" color={colors.green} />\n      <meshBasicMaterial attachArray=\"material\" color={colors.yellow} />\n      <meshBasicMaterial attachArray=\"material\" color={colors.yellow} />\n      <meshBasicMaterial attachArray=\"material\" color={colors.blue} />\n      <meshBasicMaterial attachArray=\"material\" color={colors.blue} />\n    </instancedMesh>\n  );\n}\n\n\nconst Trackball = () => {\n  const controls = useRef();\n  const { camera, gl } = useThree();\n\n  useFrame(() => {\n    controls.current.update();\n  });\n\n  return (\n    <trackballControls\n      ref={controls}\n      args={[camera, gl.domElement]}\n      dynamicDampingFactor={0.1}\n      keys={[\n        18, //ALT_KEY - orbit\n        17, //CTRL_KEY- zoom\n        91, //CMD_KEY - pan\n      ]}\n      mouseButtons={{\n        LEFT: THREE.MOUSE.PAN,\n        MIDDLE: THREE.MOUSE.ZOOM,\n        RIGHT: THREE.MOUSE.ROTATE,\n      }}\n    />\n  );\n};\n\n// MAIN\nexport default () => {\n  const [int, setInt] = useState(1);\n\n  useInterval(() => {\n    if (int < 10000) {\n      setInt(int + 1);\n    } else {\n      setInt(1)\n    }\n  }, 1000)\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100vh\",\n        position: \"relative\",\n        cursor: \"grabbing\"\n      }}\n    >\n      <div\n        style={{\n          position: \"fixed\",\n          width: \"100%\",\n          height: \"100vh\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          zIndex: -1,\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        <h1 style={{\n          fontSize: 100, opacity: 0.2, fontFeatureSettings: \"tnum\",\n          fontVariantNumeric: \"tabular-nums\"\n        }}>{int}</h1>\n      </div>\n\n      <Canvas\n        colorManagement\n        pixelRatio={window.devicePixelRatio || 1}\n        gl={{ antialias: true, alpha: true }}\n        camera={{ fov: 10, position: [0, 0, 500] }}\n      >\n        <Boxes data={data} int={int} />\n        <Trackball />\n      </Canvas>\n    </div >\n  );\n};\n"],"sourceRoot":""}
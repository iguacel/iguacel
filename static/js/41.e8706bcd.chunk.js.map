{"version":3,"sources":["data/unabomber.js","data/cartogramUSA.js","exp/Exp8.js"],"names":["index","date","dateTxt","state","cell","place","type","explosion","nExplosion","victim","occupation","injuries","strokeStates","fillStates","idStates","s25","s49","s50","s66","s30","s31","s45","s46","useMeasure","ref","width","height","canvas","useRef","requestRef","isEnglish","useContext","LanguageContext","language","months","useEffect","current","requestAnimationFrame","animationLoop","cancelAnimationFrame","currentIndex","currentDate","Date","dx","margin","colors","start","data","setMonth","getMonth","end","length","dataDates","forEach","x","push","statesPositions","WA","position","center","nBombs","CA","UT","TN","IL","MI","NJ","CT","xScale","scaleTime","domain","range","Cell","y","size","this","ctx","save","font","textAlign","fillStyle","fillText","fillRect","restore","draw","Bomb","d","color","dropBombTime","dropSpeed","beginPath","rect","fill","closePath","animateBomb","pictoPositions","n","squares","i","j","drawPictogram","lerp","Box","globalAlpha","bombs","getContext","ratio","window","devicePixelRatio","style","scale","clearRect","invert","id","marginTop","includes","strokeStyle","lineWidth","strokeRect","stroke","update","drawCartogram","bomb","ticks","tickFormat","moveTo","lineTo","textBaseline","xAxis","getFullYear","drawLabels","maxWidth","className","top","right","background","borderTop","opacity"],"mappings":"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","file":"static/js/41.e8706bcd.chunk.js","sourcesContent":["export default [\n  {\n    index: 0,\n    date: \"1978-05-25\",\n    dateTxt: \"May 25, 1978\",\n    state: \"IL\",\n    cell: 30,\n    place: \"Illinois: Northwestern University\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 1,\n    victim: \"Terry Marker\",\n    occupation: \"University police officer\",\n    injuries: \"Minor cuts and burns\"\n  },\n  {\n    index: 1,\n    date: \"1979-05-09\",\n    dateTxt: \"May 9, 1979\",\n    state: \"IL\",\n    cell: 30,\n    place: \"Illinois: Northwestern University\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 2,\n    victim: \"John Harris\",\n    occupation: \"Graduate student\",\n    injuries: \"Minor cuts and burns\"\n  },\n  {\n    index: 2,\n    date: \"1979-11-15\",\n    dateTxt: \"November 15, 1979\",\n    state: \"IL\",\n    cell: 30,\n    place:\n      \"Illinois: American Airlines Flight 444 from Chicago to Washington, D.C. (explosion occurred midflight)\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 3,\n    victim: \"Twelve passengers\",\n    occupation: \"''Multiple''\",\n    injuries: \"Non-lethal smoke inhalation\"\n  },\n  {\n    index: 3,\n    date: \"1980-06-10\",\n    dateTxt: \"June 10, 1980\",\n    state: \"IL\",\n    cell: 30,\n    place: \"Illinois: Lake Forest, Illinois - Lake Forest\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 4,\n    victim: \"Percy Wood\",\n    occupation: \"President of United Airlines\",\n    injuries: \"Severe cuts and burns over most of body and face\"\n  },\n  {\n    index: 4,\n    date: \"1981-10-08\",\n    dateTxt: \"October 8, 1981\",\n    state: \"UT\",\n    cell: 50,\n    place: \"Utah: University of Utah\",\n    type: \"Bomb defused\",\n    explosion: false,\n    nExplosion: 1,\n    victim: \"n.a.\",\n    occupation: \"n.a.\",\n    injuries: \"n.a.\"\n  },\n  {\n    index: 5,\n    date: \"1982-05-05\",\n    dateTxt: \"May 5, 1982\",\n    state: \"TN\",\n    cell: 66,\n    place: \"Tennessee: Vanderbilt University\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 1,\n    victim: \"Janet Smith\",\n    occupation: \"University secretary\",\n    injuries:\n      \"Severe burns to hands; Fragmentation (weaponry)|shrapnel wounds to body\"\n  },\n  {\n    index: 6,\n    date: \"1982-07-02\",\n    dateTxt: \"July 2, 1982\",\n    state: \"CA\",\n    cell: 49,\n    place: \"California: University of California, Berkeley\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 1,\n    victim: \"Diogenes Angelakos\",\n    occupation: \"Engineering professor\",\n    injuries: \"Severe burns and shrapnel wounds to hand and face\"\n  },\n  {\n    index: 7,\n    date: \"1985-05-15\",\n    dateTxt: \"May 15, 1985\",\n    state: \"CA\",\n    cell: 49,\n    place: \"California: University of California, Berkeley\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 2,\n    victim: \"John Hauser\",\n    occupation: \"Graduate student\",\n    injuries:\n      \"Loss of four fingers and severed artery in right arm; partial loss of vision in left eye\"\n  },\n  {\n    index: 8,\n    date: \"1985-06-13\",\n    dateTxt: \"June 13, 1985\",\n    state: \"WA\",\n    cell: 25,\n    place: \"Washington: The Boeing Company in Auburn, Washington\",\n    type: \"Bomb defused\",\n    explosion: false,\n    nExplosion: 1,\n    victim: \"n.a.\",\n    occupation: \"n.a.\",\n    injuries: \"n.a.\"\n  },\n  {\n    index: 9,\n    date: \"1985-11-15\",\n    dateTxt: \"November 15, 1985\",\n    state: \"MI\",\n    cell: 31,\n    place: \"Michigan: University of Michigan\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 1,\n    victim: \"James V. McConnell<hr />Nicklaus Suino\",\n    occupation: \"Psychology professor<hr />Research assistant\",\n    injuries: \"Temporary hearing loss<hr />Burns and shrapnel wounds\"\n  },\n  {\n    index: 10,\n    date: \"1985-12-11\",\n    dateTxt: \"December 11, 1985\",\n    state: \"CA\",\n    cell: 49,\n    place: \"California: Sacramento, California|Sacramento\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 3,\n    victim: \"Hugh Scrutton\",\n    occupation: \"Computer store owner\",\n    injuries: \"Death\"\n  },\n  {\n    index: 11,\n    date: \"1987-02-20\",\n    dateTxt: \"February 20, 1987\",\n    state: \"UT\",\n    cell: 50,\n    place: \"Utah: Salt Lake City\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 2,\n    victim: \"Gary Wright\",\n    occupation: \"Computer store owner\",\n    injuries: \"Severe nerve damage to left arm\"\n  },\n  {\n    index: 12,\n    date: \"1993-06-22\",\n    dateTxt: \"June 22, 1993\",\n    state: \"CA\",\n    cell: 49,\n    place: \"California: Tiburon, California|Tiburon\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 4,\n    victim: \"Charles Epstein (geneticist)|Charles Epstein\",\n    occupation: \"Geneticist\",\n    injuries:\n      \"Severe damage to both eardrums with partial hearing loss, loss of three fingers\"\n  },\n  {\n    index: 13,\n    date: \"1993-06-24\",\n    dateTxt: \"June 24, 1993\",\n    state: \"CT\",\n    cell: 46,\n    place: \"Connecticut: Yale University\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 1,\n    victim: \"David Gelernter\",\n    occupation: \"Computer science professor\",\n    injuries:\n      \"Severe burns and shrapnel wounds, damage to right eye, loss of right hand\"\n  },\n  {\n    index: 14,\n    date: \"1994-12-10\",\n    dateTxt: \"December 10, 1994\",\n    state: \"NJ\",\n    cell: 45,\n    place: \"New Jersey: North Caldwell, New Jersey|North Caldwell\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 1,\n    victim: \"Thomas J. Mosser\",\n    occupation: \"Advertising executive\",\n    injuries: \"Death\"\n  },\n  {\n    index: 15,\n    date: \"1995-04-24\",\n    dateTxt: \"April 24, 1995\",\n    state: \"CA\",\n    cell: 49,\n    place: \"California: Sacramento\",\n    type: \"Explosion\",\n    explosion: true,\n    nExplosion: 5,\n    victim: \"Gilbert Brent Murray\",\n    occupation: \"Timber industry lobbyist\",\n    injuries: \"Death\"\n  }\n];\n","// Cartogram\n// const columns = 8;\n// const rows = 12\n\nexport const cartogram = {\n  AL: {\n    name: \"Alabama\",\n    cod: \"AL\",\n    cell: 79\n  },\n  AK: {\n    name: \"Alaska\",\n    cod: \"AK\",\n    cell: 85\n  },\n  AS: {\n    name: \"American Samoa\",\n    cod: \"AS\",\n    cell: false\n  },\n  AZ: {\n    name: \"Arizona\",\n    cod: \"AZ\",\n    cell: 62\n  },\n  AR: {\n    name: \"Arkansas\",\n    cod: \"AR\",\n    cell: 65\n  },\n  CA: {\n    name: \"California\",\n    cod: \"CA\",\n    cell: 49\n  },\n  CO: {\n    name: \"Colorado\",\n    cod: \"CO\",\n    cell: 51\n  },\n  CT: {\n    name: \"Connecticut\",\n    cod: \"CT\",\n    cell: 46\n  },\n  DE: {\n    name: \"Delaware\",\n    cod: \"DE\",\n    cell: 58\n  },\n  DC: {\n    name: \"District Of Columbia\",\n    cod: \"DC\",\n    cell: 69\n  },\n  FM: {\n    name: \"Federated States Of Micronesia\",\n    cod: \"FM\",\n    cell: false\n  },\n  FL: {\n    name: \"Florida\",\n    cod: \"FL\",\n    cell: 93\n  },\n  GA: {\n    name: \"Georgia\",\n    cod: \"GA\",\n    cell: 80\n  },\n  GU: {\n    name: \"Guam\",\n    cod: \"GU\",\n    cell: false\n  },\n  HI: {\n    name: \"Hawaii\",\n    cod: \"HI\",\n    cell: 84\n  },\n  ID: {\n    name: \"Idaho\",\n    cod: \"ID\",\n    cell: 26\n  },\n  IL: {\n    name: \"Illinois\",\n    cod: \"IL\",\n    cell: 30\n  },\n  IN: {\n    name: \"Indiana\",\n    cod: \"IN\",\n    cell: 42\n  },\n  IA: {\n    name: \"Iowa\",\n    cod: \"IA\",\n    cell: 41\n  },\n  KS: {\n    name: \"Kansas\",\n    cod: \"KS\",\n    cell: false\n  },\n  KY: {\n    name: \"Kentucky\",\n    cod: \"KY\",\n    cell: 54\n  },\n  LA: {\n    name: \"Louisiana\",\n    cod: \"LA\",\n    cell: 77\n  },\n  ME: {\n    name: \"Maine\",\n    cod: \"ME\",\n    cell: 10\n  },\n  MH: {\n    name: \"Marshall Islands\",\n    cod: \"MH\",\n    cell: false\n  },\n  MD: {\n    name: \"Maryland\",\n    cod: \"MD\",\n    cell: 57\n  },\n  MA: {\n    name: \"Massachusetts\",\n    cod: \"MA\",\n    cell: 34\n  },\n  MI: {\n    name: \"Michigan\",\n    cod: \"MI\",\n    cell: 31\n  },\n  MN: {\n    name: \"Minnesota\",\n    cod: \"MN\",\n    cell: 29\n  },\n  MS: {\n    name: \"Mississippi\",\n    cod: \"MS\",\n    cell: 78\n  },\n  MO: {\n    name: \"Missouri\",\n    cod: \"MO\",\n    cell: 53\n  },\n  MT: {\n    name: \"Montana\",\n    cod: \"MT\",\n    cell: 27\n  },\n  NE: {\n    name: \"Nebraska\",\n    cod: \"NE\",\n    cell: 52\n  },\n  NV: {\n    name: \"Nevada\",\n    cod: \"NV\",\n    cell: 38\n  },\n  NH: {\n    name: \"New Hampshire\",\n    cod: \"NH\",\n    cell: 23\n  },\n  NJ: {\n    name: \"New Jersey\",\n    cod: \"NJ\",\n    cell: 45\n  },\n  NM: {\n    name: \"New Mexico\",\n    cod: \"NM\",\n    cell: 64\n  },\n  NY: {\n    name: \"New York\",\n    cod: \"NY\",\n    cell: 33\n  },\n  NC: {\n    name: \"North Carolina\",\n    cod: \"NC\",\n    cell: 67\n  },\n  ND: {\n    name: \"North Dakota\",\n    cod: \"ND\",\n    cell: 28\n  },\n  MP: {\n    name: \"Northern Mariana Islands\",\n    cod: \"MP\",\n    cell: false\n  },\n  OH: {\n    name: \"Ohio\",\n    cod: \"OH\",\n    cell: 43\n  },\n  OK: {\n    name: \"Oklahoma\",\n    cod: \"OK\",\n    cell: 76\n  },\n  OR: {\n    name: \"Oregon\",\n    cod: \"OR\",\n    cell: 37\n  },\n  PW: {\n    name: \"Palau\",\n    cod: \"PW\",\n    cell: false\n  },\n  PA: {\n    name: \"Pennsylvania\",\n    cod: \"PA\",\n    cell: 44\n  },\n  PR: {\n    name: \"Puerto Rico\",\n    cod: \"PR\",\n    cell: false\n  },\n  RI: {\n    name: \"Rhode Island\",\n    cod: \"RI\",\n    cell: 47\n  },\n  SC: {\n    name: \"South Carolina\",\n    cod: \"SC\",\n    cell: 68\n  },\n  SD: {\n    name: \"South Dakota\",\n    cod: \"SD\",\n    cell: 40\n  },\n  TN: {\n    name: \"Tennessee\",\n    cod: \"TN\",\n    cell: false\n  },\n  TX: {\n    name: \"Texas\",\n    cod: \"TX\",\n    cell: 88\n  },\n  UT: {\n    name: \"Utah\",\n    cod: \"UT\",\n    cell: 50\n  },\n  VT: {\n    name: \"Vermont\",\n    cod: \"VT\",\n    cell: 22\n  },\n  VI: {\n    name: \"Virgin Islands\",\n    cod: \"VI\",\n    cell: false\n  },\n  VA: {\n    name: \"Virginia\",\n    cod: \"VA\",\n    cell: 56\n  },\n  WA: {\n    name: \"Washington\",\n    cod: \"WA\",\n    cell: 25\n  },\n  WV: {\n    name: \"West Virginia\",\n    cod: \"WV\",\n    cell: 55\n  },\n  WI: {\n    name: \"Wisconsin\",\n    cod: \"WI\",\n    cell: 18\n  },\n  WY: {\n    name: \"Wyoming\",\n    cod: \"WY\",\n    cell: 39\n  }\n};\n\nexport const strokeStates = [\n  84,\n  85,\n  37,\n  49,\n  25,\n  62,\n  38,\n  26,\n  50,\n  63,\n  39,\n  27,\n  51,\n  76,\n  64,\n  88,\n  40,\n  28,\n  52,\n  77,\n  41,\n  65,\n  29,\n  53,\n  66,\n  78,\n  18,\n  30,\n  42,\n  54,\n  67,\n  43,\n  79,\n  31,\n  55,\n  68,\n  80,\n  44,\n  56,\n  33,\n  69,\n  93,\n  57,\n  45,\n  22,\n  34,\n  46,\n  58,\n  23,\n  47,\n  11\n];\n\nexport const fillStates = [25,\n  49,\n  50,\n  66,\n  30,\n  31,\n  45,\n  46]\n\nexport const idStates = {\n  s25: \"WA\",\n  s49: \"CA\",\n  s50: \"UT\",\n  s66: \"TN\",\n  s30: \"IL\",\n  s31: \"MI\",\n  s45: \"NJ\",\n  s46: \"CT\",\n}","import React, { useEffect, useContext, useRef } from \"react\";\nimport { useMeasure } from \"react-use\";\n\nimport { scaleTime } from \"d3-scale\";\nimport data from \"../data/unabomber\";\n\nimport { idStates, strokeStates, fillStates } from \"../data/cartogramUSA\";\n\nimport LanguageContext from \"../context/LanguageContext\";\n\nimport { lerp } from \"../utils/utils\";\n\nexport default () => {\n  const [ref, { width, height }] = useMeasure();\n\n  const canvas = useRef(null);\n  const requestRef = useRef();\n\n  const { language } = useContext(LanguageContext);\n  const isEnglish = language.isEnglish;\n\n  const months = [\n    isEnglish ? \"\" : \"\",\n    isEnglish ? \"Winter\" : \"Invierno\",\n    isEnglish ? \"Winter\" : \"Invierno\",\n    isEnglish ? \"Spring\" : \"Primavera\",\n    isEnglish ? \"Spring\" : \"Primavera\",\n    isEnglish ? \"Spring\" : \"Primavera\",\n    isEnglish ? \"Summer\" : \"Verano\",\n    isEnglish ? \"Summer\" : \"Verano\",\n    isEnglish ? \"Summer\" : \"Verano\",\n    isEnglish ? \"Autumn\" : \"Otoño\",\n    isEnglish ? \"Autumn\" : \"Otoño\",\n    isEnglish ? \"Autumn\" : \"Otoño\",\n    isEnglish ? \"Winter\" : \"Invierno\"\n  ]\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animationLoop);\n    return () => cancelAnimationFrame(requestRef.current);\n  }); // Make sure the effect runs only once\n\n  // Globals\n  let currentIndex = 0;\n  let currentDate = new Date();\n  let dx = 1;\n\n  let margin = { top: 200, right: 0, bottom: 60, left: 0 };\n\n  const colors = {\n    package: \"RGBA(173, 135, 98, 1)\",\n    defused: \"RGBA(173, 177, 181, 1)\",\n    scale: [\"#feedde\", \"#fdbe85\", \"#fd8d3c\", \"#e6550d\", \"#a63603\"],\n  };\n\n  // Dates\n  let start = new Date(data[0].date);\n  start.setMonth(start.getMonth() - 45);\n  let end = new Date(data[data.length - 1].date);\n  end.setMonth(end.getMonth() + 4);\n  const dataDates = [];\n  data.forEach((x) => dataDates.push(new Date(x.date)));\n\n  // Positions\n  let statesPositions = {\n    WA: { position: null, center: null, nBombs: 0 },\n    CA: { position: null, center: null, nBombs: 0 },\n    UT: { position: null, center: null, nBombs: 0 },\n    TN: { position: null, center: null, nBombs: 0 },\n    IL: { position: null, center: null, nBombs: 0 },\n    MI: { position: null, center: null, nBombs: 0 },\n    NJ: { position: null, center: null, nBombs: 0 },\n    CT: { position: null, center: null, nBombs: 0 },\n  };\n\n  const xScale = scaleTime()\n    .domain([start, end])\n    .range([0, width * 4]);\n\n  const xAxis = (ctx, x, dx) => {\n    ctx.save();\n    var tickCount = 22,\n      ticks = x.ticks(tickCount),\n      tickFormat = x.tickFormat();\n\n    ticks.forEach((d) => {\n      ctx.moveTo(x(d) + dx, margin.top + 10);\n      ctx.lineTo(x(d) + dx, margin.top - 10);\n    });\n\n    ctx.font = \"12px Inter\";\n    ctx.fillStyle = \"gray\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"top\";\n    ticks.forEach(function (d) {\n      ctx.fillText(tickFormat(d), x(d) + dx, -30 + margin.top);\n    });\n    ctx.restore();\n  };\n\n  class Cell {\n    constructor(x, y, size, state) {\n      this.x = x;\n      this.y = y;\n      this.size = size;\n      this.state = state;\n    }\n    draw(ctx) {\n      ctx.save();\n\n      ctx.font = \"8px Inter\";\n      ctx.textAlign = \"left\";\n      ctx.fillStyle = \"gray\";\n      ctx.fillText(\n        `${this.state}`,\n        this.x + 4,\n        this.y + 12,\n        this.size,\n        this.size\n      );\n      ctx.fillStyle =\n        data[currentIndex].state === this.state\n          ? \"RGBA(173, 135, 98, 0.30)\"\n          : \"RGBA(97, 92, 87, 0.20)\";\n      ctx.fillRect(this.x, this.y, this.size, this.size);\n      ctx.restore();\n    }\n    update(ctx) {\n      this.draw(ctx);\n    }\n  }\n\n  const drawLabels = (ctx) => {\n    ctx.save();\n    ctx.fillStyle = \"gray\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"top\";\n    ctx.font = \"18px Inter\";\n    ctx.fillText(\n      `${months[new Date(currentDate).getMonth() + 1]}`,\n      width / 2,\n      margin.top - 130\n    );\n\n    ctx.font = \"45px Inter\";\n    ctx.fillText(\n      `${new Date(currentDate).getFullYear()}`,\n      width / 2,\n      margin.top - 100\n    );\n    ctx.restore();\n  };\n\n  const drawCartogram = (ctx) => {\n    const size = width / 12;\n    const columns = 8;\n    const rows = 12;\n    const cartoHeight = columns * size;\n    let id = 0;\n    const marginTop = (height - cartoHeight) / 2 + 50;\n    let state = null;\n    ctx.font = \"12px Inter\";\n\n    for (var i = 0; i < columns; i++) {\n      for (var j = 0; j < rows; j++) {\n        if (strokeStates.includes(id)) {\n          ctx.save();\n          ctx.strokeStyle = `gray`;\n          ctx.lineWidth = 0.5;\n          ctx.strokeRect(j * size, i * size + marginTop, size, size);\n          ctx.stroke();\n          ctx.restore();\n        }\n        if (fillStates.includes(id)) {\n          state = idStates[`s${id}`];\n\n          const position = { x: j * size, y: i * size + marginTop };\n          const center = {\n            x: j * size + size / 2,\n            y: i * size + marginTop + size / 2,\n          };\n\n          statesPositions[state] = {\n            ...statesPositions[state],\n            center,\n            position,\n          };\n\n          new Cell(position.x, position.y, size, state).update(ctx);\n        }\n        id += 1;\n      }\n    }\n  };\n\n  class Bomb {\n    constructor(d, x, y, size, color, nExplosion) {\n      this.d = d;\n      this.x = x;\n      this.y = y;\n      this.size = size;\n      this.color = color;\n      this.nExplosion = nExplosion;\n      this.dropBombTime = 0;\n      this.dropSpeed = 0.01;\n    }\n    draw(ctx) {\n      ctx.save();\n      ctx.beginPath(ctx);\n      ctx.rect(this.x, this.y, this.size, this.size);\n      ctx.fillStyle = this.color;\n      ctx.fill();\n      ctx.closePath();\n\n      // Debug\n      // ctx.save();\n      // ctx.fillStyle = 'white';\n      // ctx.fillText(this.nExplosion, this.x - this.size / 2, this.y);\n      // Debug\n      ctx.restore();\n      ctx.restore();\n    }\n    update(ctx) {\n      this.draw(ctx);\n      if (new Date(currentDate) > new Date(this.d.date)) {\n        currentIndex = this.d.index;\n        this.animateBomb(ctx);\n      }\n    }\n    animateBomb(ctx) {\n      const start = { x: width / 2, y: margin.top };\n      const end = statesPositions[data[currentIndex].state].position;\n\n      // Pictogram\n      const drawPictogram = (n, size) => {\n        let squares = [];\n        for (var i = 0; i < n; i++) {\n          for (var j = 0; j < n; j++) {\n            squares.push([\n              j * size - 4 + (end.x + 8),\n              i * size - 4 + (end.y + 9),\n              size - 4,\n            ]);\n          }\n        }\n        return squares;\n      };\n\n      const cellSize = width / 12;\n      const pictoPositions = drawPictogram(3, cellSize / 3.3, ctx);\n      // Pictogram\n\n      if (this.dropBombTime < 1) {\n        this.x = lerp(\n          start.x,\n          pictoPositions[this.nExplosion + 2][0],\n          this.dropBombTime\n        );\n        this.y = lerp(\n          start.y,\n          pictoPositions[this.nExplosion + 2][1],\n          this.dropBombTime\n        );\n        this.size = lerp(\n          this.size,\n          pictoPositions[this.nExplosion + 2][2],\n          this.dropBombTime\n        );\n        this.dropBombTime += this.dropSpeed;\n      } else {\n        this.x = pictoPositions[this.nExplosion + 2][0];\n        this.y = pictoPositions[this.nExplosion + 2][1];\n        this.size = pictoPositions[this.nExplosion + 2][2];\n      }\n      this.draw(ctx);\n    }\n  }\n\n  class Box {\n    constructor(d, x, y, size, color) {\n      this.d = d;\n      this.x = x;\n      this.y = y;\n      this.size = size;\n      this.color = color;\n    }\n    draw(ctx) {\n      ctx.save();\n      ctx.beginPath(ctx);\n      ctx.rect(this.x, this.y, this.size, this.size);\n      ctx.globalAlpha =\n        new Date(currentDate) < new Date(this.d.date) ? 0.8 : 0.2;\n      ctx.fillStyle = this.color;\n      ctx.fill();\n      ctx.closePath();\n      ctx.restore();\n    }\n  }\n\n  // INIT\n  let bombs = [];\n\n  const init = () => {\n    // Bombs\n    data.forEach((d, i) => {\n      let size = 20;\n      let x = -100;\n      let y = margin.top - size / 2;\n      let color = d.explosion ? colors.package : colors.defused;\n      let nExplosion = d.nExplosion;\n      bombs.push(new Bomb(d, x, y, size, color, nExplosion));\n    });\n  };\n\n  init();\n\n  // DRAW\n  const animationLoop = () => {\n    var ctx = canvas.current.getContext(\"2d\");\n\n    // Scale\n    const ratio = window.devicePixelRatio || 1;\n\n    canvas.current.width = width * ratio;\n    canvas.current.height = height * ratio;\n\n    canvas.current.style.width = `${width}px`;\n    canvas.current.style.height = `${height}px`;\n\n    ctx.scale(ratio, ratio);\n\n    ctx.clearRect(0, 0, width, height); // clear canvas\n\n    // Current Date\n    currentDate = xScale.invert(width - width / 2 - dx);\n\n    // Carto\n    drawCartogram(ctx);\n\n    // Boxes\n    data.forEach((d, i) => {\n      let size = 20;\n      let x = xScale(new Date(d.date)) + dx;\n      let y = margin.top - size / 2;\n      let color = d.explosion ? colors.package : colors.defused;\n      new Box(d, x, y, size, color).draw(ctx);\n    });\n\n    // Bombs\n    bombs.forEach((bomb) => bomb.update(ctx));\n\n    // Axis\n    xAxis(ctx, xScale, dx);\n\n    // Text\n    drawLabels(ctx);\n\n    // Box movement\n    dx = currentIndex !== data[data.length - 1].index ? dx - 1.5 : dx - 0.2;\n\n    // Loop\n    requestRef.current = requestAnimationFrame(animationLoop);\n  };\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        width: \"100%\",\n        height: \"100vh\",\n        maxWidth: \"700px\",\n        margin: \"0 auto\",\n      }}\n    >\n      <div\n        className=\"line\"\n        style={{\n          position: \"fixed\",\n          top: `${margin.top}px`,\n          right: \"0px\",\n          width: \"100%\",\n          height: \"1px\",\n          background: \"transparent\",\n          borderTop: \"1px solid var(--foreground-color)\",\n          opacity: 0.5,\n        }}\n      ></div>\n      <canvas ref={canvas} width={width} height={height} />\n    </div>\n  );\n};\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","data/population/lines.js","data/population/palettes.js","data/population/centroids2.js","../node_modules/d3-dsv/src/dsv.js","../node_modules/d3-dsv/src/csv.js","../node_modules/detect-gpu/dist/detect-gpu.umd.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@react-three/drei/node_modules/troika-worker-utils/dist/troika-worker-utils.esm.js","../node_modules/@react-three/drei/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@react-three/drei/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@react-three/drei/node_modules/troika-three-utils/dist/troika-three-utils.esm.js","../node_modules/@react-three/drei/node_modules/troika-three-text/dist/troika-three-text.esm.js","../node_modules/three/examples/jsm/loaders/RGBELoader.js","../node_modules/three/examples/jsm/shaders/CopyShader.js","../node_modules/three/examples/jsm/postprocessing/Pass.js","../node_modules/three/examples/jsm/postprocessing/ShaderPass.js","../node_modules/three/examples/jsm/postprocessing/MaskPass.js","../node_modules/three/examples/jsm/postprocessing/EffectComposer.js","../node_modules/three/examples/jsm/postprocessing/RenderPass.js","../node_modules/three/examples/jsm/shaders/GammaCorrectionShader.js","../node_modules/three/examples/jsm/libs/inflate.module.min.js","../node_modules/three/examples/jsm/curves/NURBSUtils.js","../node_modules/three/examples/jsm/curves/NURBSCurve.js","../node_modules/three/examples/jsm/loaders/FBXLoader.js","../node_modules/@react-three/drei/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/three/examples/jsm/shaders/HorizontalBlurShader.js","../node_modules/three/examples/jsm/shaders/VerticalBlurShader.js","../node_modules/@react-three/drei/index.js","exp/Exp25.js"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","arrayLikeToArray","module","exports","o","minLen","n","prototype","toString","call","constructor","name","Array","from","test","arr","len","length","i","arr2","tertiary","chroma","brighten","hex","colors","bg","dark","light","highlight","lines","r","g","b","y","na","sa","eu","af","as","oc","intensity","map","x","darken","c4","code","nombre","pop","color","alpha2","alpha3","count","mean","c8","c12","c20","c24","c28","c32","c51","c533","c36","c40","c31","c44","c48","c50","c52","c112","c56","c84","c204","c64","c68","c70","c72","c76","c96","c100","c854","c108","c132","c116","c120","c124","c140","c148","c152","c156","c170","c174","c178","c180","c184","c188","c191","c192","c531","c196","c203","c384","c208","c262","c212","c214","c218","c818","c222","c226","c232","c233","c748","c231","c234","c242","c246","c250","c254","c258","c266","c270","c268","c276","c288","c300","c304","c308","c312","c316","c320","c324","c624","c328","c332","c336","c340","c344","c348","c352","c356","c360","c364","c368","c372","c376","c380","c388","c392","c400","c398","c404","c296","c408","c410","c414","c417","c418","c428","c422","c426","c430","c434","c438","c440","c442","c446","c450","c454","c458","c462","c466","c470","c584","c474","c478","c480","c175","c484","c583","c498","c492","c496","c499","c504","c508","c104","c516","c524","c528","c540","c554","c558","c562","c566","c570","c807","c578","c512","c586","c585","c275","c591","c598","c600","c604","c608","c616","c620","c630","c634","c642","c643","c646","c638","c659","c662","c670","c882","c674","c678","c682","c686","c688","c690","c694","c702","c703","c705","c90","c706","c710","c728","c724","c144","c729","c740","c752","c756","c760","c158","c762","c834","c764","c626","c768","c776","c780","c788","c792","c795","c798","c800","c804","c784","c826","c840","c858","c860","c548","c862","c704","c732","c887","c894","c716","EOL","EOF","objectConverter","columns","Function","JSON","stringify","join","inferColumns","rows","columnSet","create","forEach","row","column","push","pad","width","s","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","isNaN","getUTCFullYear","getUTCMonth","getUTCDate","csv","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","text","f","t","N","I","eof","eol","token","c","j","replace","preformatBody","formatValue","formatRow","Date","parse","convert","object","customConverter","format","concat","formatBody","formatRows","dsv","csvParse","e","toLowerCase","split","M","window","D","this","userAgent","navigator","isAndroidDevice","iOSDevice","match","platform","maxTouchPoints","MSStream","defineProperty","get","isTablet","enumerable","configurable","isMobile","version","a","browser","A","G","charAt","Math","min","d","find","includes","rank","distance","R","sort","getGPUTier","mobileBenchmarkPercentages","desktopBenchmarkPercentages","forceRendererString","forceMobile","glContext","failIfMajorPerformanceCaveat","V","l","tier","type","alpha","antialias","depth","powerPreference","stencil","document","createElement","getContext","WebGLRenderingContext","getExtension","getParameter","UNMASKED_RENDERER_WEBGL","round","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","TypeError","BespokeThenable","state","queue","scheduled","completeCalled","resolve","oneTime","val","complete","reject","reason","st","ignoreThrow","thenableObj","recursiveError","valThen","getThenableThen","v","scheduleQueueFlush","setTimeout","flushQueue","q","callIt","fn","isFn","then","called","args","arguments","apply","onResolve","onReject","nextThenable","cb","result","resultThen","NativePromiseThenable","promise","Promise","res","rej","bind","all","items","resultCount","results","out","DefaultThenable","item","itemThenable","workerBootstrap","modules","rehydrate","str","self","troikaDefine","url","URL","createObjectURL","Blob","importScripts","console","error","revokeObjectURL","addEventListener","ref","data","messageId","action","registerModule","callback","id","dependencies","init","getTransferables","dep","isWorkerModule","depResult","Error","noLog","postMessage","success","message","isCallable","ref$1","handleResult","tx","callModule","transferables","stack","supportsWorkers","supported","Worker","terminate","log","_workerModuleId","_messageId","_allowInitAsString","workers","openRequests","obj","_count","defineWorkerModule","options","workerId","moduleFunc","_getInitResult","initResult","initThenable","deps","defineMainThreadModule","registrationThenable","callWorker","workerModuleData","stringifyFunction","thenable","response","warn","worker","bootstrap","onmessage","msgId","getWorker","ThenableWorkerModule","Thenable","_extends","assign","target","source","key","hasOwnProperty","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","voidMainRegExp","expandShaderIncludes","include","chunk","ShaderChunk","prop","epoch","now","CONSTRUCTOR_CACHE","WeakMap","SHADER_UPGRADE_CACHE","Map","materialInstanceId","createDerivedMaterial","baseMaterial","optionsKey","optionsHash","optionsJsonReplacer","optionsHashesToIds","set","_idCtr","getKeyForOptions","ctorsByDerivation","privateBeforeCompileProp","onBeforeCompile","shaderInfo","cacheKey","vertexShader","fragmentShader","upgradedShaders","upgraded","vertexDefs","vertexMainIntro","vertexMainOutro","vertexTransform","fragmentDefs","fragmentMainIntro","fragmentMainOutro","fragmentColorTransform","customRewriter","timeUniform","postChunks","match1","index","fullStr","substr","injectIntoShaderCode","upgradeShaders","uniforms","DerivedMaterial","derive","chained","clone","base","derived","descriptor","uuid","MathUtils","generateUUID","defines","extensions","_listeners","isDerivedMaterial","customProgramCacheKey","copy","writable","isShaderMaterial","UniformsUtils","newBase","getDepthMaterial","depthMaterial","_depthMaterial","MeshDepthMaterial","depthPacking","RGBADepthPacking","IS_DEPTH_MATERIAL","getDistanceMaterial","distanceMaterial","_distanceMaterial","MeshDistanceMaterial","IS_DISTANCE_MATERIAL","dispose","shaderCode","defs","intro","outro","geometry","defaultBaseMaterial","MeshStandardMaterial","side","DoubleSide","Mesh","workerModule","Typr","buff","bin","_bin","Uint8Array","readASCII","offset","readUshort","numF","readUint","fnts","foff","_readFont","ooff","readFixed","numTables","tags","_data","_offset","tabs","tag","toffset","trim","tab","readF2dot14","readShort","readInt","p","uint8","int32","readInt8","int8","int16","readUshorts","uint32","readUint64","String","fromCharCode","readUnicode","_tdec","readUTF8","tdec","readBytes","readASCIIArray","ArrayBuffer","Int8Array","Int16Array","uint16","Uint16Array","Int32Array","Uint32Array","_lctf","font","subt","offset0","offScriptList","offFeatureList","offLookupList","scriptList","readScriptList","featureList","readFeatureList","lookupList","readLookupList","noff","lut","readLookupTable","ltype","flag","cnt","numOfOnes","num","readClassDef","startGlyph","glyphCount","getInterval","start","end","readCoverage","cvg","fmt","coverageIndex","ind","readFeatureTable","lookupCount","indices","readScriptTable","defLangSysOff","default","readLangSysTable","langSysCount","langSysOff","reqFeature","featureCount","features","CFF","buffer","ninds","readIndex","names","tdinds","topDicts","readDict","topdict","sinds","readSubrs","CharStrings","cstr","ROS","FDArray","fdind","dict","_readFDict","FDSelect","rns","Encoding","readEncoding","charset","readCharset","ss","Private","Subrs","gsubinds","bias","nSubrs","Bias","tableSE","glyphByUnicode","cff","glyphBySE","charcode","array","nCodes","first","nLeft","inds","offsize","getCharString","b0","b1","vs","op","size","readCharString","carr","nibs","nib0","nib1","chars","parseFloat","cmap","offs","tables","platformID","encodingID","noffset","tind","parse0","parse4","parse6","parse12","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCount","startCount","idDelta","idRangeOffset","glyphIdArray","firstCode","entryCount","nGroups","groups","off","startCharCode","endCharCode","startGlyphID","glyf","maxp","numGlyphs","_parseGlyf","_tabOffset","loca","gl","noc","xMin","yMin","xMax","yMax","endPts","instructionLength","instructions","crdnum","flags","rep","xs","i8","same","ys","parts","part","m","ty","p1","p2","glyphIndex","arg1","arg2","numInstr","instr","GPOS","covOff","coverage","valFmt1","ones1","pos","readValueRecord","valFmt2","ones2","pairsets","psc","psoff","pvc","gid2","value1","value2","val1","val2","classDef1","classDef2","class1Count","class2Count","matrix","valFmt","GSUB","delta","newg","vals","loff","readLigatureSet","cDefOffset","cDef","scset","subClassSetCount","scsOff","readSubClassSet","cvgs","backCvg","inptCvg","ahedCvg","lookupRec","readSubstLookupRecords","rUs","lset","readSubClassRule","rule","gcount","scount","input","substLookupRecords","readChainSubClassSet","readChainSubClassRule","pps","pi","subst","lcnt","readLigature","lig","chain","nglyph","ccnt","k","head","fontRevision","unitsPerEm","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfHMetrics","hmtx","aw","lsb","aWidth","lsBearing","kern","parseV1","nTables","glyph1","rval","readFormat0","pleft","nPairs","left","right","glyph2","ver","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","tname","languageID","nameID","slen","cname","soff","tid","_lang","postScriptName","version0","version1","version2","version5","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefault","usBreak","usMaxContext","usLowerOpticalPointSize","usUpperOpticalPointSize","post","italicAngle","underlinePosition","underlineThickness","SVG","entries","svgDocIndexOffset","numEntries","endGlyphID","svgDocOffset","svgDocLength","sbuf","svg","toPath","pth","cmds","crds","DOMParser","firstChild","tagName","nextSibling","vb","getAttribute","_toPath","children","nds","fill","ni","nd","tn","cfl","toks","_tokens","_toksToPath","ts","rn","cn","cc","ch","isNum","ox","oy","pc","cmd","cmu","toUpperCase","ps","reps","_reps","xi","yi","x1","y1","x2","y2","x3","y3","co","max","U","codeToGlyph","p0e4","p3e1","p1e0","p0e3","sind","grp","glyphToPath","gid","path","nStems","haveWidth","defaultWidthX","open","pdct","gi","_drawCFF","_drawGlyf","_simpleGlyph","_compoGlyph","i0","il","pr","nx","onCurve","prOnCurve","nxOnCurve","P","moveTo","lineTo","qcurveTo","closePath","prt","_getGlyphClass","cd","intr","getPairAdjustment","g1","g2","gpos","llist","flist","tused","fl","ti","ltab","adj","c1","c2","ind1","ind2","stringToGlyphs","gls","codePointAt","gsub","cligs","fi","ci","feat","_getWPfeature","_applySubs","wsep","slft","srgt","rlim","rl","good","em1","cind","cls","scs","sc","inp","cind2","lrs","_glsCovered","lr","tab2","glyphsToPath","clr","tpath","pathToSVG","prec","lmap","toFixed","pathToContext","ctx","bezierCurveTo","quadraticCurveTo","beginPath","fillStyle","curveTo","c1x","c1y","c2x","c2y","c3x","c3y","c4x","c4y","jpx","jpy","shift","nominalWidthX","isX","sval","abs","adx","ady","bchar","achar","aind","subr","count1","alternate","tinyInflate","Tree","table","trans","Data","dest","sourceIndex","bitcount","destLen","ltree","dtree","sltree","sdtree","length_bits","length_base","dist_bits","dist_base","clcidx","code_tree","lengths","tinf_build_bits_base","bits","sum","tinf_build_tree","tinf_getbit","bit","tinf_read_bits","tinf_decode_symbol","cur","tinf_decode_trees","lt","dt","hlit","hdist","hclen","clen","sym","prev","tinf_inflate_block_data","dist","tinf_inflate_uncompressed_block","tinf_build_fixed_trees","bfinal","subarray","bufferIn","dataViewIn","DataView","offsetIn","read2","getUint16","read4","getUint32","write2","dataViewOut","setUint16","offsetOut","write4","setUint32","WOFFHeader","signature","flavor","reserved","totalSfntSize","majorVersion","minorVersion","metaOffset","metaLength","metaOrigLength","privOffset","privLength","pow","TableDirectoryEntries","compLength","origLength","origChecksum","arrayOut","reduce","acc","entry","bufferOut","TableDirectoryEntry","outOffset","compressedData","uncompressedData","padding","convert_streams","woff2otf","cmdArgLengths","L","Q","C","Z","peek","typrFont","glyphMap","fontObj","forEachGlyph","fontSize","letterSpacing","glyphX","fontScale","glyphIndices","charIndex","glyphObj","Infinity","advanceWidth","pathCommandCount","forEachPathCommand","argsIndex","argsArray","numArgs","wrapFontObj","typrFactory","woff2otfFactory","parserFactory","CONFIG","defaultFontURL","sdfGlyphSize","sdfMargin","sdfExponent","textureWidth","fontProcessorWorkerModule","needsSort","segments","sortSegments","maxX","absSquareDistanceToLineSegment","lineX0","lineY0","lineX1","lineY1","ldx","ldy","lengthSq","dx","dy","addLineSegment","x0","y0","segment","minX","minY","maxY","findNearestSignedDistance","closestDistSq","closestDist","seg","distSq","sqrt","inside","isPointInPoly","createGlyphSegmentsIndex","config","pointOnQuadraticBezier","t2","pointOnCubicBezier","sdfSize","textureData","glyphW","glyphH","fontUnitsMaxSearchDist","fontUnitsMargin","textureMinFontX","textureMinFontY","textureMaxFontX","textureMaxFontY","fontUnitsTextureWidth","fontUnitsTextureHeight","fontUnitsTextureMaxDim","textureYToFontY","firstX","firstY","prevX","prevY","lineSegmentsIndex","prevPoint","nextPoint","sdfX","sdfY","signedDist","renderingBounds","fontParser","sdfGenerator","fontAtlases","fonts","loadFont","fontUrl","pending","tryLoad","onError","request","XMLHttpRequest","responseType","onload","status","statusText","onerror","send","doLoadFont","callbacks","getSdfAtlas","atlasKey","atlas","glyphs","process","lineHeight","maxWidth","textAlign","textIndent","whiteSpace","overflowWrap","anchorX","anchorY","includeCaretPositions","chunkedBoundsSize","colorRanges","metricsOnly","mainStart","timings","total","fontLoad","layout","sdf","sdfTotal","hasMaxWidth","isFinite","newGlyphs","glyphBounds","glyphAtlasIndices","glyphColors","caretPositions","visibleBounds","chunkedBounds","maxLineWidth","renderableGlyphCount","canWrap","layoutStart","fontSizeMult","halfLeading","topBaseline","caretHeight","caretBottomOffset","lineXOffset","currentLine","TextLine","nextLine","char","glyphWidth","curLineCount","isWhitespace","isEmpty","glyphAt","adjustX","splitAt","isSoftWrapped","fly","line","anchorXOffset","anchorYOffset","parsePercent","height","Float32Array","lineYOffset","currentColor","renderableGlyphIndex","prevCharIndex","colorCharIndex","lineGlyphCount","lineWidth","justifyAdjust","whitespaceCount","glyphInfo","idx","glyphAtlasInfo","sdfStart","glyphSDFData","atlasIndex","bounds","startIdx","xStart","yStart","visX0","visY0","visX1","visY1","rect","chunkRect","blockBounds","newGlyphSDFs","pct","NaN","performance","ceil","flyweight","newLine","splice","measure","createSDFGenerator","createFontProcessor","RGBELoader","manager","DataTextureLoader","UnsignedByteType","rgbe_error","rgbe_error_code","msg","fgets","lineLimit","consume","byteLength","RGBEByteToRGBFloat","sourceArray","sourceOffset","destArray","destOffset","scale","RGBEByteToRGBHalf","floatView","int32View","toHalf","byteArray","rgbe_header_info","gamma_re","exposure_re","format_re","dimensions_re","header","valid","string","comments","programtype","gamma","exposure","parseInt","RGBE_ReadHeader","w","h","image_rgba_data","data_rgba","byteValue","scanline_buffer","ptr","ptr_end","isEncodedRun","rgbeStart","scanline_width","num_scanlines","RGBE_ReadPixels_RLE","RGBEFormat","FloatType","numElements","floatArray","RGBFormat","HalfFloatType","halfArray","setDataType","load","onLoad","onProgress","texture","texData","encoding","RGBEEncoding","minFilter","NearestFilter","magFilter","generateMipmaps","flipY","LinearEncoding","LinearFilter","CopyShader","Pass","enabled","needsSwap","clear","renderToScreen","setSize","render","FullScreenQuad","camera","OrthographicCamera","PlaneBufferGeometry","material","_mesh","renderer","ShaderPass","shader","textureID","ShaderMaterial","fsQuad","writeBuffer","readBuffer","setRenderTarget","autoClearColor","autoClearDepth","autoClearStencil","MaskPass","scene","inverse","writeValue","clearValue","context","buffers","setMask","setLocked","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","EQUAL","KEEP","ClearMaskPass","EffectComposer","renderTarget","parameters","RGBAFormat","stencilBuffer","getSize","Vector2","_pixelRatio","getPixelRatio","_width","_height","WebGLRenderTarget","renderTarget1","renderTarget2","passes","copyPass","clock","Clock","swapBuffers","tmp","addPass","pass","insertPass","isLastEnabledPass","passIndex","deltaTime","getDelta","currentRenderTarget","getRenderTarget","maskActive","NOTEQUAL","reset","effectiveWidth","effectiveHeight","setPixelRatio","pixelRatio","RenderPass","overrideMaterial","clearColor","clearAlpha","clearDepth","oldClearColor","oldClearAlpha","oldOverrideMaterial","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","mod","aa","execScript","Number","POSITIVE_INFINITY","bufferSize","bufferType","resize","z","B","ba","ca","S","T","u","F","E","fa","H","J","K","da","ea","O","ga","W","verify","ha","method","Y","$","ia","X","ADAPTIVE","BLOCK","Zlib","NURBSUtils","findSpan","low","high","mid","floor","calcBasisFunctions","span","saved","rv","lv","temp","calcBSplinePoint","Vector4","point","Nj","wNj","calcBasisFunctionDerivatives","zeroArr","ders","ndu","s1","s2","rk","pk","j2","calcBSplineDerivatives","du","CK","nders","Pw","multiplyScalar","add","calcKoverI","nom","denom","calcRationalCurveDerivatives","Pders","Aders","wders","Vector3","sub","divideScalar","calcNURBSDerivatives","calcSurfacePoint","uspan","vspan","Nu","Nv","Sw","NURBSCurve","degree","knots","controlPoints","startKnot","endKnot","Curve","getPoint","optionalTarget","hpoint","getTangent","tangent","normalize","fbxTree","connections","sceneGraph","FBXLoader","Loader","FBXTreeParser","textureLoader","GeometryParser","AnimationParser","TextParser","BinaryParser","BinaryReader","littleEndian","dv","FBXTree","getFbxVersion","convertFBXTimeToSeconds","time","scope","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","setResponseType","itemError","FBXBuffer","CORRECT","convertArrayBufferToString","isFbxFormatBinary","FBXText","cursor","read","isFbxFormatASCII","TextureLoader","resourcePath","setCrossOrigin","crossOrigin","parseConnections","images","parseImages","textures","parseTextures","materials","parseMaterials","deformers","parseDeformers","geometryMap","parseScene","connectionMap","Connections","rawConnection","fromID","toID","relationship","has","parents","parentRelationship","ID","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","RelativeFilename","Filename","arrayBufferContent","Content","base64Content","image","parseImage","filename","content","fileName","extension","lastIndexOf","getHandler","textureMap","textureNodes","Texture","parseTexture","textureNode","loadTexture","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","valueV","wrapS","RepeatWrapping","ClampToEdgeWrapping","wrapT","values","Scaling","repeat","currentPath","FileName","materialMap","materialNodes","Material","parseMaterial","materialNode","ShadingModel","parseParameters","MeshPhongMaterial","MeshLambertMaterial","setValues","BumpFactor","bumpScale","Diffuse","Color","fromArray","DiffuseColor","DisplacementFactor","displacementScale","Emissive","emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","Opacity","opacity","transparent","ReflectionFactor","reflectivity","Shininess","shininess","Specular","specular","SpecularColor","child","bumpMap","getTexture","aoMap","sRGBEncoding","displacementMap","emissiveMap","normalMap","envMap","mapping","EquirectangularReflectionMapping","specularMap","alphaMap","LayeredTexture","skeletons","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","skeleton","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","weights","transformLink","Matrix4","TransformLink","Indexes","Weights","bones","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","filter","Group","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","connection","parent","bindSkeleton","createAmbientLight","setupMorphMaterials","traverse","node","userData","transformData","parentMatrixWorld","transform","generateTransform","applyMatrix4","animations","isGroup","buildSkeleton","createCamera","createLight","createMesh","createCurve","Bone","PropertyBinding","sanitizeNodeName","getTransformData","bone","subBone","matrixWorld","cameraAttribute","attr","NodeAttribute","Object3D","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","innerWidth","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","PerspectiveCamera","setFocalLength","lightAttribute","LightType","Intensity","CastLightOnObject","FarAttenuationEnd","EnableFarAttenuation","PointLight","DirectionalLight","angle","PI","InnerAngle","degToRad","penumbra","OuterAngle","SpotLight","CastShadows","castShadow","attributes","vertexColors","FBX_Deformer","skinning","SkinnedMesh","normalizeSkinWeights","geo","LineBasicMaterial","linewidth","Line","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","rotation","Lcl_Rotation","postRotation","PostRotation","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","position","lookAt","bindMatrices","parsePoseNodes","geoConnParent","Skeleton","BindPoseNode","Pose","poseNodes","PoseNode","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","AmbientLight","isMesh","morphAttributes","setupMorphMaterial","matUuid","sharedMat","mat","clonedMat","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","BufferGeometry","geoInfo","parseGeoNode","genBuffers","positionAttribute","Float32BufferAttribute","vertex","setAttribute","Uint16BufferAttribute","weightsIndices","vertexWeights","normal","normalMatrix","Matrix3","getNormalMatrix","normalAttribute","applyNormalMatrix","uvs","uvBuffer","mappingType","prevMaterialIndex","materialIndex","startIndex","currentIndex","addGroup","lastGroup","lastIndex","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","uv","parseUVs","weightTable","weight","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","getData","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","genFace","parentGeo","parentGeoNode","morphTargetsRelative","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UV","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","order","Order","KnotVector","pointsValues","Points","Form","vertices","getPoints","positions","toArray","BufferAttribute","animationClips","rawClips","parseClips","rawClip","clip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","curveNode","curves","rawCurves","animationCurve","times","KeyTime","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","modelID","rawModel","modelName","initialPosition","initialRotation","initialScale","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","tracks","rawTracks","generateTracks","AnimationClip","Quaternion","decompose","Euler","setFromQuaternion","positionTrack","generateVectorTrack","rotationTrack","generateRotationTrack","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","VectorKeyframeTrack","interpolateRotations","setFromEuler","quaternion","euler","quaternionValues","premultiply","multiply","QuaternionKeyframeTrack","morphNum","getObjectByName","morphTargetDictionary","NumberKeyframeTrack","elem","prevValue","xIndex","yIndex","zIndex","xValue","yValue","zValue","curve","valuesSpan","absoluteSpan","numSubIntervals","step","nextValue","initialTime","interval","nextTime","interpolatedTimes","interpolatedValues","inject","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","allNodes","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","property","nodeName","nodeAttrs","attrs","parseNodeAttr","currentNode","contentLine","propName","propValue","connProps","to","rest","append","parseNumberArray","parseNodeSpecialProperty","props","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","reader","skip","endOfContent","parseNode","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","reader2","Inflate","decompress","nullByte","decodeText","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lGlobalT","setPosition","makeRotationFromEuler","lLRM","lParentGRM","extractRotation","copyPosition","lParentGSM","getInverse","lGlobalRS","lParentLSM_inv","lParentGSM_noLocal","lRotationPivotM_inv","lScalingPivotM_inv","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","a1","a2","_defineProperty","El","forwardRef","_ref","React","attach","extend","current","useEffectfulState","useState","useLayoutEffect","MapControls","enableDamping","useThree","invalidate","controls","MapControls$1","domElement","useFrame","update","useEffect","removeEventListener","create$1","DefaultLoadingManager","onStart","loaded","active","progress","errors","useTexture","useLoader","preload","v1","v2","v3","calculatePosition","el","objectPos","setFromMatrixPosition","project","widthHalf","heightHalf","Html","_portal$current","eps","style","className","prepend","center","fullscreen","portal","scaleFactor","zIndexRange","group","useRef","old","parentNode","updateMatrixWorld","vec","cssText","appendChild","removeChild","ReactDOM","unmountComponentAtNode","styles","useMemo","top","display","cameraPos","deltaCamObj","camDir","getWorldDirection","angleTo","isObjectBehindCamera","PerspectiveCamera$1","vFOV","distanceTo","tan","OrthographicCamera$1","zoom","objectScale","far","near","objectZIndex","Ray","Sphere$1","MeshPhysicalMaterial","LineMaterial","LineGeometry","Line2","_object","THREE","_color","getColor","dataPop","glsl","bb","flat","Instanced","changeSelected","isEnglish","hovered","setHovered","mesh","previous","mousePos","tooltip","resolution","colorArray","flatMap","CountryCode","pixels","normalizeBetweenTwoRanges","mouse","clampedPixels","clamp","tooltipWidth","clamped3","vector","unproject","dir","getElapsedTime","needsUpdate","updateMatrix","setMatrixAt","instanceMatrix","onPointerMove","instanceId","onPointerOut","onClick","attachObject","pointerEvents","background","border","transition","region","regionb","justifyContent","alignItems","marginLeft","toLocaleString","Lines","LineShape","setData","isLoaded","setIsLoaded","selected","setSelected","useContext","ThemeContext","LanguageContext","language","devicePixelRatio","fetch","ok","orthographic","lineRef","useUpdate","geom","setPositions","USE_DASH","computeLineDistances","dashed","dashSize","gapSize","dashScale"],"mappings":"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","file":"static/js/13.281a1e00.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const zIndex = 0.1;\n\nexport default [\n  [-91, 90, zIndex, -91, -90, zIndex],\n  [\n    -180,\n    -19,\n    zIndex,\n    -129,\n    -19,\n    zIndex,\n    -121,\n    -10.5,\n    zIndex,\n    -91,\n    -10.5,\n    zIndex,\n  ],\n  [147, -90, zIndex, 147, -34, zIndex, 190, -34, zIndex],\n  [\n    -11,\n    90,\n    zIndex,\n    -11,\n    30.5,\n    zIndex,\n    -13,\n    28.5,\n    zIndex,\n    -20,\n    28.5,\n    zIndex,\n    -27,\n    20.5,\n    zIndex,\n    -27,\n    14,\n    zIndex,\n    -4,\n    -13,\n    zIndex,\n    -4,\n    -90,\n    zIndex,\n  ],\n  [-27, 14, zIndex, -91, 14, zIndex],\n];\n","import chroma from \"chroma-js\";\n\nexport const palette = [\n  \"#ec4977\",\n  \"#ff8464\",\n  \"#ffbe6b\",\n  \"#fcf594\",\n  \"#8cedad\",\n  \"#00d6de\",\n  \"#0cb4f5\",\n];\n\nexport const palette2 = [\n  \"#7F3C8D\",\n  \"#11A579\",\n  \"#3969AC\",\n  \"#F2B701\",\n  \"#E73F74\",\n  \"#80BA5A\",\n  \"#E68310\",\n  \"#008695\",\n  \"#CF1C90\",\n  \"#f97b72\",\n  \"#4b4b8f\",\n];\n\nexport const palette3 = [\n  \"#a6cee3\",\n  \"#1f78b4\",\n  \"#b2df8a\",\n  \"#33a02c\",\n  \"#fb9a99\",\n  \"#e31a1c\",\n  \"#fdbf6f\",\n  \"#ff7f00\",\n  \"#cab2d6\",\n];\n\nexport const palette4 = [\"#1b1f3a\", \"#53354a\", \"#a64942\", \"#ff7844\"];\nexport const palette4b = [\"#212121\", \"#323232\", \"#0d7377\", \"#14ffec\"];\n\nexport const palette4c = [\n  \"#5e1a77\",\n  \"#842e70\",\n  \"#a3456b\",\n  \"#be5e69\",\n  \"#d5796a\",\n  \"#e8966e\",\n  \"#f6b577\",\n  \"#fdd686\",\n  \"#faf99d\",\n];\n\nexport const palette4d = [\n  \"#2b1e31\",\n  \"#39354d\",\n  \"#464e63\",\n  \"#546875\",\n  \"#638485\",\n  \"#74a191\",\n  \"#87be98\",\n  \"#9fdc9a\",\n  \"#bef992\",\n];\n\nexport const palette4dlight = [\n  \"#75657b\",\n  \"#7d7590\",\n  \"#82879f\",\n  \"#849ba8\",\n  \"#88afaa\",\n  \"#8fc2a8\",\n  \"#9bd5a2\",\n  \"#aae79b\",\n  \"#bef992\",\n];\n\nexport const palette5 = [\n  \"#80E0BA\",\n  \"#F3CBBC\",\n  \"#F2D54E\",\n  \"#B398F0\",\n  \"#D98F00\",\n  \"#5598CE\",\n];\n\nexport const palette6 = [\n  \"#1b1f3a\",\n  \"#442d42\",\n  \"#6e3a45\",\n  \"#994643\",\n  \"#be5843\",\n  \"#da7141\",\n  \"#f08f3b\",\n  \"#fcb12e\",\n  \"#ffd700\",\n];\n\nexport const palette6Order = [\n  \"#f08f3b\",\n  \"#1b1f3a\",\n  \"#fcb12e\",\n  \"#442d42\",\n  \"#da7141\",\n\n  \"#6e3a45\",\n  \"#ffd700\",\n\n  \"#be5843\",\n];\n\nexport const paletteOriginal = [\n  \"#88BE5A\",\n  \"#51AA56\",\n  \"#E77F3D\",\n  \"#603812\",\n  \"#479078\",\n  \"#A64D5C\",\n  \"#C1272C\",\n  \"#E5584F\",\n  \"#AC42A6\",\n  \"#EFBF36\",\n  \"#477BBC\",\n  \"#E98482\",\n  \"#EBA23E\",\n  \"#9D7649\",\n  \"#B0A595\",\n  \"#544E4B\",\n];\n\nexport const tertiary = [\n  chroma(\"#90103F\").brighten(2).hex(),\n  chroma(\"#511849\").brighten(2).hex(),\n  chroma(\"#3D3D6B\").brighten(1).hex(),\n  \"#427B9B\",\n  \"#5FBAAD\",\n  \"#61C785\",\n  \"#ADD45B\",\n  \"#EDDD53\",\n  \"#EFC309\",\n  \"#E88C20\",\n  \"#E45536\",\n  \"#C71138\",\n];\n\nexport const colors = {\n  bg: {\n    dark: \"#1A1B1E\",\n    light: \"#FFFFFF\",\n  },\n  highlight: {\n    dark: \"white\",\n    light: \"#2C2E35\",\n  },\n  lines: {\n    dark: \"#544E4B\",\n    light: \"#B0A595\",\n  },\n  r: \"#E2170D\",\n  g: \"#50A18A\",\n  b: \"#65BCD6\",\n  y: \"#ECAC05\",\n  na: \"#E2170D\",\n  sa: \"#29574F\",\n  eu: \"blue\",\n  af: \"#780235\",\n  as: \"#E2170D\",\n  oc: \"green\",\n  intensity: {\n    r: 0.2,\n    g: 0.4,\n    b: 0.6,\n    y: 0.8,\n  },\n};\n\nexport const tertiaryDark = tertiary.map((x) => {\n  return chroma(x).darken(0.5).hex();\n});\n\n// console.log(tertiaryDark);\n\nexport const tertiaryLight = tertiary.map((x) => {\n  return chroma(x).brighten(2).hex();\n});\n\nexport const palette6Light = tertiary.map((x) => {\n  return chroma(x).darken(0.4).hex();\n});\n\n// console.log(tertiaryDark, tertiaryLight);\n","export default {\n  c4: {\n    code: 4,\n    nombre: \"Afganistán\",\n    name: \"Afghanistan\",\n    pop: 36373,\n    color: \"y\",\n    alpha2: \"AF\",\n    alpha3: \"AFG\",\n    count: 73,\n    mean: [192.7, 87.6],\n  },\n  c8: {\n    code: 8,\n    nombre: \"Albania\",\n    name: \"Albania\",\n    pop: 2934,\n    color: \"g\",\n    alpha2: \"AL\",\n    alpha3: \"ALB\",\n    count: 6,\n    mean: [145, 93.5],\n  },\n  c12: {\n    code: 12,\n    nombre: \"Argelia\",\n    name: \"Algeria\",\n    pop: 42008,\n    color: \"g\",\n    alpha2: \"DZ\",\n    alpha3: \"DZA\",\n    count: 84,\n    mean: [127.2, 74.9],\n  },\n  c20: {\n    code: 20,\n    nombre: \"Andorra\",\n    name: \"Andorra\",\n    pop: 77,\n    color: \"r\",\n    alpha2: \"AD\",\n    alpha3: \"AND\",\n    count: 1,\n    mean: [116, 96],\n  },\n  c24: {\n    code: 24,\n    nombre: \"Angola\",\n    name: \"Angola\",\n    pop: 30774,\n    color: \"g\",\n    alpha2: \"AO\",\n    alpha3: \"AGO\",\n    count: 62,\n    mean: [134.6, 25.3],\n  },\n  c28: {\n    code: 28,\n    nombre: \"Antigua y Barbuda\",\n    name: \"Antigua and Barbuda\",\n    pop: 103,\n    color: \"b\",\n    alpha2: \"AG\",\n    alpha3: \"ATG\",\n    count: 1,\n    mean: [69, 72],\n  },\n  c32: {\n    code: 32,\n    nombre: \"Argentina\",\n    name: \"Argentina\",\n    pop: 44689,\n    color: \"y\",\n    alpha2: \"AR\",\n    alpha3: \"ARG\",\n    count: 89,\n    mean: [62.9, 18.9],\n  },\n  c51: {\n    code: 51,\n    nombre: \"Armenia\",\n    name: \"Armenia\",\n    pop: 2934,\n    color: \"y\",\n    alpha2: \"AM\",\n    alpha3: \"ARM\",\n    count: 6,\n    mean: [166.5, 93],\n  },\n  c533: {\n    code: 533,\n    nombre: \"Aruba\",\n    name: \"Aruba\",\n    pop: 106,\n    color: \"y\",\n    alpha2: \"AW\",\n    alpha3: \"ABW\",\n    count: 1,\n    mean: [57, 58],\n  },\n  c36: {\n    code: 36,\n    nombre: \"Australia\",\n    name: \"Australia\",\n    pop: 24772,\n    color: \"b\",\n    alpha2: \"AU\",\n    alpha3: \"AUS\",\n    count: 50,\n    mean: [331.9, 3.9],\n  },\n  c40: {\n    code: 40,\n    nombre: \"Austria\",\n    name: \"Austria\",\n    pop: 8752,\n    color: \"r\",\n    alpha2: \"AT\",\n    alpha3: \"AUT\",\n    count: 17,\n    mean: [137.6, 102.9],\n  },\n  c31: {\n    code: 31,\n    nombre: \"Azerbaiyán\",\n    name: \"Azerbaijan\",\n    pop: 9924,\n    color: \"g\",\n    alpha2: \"AZ\",\n    alpha3: \"AZE\",\n    count: 20,\n    mean: [169.6, 92.7],\n  },\n  c44: {\n    code: 44,\n    nombre: \"Bahamas (las)\",\n    name: \"Bahamas\",\n    pop: 399,\n    color: \"y\",\n    alpha2: \"BS\",\n    alpha3: \"BHS\",\n    count: 1,\n    mean: [40, 78],\n  },\n  c48: {\n    code: 48,\n    nombre: \"Bahrein\",\n    name: \"Bahrain\",\n    pop: 1567,\n    color: \"r\",\n    alpha2: \"BH\",\n    alpha3: \"BHR\",\n    count: 3,\n    mean: [178.3, 76.3],\n  },\n  c50: {\n    code: 50,\n    nombre: \"Bangladesh\",\n    name: \"Bangladesh\",\n    pop: 166368,\n    color: \"g\",\n    alpha2: \"BD\",\n    alpha3: \"BGD\",\n    count: 333,\n    mean: [251.1, 61.8],\n  },\n  c52: {\n    code: 52,\n    nombre: \"Barbados\",\n    name: \"Barbados\",\n    pop: 286,\n    color: \"b\",\n    alpha2: \"BB\",\n    alpha3: \"BRB\",\n    count: 1,\n    mean: [71, 62],\n  },\n  c112: {\n    code: 112,\n    nombre: \"Belarús\",\n    name: \"Belarus\",\n    pop: 9452,\n    color: \"b\",\n    alpha2: \"BY\",\n    alpha3: \"BLR\",\n    count: 19,\n    mean: [149.4, 111.6],\n  },\n  c56: {\n    code: 56,\n    nombre: \"Bélgica\",\n    name: \"Belgium\",\n    pop: 11499,\n    color: \"r\",\n    alpha2: \"BE\",\n    alpha3: \"BEL\",\n    count: 23,\n    mean: [125.9, 109.3],\n  },\n  c84: {\n    code: 84,\n    nombre: \"Belice\",\n    name: \"Belize\",\n    pop: 382,\n    color: \"g\",\n    alpha2: \"BZ\",\n    alpha3: \"BLZ\",\n    count: 1,\n    mean: [36, 64],\n  },\n  c204: {\n    code: 204,\n    nombre: \"Benín\",\n    name: \"Benin\",\n    pop: 11486,\n    color: \"g\",\n    alpha2: \"BJ\",\n    alpha3: \"BEN\",\n    count: 23,\n    mean: [117, 54.8],\n  },\n  c64: {\n    code: 64,\n    nombre: \"Bhután\",\n    name: \"Bhutan\",\n    pop: 817,\n    color: \"g\",\n    alpha2: \"BT\",\n    alpha3: \"BTN\",\n    count: 2,\n    mean: [245.5, 78],\n  },\n  c68: {\n    code: 68,\n    nombre: \"Bolivia (Estado Plurinacional de)\",\n    name: \"Bolivia (Plurinational State of)\",\n    pop: 11216,\n    color: \"r\",\n    alpha2: \"BO\",\n    alpha3: \"BOL\",\n    count: 22,\n    mean: [62.9, 29.7],\n  },\n  c70: {\n    code: 70,\n    nombre: \"Bosnia y Herzegovina\",\n    name: \"Bosnia and Herzegovina\",\n    pop: 3504,\n    color: \"b\",\n    alpha2: \"BA\",\n    alpha3: \"BIH\",\n    count: 7,\n    mean: [143, 96],\n  },\n  c72: {\n    code: 72,\n    nombre: \"Botsuana\",\n    name: \"Botswana\",\n    pop: 2333,\n    color: \"r\",\n    alpha2: \"BW\",\n    alpha3: \"BWA\",\n    count: 5,\n    mean: [133.8, 18.4],\n  },\n  c76: {\n    code: 76,\n    nombre: \"Brasil\",\n    name: \"Brazil\",\n    pop: 210868,\n    color: \"g\",\n    alpha2: \"BR\",\n    alpha3: \"BRA\",\n    count: 422,\n    mean: [71.2, 38.6],\n  },\n  c96: {\n    code: 96,\n    nombre: \"Brunéi Darussalam\",\n    name: \"Brunei Darussalam\",\n    pop: 434,\n    color: \"b\",\n    alpha2: \"BN\",\n    alpha3: \"BRN\",\n    count: 1,\n    mean: [298, 31],\n  },\n  c100: {\n    code: 100,\n    nombre: \"Bulgaria\",\n    name: \"Bulgaria\",\n    pop: 7037,\n    color: \"b\",\n    alpha2: \"BG\",\n    alpha3: \"BGR\",\n    count: 14,\n    mean: [149.3, 95.1],\n  },\n  c854: {\n    code: 854,\n    nombre: \"Burkina Faso\",\n    name: \"Burkina Faso\",\n    pop: 19752,\n    color: \"g\",\n    alpha2: \"BF\",\n    alpha3: \"BFA\",\n    count: 40,\n    mean: [115.8, 66.1],\n  },\n  c108: {\n    code: 108,\n    nombre: \"Burundi\",\n    name: \"Burundi\",\n    pop: 11216,\n    color: \"y\",\n    alpha2: \"BI\",\n    alpha3: \"BDI\",\n    count: 22,\n    mean: [144.6, 44],\n  },\n  c132: {\n    code: 132,\n    nombre: \"Cabo Verde\",\n    name: \"Cabo Verde\",\n    pop: 553,\n    color: \"g\",\n    alpha2: \"CV\",\n    alpha3: \"CPV\",\n    count: 1,\n    mean: [97, 53],\n  },\n  c116: {\n    code: 116,\n    nombre: \"Camboya\",\n    name: \"Cambodia\",\n    pop: 16246,\n    color: \"y\",\n    alpha2: \"KH\",\n    alpha3: \"KHM\",\n    count: 32,\n    mean: [279.4, 41],\n  },\n  c120: {\n    code: 120,\n    nombre: \"Camerún\",\n    name: \"Cameroon\",\n    pop: 24678,\n    color: \"b\",\n    alpha2: \"CM\",\n    alpha3: \"CMR\",\n    count: 49,\n    mean: [132.8, 45.9],\n  },\n  c124: {\n    code: 124,\n    nombre: \"Canadá\",\n    name: \"Canada\",\n    pop: 36954,\n    color: \"y\",\n    alpha2: \"CA\",\n    alpha3: \"CAN\",\n    count: 75,\n    mean: [18.4, 97.1],\n  },\n  c140: {\n    code: 140,\n    nombre: \"República Centroafricana\",\n    name: \"Central African Republic\",\n    pop: 4737,\n    color: \"y\",\n    alpha2: \"CF\",\n    alpha3: \"CAF\",\n    count: 9,\n    mean: [137.8, 47.4],\n  },\n  c148: {\n    code: 148,\n    nombre: \"Chad\",\n    name: \"Chad\",\n    pop: 15353,\n    color: \"g\",\n    alpha2: \"TD\",\n    alpha3: \"TCD\",\n    count: 31,\n    mean: [135.5, 53.7],\n  },\n  c152: {\n    code: 152,\n    nombre: \"Chile\",\n    name: \"Chile\",\n    pop: 18197,\n    color: \"g\",\n    alpha2: \"CL\",\n    alpha3: \"CHL\",\n    count: 36,\n    mean: [60, 17.1],\n  },\n  c156: {\n    code: 156,\n    nombre: \"China\",\n    name: \"China\",\n    pop: 1415046,\n    color: \"r\",\n    alpha2: \"CN\",\n    alpha3: \"CHN\",\n    count: 2830,\n    mean: [273.7, 92.9],\n  },\n  c170: {\n    code: 170,\n    nombre: \"Colombia\",\n    name: \"Colombia\",\n    pop: 49465,\n    color: \"b\",\n    alpha2: \"CO\",\n    alpha3: \"COL\",\n    count: 99,\n    mean: [57, 47.7],\n  },\n  c174: {\n    code: 174,\n    nombre: \"Comoras (las)\",\n    name: \"Comoros\",\n    pop: 832,\n    color: \"y\",\n    alpha2: \"KM\",\n    alpha3: \"COM\",\n    count: 2,\n    mean: [154, 31.5],\n  },\n  c178: {\n    code: 178,\n    nombre: \"Congo (el)\",\n    name: \"Congo\",\n    pop: 5400,\n    color: \"g\",\n    alpha2: \"CG\",\n    alpha3: \"COG\",\n    count: 11,\n    mean: [132.5, 38.5],\n  },\n  c180: {\n    code: 180,\n    nombre: \"Congo (la República Democrática del)\",\n    name: \"Congo, Democratic Republic of the\",\n    pop: 84005,\n    color: \"r\",\n    alpha2: \"CD\",\n    alpha3: \"COD\",\n    count: 162,\n    mean: [138.2, 36.2],\n  },\n  c184: {\n    code: 184,\n    nombre: \"Cook, (las) Islas\",\n    name: \"Cook Islands\",\n    pop: 17,\n    color: \"y\",\n    alpha2: \"CK\",\n    alpha3: \"COK\",\n    count: 1,\n    mean: [354, 4],\n  },\n  c188: {\n    code: 188,\n    nombre: \"Costa Rica\",\n    name: \"Costa Rica\",\n    pop: 4953,\n    color: \"y\",\n    alpha2: \"CR\",\n    alpha3: \"CRI\",\n    count: 10,\n    mean: [45.5, 56],\n  },\n  c191: {\n    code: 191,\n    nombre: \"Croacia\",\n    name: \"Croatia\",\n    pop: 4165,\n    color: \"g\",\n    alpha2: \"HR\",\n    alpha3: \"HRV\",\n    count: 8,\n    mean: [141.3, 97],\n  },\n  c192: {\n    code: 192,\n    nombre: \"Cuba\",\n    name: \"Cuba\",\n    pop: 11489,\n    color: \"r\",\n    alpha2: \"CU\",\n    alpha3: \"CUB\",\n    count: 23,\n    mean: [41.5, 74.3],\n  },\n  c531: {\n    code: 531,\n    nombre: \"Curaçao\",\n    name: \"Curaçao\",\n    pop: 162,\n    color: \"r\",\n    alpha2: \"CW\",\n    alpha3: \"CUW\",\n    count: 1,\n    mean: [59, 58],\n  },\n  c196: {\n    code: 196,\n    nombre: \"Chipre\",\n    name: \"Cyprus\",\n    pop: 1189,\n    color: \"b\",\n    alpha2: \"CY\",\n    alpha3: \"CYP\",\n    count: 2,\n    mean: [156.5, 82],\n  },\n  c203: {\n    code: 203,\n    nombre: \"Chequia\",\n    name: \"Czechia\",\n    pop: 10625,\n    color: \"b\",\n    alpha2: \"CZ\",\n    alpha3: \"CZE\",\n    count: 21,\n    mean: [140.9, 106.5],\n  },\n  c384: {\n    code: 384,\n    nombre: \"Côte d'Ivoire\",\n    name: \"Côte d'Ivoire\",\n    pop: 24906,\n    color: \"b\",\n    alpha2: \"CI\",\n    alpha3: \"CIV\",\n    count: 50,\n    mean: [107.7, 54.7],\n  },\n  c208: {\n    code: 208,\n    nombre: \"Dinamarca\",\n    name: \"Denmark\",\n    pop: 5754,\n    color: \"r\",\n    alpha2: \"DK\",\n    alpha3: \"DNK\",\n    count: 12,\n    mean: [134.3, 122.6],\n  },\n  c262: {\n    code: 262,\n    nombre: \"Yibuti\",\n    name: \"Djibouti\",\n    pop: 971,\n    color: \"r\",\n    alpha2: \"DJ\",\n    alpha3: \"DJI\",\n    count: 2,\n    mean: [163, 62.5],\n  },\n  c212: {\n    code: 212,\n    nombre: \"Dominica\",\n    name: \"Dominica\",\n    pop: 74,\n    color: \"y\",\n    alpha2: \"DM\",\n    alpha3: \"DMA\",\n    count: 1,\n    mean: [70, 68],\n  },\n  c214: {\n    code: 214,\n    nombre: \"Dominicana, (la) República\",\n    name: \"Dominican Republic\",\n    pop: 10883,\n    color: \"g\",\n    alpha2: \"DO\",\n    alpha3: \"DOM\",\n    count: 22,\n    mean: [57, 75.1],\n  },\n  c218: {\n    code: 218,\n    nombre: \"Ecuador\",\n    name: \"Ecuador\",\n    pop: 16863,\n    color: \"r\",\n    alpha2: \"EC\",\n    alpha3: \"ECU\",\n    count: 34,\n    mean: [53.6, 41.1],\n  },\n  c818: {\n    code: 818,\n    nombre: \"Egipto\",\n    name: \"Egypt\",\n    pop: 99376,\n    color: \"g\",\n    alpha2: \"EG\",\n    alpha3: \"EGY\",\n    count: 202,\n    mean: [146.9, 72.8],\n  },\n  c222: {\n    code: 222,\n    nombre: \"El Salvador\",\n    name: \"El Salvador\",\n    pop: 6412,\n    color: \"g\",\n    alpha2: \"SV\",\n    alpha3: \"SLV\",\n    count: 13,\n    mean: [36.5, 57.6],\n  },\n  c226: {\n    code: 226,\n    nombre: \"Guinea Ecuatorial\",\n    name: \"Equatorial Guinea\",\n    pop: 1314,\n    color: \"r\",\n    alpha2: \"GQ\",\n    alpha3: \"GNQ\",\n    count: 3,\n    mean: [132, 41],\n  },\n  c232: {\n    code: 232,\n    nombre: \"Eritrea\",\n    name: \"Eritrea\",\n    pop: 5188,\n    color: \"b\",\n    alpha2: \"ER\",\n    alpha3: \"ERI\",\n    count: 10,\n    mean: [159.5, 65],\n  },\n  c233: {\n    code: 233,\n    nombre: \"Estonia\",\n    name: \"Estonia\",\n    pop: 1307,\n    color: \"b\",\n    alpha2: \"EE\",\n    alpha3: \"EST\",\n    count: 3,\n    mean: [148.7, 118.3],\n  },\n  c748: {\n    code: 748,\n    nombre: \"Suazilandia\",\n    name: \"Eswatini\",\n    pop: 1391,\n    color: \"y\",\n    alpha2: \"SZ\",\n    alpha3: \"SWZ\",\n    count: 3,\n    mean: [144.3, 15.3],\n  },\n  c231: {\n    code: 231,\n    nombre: \"Etiopía\",\n    name: \"Ethiopia\",\n    pop: 107535,\n    color: \"y\",\n    alpha2: \"ET\",\n    alpha3: \"ETH\",\n    count: 215,\n    mean: [153.9, 59.8],\n  },\n  c234: {\n    code: 234,\n    nombre: \"Feroe, (las) Islas\",\n    name: \"Faroe Islands\",\n    pop: 49,\n    color: \"y\",\n    alpha2: \"FO\",\n    alpha3: \"FRO\",\n    count: 1,\n    mean: [109, 132],\n  },\n  c242: {\n    code: 242,\n    nombre: \"Fiji\",\n    name: \"Fiji\",\n    pop: 912,\n    color: \"y\",\n    alpha2: \"FJ\",\n    alpha3: \"FJI\",\n    count: 2,\n    mean: [340, 8.5],\n  },\n  c246: {\n    code: 246,\n    nombre: \"Finlandia\",\n    name: \"Finland\",\n    pop: 5543,\n    color: \"y\",\n    alpha2: \"FI\",\n    alpha3: \"FIN\",\n    count: 11,\n    mean: [144.6, 124.5],\n  },\n  c250: {\n    code: 250,\n    nombre: \"Francia\",\n    name: \"France\",\n    pop: 65233,\n    color: \"b\",\n    alpha2: \"FR\",\n    alpha3: \"FRA\",\n    count: 130,\n    mean: [121.7, 102.3],\n  },\n  c254: {\n    code: 254,\n    nombre: \"Guayana Francesa\",\n    name: \"French Guiana\",\n    pop: 290,\n    color: \"b\",\n    alpha2: \"GF\",\n    alpha3: \"GUF\",\n    count: 1,\n    mean: [72, 51],\n  },\n  c258: {\n    code: 258,\n    nombre: \"Polinesia Francesa\",\n    name: \"French Polynesia\",\n    pop: 286,\n    color: \"r\",\n    alpha2: \"PF\",\n    alpha3: \"PYF\",\n    count: 1,\n    mean: [349, 9],\n  },\n  c266: {\n    code: 266,\n    nombre: \"Gabón\",\n    name: \"Gabon\",\n    pop: 2068,\n    color: \"b\",\n    alpha2: \"GA\",\n    alpha3: \"GAB\",\n    count: 4,\n    mean: [131.5, 39.5],\n  },\n  c270: {\n    code: 270,\n    nombre: \"Gambia (la)\",\n    name: \"Gambia\",\n    pop: 2164,\n    color: \"b\",\n    alpha2: \"GM\",\n    alpha3: \"GMB\",\n    count: 4,\n    mean: [105.5, 62],\n  },\n  c268: {\n    code: 268,\n    nombre: \"Georgia\",\n    name: \"Georgia\",\n    pop: 3907,\n    color: \"b\",\n    alpha2: \"GE\",\n    alpha3: \"GEO\",\n    count: 8,\n    mean: [165, 94.3],\n  },\n  c276: {\n    code: 276,\n    nombre: \"Alemania\",\n    name: \"Germany\",\n    pop: 82293,\n    color: \"y\",\n    alpha2: \"DE\",\n    alpha3: \"DEU\",\n    count: 165,\n    mean: [133.7, 111.5],\n  },\n  c288: {\n    code: 288,\n    nombre: \"Ghana\",\n    name: \"Ghana\",\n    pop: 29464,\n    color: \"g\",\n    alpha2: \"GH\",\n    alpha3: \"GHA\",\n    count: 59,\n    mean: [111.9, 53.8],\n  },\n  c300: {\n    code: 300,\n    nombre: \"Grecia\",\n    name: \"Greece\",\n    pop: 11142,\n    color: \"y\",\n    alpha2: \"GR\",\n    alpha3: \"GRC\",\n    count: 22,\n    mean: [147.1, 89.7],\n  },\n  c304: {\n    code: 304,\n    nombre: \"Groenlandia\",\n    name: \"Greenland\",\n    pop: 57,\n    color: \"g\",\n    alpha2: \"GL\",\n    alpha3: \"GRL\",\n    count: 1,\n    mean: [97, 133],\n  },\n  c308: {\n    code: 308,\n    nombre: \"Granada\",\n    name: \"Grenada\",\n    pop: 108,\n    color: \"y\",\n    alpha2: \"GD\",\n    alpha3: \"GRD\",\n    count: 1,\n    mean: [70, 60],\n  },\n  c312: {\n    code: 312,\n    nombre: \"Guadeloupe\",\n    name: \"Guadeloupe\",\n    pop: 449,\n    color: \"g\",\n    alpha2: \"GP\",\n    alpha3: \"GLP\",\n    count: 1,\n    mean: [70, 70],\n  },\n  c316: {\n    code: 316,\n    nombre: \"Guam\",\n    name: \"Guam\",\n    pop: 166,\n    color: \"b\",\n    alpha2: \"GU\",\n    alpha3: \"GUM\",\n    count: 1,\n    mean: [328, 29],\n  },\n  c320: {\n    code: 320,\n    nombre: \"Guatemala\",\n    name: \"Guatemala\",\n    pop: 17245,\n    color: \"y\",\n    alpha2: \"GT\",\n    alpha3: \"GTM\",\n    count: 34,\n    mean: [33.4, 59.4],\n  },\n  c324: {\n    code: 324,\n    nombre: \"Guinea\",\n    name: \"Guinea\",\n    pop: 13053,\n    color: \"g\",\n    alpha2: \"GN\",\n    alpha3: \"GIN\",\n    count: 26,\n    mean: [104, 55.4],\n  },\n  c624: {\n    code: 624,\n    nombre: \"Guinea Bissau\",\n    name: \"Guinea-Bissau\",\n    pop: 1907,\n    color: \"r\",\n    alpha2: \"GW\",\n    alpha3: \"GNB\",\n    count: 4,\n    mean: [104.5, 59.5],\n  },\n  c328: {\n    code: 328,\n    nombre: \"Guyana\",\n    name: \"Guyana\",\n    pop: 782,\n    color: \"r\",\n    alpha2: \"GY\",\n    alpha3: \"GUY\",\n    count: 2,\n    mean: [69, 52.5],\n  },\n  c332: {\n    code: 332,\n    nombre: \"Haití\",\n    name: \"Haiti\",\n    pop: 11113,\n    color: \"b\",\n    alpha2: \"HT\",\n    alpha3: \"HTI\",\n    count: 22,\n    mean: [52, 72.5],\n  },\n  c336: {\n    code: 336,\n    nombre: \"Ciudad del Vaticano\",\n    name: \"Holy See\",\n    pop: 1,\n    color: \"r\",\n    alpha2: \"VA\",\n    alpha3: \"VAT\",\n    count: 1,\n    mean: [136, 90],\n  },\n  c340: {\n    code: 340,\n    nombre: \"Honduras\",\n    name: \"Honduras\",\n    pop: 9417,\n    color: \"b\",\n    alpha2: \"HN\",\n    alpha3: \"HND\",\n    count: 19,\n    mean: [40, 60.7],\n  },\n  c344: {\n    code: 344,\n    nombre: \"Hong Kong\",\n    name: \"Hong Kong\",\n    pop: 7429,\n    color: \"y\",\n    alpha2: \"HK\",\n    alpha3: \"HKG\",\n    count: 15,\n    mean: [296.1, 70.7],\n  },\n  c348: {\n    code: 348,\n    nombre: \"Hungría\",\n    name: \"Hungary\",\n    pop: 9689,\n    color: \"b\",\n    alpha2: \"HU\",\n    alpha3: \"HUN\",\n    count: 20,\n    mean: [143.9, 101.7],\n  },\n  c352: {\n    code: 352,\n    nombre: \"Islandia\",\n    name: \"Iceland\",\n    pop: 338,\n    color: \"b\",\n    alpha2: \"IS\",\n    alpha3: \"ISL\",\n    count: 1,\n    mean: [100, 130],\n  },\n  c356: {\n    code: 356,\n    nombre: \"India\",\n    name: \"India\",\n    pop: 1354052,\n    color: \"b\",\n    alpha2: \"IN\",\n    alpha3: \"IND\",\n    count: 2708,\n    mean: [223.5, 57.3],\n  },\n  c360: {\n    code: 360,\n    nombre: \"Indonesia\",\n    name: \"Indonesia\",\n    pop: 266795,\n    color: \"g\",\n    alpha2: \"ID\",\n    alpha3: \"IDN\",\n    count: 534,\n    mean: [296.7, 16.8],\n  },\n  c364: {\n    code: 364,\n    nombre: \"Irán (República Islámica de)\",\n    name: \"Iran (Islamic Republic of)\",\n    pop: 82012,\n    color: \"b\",\n    alpha2: \"IR\",\n    alpha3: \"IRN\",\n    count: 164,\n    mean: [180.7, 85.4],\n  },\n  c368: {\n    code: 368,\n    nombre: \"Iraq\",\n    name: \"Iraq\",\n    pop: 39340,\n    color: \"y\",\n    alpha2: \"IQ\",\n    alpha3: \"IRQ\",\n    count: 80,\n    mean: [170.9, 77.8],\n  },\n  c372: {\n    code: 372,\n    nombre: \"Irlanda\",\n    name: \"Ireland\",\n    pop: 4804,\n    color: \"g\",\n    alpha2: \"IE\",\n    alpha3: \"IRL\",\n    count: 9,\n    mean: [105.4, 118.2],\n  },\n  c376: {\n    code: 376,\n    nombre: \"Israel\",\n    name: \"Israel\",\n    pop: 8453,\n    color: \"y\",\n    alpha2: \"IL\",\n    alpha3: \"ISR\",\n    count: 17,\n    mean: [160.4, 73.9],\n  },\n  c380: {\n    code: 380,\n    nombre: \"Italia\",\n    name: \"Italy\",\n    pop: 59291,\n    color: \"g\",\n    alpha2: \"IT\",\n    alpha3: \"ITA\",\n    count: 120,\n    mean: [134.5, 94],\n  },\n  c388: {\n    code: 388,\n    nombre: \"Jamaica\",\n    name: \"Jamaica\",\n    pop: 2899,\n    color: \"y\",\n    alpha2: \"JM\",\n    alpha3: \"JAM\",\n    count: 6,\n    mean: [40.5, 67.5],\n  },\n  c392: {\n    code: 392,\n    nombre: \"Japón\",\n    name: \"Japan\",\n    pop: 127185,\n    color: \"r\",\n    alpha2: \"JP\",\n    alpha3: \"JPN\",\n    count: 254,\n    mean: [331.9, 90.6],\n  },\n  c400: {\n    code: 400,\n    nombre: \"Jordania\",\n    name: \"Jordan\",\n    pop: 9904,\n    color: \"b\",\n    alpha2: \"JO\",\n    alpha3: \"JOR\",\n    count: 20,\n    mean: [164.4, 76],\n  },\n  c398: {\n    code: 398,\n    nombre: \"Kazajistán\",\n    name: \"Kazakhstan\",\n    pop: 18404,\n    color: \"y\",\n    alpha2: \"KZ\",\n    alpha3: \"KAZ\",\n    count: 37,\n    mean: [189.6, 99.7],\n  },\n  c404: {\n    code: 404,\n    nombre: \"Kenia\",\n    name: \"Kenya\",\n    pop: 50951,\n    color: \"b\",\n    alpha2: \"KE\",\n    alpha3: \"KEN\",\n    count: 102,\n    mean: [152.6, 48.2],\n  },\n  c296: {\n    code: 296,\n    nombre: \"Kiribati\",\n    name: \"Kiribati\",\n    pop: 118,\n    color: \"y\",\n    alpha2: \"KI\",\n    alpha3: \"KIR\",\n    count: 1,\n    mean: [346, 17],\n  },\n  c408: {\n    code: 408,\n    nombre: \"Corea (la República Popular Democrática de)\",\n    name: \"Korea (Democratic People's Republic of)\",\n    pop: 25611,\n    color: \"y\",\n    alpha2: \"KP\",\n    alpha3: \"PRK\",\n    count: 51,\n    mean: [313.7, 105.7],\n  },\n  c410: {\n    code: 410,\n    nombre: \"Corea (la República de)\",\n    name: \"Korea, Republic of\",\n    pop: 51164,\n    color: \"b\",\n    alpha2: \"KR\",\n    alpha3: \"KOR\",\n    count: 102,\n    mean: [318.1, 97.1],\n  },\n  c414: {\n    code: 414,\n    nombre: \"Kuwait\",\n    name: \"Kuwait\",\n    pop: 4197,\n    color: \"g\",\n    alpha2: \"KW\",\n    alpha3: \"KWT\",\n    count: 8,\n    mean: [175.3, 73],\n  },\n  c417: {\n    code: 417,\n    nombre: \"Kirguistán\",\n    name: \"Kyrgyzstan\",\n    pop: 6133,\n    color: \"b\",\n    alpha2: \"KG\",\n    alpha3: \"KGZ\",\n    count: 12,\n    mean: [192.5, 96.7],\n  },\n  c418: {\n    code: 418,\n    nombre: \"Lao, (la) República Democrática Popular\",\n    name: \"Lao People's Democratic Republic\",\n    pop: 6961,\n    color: \"g\",\n    alpha2: \"LA\",\n    alpha3: \"LAO\",\n    count: 14,\n    mean: [277.9, 50.4],\n  },\n  c428: {\n    code: 428,\n    nombre: \"Letonia\",\n    name: \"Latvia\",\n    pop: 1930,\n    color: \"y\",\n    alpha2: \"LV\",\n    alpha3: \"LVA\",\n    count: 4,\n    mean: [148.5, 116.5],\n  },\n  c422: {\n    code: 422,\n    nombre: \"Líbano\",\n    name: \"Lebanon\",\n    pop: 6094,\n    color: \"r\",\n    alpha2: \"LB\",\n    alpha3: \"LBN\",\n    count: 12,\n    mean: [159.8, 78.7],\n  },\n  c426: {\n    code: 426,\n    nombre: \"Lesotho\",\n    name: \"Lesotho\",\n    pop: 2263,\n    color: \"r\",\n    alpha2: \"LS\",\n    alpha3: \"LSO\",\n    count: 5,\n    mean: [141.2, 11.4],\n  },\n  c430: {\n    code: 430,\n    nombre: \"Liberia\",\n    name: \"Liberia\",\n    pop: 4854,\n    color: \"r\",\n    alpha2: \"LR\",\n    alpha3: \"LBR\",\n    count: 10,\n    mean: [103.2, 49.9],\n  },\n  c434: {\n    code: 434,\n    nombre: \"Libia\",\n    name: \"Libya\",\n    pop: 6471,\n    color: \"y\",\n    alpha2: \"LY\",\n    alpha3: \"LBY\",\n    count: 13,\n    mean: [136.6, 76.8],\n  },\n  c438: {\n    code: 438,\n    nombre: \"Liechtenstein\",\n    name: \"Liechtenstein\",\n    pop: 38,\n    color: \"y\",\n    alpha2: \"LI\",\n    alpha3: \"LIE\",\n    count: 1,\n    mean: [133, 102],\n  },\n  c440: {\n    code: 440,\n    nombre: \"Lituania\",\n    name: \"Lithuania\",\n    pop: 2876,\n    color: \"g\",\n    alpha2: \"LT\",\n    alpha3: \"LTU\",\n    count: 6,\n    mean: [148, 114.5],\n  },\n  c442: {\n    code: 442,\n    nombre: \"Luxemburgo\",\n    name: \"Luxembourg\",\n    pop: 590,\n    color: \"g\",\n    alpha2: \"LU\",\n    alpha3: \"LUX\",\n    count: 1,\n    mean: [128, 107],\n  },\n  c446: {\n    code: 446,\n    nombre: \"Macao\",\n    name: \"Macao\",\n    pop: 632,\n    color: \"b\",\n    alpha2: \"MO\",\n    alpha3: \"MAC\",\n    count: 1,\n    mean: [291, 69],\n  },\n  c450: {\n    code: 450,\n    nombre: \"Madagascar\",\n    name: \"Madagascar\",\n    pop: 26263,\n    color: \"b\",\n    alpha2: \"MG\",\n    alpha3: \"MDG\",\n    count: 53,\n    mean: [155.4, 22.2],\n  },\n  c454: {\n    code: 454,\n    nombre: \"Malawi\",\n    name: \"Malawi\",\n    pop: 19165,\n    color: \"y\",\n    alpha2: \"MW\",\n    alpha3: \"MWI\",\n    count: 38,\n    mean: [145.6, 27.9],\n  },\n  c458: {\n    code: 458,\n    nombre: \"Malasia\",\n    name: \"Malaysia\",\n    pop: 32042,\n    color: \"y\",\n    alpha2: \"MY\",\n    alpha3: \"MYS\",\n    count: 64,\n    mean: [292.3, 27.4],\n  },\n  c462: {\n    code: 462,\n    nombre: \"Maldivas\",\n    name: \"Maldives\",\n    pop: 444,\n    color: \"r\",\n    alpha2: \"MV\",\n    alpha3: \"MDV\",\n    count: 1,\n    mean: [199, 10],\n  },\n  c466: {\n    code: 466,\n    nombre: \"Malí\",\n    name: \"Mali\",\n    pop: 19108,\n    color: \"b\",\n    alpha2: \"ML\",\n    alpha3: \"MLI\",\n    count: 45,\n    mean: [121, 69.8],\n  },\n  c470: {\n    code: 470,\n    nombre: \"Malta\",\n    name: \"Malta\",\n    pop: 432,\n    color: \"b\",\n    alpha2: \"MT\",\n    alpha3: \"MLT\",\n    count: 1,\n    mean: [146, 83],\n  },\n  c584: {\n    code: 584,\n    nombre: \"Marshall, (las) Islas\",\n    name: \"Marshall Islands\",\n    pop: 53,\n    color: \"b\",\n    alpha2: \"MH\",\n    alpha3: \"MHL\",\n    count: 1,\n    mean: [335, 23],\n  },\n  c474: {\n    code: 474,\n    nombre: \"Martinique\",\n    name: \"Martinique\",\n    pop: 385,\n    color: \"r\",\n    alpha2: \"MQ\",\n    alpha3: \"MTQ\",\n    count: 1,\n    mean: [70, 66],\n  },\n  c478: {\n    code: 478,\n    nombre: \"Mauritania\",\n    name: \"Mauritania\",\n    pop: 4540,\n    color: \"b\",\n    alpha2: \"MR\",\n    alpha3: \"MRT\",\n    count: 9,\n    mean: [107.2, 65.9],\n  },\n  c480: {\n    code: 480,\n    nombre: \"Mauricio\",\n    name: \"Mauritius\",\n    pop: 1268,\n    color: \"y\",\n    alpha2: \"MU\",\n    alpha3: \"MUS\",\n    count: 3,\n    mean: [165.3, 24.7],\n  },\n  c175: {\n    code: 175,\n    nombre: \"Mayotte\",\n    name: \"Mayotte\",\n    pop: 260,\n    color: \"g\",\n    alpha2: \"YT\",\n    alpha3: \"FRA\",\n    count: 1,\n    mean: [156, 31],\n  },\n  c484: {\n    code: 484,\n    nombre: \"México\",\n    name: \"Mexico\",\n    pop: 130759,\n    color: \"r\",\n    alpha2: \"MX\",\n    alpha3: \"MEX\",\n    count: 262,\n    mean: [19.1, 66.7],\n  },\n  c583: {\n    code: 583,\n    nombre: \"Micronesia (Estados Federados de)\",\n    name: \"Micronesia (Federated States of)\",\n    pop: 106,\n    color: \"y\",\n    alpha2: \"FM\",\n    alpha3: \"FSM\",\n    count: 1,\n    mean: [333, 23],\n  },\n  c498: {\n    code: 498,\n    nombre: \"Moldova (la República de)\",\n    name: \"Moldova, Republic of\",\n    pop: 4041,\n    color: \"g\",\n    alpha2: \"MD\",\n    alpha3: \"MDA\",\n    count: 8,\n    mean: [152.6, 103],\n  },\n  c492: {\n    code: 492,\n    nombre: \"Mónaco\",\n    name: \"Monaco\",\n    pop: 39,\n    color: \"r\",\n    alpha2: \"MC\",\n    alpha3: \"MCO\",\n    count: 1,\n    mean: [126, 96],\n  },\n  c496: {\n    code: 496,\n    nombre: \"Mongolia\",\n    name: \"Mongolia\",\n    pop: 3122,\n    color: \"b\",\n    alpha2: \"MN\",\n    alpha3: \"MNG\",\n    count: 6,\n    mean: [268, 103.5],\n  },\n  c499: {\n    code: 499,\n    nombre: \"Montenegro\",\n    name: \"Montenegro\",\n    pop: 629,\n    color: \"r\",\n    alpha2: \"ME\",\n    alpha3: \"MNE\",\n    count: 1,\n    mean: [143, 94],\n  },\n  c504: {\n    code: 504,\n    nombre: \"Marruecos\",\n    name: \"Morocco\",\n    pop: 36192,\n    color: \"r\",\n    alpha2: \"MA\",\n    alpha3: \"MAR\",\n    count: 72,\n    mean: [116.8, 73.5],\n  },\n  c508: {\n    code: 508,\n    nombre: \"Mozambique\",\n    name: \"Mozambique\",\n    pop: 30529,\n    color: \"r\",\n    alpha2: \"MZ\",\n    alpha3: \"MOZ\",\n    count: 61,\n    mean: [147.6, 23.5],\n  },\n  c104: {\n    code: 104,\n    nombre: \"Myanmar\",\n    name: \"Myanmar\",\n    pop: 53856,\n    color: \"y\",\n    alpha2: \"MM\",\n    alpha3: \"MMR\",\n    count: 108,\n    mean: [265.5, 52.5],\n  },\n  c516: {\n    code: 516,\n    nombre: \"Namibia\",\n    name: \"Namibia\",\n    pop: 2588,\n    color: \"b\",\n    alpha2: \"NA\",\n    alpha3: \"NAM\",\n    count: 5,\n    mean: [131.8, 18.8],\n  },\n  c524: {\n    code: 524,\n    nombre: \"Nepal\",\n    name: \"Nepal\",\n    pop: 29624,\n    color: \"y\",\n    alpha2: \"NP\",\n    alpha3: \"NPL\",\n    count: 59,\n    mean: [233.7, 83.5],\n  },\n  c528: {\n    code: 528,\n    nombre: \"Países Bajos (los)\",\n    name: \"Netherlands\",\n    pop: 17084,\n    color: \"b\",\n    alpha2: \"NL\",\n    alpha3: \"NLD\",\n    count: 34,\n    mean: [126.4, 114.7],\n  },\n  c540: {\n    code: 540,\n    nombre: \"Nueva Caledonia\",\n    name: \"New Caledonia\",\n    pop: 280,\n    color: \"g\",\n    alpha2: \"NC\",\n    alpha3: \"NCL\",\n    count: 1,\n    mean: [335, 8],\n  },\n  c554: {\n    code: 554,\n    nombre: \"Nueva Zelandia\",\n    name: \"New Zealand\",\n    pop: 4750,\n    color: \"r\",\n    alpha2: \"NZ\",\n    alpha3: \"NZL\",\n    count: 9,\n    mean: [339.1, 2.2],\n  },\n  c558: {\n    code: 558,\n    nombre: \"Nicaragua\",\n    name: \"Nicaragua\",\n    pop: 6285,\n    color: \"r\",\n    alpha2: \"NI\",\n    alpha3: \"NIC\",\n    count: 13,\n    mean: [42.9, 58.6],\n  },\n  c562: {\n    code: 562,\n    nombre: \"Níger (el)\",\n    name: \"Niger\",\n    pop: 22311,\n    color: \"b\",\n    alpha2: \"NE\",\n    alpha3: \"NER\",\n    count: 45,\n    mean: [133.4, 70.6],\n  },\n  c566: {\n    code: 566,\n    nombre: \"Nigeria\",\n    name: \"Nigeria\",\n    pop: 195875,\n    color: \"y\",\n    alpha2: \"NG\",\n    alpha3: \"NGA\",\n    count: 391,\n    mean: [125.2, 56.2],\n  },\n  c570: {\n    code: 570,\n    nombre: \"Niue\",\n    name: \"Niue\",\n    pop: 2,\n    color: \"g\",\n    alpha2: \"NU\",\n    alpha3: \"NIU\",\n    count: 1,\n    mean: [348, 6],\n  },\n  c807: {\n    code: 807,\n    nombre: \"Macedonia del Norte\",\n    name: \"North Macedonia\",\n    pop: 2085,\n    color: \"r\",\n    alpha2: \"MK\",\n    alpha3: \"MKD\",\n    count: 4,\n    mean: [147.5, 93.5],\n  },\n  c578: {\n    code: 578,\n    nombre: \"Noruega\",\n    name: \"Norway\",\n    pop: 5353,\n    color: \"b\",\n    alpha2: \"NO\",\n    alpha3: \"NOR\",\n    count: 11,\n    mean: [141, 127.2],\n  },\n  c512: {\n    code: 512,\n    nombre: \"Omán\",\n    name: \"Oman\",\n    pop: 4830,\n    color: \"g\",\n    alpha2: \"OM\",\n    alpha3: \"OMN\",\n    count: 10,\n    mean: [181.5, 67.2],\n  },\n  c586: {\n    code: 586,\n    nombre: \"Pakistán\",\n    name: \"Pakistan\",\n    pop: 200814,\n    color: \"g\",\n    alpha2: \"PK\",\n    alpha3: \"PAK\",\n    count: 398,\n    mean: [199.5, 80.6],\n  },\n  c585: {\n    code: 585,\n    nombre: \"Palau\",\n    name: \"Palau\",\n    pop: 22,\n    color: \"y\",\n    alpha2: \"PW\",\n    alpha3: \"PLW\",\n    count: 1,\n    mean: [326, 27],\n  },\n  c275: {\n    code: 275,\n    nombre: \"Palestina, Estado de\",\n    name: \"Palestine, State of\",\n    pop: 5053,\n    color: \"r\",\n    alpha2: \"PS\",\n    alpha3: \"PSE\",\n    count: 10,\n    mean: [161.4, 73.8],\n  },\n  c591: {\n    code: 591,\n    nombre: \"Panamá\",\n    name: \"Panama\",\n    pop: 4163,\n    color: \"g\",\n    alpha2: \"PA\",\n    alpha3: \"PAN\",\n    count: 8,\n    mean: [49.6, 53.6],\n  },\n  c598: {\n    code: 598,\n    nombre: \"Papua Nueva Guinea\",\n    name: \"Papua New Guinea\",\n    pop: 8418,\n    color: \"r\",\n    alpha2: \"PG\",\n    alpha3: \"PNG\",\n    count: 17,\n    mean: [326.2, 20.1],\n  },\n  c600: {\n    code: 600,\n    nombre: \"Paraguay\",\n    name: \"Paraguay\",\n    pop: 6897,\n    color: \"b\",\n    alpha2: \"PY\",\n    alpha3: \"PRY\",\n    count: 14,\n    mean: [66.1, 26.2],\n  },\n  c604: {\n    code: 604,\n    nombre: \"Perú\",\n    name: \"Peru\",\n    pop: 32552,\n    color: \"y\",\n    alpha2: \"PE\",\n    alpha3: \"PER\",\n    count: 65,\n    mean: [56.6, 34.1],\n  },\n  c608: {\n    code: 608,\n    nombre: \"Filipinas (las)\",\n    name: \"Philippines\",\n    pop: 106512,\n    color: \"y\",\n    alpha2: \"PH\",\n    alpha3: \"PHL\",\n    count: 210,\n    mean: [311.8, 46],\n  },\n  c616: {\n    code: 616,\n    nombre: \"Polonia\",\n    name: \"Poland\",\n    pop: 38105,\n    color: \"r\",\n    alpha2: \"PL\",\n    alpha3: \"POL\",\n    count: 78,\n    mean: [143.1, 113.6],\n  },\n  c620: {\n    code: 620,\n    nombre: \"Portugal\",\n    name: \"Portugal\",\n    pop: 10291,\n    color: \"g\",\n    alpha2: \"PT\",\n    alpha3: \"PRT\",\n    count: 21,\n    mean: [108.9, 89.1],\n  },\n  c630: {\n    code: 630,\n    nombre: \"Puerto Rico\",\n    name: \"Puerto Rico\",\n    pop: 3659,\n    color: \"r\",\n    alpha2: \"PR\",\n    alpha3: \"PRI\",\n    count: 7,\n    mean: [63.3, 72.6],\n  },\n  c634: {\n    code: 634,\n    nombre: \"Qatar\",\n    name: \"Qatar\",\n    pop: 2695,\n    color: \"b\",\n    alpha2: \"QA\",\n    alpha3: \"QAT\",\n    count: 5,\n    mean: [178.4, 72.2],\n  },\n  c642: {\n    code: 642,\n    nombre: \"Rumania\",\n    name: \"Romania\",\n    pop: 19581,\n    color: \"r\",\n    alpha2: \"RO\",\n    alpha3: \"ROU\",\n    count: 39,\n    mean: [149.7, 99.8],\n  },\n  c643: {\n    code: 643,\n    nombre: \"Rusia, (la) Federación de\",\n    name: \"Russian Federation\",\n    pop: 143965,\n    color: \"r\",\n    alpha2: \"RU\",\n    alpha3: \"RUS\",\n    count: 294,\n    mean: [159, 112.3],\n  },\n  c646: {\n    code: 646,\n    nombre: \"Ruanda\",\n    name: \"Rwanda\",\n    pop: 12501,\n    color: \"g\",\n    alpha2: \"RW\",\n    alpha3: \"RWA\",\n    count: 23,\n    mean: [143.1, 47.6],\n  },\n  c638: {\n    code: 638,\n    nombre: \"Reunión\",\n    name: \"Réunion\",\n    pop: 883,\n    color: \"r\",\n    alpha2: \"RE\",\n    alpha3: \"REU\",\n    count: 2,\n    mean: [160.5, 22],\n  },\n  c659: {\n    code: 659,\n    nombre: \"San Cristóbal y Nieves\",\n    name: \"Saint Kitts and Nevis\",\n    pop: 56,\n    color: \"y\",\n    alpha2: \"KN\",\n    alpha3: \"KNA\",\n    count: 1,\n    mean: [67, 73],\n  },\n  c662: {\n    code: 662,\n    nombre: \"Santa Lucía\",\n    name: \"Saint Lucia\",\n    pop: 180,\n    color: \"g\",\n    alpha2: \"LC\",\n    alpha3: \"LCA\",\n    count: 1,\n    mean: [70, 64],\n  },\n  c670: {\n    code: 670,\n    nombre: \"San Vicente y las Granadinas\",\n    name: \"Saint Vincent and the Grenadines\",\n    pop: 110,\n    color: \"r\",\n    alpha2: \"VC\",\n    alpha3: \"VCT\",\n    count: 1,\n    mean: [69, 62],\n  },\n  c882: {\n    code: 882,\n    nombre: \"Samoa\",\n    name: \"Samoa\",\n    pop: 198,\n    color: \"r\",\n    alpha2: \"WS\",\n    alpha3: \"WSM\",\n    count: 1,\n    mean: [341, 11],\n  },\n  c674: {\n    code: 674,\n    nombre: \"San Marino\",\n    name: \"San Marino\",\n    pop: 34,\n    color: \"y\",\n    alpha2: \"SM\",\n    alpha3: \"SMR\",\n    count: 1,\n    mean: [136, 94],\n  },\n  c678: {\n    code: 678,\n    nombre: \"Santo Tomé y Príncipe\",\n    name: \"Sao Tome and Principe\",\n    pop: 209,\n    color: \"y\",\n    alpha2: \"ST\",\n    alpha3: \"STP\",\n    count: 1,\n    mean: [127, 36],\n  },\n  c682: {\n    code: 682,\n    nombre: \"Arabia Saudita\",\n    name: \"Saudi Arabia\",\n    pop: 33554,\n    color: \"r\",\n    alpha2: \"SA\",\n    alpha3: \"SAU\",\n    count: 67,\n    mean: [171.7, 69.7],\n  },\n  c686: {\n    code: 686,\n    nombre: \"Senegal\",\n    name: \"Senegal\",\n    pop: 16294,\n    color: \"r\",\n    alpha2: \"SN\",\n    alpha3: \"SEN\",\n    count: 33,\n    mean: [107.8, 62.9],\n  },\n  c688: {\n    code: 688,\n    nombre: \"Serbia\",\n    name: \"Serbia\",\n    pop: 8762,\n    color: \"y\",\n    alpha2: \"RS\",\n    alpha3: \"SRB\",\n    count: 18,\n    mean: [144.9, 97.7],\n  },\n  c690: {\n    code: 690,\n    nombre: \"Seychelles\",\n    name: \"Seychelles\",\n    pop: 95,\n    color: \"r\",\n    alpha2: \"SC\",\n    alpha3: \"SYC\",\n    count: 1,\n    mean: [160, 37],\n  },\n  c694: {\n    code: 694,\n    nombre: \"Sierra leona\",\n    name: \"Sierra Leone\",\n    pop: 7720,\n    color: \"y\",\n    alpha2: \"SL\",\n    alpha3: \"SLE\",\n    count: 15,\n    mean: [102.4, 53.4],\n  },\n  c702: {\n    code: 702,\n    nombre: \"Singapur\",\n    name: \"Singapore\",\n    pop: 5792,\n    color: \"b\",\n    alpha2: \"SG\",\n    alpha3: \"SGP\",\n    count: 12,\n    mean: [281.2, 22.9],\n  },\n  c703: {\n    code: 703,\n    nombre: \"Eslovaquia\",\n    name: \"Slovakia\",\n    pop: 5450,\n    color: \"g\",\n    alpha2: \"SK\",\n    alpha3: \"SVK\",\n    count: 11,\n    mean: [142.5, 104.2],\n  },\n  c705: {\n    code: 705,\n    nombre: \"Eslovenia\",\n    name: \"Slovenia\",\n    pop: 2081,\n    color: \"r\",\n    alpha2: \"SI\",\n    alpha3: \"SVN\",\n    count: 4,\n    mean: [140.5, 99.5],\n  },\n  c90: {\n    code: 90,\n    nombre: \"Salomón, Islas\",\n    name: \"Solomon Islands\",\n    pop: 623,\n    color: \"g\",\n    alpha2: \"SB\",\n    alpha3: \"SLB\",\n    count: 1,\n    mean: [334, 15],\n  },\n  c706: {\n    code: 706,\n    nombre: \"Somalia\",\n    name: \"Somalia\",\n    pop: 15182,\n    color: \"g\",\n    alpha2: \"SO\",\n    alpha3: \"SOM\",\n    count: 30,\n    mean: [164.8, 57.9],\n  },\n  c710: {\n    code: 710,\n    nombre: \"Sudáfrica\",\n    name: \"South Africa\",\n    pop: 57398,\n    color: \"g\",\n    alpha2: \"ZA\",\n    alpha3: \"ZAF\",\n    count: 115,\n    mean: [138.5, 13.3],\n  },\n  c728: {\n    code: 728,\n    nombre: \"Sudán del Sur\",\n    name: \"South Sudan\",\n    pop: 12919,\n    color: \"b\",\n    alpha2: \"SS\",\n    alpha3: \"SSD\",\n    count: 26,\n    mean: [140.9, 58.7],\n  },\n  c724: {\n    code: 724,\n    nombre: \"España\",\n    name: \"Spain\",\n    pop: 46397,\n    color: \"y\",\n    alpha2: \"ES\",\n    alpha3: \"ESP\",\n    count: 93,\n    mean: [114.3, 90.3],\n  },\n  c144: {\n    code: 144,\n    nombre: \"Sri Lanka\",\n    name: \"Sri Lanka\",\n    pop: 20950,\n    color: \"y\",\n    alpha2: \"LK\",\n    alpha3: \"LKA\",\n    count: 42,\n    mean: [222.8, 4.4],\n  },\n  c729: {\n    code: 729,\n    nombre: \"Sudán (el)\",\n    name: \"Sudan\",\n    pop: 41512,\n    color: \"r\",\n    alpha2: \"SD\",\n    alpha3: \"SDN\",\n    count: 83,\n    mean: [139.8, 64.4],\n  },\n  c740: {\n    code: 740,\n    nombre: \"Suriname\",\n    name: \"Suriname\",\n    pop: 568,\n    color: \"y\",\n    alpha2: \"SR\",\n    alpha3: \"SUR\",\n    count: 1,\n    mean: [70, 52],\n  },\n  c752: {\n    code: 752,\n    nombre: \"Suecia\",\n    name: \"Sweden\",\n    pop: 9983,\n    color: \"g\",\n    alpha2: \"SE\",\n    alpha3: \"SWE\",\n    count: 20,\n    mean: [142.1, 125.2],\n  },\n  c756: {\n    code: 756,\n    nombre: \"Suiza\",\n    name: \"Switzerland\",\n    pop: 8544,\n    color: \"r\",\n    alpha2: \"CH\",\n    alpha3: \"CHE\",\n    count: 17,\n    mean: [129.4, 101.7],\n  },\n  c760: {\n    code: 760,\n    nombre: \"República Árabe Siria\",\n    name: \"Syrian Arab Republic\",\n    pop: 18284,\n    color: \"g\",\n    alpha2: \"SY\",\n    alpha3: \"SYR\",\n    count: 38,\n    mean: [164.1, 81.4],\n  },\n  c158: {\n    code: 158,\n    nombre: \"Taiwán (Provincia de China)\",\n    name: \"Taiwan, Province of China\",\n    pop: 23694,\n    color: \"g\",\n    alpha2: \"TW\",\n    alpha3: \"TWN\",\n    count: 47,\n    mean: [305, 67.8],\n  },\n  c762: {\n    code: 762,\n    nombre: \"Tayikistán\",\n    name: \"Tajikistan\",\n    pop: 9107,\n    color: \"r\",\n    alpha2: \"TJ\",\n    alpha3: \"TJK\",\n    count: 18,\n    mean: [189.8, 93.1],\n  },\n  c834: {\n    code: 834,\n    nombre: \"Tanzania, República Unida de\",\n    name: \"Tanzania, United Republic of\",\n    pop: 59091,\n    color: \"g\",\n    alpha2: \"TZ\",\n    alpha3: \"TZA\",\n    count: 118,\n    mean: [148.4, 37.6],\n  },\n  c764: {\n    code: 764,\n    nombre: \"Tailandia\",\n    name: \"Thailand\",\n    pop: 69183,\n    color: \"r\",\n    alpha2: \"TH\",\n    alpha3: \"THA\",\n    count: 138,\n    mean: [273.3, 44.3],\n  },\n  c626: {\n    code: 626,\n    nombre: \"Timor-Leste\",\n    name: \"Timor-Leste\",\n    pop: 1324,\n    color: \"y\",\n    alpha2: \"TL\",\n    alpha3: \"TLS\",\n    count: 3,\n    mean: [322, 11],\n  },\n  c768: {\n    code: 768,\n    nombre: \"Togo\",\n    name: \"Togo\",\n    pop: 7991,\n    color: \"r\",\n    alpha2: \"TG\",\n    alpha3: \"TGO\",\n    count: 16,\n    mean: [115.3, 53.5],\n  },\n  c776: {\n    code: 776,\n    nombre: \"Tonga\",\n    name: \"Tonga\",\n    pop: 109,\n    color: \"b\",\n    alpha2: \"TO\",\n    alpha3: \"TON\",\n    count: 1,\n    mean: [346, 4],\n  },\n  c780: {\n    code: 780,\n    nombre: \"Trinidad y Tobago\",\n    name: \"Trinidad and Tobago\",\n    pop: 1373,\n    color: \"g\",\n    alpha2: \"TT\",\n    alpha3: \"TTO\",\n    count: 3,\n    mean: [67.3, 59],\n  },\n  c788: {\n    code: 788,\n    nombre: \"Túnez\",\n    name: \"Tunisia\",\n    pop: 11659,\n    color: \"r\",\n    alpha2: \"TN\",\n    alpha3: \"TUN\",\n    count: 23,\n    mean: [132.4, 76.8],\n  },\n  c792: {\n    code: 792,\n    nombre: \"Turquía\",\n    name: \"Turkey\",\n    pop: 81917,\n    color: \"r\",\n    alpha2: \"TR\",\n    alpha3: \"TUR\",\n    count: 164,\n    mean: [160.3, 88.7],\n  },\n  c795: {\n    code: 795,\n    nombre: \"Turkmenistán\",\n    name: \"Turkmenistan\",\n    pop: 5851,\n    color: \"y\",\n    alpha2: \"TM\",\n    alpha3: \"TKM\",\n    count: 12,\n    mean: [180.5, 90.5],\n  },\n  c798: {\n    code: 798,\n    nombre: \"Tuvalu\",\n    name: \"Tuvalu\",\n    pop: 11,\n    color: \"b\",\n    alpha2: \"TV\",\n    alpha3: \"TUV\",\n    count: 1,\n    mean: [340, 13],\n  },\n  c800: {\n    code: 800,\n    nombre: \"Uganda\",\n    name: \"Uganda\",\n    pop: 44271,\n    color: \"r\",\n    alpha2: \"UG\",\n    alpha3: \"UGA\",\n    count: 89,\n    mean: [142.3, 53.7],\n  },\n  c804: {\n    code: 804,\n    nombre: \"Ucrania\",\n    name: \"Ukraine\",\n    pop: 44009,\n    color: \"y\",\n    alpha2: \"UA\",\n    alpha3: \"UKR\",\n    count: 88,\n    mean: [152, 106.9],\n  },\n  c784: {\n    code: 784,\n    nombre: \"Emiratos Árabes Unidos (los)\",\n    name: \"United Arab Emirates\",\n    pop: 9542,\n    color: \"y\",\n    alpha2: \"AE\",\n    alpha3: \"ARE\",\n    count: 19,\n    mean: [180.2, 70.2],\n  },\n  c826: {\n    code: 826,\n    nombre: \"Reino Unido de Gran Bretaña e Irlanda del Norte (el)\",\n    name: \"United Kingdom of Great Britain and Northern Ireland\",\n    pop: 66574,\n    color: \"r\",\n    alpha2: \"GB\",\n    alpha3: \"GBR\",\n    count: 125,\n    mean: [111.8, 117.4],\n  },\n  c840: {\n    code: 840,\n    nombre: \"Estados Unidos de América (los)\",\n    name: \"United States of America\",\n    pop: 326767,\n    color: \"b\",\n    alpha2: \"US\",\n    alpha3: \"USA\",\n    count: 653,\n    mean: [19.3, 84.8],\n  },\n  c858: {\n    code: 858,\n    nombre: \"Uruguay\",\n    name: \"Uruguay\",\n    pop: 3470,\n    color: \"r\",\n    alpha2: \"UY\",\n    alpha3: \"URY\",\n    count: 7,\n    mean: [67.9, 21.7],\n  },\n  c860: {\n    code: 860,\n    nombre: \"Uzbekistán\",\n    name: \"Uzbekistan\",\n    pop: 32365,\n    color: \"g\",\n    alpha2: \"UZ\",\n    alpha3: \"UZB\",\n    count: 65,\n    mean: [183.9, 95.3],\n  },\n  c548: {\n    code: 548,\n    nombre: \"Vanuatu\",\n    name: \"Vanuatu\",\n    pop: 282,\n    color: \"y\",\n    alpha2: \"VU\",\n    alpha3: \"VUT\",\n    count: 1,\n    mean: [335, 13],\n  },\n  c862: {\n    code: 862,\n    nombre: \"Venezuela (República Bolivariana de)\",\n    name: \"Venezuela (Bolivarian Republic of)\",\n    pop: 32381,\n    color: \"y\",\n    alpha2: \"VE\",\n    alpha3: \"VEN\",\n    count: 66,\n    mean: [63.6, 50.9],\n  },\n  c704: {\n    code: 704,\n    nombre: \"Viet Nam\",\n    name: \"Viet Nam\",\n    pop: 96491,\n    color: \"b\",\n    alpha2: \"VN\",\n    alpha3: \"VNM\",\n    count: 182,\n    mean: [280, 50.8],\n  },\n  c732: {\n    code: 732,\n    nombre: \"Sahara Occidental\",\n    name: \"Western Sahara\",\n    pop: 567,\n    color: \"y\",\n    alpha2: \"EH\",\n    alpha3: \"ESH\",\n    count: 1,\n    mean: [108, 68],\n  },\n  c887: {\n    code: 887,\n    nombre: \"Yemen\",\n    name: \"Yemen\",\n    pop: 28915,\n    color: \"y\",\n    alpha2: \"YE\",\n    alpha3: \"YEM\",\n    count: 58,\n    mean: [176.4, 63.4],\n  },\n  c894: {\n    code: 894,\n    nombre: \"Zambia\",\n    name: \"Zambia\",\n    pop: 17609,\n    color: \"b\",\n    alpha2: \"ZM\",\n    alpha3: \"ZMB\",\n    count: 35,\n    mean: [141.8, 24.3],\n  },\n  c716: {\n    code: 716,\n    nombre: \"Zimbabue\",\n    name: \"Zimbabwe\",\n    pop: 16913,\n    color: \"y\",\n    alpha2: \"ZW\",\n    alpha3: \"ZWE\",\n    count: 34,\n    mean: [138.1, 19.2],\n  },\n};\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","!function(e,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?o(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],o):o((e=\"undefined\"!=typeof globalThis?globalThis:e||self).DetectGPU={})}(this,(function(e){\"use strict\";const o=[\"992 - Silicon Motion SM502\",\"991 - ATI Mobility 128 M3\",\"990 - VIA S3 Graphics ProSavage8\",\"989 - SIS Mirage M661FX \",\"988 - SIS Mirage 2 M760\",\"987 - VIA Castle Rock\",\"986 - VIA S3G UniChrome Pro\",\"985 - VIA S3G UniChrome Pro II\",\"984 - ATI Radeon IGP 320M\",\"983 - ATI Radeon IGP 340M\",\"982 - ATI Mobility Radeon 7000 IGP\",\"981 - Intel Extreme Graphics 2\",\"980 - VIA Chrome9 HC\",\"979 - ATI Mobility Radeon M6\",\"978 - ATI Mobility Radeon M7\",\"977 - ATI Mobility Radeon 9000 IGP\",\"976 - ATI Mobility Radeon 9100 IGP\",\"975 - NVIDIA GeForce 2 Go (200 / 100)\",\"974 - NVIDIA GeForce 3 Go\",\"965 - Intel Graphics Media Accelerator (GMA) 500\",\"963 - Intel Graphics Media Accelerator (GMA) 600\",\"952 - SIS Mirage 3 671MX\",\"951 - SIS Mirage 3+ 672MX\",\"950 - ATI Radeon Xpress 1100\",\"949 - ATI Radeon Xpress 200M\",\"948 - Intel Graphics Media Accelerator (GMA) 900\",\"947 - ATI Mobility FireGL 7800\",\"946 - ATI Mobility Radeon 7500\",\"934 - Intel Graphics Media Accelerator (GMA) 950\",\"933 - Intel Graphics Media Accelerator (GMA) 3150\",\"931 - NVIDIA GeForce 4 420 Go\",\"930 - NVIDIA GeForce 4 440 Go\",\"929 - NVIDIA GeForce 4 460 Go\",\"928 - NVIDIA GeForce 4 488 Go\",\"927 - ATI Mobility Radeon 9000\",\"926 - NVIDIA GeForce FX Go 5200\",\"925 - ATI Mobility FireGL 9000\",\"924 - ATI Mobility Radeon 9200\",\"923 - Intel Graphics Media Accelerator (GMA) 3600\",\"921 - NVIDIA GeForce 7000M\",\"920 - NVIDIA GeForce Go 6100\",\"919 - NVIDIA GeForce Go 6150\",\"918 - ATI Radeon Xpress 1150\",\"917 - NVIDIA GeForce 7150M\",\"916 - NVIDIA GeForce 7190M\",\"915 - Intel Graphics Media Accelerator (GMA) 3650\",\"904 - Intel Graphics Media Accelerator (GMA) X3100\",\"903 - ATI Radeon Xpress X1200\",\"902 - ATI Radeon Xpress 1250\",\"901 - ATI Radeon Xpress X1250\",\"900 - ATI Radeon Xpress X1270\",\"899 - NVIDIA GeForce FX Go 5600 / 5650\",\"898 - NVIDIA Quadro FX Go 1000\",\"897 - NVIDIA GeForce FX Go 5700\",\"896 - NVIDIA GeForce Go 6200\",\"895 - NVIDIA GeForce Go 6250\",\"894 - ATI Mobility Radeon X300\",\"893 - NVIDIA GeForce Go 6400\",\"892 - NVIDIA GeForce Go 7200\",\"891 - ATI Mobility Radeon 9550\",\"890 - ATI Mobility FireGL T2\",\"889 - ATI Mobility Radeon 9600\",\"888 - NVIDIA GeForce4 4200 Go\",\"887 - ATI Mobility Radeon X1300\",\"886 - ATI Mobility FireGL T2e\",\"885 - ATI Mobility Radeon 9700\",\"884 - ATI Mobility Radeon HD 2300\",\"883 - ATI Mobility Radeon X2300\",\"882 - ATI Mobility FireGL V3100\",\"881 - ATI Mobility FireGL V3200\",\"880 - ATI Mobility Radeon X600\",\"879 - NVIDIA Quadro NVS 110M\",\"874 - NVIDIA GeForce Go 7300\",\"873 - NVIDIA Quadro NVS 120M\",\"872 - NVIDIA Quadro FX 350M\",\"871 - NVIDIA GeForce Go 7400\",\"869 - Intel Graphics Media Accelerator (GMA) 4500M\",\"868 - Intel Graphics Media Accelerator (GMA) 4500MHD\",\"867 - Intel Graphics Media Accelerator (GMA) 4700MHD\",\"866 - NVIDIA GeForce 8200M G\",\"865 - NVIDIA Quadro NVS 130M\",\"862 - NVIDIA GeForce 8400M G\",\"861 - ATI Radeon HD 3100\",\"860 - ATI Mobility Radeon HD 3400\",\"851 - ATI Radeon HD 4100\",\"850 - ATI Radeon HD 4225\",\"849 - ATI Radeon HD 3200\",\"848 - ATI Mobility Radeon HD 2400\",\"847 - NVIDIA Quadro NVS 135M\",\"846 - NVIDIA GeForce 8400M GS\",\"845 - NVIDIA GeForce 9100M G\",\"844 - ATI Mobility Radeon X1400\",\"843 - ATI Mobility Radeon X1350\",\"842 - NVIDIA Quadro FX 360M\",\"841 - NVIDIA Quadro NVS 150M\",\"840 - AMD Radeon HD 6250\",\"839 - Intel Graphics Media Accelerator (GMA) HD Graphics\",\"838 - ATI Radeon HD 4200\",\"837 - ATI Radeon HD 4250\",\"836 - ATI Radeon HD 4270\",\"835 - ATI Mobility Radeon HD 2400 XT\",\"834 - ATI Mobility Radeon HD 3410\",\"833 - ATI Mobility Radeon HD 3430\",\"832 - ATI Mobility Radeon HD 3450\",\"831 - AMD Radeon HD 6290\",\"830 - AMD Radeon HD 7290\",\"829 - NVIDIA GeForce 9200M GS\",\"828 - NVIDIA Quadro NVS 160M\",\"827 - NVIDIA Quadro FX 370M\",\"826 - NVIDIA GeForce 9300M GS\",\"825 - NVIDIA ION 2\",\"824 - NVIDIA GeForce 9300M G\",\"823 - ATI Mobility Radeon HD 3470\",\"822 - NVIDIA GeForce 9400M GeForceBoost\",\"821 - ATI Mobility Radeon HD 3470 Hybrid X2\",\"820 - AMD Radeon HD 8180\",\"819 - AMD Radeon HD 6310\",\"818 - AMD Radeon HD 7310\",\"817 - AMD Radeon HD 6320\",\"816 - AMD Radeon HD 7340\",\"812 - Intel HD Graphics (Bay Trail)\",\"803 - Intel HD Graphics (Sandy Bridge)\",\"802 - NVIDIA GeForce 9400M (G) / ION (LE)\",\"801 - NVIDIA GeForce G 205M\",\"800 - NVIDIA GeForce G 102M\",\"799 - NVIDIA GeForce 9500M GE\",\"798 - NVIDIA GeForce G 103M\",\"797 - NVIDIA GeForce G 105M\",\"795 - Intel HD Graphics 2000\",\"794 - NVIDIA Quadro NVS 140M\",\"793 - NVIDIA GeForce 8400M GT\",\"792 - ATI Mobility Radeon HD 4330\",\"791 - AMD Radeon HD 6330M\",\"790 - NVIDIA GeForce G 110M\",\"789 - ATI Mobility FireGL V5000\",\"788 - ATI Mobility Radeon X700\",\"787 - ATI Mobility Radeon X1450\",\"786 - NVIDIA GeForce Go 6600\",\"785 - ATI Mobility Radeon 9800\",\"784 - ATI Mobility FireGL V5200\",\"783 - ATI Mobility Radeon X1600\",\"782 - ATI Mobility Radeon X800\",\"781 - NVIDIA Quadro NVS 300M\",\"780 - NVIDIA GeForce Go 7600\",\"779 - ATI Mobility Radeon X2500\",\"778 - ATI Mobility FireGL V5250\",\"777 - ATI Mobility Radeon X1700\",\"776 - NVIDIA GeForce 305M\",\"775 - ATI Mobility Radeon HD 530v\",\"774 - ATI Radeon HD 4350\",\"773 - ATI Mobility Radeon HD 4350\",\"772 - ATI Mobility Radeon HD 4530\",\"771 - AMD Radeon HD 6350M\",\"770 - AMD Radeon HD 7350M\",\"769 - Intel HD Graphics (Ivy Bridge)\",\"768 - Intel HD Graphics 2500\",\"767 - ATI Mobility Radeon HD 4550\",\"766 - ATI Mobility Radeon HD 540v\",\"765 - AMD Radeon HD 8210\",\"764 - ATI Mobility Radeon HD 5430\",\"763 - AMD Radeon HD 6380G\",\"762 - AMD Radeon HD 6430M\",\"761 - ATI Mobility Radeon X800XT\",\"760 - NVIDIA Quadro FX Go 1400\",\"759 - NVIDIA GeForce Go 6800\",\"758 - NVIDIA GeForce Go 7700\",\"757 - NVIDIA NVS 2100M\",\"756 - NVIDIA GeForce 8600M GS\",\"755 - NVIDIA GeForce 9500M G\",\"754 - NVIDIA GeForce Go 7600 GT\",\"753 - NVIDIA GeForce 315M\",\"752 - NVIDIA GeForce 405M\",\"751 - NVIDIA NVS 3100M\",\"750 - NVIDIA GeForce G210M\",\"749 - NVIDIA GeForce 310M\",\"748 - NVIDIA Quadro FX 380M\",\"747 - Intel HD Graphics 3000\",\"746 - ATI Mobility Radeon HD 2600\",\"745 - NVIDIA GeForce 8600M GT\",\"744 - ATI Mobility Radeon HD 5450\",\"743 - NVIDIA Quadro FX 570M\",\"742 - ATI Mobility Radeon HD 4570\",\"741 - Intel HD Graphics (Cherry Trail)\",\"740 - AMD Radeon HD 8250\",\"739 - AMD Radeon R6 (Mullins)\",\"738 - AMD Radeon HD 8240\",\"737 - ATI Mobility Radeon HD 545v\",\"736 - ATI Mobility Radeon HD 5145\",\"735 - ATI Mobility FireGL V5700\",\"734 - ATI Mobility Radeon HD 3650\",\"733 - AMD Radeon HD 7430M\",\"732 - AMD Radeon HD 6450M\",\"731 - ATI Mobility Radeon HD 5470\",\"730 - AMD Radeon HD 8280\",\"729 - AMD Radeon HD 6370M\",\"727 - AMD Radeon R2 (Mullins/Beema/Carrizo-L)\",\"723 - AMD Radeon HD 7370M\",\"722 - NVIDIA GeForce 410M\",\"721 - NVIDIA GeForce GT 415M\",\"720 - ATI Mobility Radeon HD 2700\",\"719 - AMD Radeon HD 6480G\",\"718 - AMD Radeon HD 7400G\",\"717 - NVIDIA GeForce 9500M GS\",\"716 - NVIDIA GeForce 9600M GS\",\"715 - NVIDIA GeForce Go 7800\",\"714 - NVIDIA GeForce Go 6800 Ultra\",\"713 - ATI Mobility Radeon X1800\",\"712 - ATI Mobility Radeon X1800XT\",\"711 - ATI Mobility Radeon X1900\",\"710 - ATI Mobility Radeon HD 2600 XT\",\"709 - NVIDIA GeForce GT 320M\",\"708 - NVIDIA GeForce 320M\",\"707 - AMD Radeon HD 8310G\",\"706 - AMD Radeon HD 6520G\",\"705 - Intel HD Graphics (Haswell)\",\"701 - ATI Mobility FireGL V5725\",\"700 - ATI Mobility Radeon HD 3670\",\"699 - AMD Radeon HD 7420G\",\"698 - NVIDIA GeForce GT 520M\",\"697 - AMD FirePro M3900\",\"696 - AMD Radeon HD 6470M\",\"695 - Intel HD Graphics 400 (Braswell)\",\"694 - Intel HD Graphics (Braswell)\",\"693 - Intel HD Graphics 405 (Braswell)\",\"690 - NVIDIA GeForce 705M\",\"689 - NVIDIA GeForce 610M\",\"688 - AMD Radeon HD 7450M\",\"687 - AMD Radeon HD 6510G2\",\"686 - NVIDIA GeForce GT 120M\",\"685 - NVIDIA Quadro FX 770M\",\"684 - NVIDIA GeForce GT 220M\",\"683 - NVIDIA GeForce 9600M GT\",\"682 - NVIDIA Quadro FX 1500M\",\"681 - NVIDIA Quadro NVS 320M\",\"680 - NVIDIA GeForce Go 7900 GS\",\"679 - NVIDIA GeForce Go 7800 GTX\",\"678 - NVIDIA Quadro FX 1600M\",\"677 - NVIDIA Quadro FX 1700M\",\"676 - NVIDIA GeForce 8700M GT\",\"675 - NVIDIA GeForce 9650M GT\",\"674 - NVIDIA GeForce 9650M GS\",\"673 - Intel HD Graphics 500\",\"672 - Intel UHD Graphics 600\",\"671 - AMD Radeon HD 8330\",\"670 - AMD Radeon HD 8350G\",\"669 - NVIDIA Quadro FX 2500M\",\"668 - NVIDIA GeForce Go 7900 GTX\",\"667 - NVIDIA NVS 4200M\",\"666 - NVIDIA GeForce GT 130M\",\"665 - NVIDIA GeForce Go 7900 GS SLI\",\"664 - NVIDIA GeForce 8600M GT SLI\",\"663 - NVIDIA GeForce Go 7800 GTX SLI\",\"662 - NVIDIA GeForce GT 325M\",\"661 - AMD Radeon HD 7520G\",\"660 - NVIDIA GeForce GT 520MX\",\"654 - AMD Radeon HD 8400\",\"653 - AMD Radeon HD 8410G\",\"652 - AMD Radeon HD 6490M\",\"651 - AMD Radeon HD 7470M\",\"650 - AMD Radeon HD 8450G\",\"649 - AMD Radeon HD 6515G2\",\"648 - AMD Radeon HD 6480G + HD 7450M Dual Graphics\",\"647 - AMD Radeon HD 7500G\",\"646 - AMD Radeon HD 6540G2\",\"645 - AMD Radeon HD 6520G + HD 7450M Dual Graphics\",\"644 - AMD Radeon HD 6545G2\",\"643 - AMD Radeon HD 6450 GDDR5\",\"642 - Intel HD Graphics (Skylake)\",\"641 - Intel HD Graphics 4200\",\"640 - Intel HD Graphics (Broadwell)\",\"639 - AMD Radeon R2 (Stoney Ridge)\",\"638 - AMD Radeon R3 (Mullins/Beema)\",\"637 - AMD Radeon R4 (Kaveri)\",\"636 - AMD Radeon R4 (Beema)\",\"635 - AMD Radeon R5 (Beema/Carrizo-L)\",\"633 - AMD Radeon R4 (Stoney Ridge)\",\"632 - AMD Radeon HD 6620G\",\"629 - Intel HD Graphics 4000\",\"628 - AMD Radeon HD 7480D\",\"627 - ATI Mobility Radeon HD 550v\",\"626 - NVIDIA GeForce GT 230M\",\"625 - NVIDIA GeForce 9700M GT\",\"624 - NVIDIA GeForce 8700M GT SLI\",\"623 - NVIDIA Quadro FX 3500M\",\"622 - NVIDIA GeForce Go 7950 GTX\",\"621 - AMD Radeon HD 7510M\",\"620 - Intel HD Graphics 5300\",\"619 - Intel HD Graphics 505\",\"618 - Intel UHD Graphics 605\",\"617 - AMD Radeon HD 7490M\",\"616 - NVIDIA GeForce GT 240M\",\"615 - NVIDIA Quadro NVS 5100M\",\"614 - NVIDIA Quadro FX 880M\",\"613 - NVIDIA GeForce GT 330M\",\"612 - ATI Mobility Radeon HD 3850\",\"611 - AMD Radeon HD 7530M\",\"610 - NVIDIA GeForce GT 420M\",\"609 - NVIDIA GeForce Go 7900 GTX SLI\",\"608 - NVIDIA GeForce GT 220\",\"607 - NVIDIA GeForce Go 7950 GTX SLI\",\"606 - ATI Mobility Radeon HD 4650\",\"605 - ATI Mobility Radeon HD 560v\",\"604 - ATI Mobility Radeon HD 5165\",\"603 - AMD Radeon HD 6640G2\",\"602 - AMD Radeon HD 6620G + HD 7450M Dual Graphics\",\"601 - ATI Mobility Radeon HD 3870\",\"600 - AMD Radeon HD 7600G\",\"599 - AMD Radeon HD 7500G + HD 7550M Dual Graphics\",\"598 - NVIDIA GeForce GT 335M\",\"597 - NVIDIA Quadro FX 2700M\",\"596 - AMD Radeon HD 6645G2\",\"595 - NVIDIA GeForce 9700M GTS\",\"594 - NVIDIA GeForce GT 425M\",\"593 - ATI Mobility Radeon HD 4670\",\"592 - AMD Radeon HD 7550M\",\"591 - ATI Mobility Radeon HD 565v\",\"590 - NVIDIA NVS 5200M\",\"589 - Intel HD Graphics 510\",\"588 - AMD Radeon HD 8610G\",\"587 - Intel HD Graphics 4400\",\"586 - Intel HD Graphics 610\",\"585 - Intel UHD Graphics 610\",\"584 - Intel HD Graphics 515\",\"576 - AMD Radeon HD 7640G\",\"575 - AMD Radeon HD 8470D\",\"574 - AMD Radeon HD 7620G\",\"573 - AMD Radeon HD 7610M\",\"572 - AMD Radeon HD 7640G + HD 7610M Dual Graphics\",\"571 - AMD Radeon HD 6550D\",\"570 - NVIDIA GeForce GT 525M\",\"569 - NVIDIA GeForce GT 620M\",\"568 - NVIDIA GeForce GT 625M\",\"567 - NVIDIA Quadro K500M\",\"566 - AMD Radeon HD 8550G\",\"565 - AMD Radeon HD 6530M\",\"564 - AMD Radeon HD 8510G\",\"563 - ATI Mobility Radeon HD 5650\",\"562 - NVIDIA Quadro FX 1800M\",\"561 - AMD Radeon HD 7630M\",\"560 - AMD Radeon HD 7570M\",\"559 - AMD FirePro M2000\",\"558 - AMD Radeon HD 7650M\",\"557 - AMD Radeon HD 6630M\",\"556 - NVIDIA GeForce GTS 250M\",\"555 - NVIDIA GeForce GTS 350M\",\"554 - AMD Radeon HD 7590M\",\"553 - AMD Radeon HD 6550M\",\"552 - ATI Radeon HD 5570\",\"551 - NVIDIA Quadro K510M\",\"550 - Intel HD Graphics 5000\",\"549 - AMD Radeon HD 6680G2\",\"548 - NVIDIA GeForce GT 435M\",\"547 - AMD Radeon HD 7660G\",\"546 - NVIDIA GeForce 710M\",\"545 - NVIDIA NVS 5400M\",\"544 - ATI FirePro M5800\",\"543 - AMD Radeon R5 (Kaveri)\",\"542 - AMD Radeon R5 (Carrizo)\",\"541 - Intel HD Graphics 615\",\"540 - Intel UHD Graphics 615\",\"539 - Intel UHD Graphics 617\",\"530 - Qualcomm Adreno 630\",\"526 - Intel HD Graphics 5500\",\"525 - ATI Mobility Radeon HD 5730\",\"524 - Intel HD Graphics 4600\",\"523 - AMD Radeon HD 6650M\",\"522 - AMD Radeon HD 6690G2\",\"521 - NVIDIA GeForce GT 540M\",\"520 - Intel Iris Graphics 5100\",\"519 - AMD Radeon HD 8550M\",\"518 - NVIDIA Quadro K610M\",\"517 - Intel HD Graphics 6000\",\"516 - AMD Radeon HD 8570M\",\"515 - AMD Radeon HD 8450G + Radeon HD 8570M Dual Graphics\",\"514 - AMD Radeon HD 6720G2\",\"513 - ATI Mobility Radeon HD 5750\",\"511 - AMD Radeon R5 (Stoney Ridge)\",\"510 - AMD Radeon RX Vega 2\",\"509 - AMD Radeon R5 M420\",\"508 - AMD Radeon R5 M315\",\"507 - AMD Radeon R5 M230\",\"506 - AMD Radeon R5 M320\",\"505 - AMD Radeon R5 M240\",\"504 - NVIDIA GeForce 8800M GTS\",\"503 - NVIDIA GeForce GT 720M\",\"502 - Intel UHD Graphics G4 (Lakefield GT1 48 EU)\",\"501 - Intel Iris Graphics 6100\",\"500 - Intel HD Graphics 520\",\"499 - NVIDIA GeForce 820M\",\"498 - NVIDIA GeForce 910M\",\"497 - NVIDIA Quadro 1000M\",\"496 - AMD Radeon RX Vega 3\",\"495 - AMD Radeon R5 M255\",\"494 - AMD Radeon R5 M430\",\"493 - AMD Radeon R5 M330\",\"492 - AMD Radeon R5 M335\",\"491 - NVIDIA GeForce GTS 150M\",\"490 - AMD Radeon HD 7560D\",\"489 - NVIDIA GeForce GT 630M\",\"488 - AMD Radeon HD 7670M\",\"487 - AMD Radeon HD 7520G + HD 7670M Dual Graphics\",\"486 - AMD Radeon HD 6620G + HD 7670M Dual Graphics\",\"485 - AMD Radeon HD 7640G + HD 7670M Dual Graphics\",\"484 - AMD Radeon HD 8650G\",\"483 - AMD Radeon HD 6570M\",\"482 - ATI Mobility Radeon HD 5770\",\"481 - ATI Mobility Radeon HD 4830\",\"480 - NVIDIA GeForce 9800M GS\",\"479 - AMD Radeon HD 6730M\",\"478 - AMD Radeon HD 6740G2\",\"477 - AMD Radeon HD 6760G2\",\"476 - ATI Mobility Radeon HD 5830\",\"475 - AMD Radeon HD 6830M\",\"474 - NVIDIA GeForce GT 430\",\"473 - NVIDIA GeForce 9800M GTS\",\"472 - NVIDIA GeForce GTS 160M\",\"471 - NVIDIA GeForce GTS 260M\",\"470 - AMD Radeon HD 8590M\",\"469 - NVIDIA GeForce GT 550M\",\"468 - NVIDIA Quadro K1000M\",\"467 - AMD Radeon HD 6750M\",\"466 - AMD Radeon HD 7660D\",\"465 - AMD Radeon R6 M255DX\",\"464 - AMD Radeon HD 8670M\",\"463 - AMD Radeon HD 8550G + HD 8670M Dual Graphics\",\"462 - AMD Radeon HD 7660G + HD 7670M Dual Graphics\",\"461 - AMD Radeon HD 8650G + HD 8570M Dual Graphics\",\"460 - AMD Radeon HD 8650G + HD 8670M Dual Graphics\",\"459 - AMD Radeon HD 8570D\",\"458 - Intel HD Graphics 5600\",\"457 - AMD Radeon HD 7690M\",\"456 - AMD Radeon HD 6755G2\",\"455 - NVIDIA GeForce GT 240 GDDR5\",\"454 - NVIDIA GeForce GTS 360M\",\"453 - NVIDIA GeForce GT 445M\",\"452 - NVIDIA Quadro FX 3600M\",\"451 - NVIDIA GeForce 8800M GTX\",\"450 - NVIDIA GeForce 9800M GT\",\"449 - NVIDIA Quadro 2000M\",\"448 - AMD FirePro W2100\",\"447 - AMD Radeon HD 6850M\",\"446 - ATI Mobility Radeon HD 5850\",\"445 - ATI Radeon HD 5670\",\"444 - NVIDIA GeForce GT 555M\",\"443 - NVIDIA GeForce GT 635M\",\"442 - AMD Radeon HD 6770M\",\"441 - AMD Radeon HD 8730M\",\"440 - AMD Radeon HD 8650M\",\"439 - AMD Radeon R6 (Kaveri)\",\"438 - NVIDIA GeForce GT 640M LE\",\"437 - AMD FirePro M5950\",\"436 - AMD Radeon HD 7690M XT\",\"435 - AMD Radeon HD 8670D\",\"434 - AMD Radeon HD 6775G2\",\"433 - NVIDIA Quadro FX 2800M\",\"432 - NVIDIA GeForce 9800M GTX\",\"431 - NVIDIA GeForce GTX 260M\",\"430 - ATI Mobility Radeon HD 4850\",\"429 - ATI FirePro M7740\",\"428 - ATI Mobility Radeon HD 4860\",\"427 - Qualcomm Adreno 680\",\"426 - Qualcomm Adreno 685\",\"425 - AMD Radeon R6 (Carrizo)\",\"424 - Intel HD Graphics 620\",\"423 - Intel UHD Graphics 620\",\"422 - AMD Radeon R5 (Bristol Ridge)\",\"420 - Intel HD Graphics P530\",\"419 - Intel HD Graphics 530\",\"418 - Intel UHD Graphics G7 (Lakefield GT2 64 EU)\",\"417 - Intel HD Graphics P630\",\"416 - Intel HD Graphics 630\",\"415 - Intel UHD Graphics P630\",\"414 - Intel UHD Graphics 630\",\"413 - Intel UHD Graphics G1 (Ice Lake 32 EU)\",\"412 - AMD Radeon RX Vega 5\",\"411 - AMD Radeon RX Vega 6 (Ryzen 2000/3000)\",\"410 - AMD Radeon R6 M340DX\",\"409 - AMD Radeon 610\",\"408 - AMD Radeon 520\",\"407 - AMD Radeon R7 M340\",\"406 - AMD Radeon R7 M260\",\"405 - NVIDIA Quadro FX 3700M\",\"404 - ATI Mobility Radeon HD 3850 X2\",\"403 - NVIDIA GeForce 8800M GTX SLI\",\"402 - ATI Mobility Radeon HD 3870 X2\",\"401 - NVIDIA GeForce 9800M GTS SLI\",\"400 - AMD Radeon R7 M440\",\"399 - AMD Radeon 620\",\"398 - AMD Radeon R8 M445DX\",\"397 - AMD Radeon HD 8690M\",\"396 - NVIDIA GeForce 9800M GT SLI\",\"395 - NVIDIA GeForce 920M\",\"394 - NVIDIA GeForce GTX 280M\",\"393 - AMD Radeon R7 M360\",\"391 - AMD Radeon HD 7730M\",\"390 - AMD Radeon R7 M460\",\"389 - AMD Radeon R8 M365DX\",\"388 - AMD Radeon R7 (Kaveri)\",\"387 - AMD Radeon R7 (Carrizo)\",\"386 - NVIDIA GeForce GT 640M\",\"385 - AMD Radeon R7 (Bristol Ridge)\",\"384 - ATI Mobility Radeon HD 4870\",\"383 - NVIDIA GeForce GTX 285M\",\"382 - NVIDIA Quadro FX 3800M\",\"381 - AMD Radeon R7 M265\",\"380 - AMD Radeon R7 M270\",\"379 - NVIDIA Quadro 3000M\",\"378 - AMD Radeon HD 8750M\",\"377 - AMD FirePro M4100\",\"376 - AMD Radeon HD 7750M\",\"375 - NVIDIA GeForce GT 645M\",\"374 - NVIDIA GeForce GT 730M\",\"373 - AMD Radeon HD 8550G + HD 8750M Dual Graphics\",\"372 - NVIDIA GeForce GTX 460M\",\"371 - AMD Radeon R7 M260X\",\"370 - AMD Radeon HD 8770M\",\"369 - AMD Radeon HD 8830M\",\"368 - NVIDIA GeForce 9800M GTX SLI\",\"367 - ATI Radeon HD 4850\",\"366 - AMD Radeon HD 6870M\",\"365 - ATI FirePro M7820\",\"364 - AMD FirePro M4000\",\"363 - NVIDIA Quadro 5000M\",\"362 - NVIDIA GeForce 825M\",\"361 - ATI Mobility Radeon HD 5870\",\"360 - NVIDIA GeForce GT 735M\",\"359 - NVIDIA GeForce GTX 260M SLI\",\"358 - NVIDIA GeForce GTS 450\",\"357 - NVIDIA Quadro K2000M\",\"352 - Intel Iris Graphics 540\",\"351 - NVIDIA GeForce 920MX\",\"350 - Intel Iris Plus Graphics 640\",\"349 - NVIDIA GeForce MX110\",\"348 - NVIDIA GeForce 830M\",\"346 - Intel Iris Plus Graphics 645\",\"345 - AMD Radeon RX Vega 6 (Ryzen 4000)\",\"344 - AMD Radeon 625\",\"343 - AMD Radeon 530\",\"342 - Intel Iris Graphics 550\",\"341 - NVIDIA GeForce 930M\",\"340 - Intel Iris Plus Graphics 650\",\"339 - NVIDIA GeForce GT 740M\",\"338 - AMD Radeon R7 384 Cores (Kaveri Desktop)\",\"337 - Intel Iris Pro Graphics 5200\",\"336 - AMD Radeon R7 512 Cores (Kaveri Desktop)\",\"335 - NVIDIA GeForce GTX 560M\",\"334 - AMD Radeon HD 7770M\",\"333 - NVIDIA GeForce GT 745M\",\"332 - AMD Radeon R7 M275DX\",\"331 - NVIDIA GeForce 840M\",\"330 - NVIDIA Quadro M500M\",\"329 - NVIDIA Quadro K620M\",\"328 - NVIDIA GeForce GT 650M\",\"327 - AMD Radeon R7 M370\",\"326 - AMD Radeon R7 M380\",\"325 - AMD Radeon R7 M445\",\"324 - Intel Iris Plus Graphics 655\",\"323 - AMD Radeon R9 M375\",\"322 - AMD FirePro W4190M\",\"321 - NVIDIA Quadro M600M\",\"318 - NVIDIA GeForce 930MX\",\"317 - Intel Iris Plus Graphics G4 (Ice Lake 48 EU)\",\"316 - NVIDIA GeForce 940M\",\"315 - AMD Radeon RX Vega 7\",\"314 - AMD Radeon RX Vega 8 (Ryzen 2000/3000)\",\"313 - NVIDIA Quadro K1100M\",\"312 - NVIDIA Quadro M520\",\"311 - NVIDIA GeForce 940MX\",\"310 - NVIDIA GeForce MX130\",\"309 - Intel Iris Pro Graphics 6200\",\"308 - NVIDIA GeForce GT 750M\",\"307 - NVIDIA GeForce GTX 480M\",\"306 - NVIDIA GeForce GTX 470M\",\"305 - NVIDIA Quadro 4000M\",\"304 - ATI Mobility Radeon HD 4870 X2\",\"303 - AMD FirePro W4100\",\"302 - AMD FirePro W4170M\",\"301 - AMD Radeon HD 8790M\",\"300 - AMD Radeon R7 M465\",\"299 - AMD Radeon HD 7850M\",\"298 - AMD Radeon R9 M265X\",\"297 - AMD Radeon R9 M365X\",\"296 - AMD Radeon HD 8850M\",\"295 - NVIDIA GeForce 845M\",\"294 - NVIDIA GeForce GTX 660M\",\"293 - NVIDIA GeForce GT 755M\",\"292 - AMD Radeon R7 250\",\"291 - AMD Radeon HD 6950M\",\"290 - NVIDIA GeForce GTX 280M SLI\",\"289 - NVIDIA GeForce GTX 550 Ti\",\"288 - ATI Radeon HD 5770\",\"287 - NVIDIA Quadro K2100M\",\"286 - AMD Radeon RX Vega 8 (Ryzen 4000)\",\"285 - NVIDIA GeForce MX230\",\"284 - AMD FirePro M5100\",\"283 - AMD FirePro M6000\",\"282 - Intel UHD Graphics Xe G4 48EUs\",\"281 - NVIDIA GeForce GTX 570M\",\"280 - NVIDIA Quadro K3000M\",\"279 - AMD Radeon HD 7870M\",\"278 - AMD Radeon HD 8870M\",\"277 - AMD Radeon R9 M270\",\"276 - AMD Radeon HD 6970M\",\"275 - AMD FirePro M8900\",\"274 - AMD FirePro W5130M\",\"273 - NVIDIA Maxwell GPU Surface Book\",\"272 - AMD Radeon RX Vega 9\",\"271 - NVIDIA GeForce GTX 670M\",\"270 - AMD Radeon R9 M275\",\"269 - NVIDIA GeForce GTX 760M\",\"268 - NVIDIA Quadro 5010M\",\"267 - NVIDIA GeForce GTX 670MX\",\"266 - AMD Radeon R9 M370X\",\"265 - AMD FirePro W5170M\",\"264 - NVIDIA Quadro K3100M\",\"263 - NVIDIA GeForce GTX 285M SLI\",\"262 - AMD Radeon HD 6790\",\"261 - NVIDIA GeForce GTX 460 768MB\",\"260 - NVIDIA GeForce GTX 485M\",\"259 - ATI Mobility Radeon HD 5870 Crossfire\",\"258 - NVIDIA GeForce GTX 460M SLI\",\"257 - NVIDIA GeForce GT 650M SLI\",\"256 - AMD Radeon HD 7770\",\"255 - AMD Radeon R9 M380\",\"254 - AMD Radeon R9 M385\",\"253 - AMD Radeon R9 M470\",\"252 - AMD Radeon HD 6990M\",\"251 - NVIDIA GeForce GTX 580M\",\"250 - NVIDIA GeForce GTX 675M\",\"249 - ATI Radeon HD 5850\",\"248 - Intel Iris Pro Graphics 580\",\"247 - Intel Iris Pro Graphics P580\",\"246 - AMD Radeon RX Vega 10\",\"245 - Intel Iris Plus Graphics G7 (Ice Lake 64 EU)\",\"244 - NVIDIA Quadro P500\",\"243 - NVIDIA Quadro K4000M\",\"242 - NVIDIA GeForce GTX 560M SLI\",\"241 - NVIDIA GeForce GTX 480M SLI\",\"240 - NVIDIA GeForce GTX 470M SLI\",\"239 - NVIDIA GeForce GTX 765M\",\"238 - NVIDIA GeForce 945M\",\"237 - NVIDIA GeForce GTX 470\",\"236 - AMD Radeon HD 6870\",\"235 - NVIDIA GeForce GTX 560 Ti\",\"234 - AMD Radeon HD 7950M\",\"233 - AMD Radeon R9 M280X\",\"232 - AMD Radeon RX Vega 11\",\"231 - NVIDIA Quadro M620\",\"230 - NVIDIA Quadro M1000M\",\"229 - NVIDIA GeForce GTX 850M\",\"228 - NVIDIA Quadro P520\",\"227 - AMD Radeon R9 M385X\",\"226 - AMD Radeon R9 M470X\",\"225 - AMD Radeon 540X\",\"224 - AMD Radeon 630\",\"223 - AMD Radeon Pro 450\",\"222 - NVIDIA GeForce GTX 950M\",\"221 - NVIDIA GeForce GT 750M SLI\",\"220 - NVIDIA GeForce GTX 675MX\",\"219 - AMD Radeon HD 6970M Crossfire\",\"218 - NVIDIA GeForce GTX 485M SLI\",\"217 - NVIDIA GeForce GT 755M SLI\",\"216 - AMD Radeon HD 6990M Crossfire\",\"215 - NVIDIA GeForce GTX 580M SLI\",\"214 - NVIDIA GeForce GTX 860M\",\"213 - AMD Radeon Pro WX 3100\",\"212 - AMD Radeon RX 540\",\"211 - AMD Radeon Pro WX 2100\",\"210 - AMD Radeon RX 540X\",\"209 - NVIDIA GeForce GTX 770M\",\"208 - Intel Iris Xe Graphics G7 80EUs\",\"207 - NVIDIA Quadro K4100M\",\"206 - NVIDIA Quadro K5000M\",\"205 - NVIDIA Quadro M2000M\",\"204 - NVIDIA GeForce MX330\",\"203 - NVIDIA GeForce MX150\",\"202 - NVIDIA GeForce MX250\",\"201 - NVIDIA Quadro P600\",\"200 - NVIDIA GeForce GT 1030\",\"199 - AMD Radeon Pro 455\",\"198 - AMD Radeon Pro 555\",\"197 - AMD Radeon Pro 555X\",\"196 - AMD Radeon Pro WX 3200\",\"195 - AMD Radeon RX 640\",\"194 - AMD Radeon RX 550\",\"193 - AMD Radeon RX 550X\",\"192 - NVIDIA Quadro P620\",\"191 - NVIDIA Quadro M1200\",\"190 - NVIDIA GeForce GTX 480\",\"189 - NVIDIA GeForce GTX 570\",\"188 - NVIDIA GeForce GTX 670MX SLI\",\"187 - NVIDIA GeForce GTX 750 Ti\",\"186 - NVIDIA GeForce GTX 960M\",\"185 - AMD Radeon Pro WX 4130\",\"184 - AMD Radeon Pro 460\",\"183 - AMD Radeon Pro 560\",\"182 - AMD Radeon Pro 560X\",\"181 - AMD Radeon HD 7970M\",\"180 - AMD FirePro M6100\",\"179 - AMD Radeon R9 M390\",\"178 - NVIDIA GeForce GTX 775M\",\"177 - NVIDIA GeForce GTX 680M\",\"176 - AMD Radeon RX 460\",\"175 - NVIDIA GeForce GTX 765M SLI\",\"174 - NVIDIA GeForce GTX 675M SLI\",\"173 - AMD Radeon HD 6970\",\"172 - NVIDIA GeForce GTX 580\",\"171 - AMD Radeon HD 8970M\",\"170 - AMD Radeon R9 M290X\",\"169 - NVIDIA GeForce GTX 870M\",\"168 - NVIDIA Quadro M2200\",\"167 - AMD Radeon RX 560\",\"166 - AMD Radeon RX 560X\",\"165 - NVIDIA GeForce GTX 965M\",\"164 - AMD Radeon HD 7870\",\"163 - AMD Radeon Pro WX 4150\",\"162 - AMD Radeon RX 460\",\"161 - NVIDIA GeForce GTX 680MX\",\"160 - NVIDIA GeForce MX350\",\"159 - NVIDIA Quadro P1000\",\"158 - NVIDIA Quadro K5100M\",\"157 - NVIDIA GeForce GTX 780M\",\"156 - NVIDIA GeForce GTX 760\",\"155 - NVIDIA GeForce GTX 660 Ti\",\"154 - AMD Radeon R9 270X\",\"153 - NVIDIA GeForce GTX 950\",\"152 - NVIDIA GeForce GTX 1050 Max-Q\",\"151 - NVIDIA GeForce GTX 880M\",\"150 - NVIDIA GeForce GTX 590\",\"149 - Intel Iris Xe Graphics G7 96EUs\",\"148 - AMD Radeon R7 370\",\"147 - AMD Radeon R9 M395\",\"146 - AMD FirePro W7170M\",\"145 - Intel Xe DG1 LP (iDG1LP) Mobile\",\"144 - NVIDIA GeForce GTX 1050 Mobile\",\"143 - NVIDIA GeForce GTX 1050\",\"142 - NVIDIA Quadro M3000M\",\"141 - AMD Radeon R9 M390X\",\"140 - AMD Radeon R9 M295X\",\"139 - AMD Radeon R9 M485X\",\"138 - AMD Radeon Pro Vega 16\",\"137 - AMD Radeon Pro WX Vega M GL\",\"136 - AMD Radeon RX Vega M GL / 870\",\"135 - NVIDIA GeForce GTX 1050 Ti Max-Q\",\"134 - AMD Radeon R9 M395X\",\"133 - NVIDIA GeForce GTX 770M SLI\",\"132 - AMD Radeon HD 7970\",\"131 - NVIDIA GeForce GTX 680\",\"130 - NVIDIA GeForce GTX 860M SLI\",\"129 - NVIDIA GeForce GTX 970M\",\"128 - NVIDIA Quadro M4000M\",\"127 - NVIDIA Quadro P2000 Max-Q\",\"126 - NVIDIA Quadro P2000\",\"125 - NVIDIA GeForce GTX 1050 Ti\",\"124 - NVIDIA GeForce GTX 1050 Ti Mobile\",\"123 - NVIDIA GeForce GTX 960\",\"122 - AMD Radeon R9 380\",\"121 - AMD Radeon R9 280X\",\"120 - NVIDIA Quadro M5000M\",\"119 - AMD Radeon Pro Vega 20\",\"118 - AMD Radeon RX Vega M GH\",\"117 - NVIDIA GeForce GTX 980M\",\"116 - AMD Radeon HD 7970M Crossfire\",\"115 - NVIDIA GeForce GTX 680M SLI\",\"114 - AMD Radeon HD 8970M Crossfire\",\"113 - AMD Radeon R9 M290X Crossfire\",\"112 - NVIDIA GeForce GTX 965M SLI\",\"111 - AMD Radeon RX 490M\",\"110 - AMD Radeon R9 290X\",\"109 - NVIDIA GeForce GTX 780M SLI\",\"108 - NVIDIA GeForce GTX 880M SLI\",\"107 - NVIDIA GeForce MX450\",\"106 - NVIDIA Quadro T1000 Max-Q\",\"105 - NVIDIA Quadro T1000\",\"104 - NVIDIA GeForce GTX 1650 Max-Q\",\"103 - AMD Radeon RX 470\",\"102 - AMD Radeon RX 570\",\"101 - AMD Radeon RX 570X\",\"100 - AMD Radeon RX 470\",\"99 - AMD Radeon Pro WX 7100\",\"98 - AMD Radeon RX 480\",\"97 - NVIDIA Quadro P3000 Max-Q\",\"96 - NVIDIA GeForce GTX 1060 Max-Q\",\"95 - NVIDIA GeForce GTX 1650 Ti Max-Q\",\"94 - NVIDIA GeForce GTX 1650\",\"93 - NVIDIA GeForce GTX 1650 Mobile\",\"92 - NVIDIA GeForce GTX 970\",\"91 - NVIDIA Quadro P3000\",\"90 - AMD Radeon RX 5300M\",\"89 - AMD Radeon Pro 5300M\",\"88 - AMD Radeon RX Vega Mobile\",\"87 - NVIDIA GeForce GTX 780 Ti\",\"86 - AMD Radeon RX 580\",\"85 - AMD Radeon RX 580X\",\"84 - NVIDIA Quadro P3200\",\"83 - NVIDIA Quadro P4000 Max-Q\",\"82 - AMD Radeon Pro 5500M\",\"81 - AMD Radeon RX 5500M\",\"80 - NVIDIA GeForce GTX 1060 Mobile\",\"79 - AMD Radeon RX 480\",\"78 - NVIDIA GeForce GTX 1650 Ti Mobile\",\"76 - NVIDIA Quadro T2000 Max-Q\",\"75 - NVIDIA Quadro T2000\",\"74 - NVIDIA Quadro P4000\",\"73 - AMD Radeon RX 570\",\"72 - NVIDIA GeForce GTX 1060\",\"71 - NVIDIA GeForce GTX 970M SLI\",\"70 - AMD Radeon R9 390X\",\"69 - NVIDIA Quadro M5500\",\"68 - NVIDIA GeForce GTX 980\",\"67 - AMD Radeon RX 580\",\"66 - AMD Radeon RX 590\",\"65 - NVIDIA GeForce GTX 980\",\"64 - AMD Radeon R9 Nano\",\"63 - AMD Radeon R9 Fury\",\"62 - NVIDIA GeForce GTX 980M SLI\",\"61 - NVIDIA Quadro P5000 Max-Q\",\"60 - NVIDIA GeForce GTX 1660 Ti Max-Q\",\"59 - AMD Radeon Pro 5600M\",\"58 - NVIDIA GeForce GTX 1070 Max-Q\",\"57 - NVIDIA GeForce GTX 1660\",\"56 - NVIDIA GeForce GTX 980 Ti\",\"55 - AMD Radeon RX 5600M\",\"54 - NVIDIA GeForce GTX 1660 Ti Mobile\",\"53 - NVIDIA Quadro P5000\",\"52 - NVIDIA GeForce GTX 1660 Super\",\"51 - NVIDIA GeForce GTX 1660 Ti\",\"50 - NVIDIA Quadro P4200\",\"49 - NVIDIA GeForce GTX 1070 Mobile\",\"48 - NVIDIA GeForce RTX 2060 Max-Q\",\"47 - AMD Radeon Pro Vega 56\",\"46 - NVIDIA GeForce GTX 1080 Max-Q\",\"45 - AMD Radeon RX 5600 XT\",\"44 - NVIDIA GeForce GTX 1070\",\"43 - NVIDIA Quadro P5200\",\"42 - NVIDIA GeForce GTX 980 SLI\",\"41 - NVIDIA GeForce RTX 2060 Mobile\",\"40 - AMD Radeon RX Vega 56\",\"39 - NVIDIA Quadro RTX 3000 Max-Q\",\"38 - NVIDIA Quadro RTX 3000\",\"37 - NVIDIA GeForce RTX 2070 Max-Q\",\"36 - NVIDIA GeForce GTX 1070 Ti\",\"35 - NVIDIA GeForce RTX 2070 Super Max-Q\",\"34 - NVIDIA GeForce RTX 2060\",\"33 - NVIDIA Quadro RTX 4000 Max-Q\",\"32 - NVIDIA Quadro RTX 4000\",\"31 - NVIDIA GeForce GTX 1080 Mobile\",\"30 - AMD Radeon RX Vega 64\",\"29 - AMD Radeon RX 5700M\",\"28 - AMD Radeon RX 5700\",\"27 - NVIDIA GeForce RTX 2060 Super\",\"26 - NVIDIA GeForce RTX 2070 Mobile\",\"25 - NVIDIA GeForce RTX 2070 Super Mobile\",\"24 - NVIDIA GeForce GTX 1080\",\"22 - NVIDIA GeForce RTX 2070\",\"21 - AMD Radeon RX 5700 XT\",\"20 - AMD Radeon VII\",\"19 - NVIDIA GeForce RTX 2070 Super\",\"18 - NVIDIA GeForce RTX 2080 Max-Q\",\"17 - NVIDIA GeForce RTX 2080 Super Max-Q\",\"16 - NVIDIA GeForce GTX 1070 SLI\",\"15 - NVIDIA GeForce GTX 1070 SLI\",\"14 - NVIDIA GeForce GTX 1080 SLI\",\"13 - NVIDIA Titan X Pascal\",\"12 - NVIDIA GeForce GTX 1080 Ti\",\"11 - NVIDIA GeForce RTX 2080 Mobile\",\"10 - NVIDIA GeForce RTX 2080 Super Mobile\",\"9 - NVIDIA Quadro RTX 5000 Max-Q\",\"8 - NVIDIA Quadro RTX 5000\",\"6 - NVIDIA GeForce RTX 2080\",\"5 - NVIDIA GeForce RTX 2080 Super\",\"4 - NVIDIA Quadro RTX 6000\",\"2 - NVIDIA GeForce RTX 2080 Ti\",\"1 - NVIDIA Titan RTX\"],I=[\"973 - ARM Mali-200\",\"972 - Qualcomm Adreno 200\",\"971 - PowerVR SGX530\",\"970 - PowerVR SGX531\",\"969 - PowerVR SGX535\",\"968 - Vivante GC800\",\"967 - Qualcomm Adreno 203\",\"966 - Qualcomm Adreno 205\",\"964 - PowerVR SGX540\",\"962 - NVIDIA GeForce ULP (Tegra 2)\",\"961 - ARM Mali-400 MP\",\"960 - ARM Mali-400 MP2\",\"959 - Vivante GC1000+ Dual-Core\",\"958 - Qualcomm Adreno 220\",\"957 - Broadcom VideoCore-IV\",\"956 - NVIDIA GeForce ULP (Tegra 3)\",\"955 - ARM Mali-400 MP4\",\"954 - Vivante GC4000\",\"953 - Qualcomm Adreno 225\",\"945 - Qualcomm Adreno 302\",\"944 - Vivante GC7000UL\",\"943 - ARM Mali-T720\",\"942 - Qualcomm Adreno 304\",\"941 - Qualcomm Adreno 305\",\"940 - Qualcomm Adreno 306\",\"939 - Qualcomm Adreno 308\",\"938 - PowerVR SGX544\",\"937 - ARM Mali-T720 MP2\",\"936 - PowerVR SGX544MP2\",\"935 - PowerVR SGX545\",\"932 - PowerVR SGX543MP2\",\"922 - PowerVR SGX543MP3\",\"914 - ARM Mali-T830 MP1\",\"913 - ARM Mali-450 MP4\",\"912 - ARM Mali-T720 MP4\",\"911 - PowerVR GE8100\",\"910 - PowerVR GE8300\",\"909 - PowerVR GE8320\",\"908 - ARM Mali-T760 MP2\",\"907 - Qualcomm Adreno 320\",\"906 - ARM Mali-T624\",\"905 - PowerVR SGX543MP4\",\"878 - ARM Mali-T830 MP2\",\"877 - Qualcomm Adreno 405\",\"876 - PowerVR G6200\",\"875 - NVIDIA GeForce Tegra 4\",\"870 - ARM Mali-T604 MP4\",\"864 - ARM Mali-T830 MP3\",\"863 - ARM Mali-T860 MP2\",\"859 - Qualcomm Adreno 504\",\"858 - Qualcomm Adreno 505\",\"857 - PowerVR GE8322 / IMG8322\",\"856 - Qualcomm Adreno 506\",\"855 - Qualcomm Adreno 508\",\"854 - Qualcomm Adreno 509\",\"853 - ARM Mali-T628 MP4\",\"852 - PowerVR SGX554MP4\",\"814 - ARM Mali-T760 MP4\",\"813 - ARM Mali-T628 MP6\",\"812 - Intel HD Graphics (Bay Trail)\",\"811 - PowerVR G6400\",\"810 - PowerVR GX6250\",\"809 - PowerVR G6430\",\"808 - Qualcomm Adreno 330\",\"807 - Qualcomm Adreno 510\",\"806 - Qualcomm Adreno 512\",\"805 - Qualcomm Adreno 610\",\"804 - Qualcomm Adreno 612\",\"741 - Intel HD Graphics (Cherry Trail)\",\"728 - ARM Mali-G51 MP4\",\"726 - Qualcomm Adreno 616\",\"725 - Qualcomm Adreno 618\",\"724 - Qualcomm Adreno 418\",\"704 - Qualcomm Adreno 620\",\"703 - Qualcomm Adreno 420\",\"702 - PowerVR GX6450\",\"692 - ARM Mali-T880 MP2\",\"691 - ARM Mali-T760 MP6\",\"659 - ARM Mali-G52 MP1\",\"658 - ARM Mali-G52 MP2\",\"657 - ARM Mali-G52 MP6\",\"656 - ARM Mali-T880 MP4\",\"655 - ARM Mali-G72 MP3\",\"634 - Qualcomm Adreno 430\",\"631 - ARM Mali-G71 MP2\",\"630 - ARM Mali-T760 MP8\",\"583 - ARM Mali-G76 MP4\",\"582 - ARM Mali-T880 MP12\",\"581 - Apple A9 / PowerVR GT7600\",\"580 - NVIDIA Tegra K1 Kepler GPU\",\"579 - PowerVR GXA6850\",\"578 - Qualcomm Adreno 530\",\"577 - PowerVR GM9446\",\"538 - ARM Mali-G71 MP8\",\"537 - ARM Mali-G72 MP12\",\"536 - ARM Mali-G71 MP20\",\"535 - ARM Mali-G72 MP18\",\"534 - ARM Mali-G57 MP6\",\"533 - Qualcomm Adreno 540\",\"532 - ARM Mali-G76 MP10\",\"531 - ARM Mali-G76 MP12\",\"530 - Qualcomm Adreno 630\",\"529 - Qualcomm Adreno 640\",\"528 - ARM Mali-G76 MP16\",\"527 - ARM Mali-G77 MP11\",\"512 - Apple A10 Fusion GPU / PowerVR\",\"421 - NVIDIA Tegra X1 Maxwell GPU\",\"392 - Apple A9X / PowerVR Series 7XT\",\"356 - Apple A10X Fusion GPU / PowerVR\",\"355 - Apple A11 Bionic GPU\",\"354 - Qualcomm Adreno 650\",\"353 - Apple A12 Bionic GPU\",\"347 - Apple A13 Bionic GPU\",\"320 - Apple A12X Bionic GPU\",\"319 - Apple A12Z Bionic GPU\"],r=e=>e.toLowerCase().split(\"- \")[1].split(\" /\")[0];var M=\"undefined\"==typeof window;const D=new(function(){function e(e){this.userAgent=e||(!M&&window.navigator?window.navigator.userAgent:\"\"),this.isAndroidDevice=!/like android/i.test(this.userAgent)&&/android/i.test(this.userAgent),this.iOSDevice=this.match(1,/(iphone|ipod|ipad)/i).toLowerCase(),!M&&\"MacIntel\"===navigator.platform&&navigator.maxTouchPoints>2&&!window.MSStream&&(this.iOSDevice=\"ipad\")}return e.prototype.match=function(e,o){var I=this.userAgent.match(o);return I&&I.length>1&&I[e]||\"\"},Object.defineProperty(e.prototype,\"isMobile\",{get:function(){return!this.isTablet&&(/[^-]mobi/i.test(this.userAgent)||\"iphone\"===this.iOSDevice||\"ipod\"===this.iOSDevice||this.isAndroidDevice||/nexus\\s*[0-6]\\s*/i.test(this.userAgent))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"isTablet\",{get:function(){return/tablet/i.test(this.userAgent)&&!/tablet pc/i.test(this.userAgent)||\"ipad\"===this.iOSDevice||this.isAndroidDevice&&!/[^-]mobi/i.test(this.userAgent)||!/nexus\\s*[0-6]\\s*/i.test(this.userAgent)&&/nexus\\s*[0-9]+/i.test(this.userAgent)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"isDesktop\",{get:function(){return!this.isMobile&&!this.isTablet},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"isMacOS\",{get:function(){return/macintosh/i.test(this.userAgent)&&{version:this.match(1,/mac os x (\\d+(\\.?_?\\d+)+)/i).replace(/[_\\s]/g,\".\").split(\".\").map((function(e){return e}))[1]}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"isWindows\",{get:function(){return/windows /i.test(this.userAgent)&&{version:this.match(1,/Windows ((NT|XP)( \\d\\d?.\\d)?)/i)}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"isiOS\",{get:function(){return!!this.iOSDevice&&{version:this.match(1,/os (\\d+([_\\s]\\d+)*) like mac os x/i).replace(/[_\\s]/g,\".\")||this.match(1,/version\\/(\\d+(\\.\\d+)?)/i)}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"isAndroid\",{get:function(){return this.isAndroidDevice&&{version:this.match(1,/android[ \\/-](\\d+(\\.\\d+)*)/i)}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"browser\",{get:function(){var e=this.match(1,/version\\/(\\d+(\\.\\d+)?)/i);return/opera/i.test(this.userAgent)?{name:\"Opera\",version:e||this.match(1,/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/opr\\/|opios/i.test(this.userAgent)?{name:\"Opera\",version:this.match(1,/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)||e}:/SamsungBrowser/i.test(this.userAgent)?{name:\"Samsung Internet for Android\",version:e||this.match(1,/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/yabrowser/i.test(this.userAgent)?{name:\"Yandex Browser\",version:e||this.match(1,/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/ucbrowser/i.test(this.userAgent)?{name:\"UC Browser\",version:this.match(1,/(?:ucbrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/msie|trident/i.test(this.userAgent)?{name:\"Internet Explorer\",version:this.match(1,/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)}:/(edge|edgios|edga|edg)/i.test(this.userAgent)?{name:\"Microsoft Edge\",version:this.match(2,/(edge|edgios|edga|edg)\\/(\\d+(\\.\\d+)?)/i)}:/firefox|iceweasel|fxios/i.test(this.userAgent)?{name:\"Firefox\",version:this.match(1,/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)}:/chromium/i.test(this.userAgent)?{name:\"Chromium\",version:this.match(1,/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i)||e}:/chrome|crios|crmo/i.test(this.userAgent)?{name:\"Chrome\",version:this.match(1,/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)}:/safari|applewebkit/i.test(this.userAgent)?{name:\"Safari\",version:e}:{name:this.match(1,/^(.*)\\/(.*) /),version:this.match(2,/^(.*)\\/(.*) /)}},enumerable:!1,configurable:!0}),e}()),{browser:a,isMobile:A,isTablet:n}=D,i=e=>e.replace(/[\\D]/g,\"\"),G=(e,o)=>{const I=e?e.length:0,r=o?o.length:0;if(0===I)return r;if(0===r)return I;const M=new Array(r+1);for(let e=0;e<=r;++e){(M[e]=new Array(I+1))[0]=e}const D=M[0];for(let e=1;e<=I;++e)D[e]=e;for(let D=1;D<=r;++D)for(let r=1;r<=I;++r)o.charAt(D-1)===e.charAt(r-1)?M[D][r]=M[D-1][r-1]:M[D][r]=Math.min(M[D-1][r-1],M[D][r-1],M[D-1][r])+1;return M[r][I]},d=(e,o,I)=>{const M=[\"adreno\",\"apple\",\"mali-t\",\"mali\",\"nvidia\",\"powervr\"].find(e=>o.includes(e)),D=[];if(M)for(let a=0;a<e.length;a++){const A=e[a];for(let e=0;e<A.length;e++){const n=r(A[e]);!n.includes(M)||\"mali\"===n&&n.includes(\"mali-t\")||!i(n).includes(I)||D.push({rank:[a,\"BENCHMARK - \"+n],distance:G(o,n)})}}const a=R(D);return a.length>0?a[0].rank:[void 0,void 0]},R=e=>e.sort((e,o)=>e.distance-o.distance),c=(e,o,I)=>{const M=[\"intel\",\"amd\",\"nvidia\"].find(e=>o.includes(e)),D=[];if(M)for(let a=0;a<e.length;a++){const A=e[a];for(let e=0;e<A.length;e++){const n=r(A[e]);n.includes(M)&&i(n).includes(I)&&D.push({rank:[a,\"BENCHMARK - \"+n],distance:G(o,n)})}}const a=R(D);return a.length>0?a[0].rank:[void 0,void 0]};e.getGPUTier=({mobileBenchmarkPercentages:e=[0,50,30,20],desktopBenchmarkPercentages:r=[0,50,30,20],forceRendererString:M=\"\",forceMobile:D=!1,glContext:G,failIfMajorPerformanceCaveat:R=!0}={})=>{let t;const V=A||n||D,l=(e=1,o=\"FALLBACK\")=>({tier:`GPU_${V?\"MOBILE\":\"DESKTOP\"}_TIER_${e}`,type:o});if(M)t=M;else{const e=G||((e,o=!0)=>{const I={alpha:!1,antialias:!1,depth:!1,failIfMajorPerformanceCaveat:o,powerPreference:\"high-performance\",stencil:!1};\"boolean\"!=typeof e&&\"Safari\"===e.name&&e.version.includes(\"12\")&&delete I.powerPreference;const r=document.createElement(\"canvas\"),M=r.getContext(\"webgl\",I)||r.getContext(\"experimental-webgl\",I);if(M&&M instanceof WebGLRenderingContext)return M})(a,R);if(!e)return l(0,\"WEBGL_UNSUPPORTED\");t=(e=>{const o=e.getExtension(\"WEBGL_debug_renderer_info\");return o&&e.getParameter(o.UNMASKED_RENDERER_WEBGL)})(e)}t=(e=>{let o=e.toLowerCase();return o.includes(\"angle (\")&&o.includes(\"direct3d\")&&(o=o.replace(\"angle (\",\"\").split(\" direct3d\")[0]),o.includes(\"nvidia\")&&o.includes(\"gb\")&&(o=o.split(/\\dgb/)[0]),o})(t);if(/(radeon hd 6970m|radeon hd 6770m|radeon hd 6490m|radeon hd 6630m|radeon hd 6750m|radeon hd 5750|radeon hd 5670|radeon hd 4850|radeon hd 4870|radeon hd 4670|geforce 9400m|geforce 320m|geforce 330m|geforce gt 130|geforce gt 120|geforce gtx 285|geforce 8600|geforce 9600m|geforce 9400m|geforce 8800 gs|geforce 8800 gt|quadro fx 5|quadro fx 4|radeon hd 2600|radeon hd 2400|radeon r9 200|mali-4|mali-3|mali-2|google swiftshader|sgx543|legacy|sgx 543)/.test(t))return l(0,\"BLACKLISTED\");const[s,N]=(V?d:c)(((e,o)=>{let I=0;return o.map(o=>{const r=Math.round(e.length/100*o),M=e.slice(I,I+r);return I+=r,M})})(V?I:o,V?e:r),t,i(t));return l(s,N)},Object.defineProperty(e,\"__esModule\",{value:!0})}));\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","/**\n * Lightweight thenable implementation that is entirely self-contained within a single\n * function with no external dependencies so it can be easily shipped across to a WorkerModule.\n *\n * This implementation conforms fully to the Promises/A+ spec so it can safely interoperate\n * with other thenable implementations. https://github.com/promises-aplus/promises-spec\n *\n * *However*, it is _not_ a full implementation of ES2015 Promises, e.g. it does not\n * have the same constructor signature and does not expose a `catch` method or the static\n * `resolve`/`reject`/`all`/`race` initializer methods. If you need to hand a Thenable\n * instance off to consuming code that may expect a true Promise, you'll want to wrap it\n * in a native-or-polyfilled Promise first.\n *\n * (Why yet another Promises/A+ implementation? Great question. We needed a polyfill-like\n * thing that was (a) wrapped in a single function for easy serialization across to a Worker,\n * and (b) was as small as possible -- at ~900B minified (~500B gzipped) this is the smallest\n * implementation I've found. And also, exercises like this are challenging and fun.)\n */\nfunction BespokeThenable() {\n  var state = 0; // 0=pending, 1=fulfilled, -1=rejected\n  var queue = [];\n  var value;\n  var scheduled = 0;\n  var completeCalled = 0;\n\n  function then(onResolve, onReject) {\n    var nextThenable = BespokeThenable();\n\n    function handleNext() {\n      var cb = state > 0 ? onResolve : onReject;\n      if (isFn(cb)) {\n        try {\n          var result = cb(value);\n          if (result === nextThenable) {\n            recursiveError();\n          }\n          var resultThen = getThenableThen(result);\n          if (resultThen) {\n            resultThen.call(result, nextThenable.resolve, nextThenable.reject);\n          } else {\n            nextThenable.resolve(result);\n          }\n        } catch (err) {\n          nextThenable.reject(err);\n        }\n      } else {\n        nextThenable[state > 0 ? 'resolve' : 'reject'](value);\n      }\n    }\n\n    queue.push(handleNext);\n    if (state) {\n      scheduleQueueFlush();\n    }\n    return nextThenable\n  }\n\n  var resolve = oneTime(function (val) {\n    if (!completeCalled) {\n      complete(1, val);\n    }\n  });\n\n  var reject = oneTime(function (reason) {\n    if (!completeCalled) {\n      complete(-1, reason);\n    }\n  });\n\n  function complete(st, val) {\n    completeCalled++;\n    var ignoreThrow = 0;\n    try {\n      if (val === thenableObj) {\n        recursiveError();\n      }\n      var valThen = st > 0 && getThenableThen(val);\n      if (valThen) {\n        valThen.call(val, oneTime(function (v) {\n          ignoreThrow++;\n          complete(1, v);\n        }), oneTime(function (v) {\n          ignoreThrow++;\n          complete(-1, v);\n        }));\n      } else {\n        state = st;\n        value = val;\n        scheduleQueueFlush();\n      }\n    } catch(e) {\n      if (!state && !ignoreThrow) {\n        complete(-1, e);\n      }\n    }\n  }\n\n  function scheduleQueueFlush() {\n    if (!scheduled) {\n      setTimeout(flushQueue, 0); //TODO setImmediate or postMessage approach if available?\n      scheduled = 1;\n    }\n  }\n\n  function flushQueue() {\n    var q = queue;\n    scheduled = 0;\n    queue = [];\n    q.forEach(callIt);\n  }\n\n  function callIt(fn) {\n    fn();\n  }\n\n  function getThenableThen(val) {\n    var valThen = val && (isFn(val) || typeof val === 'object') && val.then;\n    return isFn(valThen) && valThen\n  }\n\n  function oneTime(fn) {\n    var called = 0;\n    return function() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (!called++) {\n        fn.apply(this, args);\n      }\n    }\n  }\n\n  function recursiveError() {\n    throw new TypeError('Chaining cycle detected')\n  }\n\n  var isFn = function (v) { return typeof v === 'function'; };\n\n  var thenableObj = {\n    then: then,\n    resolve: resolve,\n    reject: reject\n  };\n  return thenableObj\n}\n\n\n/**\n * Thenable implementation that uses a native Promise under the covers. This implementation\n * is preferred if Promise is available, for better performance and dev tools integration.\n * @constructor\n */\nfunction NativePromiseThenable() {\n  var resolve, reject;\n  var promise = new Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    then: promise.then.bind(promise),\n    resolve: resolve,\n    reject: reject\n  }\n}\n\n/**\n * Promise.all() impl:\n */\nBespokeThenable.all = NativePromiseThenable.all = function(items) {\n  var resultCount = 0;\n  var results = [];\n  var out = DefaultThenable();\n  if (items.length === 0) {\n    out.resolve([]);\n  } else {\n    items.forEach(function (item, i) {\n      var itemThenable = DefaultThenable();\n      itemThenable.resolve(item);\n      itemThenable.then(function (res) {\n        resultCount++;\n        results[i] = res;\n        if (resultCount === items.length) {\n          out.resolve(results);\n        }\n      }, out.reject);\n    });\n  }\n  return out\n};\n\n\n/**\n * Choose the best Thenable implementation and export it as the default.\n */\nvar DefaultThenable = typeof Promise === 'function' ? NativePromiseThenable : BespokeThenable;\n\n/**\n * Main content for the worker that handles the loading and execution of\n * modules within it.\n */\nfunction workerBootstrap() {\n  var modules = Object.create(null);\n\n  // Handle messages for registering a module\n  function registerModule(ref, callback) {\n    var id = ref.id;\n    var name = ref.name;\n    var dependencies = ref.dependencies; if ( dependencies === void 0 ) dependencies = [];\n    var init = ref.init; if ( init === void 0 ) init = function(){};\n    var getTransferables = ref.getTransferables; if ( getTransferables === void 0 ) getTransferables = null;\n\n    // Only register once\n    if (modules[id]) { return }\n\n    try {\n      // If any dependencies are modules, ensure they're registered and grab their value\n      dependencies = dependencies.map(function (dep) {\n        if (dep && dep.isWorkerModule) {\n          registerModule(dep, function (depResult) {\n            if (depResult instanceof Error) { throw depResult }\n          });\n          dep = modules[dep.id].value;\n        }\n        return dep\n      });\n\n      // Rehydrate functions\n      init = rehydrate((\"<\" + name + \">.init\"), init);\n      if (getTransferables) {\n        getTransferables = rehydrate((\"<\" + name + \">.getTransferables\"), getTransferables);\n      }\n\n      // Initialize the module and store its value\n      var value = null;\n      if (typeof init === 'function') {\n        value = init.apply(void 0, dependencies);\n      } else {\n        console.error('worker module init function failed to rehydrate');\n      }\n      modules[id] = {\n        id: id,\n        value: value,\n        getTransferables: getTransferables\n      };\n      callback(value);\n    } catch(err) {\n      if (!(err && err.noLog)) {\n        console.error(err);\n      }\n      callback(err);\n    }\n  }\n\n  // Handle messages for calling a registered module's result function\n  function callModule(ref, callback) {\n    var ref$1;\n\n    var id = ref.id;\n    var args = ref.args;\n    if (!modules[id] || typeof modules[id].value !== 'function') {\n      callback(new Error((\"Worker module \" + id + \": not found or its 'init' did not return a function\")));\n    }\n    try {\n      var result = (ref$1 = modules[id]).value.apply(ref$1, args);\n      if (result && typeof result.then === 'function') {\n        result.then(handleResult, function (rej) { return callback(rej instanceof Error ? rej : new Error('' + rej)); });\n      } else {\n        handleResult(result);\n      }\n    } catch(err) {\n      callback(err);\n    }\n    function handleResult(result) {\n      try {\n        var tx = modules[id].getTransferables && modules[id].getTransferables(result);\n        if (!tx || !Array.isArray(tx) || !tx.length) {\n          tx = undefined; //postMessage is very picky about not passing null or empty transferables\n        }\n        callback(result, tx);\n      } catch(err) {\n        console.error(err);\n        callback(err);\n      }\n    }\n  }\n\n  function rehydrate(name, str) {\n    var result = void 0;\n    self.troikaDefine = function (r) { return result = r; };\n    var url = URL.createObjectURL(\n      new Blob(\n        [(\"/** \" + (name.replace(/\\*/g, '')) + \" **/\\n\\ntroikaDefine(\\n\" + str + \"\\n)\")],\n        {type: 'application/javascript'}\n      )\n    );\n    try {\n      importScripts(url);\n    } catch(err) {\n      console.error(err);\n    }\n    URL.revokeObjectURL(url);\n    delete self.troikaDefine;\n    return result\n  }\n\n  // Handler for all messages within the worker\n  self.addEventListener('message', function (e) {\n    var ref = e.data;\n    var messageId = ref.messageId;\n    var action = ref.action;\n    var data = ref.data;\n    try {\n      // Module registration\n      if (action === 'registerModule') {\n        registerModule(data, function (result) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: {isCallable: typeof result === 'function'}\n            });\n          }\n        });\n      }\n      // Invocation\n      if (action === 'callModule') {\n        callModule(data, function (result, transferables) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: result\n            }, transferables || undefined);\n          }\n        });\n      }\n    } catch(err) {\n      postMessage({\n        messageId: messageId,\n        success: false,\n        error: err.stack\n      });\n    }\n  });\n}\n\n/**\n * Fallback for `defineWorkerModule` that behaves identically but runs in the main\n * thread, for when the execution environment doesn't support web workers or they\n * are disallowed due to e.g. CSP security restrictions.\n */\nfunction defineMainThreadModule(options) {\n  var moduleFunc = function() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return moduleFunc._getInitResult().then(function (initResult) {\n      if (typeof initResult === 'function') {\n        return initResult.apply(void 0, args)\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  };\n  moduleFunc._getInitResult = function() {\n    // We can ignore getTransferables in main thread. TODO workerId?\n    var dependencies = options.dependencies;\n    var init = options.init;\n\n    // Resolve dependencies\n    dependencies = Array.isArray(dependencies) ? dependencies.map(function (dep) { return dep && dep._getInitResult ? dep._getInitResult() : dep; }\n    ) : [];\n\n    // Invoke init with the resolved dependencies\n    var initThenable = DefaultThenable.all(dependencies).then(function (deps) {\n      return init.apply(null, deps)\n    });\n\n    // Cache the resolved promise for subsequent calls\n    moduleFunc._getInitResult = function () { return initThenable; };\n\n    return initThenable\n  };\n  return moduleFunc\n}\n\nvar supportsWorkers = function () {\n  var supported = false;\n\n  // Only attempt worker initialization in browsers; elsewhere it would just be\n  // noise e.g. loading into a Node environment for SSR.\n  if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\n    try {\n      // TODO additional checks for things like importScripts within the worker?\n      //  Would need to be an async check.\n      var worker = new Worker(\n        URL.createObjectURL(new Blob([''], { type: 'application/javascript' }))\n      );\n      worker.terminate();\n      supported = true;\n    } catch (err) {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') ; else {\n        console.log(\n          (\"Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [\" + (err.message) + \"]\")\n        );\n      }\n    }\n  }\n\n  // Cached result\n  supportsWorkers = function () { return supported; };\n  return supported\n};\n\nvar _workerModuleId = 0;\nvar _messageId = 0;\nvar _allowInitAsString = false;\nvar workers = Object.create(null);\nvar openRequests = /*#__PURE__*/(function () {\n  var obj = Object.create(null);\n  obj._count = 0;\n  return obj\n})();\n\n\n/**\n * Define a module of code that will be executed with a web worker. This provides a simple\n * interface for moving chunks of logic off the main thread, and managing their dependencies\n * among one another.\n *\n * @param {object} options\n * @param {function} options.init - The main function that initializes the module. This will be run\n *        within the worker, and will be passed the resolved dependencies as arguments. Its\n *        return value becomes the module's content, which can then be used by other modules\n *        that depend on it. This function can perform any logic using those dependencies, but\n *        must not depend on anything from its parent closures.\n * @param {array} [options.dependencies] - Provides any dependencies required by the init function:\n *        - Primitives like strings, numbers, booleans\n *        - Raw functions; these will be stringified and rehydrated within the worker so they\n *          must not depend on anything from their parent closures\n *        - Other worker modules; these will be resolved within the worker, and therefore modules\n *          that provide functions can be called without having to cross the worker/main thread\n *          boundary.\n * @param {function} [options.getTransferables] - An optional function that will be run in the worker\n *        just before posting the response value from a module call back to the main thread.\n *        It will be passed that response value, and if it returns an array then that will be\n *        used as the \"transferables\" parameter to `postMessage`. Use this if there are values\n *        in the response that can/should be transfered rather than cloned.\n * @param {string} [options.name] - A descriptive name for this module; this can be useful for\n *        debugging but is not currently used for anything else.\n * @param {string} [options.workerId] - By default all modules will run in the same dedicated worker,\n *        but if you want to use multiple workers you can pass a `workerId` to indicate a specific\n *        worker to spawn. Note that each worker is completely standalone and no data or state will\n *        be shared between them. If a worker module is used as a dependency by worker modules\n *        using different `workerId`s, then that dependency will be re-registered in each worker.\n * @return {function(...[*]): {then}}\n */\nfunction defineWorkerModule(options) {\n  if ((!options || typeof options.init !== 'function') && !_allowInitAsString) {\n    throw new Error('requires `options.init` function')\n  }\n  var dependencies = options.dependencies;\n  var init = options.init;\n  var getTransferables = options.getTransferables;\n  var workerId = options.workerId;\n\n  if (!supportsWorkers()) {\n    return defineMainThreadModule(options)\n  }\n\n  if (workerId == null) {\n    workerId = '#default';\n  }\n  var id = \"workerModule\" + (++_workerModuleId);\n  var name = options.name || id;\n  var registrationThenable = null;\n\n  dependencies = dependencies && dependencies.map(function (dep) {\n    // Wrap raw functions as worker modules with no dependencies\n    if (typeof dep === 'function' && !dep.workerModuleData) {\n      _allowInitAsString = true;\n      dep = defineWorkerModule({\n        workerId: workerId,\n        name: (\"<\" + name + \"> function dependency: \" + (dep.name)),\n        init: (\"function(){return (\\n\" + (stringifyFunction(dep)) + \"\\n)}\")\n      });\n      _allowInitAsString = false;\n    }\n    // Grab postable data for worker modules\n    if (dep && dep.workerModuleData) {\n      dep = dep.workerModuleData;\n    }\n    return dep\n  });\n\n  function moduleFunc() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    // Register this module if needed\n    if (!registrationThenable) {\n      registrationThenable = callWorker(workerId,'registerModule', moduleFunc.workerModuleData);\n    }\n\n    // Invoke the module, returning a thenable\n    return registrationThenable.then(function (ref) {\n      var isCallable = ref.isCallable;\n\n      if (isCallable) {\n        return callWorker(workerId,'callModule', {id: id, args: args})\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  }\n  moduleFunc.workerModuleData = {\n    isWorkerModule: true,\n    id: id,\n    name: name,\n    dependencies: dependencies,\n    init: stringifyFunction(init),\n    getTransferables: getTransferables && stringifyFunction(getTransferables)\n  };\n  return moduleFunc\n}\n\n/**\n * Stringifies a function into a form that can be deserialized in the worker\n * @param fn\n */\nfunction stringifyFunction(fn) {\n  var str = fn.toString();\n  // If it was defined in object method/property format, it needs to be modified\n  if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\n    str = 'function ' + str;\n  }\n  return str\n}\n\n\nfunction getWorker(workerId) {\n  var worker = workers[workerId];\n  if (!worker) {\n    // Bootstrap the worker's content\n    var bootstrap = stringifyFunction(workerBootstrap);\n\n    // Create the worker from the bootstrap function content\n    worker = workers[workerId] = new Worker(\n      URL.createObjectURL(\n        new Blob(\n          [(\"/** Worker Module Bootstrap: \" + (workerId.replace(/\\*/g, '')) + \" **/\\n\\n;(\" + bootstrap + \")()\")],\n          {type: 'application/javascript'}\n        )\n      )\n    );\n\n    // Single handler for response messages from the worker\n    worker.onmessage = function (e) {\n      var response = e.data;\n      var msgId = response.messageId;\n      var callback = openRequests[msgId];\n      if (!callback) {\n        throw new Error('WorkerModule response with empty or unknown messageId')\n      }\n      delete openRequests[msgId];\n      openRequests.count--;\n      callback(response);\n    };\n  }\n  return worker\n}\n\n// Issue a call to the worker with a callback to handle the response\nfunction callWorker(workerId, action, data) {\n  var thenable = DefaultThenable();\n  var messageId = ++_messageId;\n  openRequests[messageId] = function (response) {\n    if (response.success) {\n      thenable.resolve(response.result);\n    } else {\n      thenable.reject(new Error((\"Error in worker \" + action + \" call: \" + (response.error))));\n    }\n  };\n  openRequests._count++;\n  if (openRequests.count > 1000) { //detect leaks\n    console.warn('Large number of open WorkerModule requests, some may not be returning');\n  }\n  getWorker(workerId).postMessage({\n    messageId: messageId,\n    action: action,\n    data: data\n  });\n  return thenable\n}\n\n/**\n * Just the {@link Thenable} function wrapped as a worker module. If another worker\n * module needs Thenable as a dependency, it's better to pass this module rather than\n * the raw function in its `dependencies` array so it only gets registered once.\n */\nvar ThenableWorkerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Thenable',\n  dependencies: [DefaultThenable],\n  init: function(Thenable) {\n    return Thenable\n  }\n});\n\nexport { DefaultThenable as Thenable, ThenableWorkerModule, defineWorkerModule, stringifyFunction };\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { ShaderChunk, MathUtils, UniformsUtils, MeshDepthMaterial, RGBADepthPacking, MeshDistanceMaterial, ShaderLib, DataTexture, Vector3, Mesh, CylinderBufferGeometry, Vector2, MeshStandardMaterial, DoubleSide } from 'three';\n\n/**\r\n * Regular expression for matching the `void main() {` opener line in GLSL.\r\n * @type {RegExp}\r\n */\r\nconst voidMainRegExp = /\\bvoid\\s+main\\s*\\(\\s*\\)\\s*{/g;\n\n/**\r\n * Recursively expands all `#include <xyz>` statements within string of shader code.\r\n * Copied from three's WebGLProgram#parseIncludes for external use.\r\n *\r\n * @param {string} source - The GLSL source code to evaluate\r\n * @return {string} The GLSL code with all includes expanded\r\n */\r\nfunction expandShaderIncludes( source ) {\r\n  const pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n  function replace(match, include) {\r\n    let chunk = ShaderChunk[include];\r\n    return chunk ? expandShaderIncludes(chunk) : match\r\n  }\r\n  return source.replace( pattern, replace )\r\n}\n\n// Local assign polyfill to avoid importing troika-core\r\nconst assign = Object.assign || function(/*target, ...sources*/) {\r\n  let target = arguments[0];\r\n  for (let i = 1, len = arguments.length; i < len; i++) {\r\n    let source = arguments[i];\r\n    if (source) {\r\n      for (let prop in source) {\r\n        if (source.hasOwnProperty(prop)) {\r\n          target[prop] = source[prop];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return target\r\n};\r\n\r\n\r\nconst epoch = Date.now();\r\nconst CONSTRUCTOR_CACHE = new WeakMap();\r\nconst SHADER_UPGRADE_CACHE = new Map();\r\n\r\n// Material ids must be integers, but we can't access the increment from Three's `Material` module,\r\n// so let's choose a sufficiently large starting value that should theoretically never collide.\r\nlet materialInstanceId = 1e10;\r\n\r\n/**\r\n * A utility for creating a custom shader material derived from another material's\r\n * shaders. This allows you to inject custom shader logic and transforms into the\r\n * builtin ThreeJS materials without having to recreate them from scratch.\r\n *\r\n * @param {THREE.Material} baseMaterial - the original material to derive from\r\n *\r\n * @param {Object} options - How the base material should be modified.\r\n * @param {Object} options.defines - Custom `defines` for the material\r\n * @param {Object} options.extensions - Custom `extensions` for the material, e.g. `{derivatives: true}`\r\n * @param {Object} options.uniforms - Custom `uniforms` for use in the modified shader. These can\r\n *        be accessed and manipulated via the resulting material's `uniforms` property, just like\r\n *        in a ShaderMaterial. You do not need to repeat the base material's own uniforms here.\r\n * @param {String} options.timeUniform - If specified, a uniform of this name will be injected into\r\n *        both shaders, and it will automatically be updated on each render frame with a number of\r\n *        elapsed milliseconds. The \"zero\" epoch time is not significant so don't rely on this as a\r\n *        true calendar time.\r\n * @param {String} options.vertexDefs - Custom GLSL code to inject into the vertex shader's top-level\r\n *        definitions, above the `void main()` function.\r\n * @param {String} options.vertexMainIntro - Custom GLSL code to inject at the top of the vertex\r\n *        shader's `void main` function.\r\n * @param {String} options.vertexMainOutro - Custom GLSL code to inject at the end of the vertex\r\n *        shader's `void main` function.\r\n * @param {String} options.vertexTransform - Custom GLSL code to manipulate the `position`, `normal`,\r\n *        and/or `uv` vertex attributes. This code will be wrapped within a standalone function with\r\n *        those attributes exposed by their normal names as read/write values.\r\n * @param {String} options.fragmentDefs - Custom GLSL code to inject into the fragment shader's top-level\r\n *        definitions, above the `void main()` function.\r\n * @param {String} options.fragmentMainIntro - Custom GLSL code to inject at the top of the fragment\r\n *        shader's `void main` function.\r\n * @param {String} options.fragmentMainOutro - Custom GLSL code to inject at the end of the fragment\r\n *        shader's `void main` function. You can manipulate `gl_FragColor` here but keep in mind it goes\r\n *        after any of ThreeJS's color postprocessing shader chunks (tonemapping, fog, etc.), so if you\r\n *        want those to apply to your changes use `fragmentColorTransform` instead.\r\n * @param {String} options.fragmentColorTransform - Custom GLSL code to manipulate the `gl_FragColor`\r\n *        output value. Will be injected near the end of the `void main` function, but before any\r\n *        of ThreeJS's color postprocessing shader chunks (tonemapping, fog, etc.), and before the\r\n *        `fragmentMainOutro`.\r\n * @param {function<{vertexShader,fragmentShader}>:{vertexShader,fragmentShader}} options.customRewriter - A function\r\n *        for performing custom rewrites of the full shader code. Useful if you need to do something\r\n *        special that's not covered by the other builtin options. This function will be executed before\r\n *        any other transforms are applied.\r\n * @param {boolean} options.chained - Set to `true` to prototype-chain the derived material to the base\r\n *        material, rather than the default behavior of copying it. This allows the derived material to\r\n *        automatically pick up changes made to the base material and its properties. This can be useful\r\n *        where the derived material is hidden from the user as an implementation detail, allowing them\r\n *        to work with the original material like normal. But it can result in unexpected behavior if not\r\n *        handled carefully.\r\n *\r\n * @return {THREE.Material}\r\n *\r\n * The returned material will also have two new methods, `getDepthMaterial()` and `getDistanceMaterial()`,\r\n * which can be called to get a variant of the derived material for use in shadow casting. If the\r\n * target mesh is expected to cast shadows, then you can assign these to the mesh's `customDepthMaterial`\r\n * (for directional and spot lights) and/or `customDistanceMaterial` (for point lights) properties to\r\n * allow the cast shadow to honor your derived shader's vertex transforms and discarded fragments. These\r\n * will also set a custom `#define IS_DEPTH_MATERIAL` or `#define IS_DISTANCE_MATERIAL` that you can look\r\n * for in your derived shaders with `#ifdef` to customize their behavior for the depth or distance\r\n * scenarios, e.g. skipping antialiasing or expensive shader logic.\r\n */\r\nfunction createDerivedMaterial(baseMaterial, options) {\r\n  // Generate a key that is unique to the content of these `options`. We'll use this\r\n  // throughout for caching and for generating the upgraded shader code. This increases\r\n  // the likelihood that the resulting shaders will line up across multiple calls so\r\n  // their GL programs can be shared and cached.\r\n  const optionsKey = getKeyForOptions(options);\r\n\r\n  // First check to see if we've already derived from this baseMaterial using this\r\n  // unique set of options, and if so reuse the constructor to avoid some allocations.\r\n  let ctorsByDerivation = CONSTRUCTOR_CACHE.get(baseMaterial);\r\n  if (!ctorsByDerivation) {\r\n    CONSTRUCTOR_CACHE.set(baseMaterial, (ctorsByDerivation = Object.create(null)));\r\n  }\r\n  if (ctorsByDerivation[optionsKey]) {\r\n    return new ctorsByDerivation[optionsKey]()\r\n  }\r\n\r\n  const privateBeforeCompileProp = `_onBeforeCompile${optionsKey}`;\r\n\r\n  // Private onBeforeCompile handler that injects the modified shaders and uniforms when\r\n  // the renderer switches to this material's program\r\n  const onBeforeCompile = function (shaderInfo) {\r\n    baseMaterial.onBeforeCompile.call(this, shaderInfo);\r\n\r\n    // Upgrade the shaders, caching the result by incoming source code\r\n    const cacheKey = optionsKey + '|||' + shaderInfo.vertexShader + '|||' + shaderInfo.fragmentShader;\r\n    let upgradedShaders = SHADER_UPGRADE_CACHE[cacheKey];\r\n    if (!upgradedShaders) {\r\n      const upgraded = upgradeShaders(shaderInfo, options, optionsKey);\r\n      upgradedShaders = SHADER_UPGRADE_CACHE[cacheKey] = upgraded;\r\n    }\r\n\r\n    // Inject upgraded shaders and uniforms into the program\r\n    shaderInfo.vertexShader = upgradedShaders.vertexShader;\r\n    shaderInfo.fragmentShader = upgradedShaders.fragmentShader;\r\n    assign(shaderInfo.uniforms, this.uniforms);\r\n\r\n    // Inject auto-updating time uniform if requested\r\n    if (options.timeUniform) {\r\n      shaderInfo.uniforms[options.timeUniform] = {\r\n        get value() {return Date.now() - epoch}\r\n      };\r\n    }\r\n\r\n    // Users can still add their own handlers on top of ours\r\n    if (this[privateBeforeCompileProp]) {\r\n      this[privateBeforeCompileProp](shaderInfo);\r\n    }\r\n  };\r\n\r\n  const DerivedMaterial = function DerivedMaterial() {\r\n    return derive(options.chained ? baseMaterial : baseMaterial.clone())\r\n  };\r\n\r\n  const derive = function(base) {\r\n    // Prototype chain to the base material\r\n    const derived = Object.create(base, descriptor);\r\n\r\n    // Store the baseMaterial for reference; this is always the original even when cloning\r\n    Object.defineProperty(derived, 'baseMaterial', { value: baseMaterial });\r\n\r\n    // Needs its own ids\r\n    Object.defineProperty(derived, 'id', { value: materialInstanceId++ });\r\n    derived.uuid = MathUtils.generateUUID();\r\n\r\n    // Merge uniforms, defines, and extensions\r\n    derived.uniforms = assign({}, base.uniforms, options.uniforms);\r\n    derived.defines = assign({}, base.defines, options.defines);\r\n    derived.defines[`TROIKA_DERIVED_MATERIAL_${optionsKey}`] = ''; //force a program change from the base material\r\n    derived.extensions = assign({}, base.extensions, options.extensions);\r\n\r\n    // Don't inherit EventDispatcher listeners\r\n    derived._listeners = undefined;\r\n\r\n    return derived\r\n  };\r\n\r\n  const descriptor = {\r\n    constructor: {value: DerivedMaterial},\r\n    isDerivedMaterial: {value: true},\r\n\r\n    customProgramCacheKey: {\r\n      value: function () {\r\n        return optionsKey\r\n      }\r\n    },\r\n\r\n    onBeforeCompile: {\r\n      get() {\r\n        return onBeforeCompile\r\n      },\r\n      set(fn) {\r\n        this[privateBeforeCompileProp] = fn;\r\n      }\r\n    },\r\n\r\n    copy: {\r\n      writable: true,\r\n      configurable: true,\r\n      value: function (source) {\r\n        baseMaterial.copy.call(this, source);\r\n        if (!baseMaterial.isShaderMaterial && !baseMaterial.isDerivedMaterial) {\r\n          assign(this.extensions, source.extensions);\r\n          assign(this.defines, source.defines);\r\n          assign(this.uniforms, UniformsUtils.clone(source.uniforms));\r\n        }\r\n        return this\r\n      }\r\n    },\r\n\r\n    clone: {\r\n      writable: true,\r\n      configurable: true,\r\n      value: function () {\r\n        const newBase = new baseMaterial.constructor();\r\n        return derive(newBase).copy(this)\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Utility to get a MeshDepthMaterial that will honor this derived material's vertex\r\n     * transformations and discarded fragments.\r\n     */\r\n    getDepthMaterial: {\r\n      writable: true,\r\n      configurable: true,\r\n      value: function() {\r\n        let depthMaterial = this._depthMaterial;\r\n        if (!depthMaterial) {\r\n          depthMaterial = this._depthMaterial = createDerivedMaterial(\r\n            baseMaterial.isDerivedMaterial\r\n              ? baseMaterial.getDepthMaterial()\r\n              : new MeshDepthMaterial({ depthPacking: RGBADepthPacking }),\r\n            options\r\n          );\r\n          depthMaterial.defines.IS_DEPTH_MATERIAL = '';\r\n          depthMaterial.uniforms = this.uniforms; //automatically recieve same uniform values\r\n        }\r\n        return depthMaterial\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Utility to get a MeshDistanceMaterial that will honor this derived material's vertex\r\n     * transformations and discarded fragments.\r\n     */\r\n    getDistanceMaterial: {\r\n      writable: true,\r\n      configurable: true,\r\n      value: function() {\r\n        let distanceMaterial = this._distanceMaterial;\r\n        if (!distanceMaterial) {\r\n          distanceMaterial = this._distanceMaterial = createDerivedMaterial(\r\n            baseMaterial.isDerivedMaterial\r\n              ? baseMaterial.getDistanceMaterial()\r\n              : new MeshDistanceMaterial(),\r\n            options\r\n          );\r\n          distanceMaterial.defines.IS_DISTANCE_MATERIAL = '';\r\n          distanceMaterial.uniforms = this.uniforms; //automatically recieve same uniform values\r\n        }\r\n        return distanceMaterial\r\n      }\r\n    },\r\n\r\n    dispose: {\r\n      writable: true,\r\n      configurable: true,\r\n      value() {\r\n        const {_depthMaterial, _distanceMaterial} = this;\r\n        if (_depthMaterial) _depthMaterial.dispose();\r\n        if (_distanceMaterial) _distanceMaterial.dispose();\r\n        baseMaterial.dispose.call(this);\r\n      }\r\n    }\r\n  };\r\n\r\n  ctorsByDerivation[optionsKey] = DerivedMaterial;\r\n  return new DerivedMaterial()\r\n}\r\n\r\n\r\nfunction upgradeShaders({vertexShader, fragmentShader}, options, key) {\r\n  let {\r\n    vertexDefs,\r\n    vertexMainIntro,\r\n    vertexMainOutro,\r\n    vertexTransform,\r\n    fragmentDefs,\r\n    fragmentMainIntro,\r\n    fragmentMainOutro,\r\n    fragmentColorTransform,\r\n    customRewriter,\r\n    timeUniform\r\n  } = options;\r\n\r\n  vertexDefs = vertexDefs || '';\r\n  vertexMainIntro = vertexMainIntro || '';\r\n  vertexMainOutro = vertexMainOutro || '';\r\n  fragmentDefs = fragmentDefs || '';\r\n  fragmentMainIntro = fragmentMainIntro || '';\r\n  fragmentMainOutro = fragmentMainOutro || '';\r\n\r\n  // Expand includes if needed\r\n  if (vertexTransform || customRewriter) {\r\n    vertexShader = expandShaderIncludes(vertexShader);\r\n  }\r\n  if (fragmentColorTransform || customRewriter) {\r\n    // We need to be able to find postprocessing chunks after include expansion in order to\r\n    // put them after the fragmentColorTransform, so mark them with comments first. Even if\r\n    // this particular derivation doesn't have a fragmentColorTransform, other derivations may,\r\n    // so we still mark them.\r\n    fragmentShader = fragmentShader.replace(\r\n      /^[ \\t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,\r\n      '\\n//!BEGIN_POST_CHUNK $1\\n$&\\n//!END_POST_CHUNK\\n'\r\n    );\r\n    fragmentShader = expandShaderIncludes(fragmentShader);\r\n  }\r\n\r\n  // Apply custom rewriter function\r\n  if (customRewriter) {\r\n    let res = customRewriter({vertexShader, fragmentShader});\r\n    vertexShader = res.vertexShader;\r\n    fragmentShader = res.fragmentShader;\r\n  }\r\n\r\n  // The fragmentColorTransform needs to go before any postprocessing chunks, so extract\r\n  // those and re-insert them into the outro in the correct place:\r\n  if (fragmentColorTransform) {\r\n    let postChunks = [];\r\n    fragmentShader = fragmentShader.replace(\r\n      /^\\/\\/!BEGIN_POST_CHUNK[^]+?^\\/\\/!END_POST_CHUNK/gm, // [^]+? = non-greedy match of any chars including newlines\r\n      match => {\r\n        postChunks.push(match);\r\n        return ''\r\n      }\r\n    );\r\n    fragmentMainOutro = `${fragmentColorTransform}\\n${postChunks.join('\\n')}\\n${fragmentMainOutro}`;\r\n  }\r\n\r\n  // Inject auto-updating time uniform if requested\r\n  if (timeUniform) {\r\n    const code = `\\nuniform float ${timeUniform};\\n`;\r\n    vertexDefs = code + vertexDefs;\r\n    fragmentDefs = code + fragmentDefs;\r\n  }\r\n\r\n  // Inject a function for the vertexTransform and rename all usages of position/normal/uv\r\n  if (vertexTransform) {\r\n    vertexDefs = `${vertexDefs}\r\nvec3 troika_position_${key};\r\nvec3 troika_normal_${key};\r\nvec2 troika_uv_${key};\r\nvoid troikaVertexTransform${key}(inout vec3 position, inout vec3 normal, inout vec2 uv) {\r\n  ${vertexTransform}\r\n}\r\n`;\r\n    vertexMainIntro = `\r\ntroika_position_${key} = vec3(position);\r\ntroika_normal_${key} = vec3(normal);\r\ntroika_uv_${key} = vec2(uv);\r\ntroikaVertexTransform${key}(troika_position_${key}, troika_normal_${key}, troika_uv_${key});\r\n${vertexMainIntro}\r\n`;\r\n    vertexShader = vertexShader.replace(/\\b(position|normal|uv)\\b/g, (match, match1, index, fullStr) => {\r\n      return /\\battribute\\s+vec[23]\\s+$/.test(fullStr.substr(0, index)) ? match1 : `troika_${match1}_${key}`\r\n    });\r\n  }\r\n\r\n  // Inject defs and intro/outro snippets\r\n  vertexShader = injectIntoShaderCode(vertexShader, key, vertexDefs, vertexMainIntro, vertexMainOutro);\r\n  fragmentShader = injectIntoShaderCode(fragmentShader, key, fragmentDefs, fragmentMainIntro, fragmentMainOutro);\r\n\r\n  return {\r\n    vertexShader,\r\n    fragmentShader\r\n  }\r\n}\r\n\r\nfunction injectIntoShaderCode(shaderCode, id, defs, intro, outro) {\r\n  if (intro || outro || defs) {\r\n    shaderCode = shaderCode.replace(voidMainRegExp, `\r\n${defs}\r\nvoid troikaOrigMain${id}() {`\r\n    );\r\n    shaderCode += `\r\nvoid main() {\r\n  ${intro}\r\n  troikaOrigMain${id}();\r\n  ${outro}\r\n}`;\r\n  }\r\n  return shaderCode\r\n}\r\n\r\n\r\nfunction optionsJsonReplacer(key, value) {\r\n  return key === 'uniforms' ? undefined : typeof value === 'function' ? value.toString() : value\r\n}\r\n\r\nlet _idCtr = 0;\r\nconst optionsHashesToIds = new Map();\r\nfunction getKeyForOptions(options) {\r\n  const optionsHash = JSON.stringify(options, optionsJsonReplacer);\r\n  let id = optionsHashesToIds.get(optionsHash);\r\n  if (id == null) {\r\n    optionsHashesToIds.set(optionsHash, (id = ++_idCtr));\r\n  }\r\n  return id\r\n}\n\n// Copied from threejs WebGLPrograms.js so we can resolve builtin materials to their shaders\r\n// TODO how can we keep this from getting stale?\r\nconst MATERIAL_TYPES_TO_SHADERS = {\r\n  MeshDepthMaterial: 'depth',\r\n  MeshDistanceMaterial: 'distanceRGBA',\r\n  MeshNormalMaterial: 'normal',\r\n  MeshBasicMaterial: 'basic',\r\n  MeshLambertMaterial: 'lambert',\r\n  MeshPhongMaterial: 'phong',\r\n  MeshToonMaterial: 'phong',\r\n  MeshStandardMaterial: 'physical',\r\n  MeshPhysicalMaterial: 'physical',\r\n  MeshMatcapMaterial: 'matcap',\r\n  LineBasicMaterial: 'basic',\r\n  LineDashedMaterial: 'dashed',\r\n  PointsMaterial: 'points',\r\n  ShadowMaterial: 'shadow',\r\n  SpriteMaterial: 'sprite'\r\n};\r\n\r\n/**\r\n * Given a Three.js `Material` instance, find the shaders/uniforms that will be\r\n * used to render that material.\r\n *\r\n * @param material - the Material instance\r\n * @return {object} - the material's shader info: `{uniforms:{}, fragmentShader:'', vertexShader:''}`\r\n */\r\nfunction getShadersForMaterial(material) {\r\n  let builtinType = MATERIAL_TYPES_TO_SHADERS[material.type];\r\n  return builtinType ? ShaderLib[builtinType] : material //TODO fallback for unknown type?\r\n}\n\n/**\r\n * Find all uniforms and their types within a shader code string.\r\n *\r\n * @param {string} shader - The shader code to parse\r\n * @return {object} mapping of uniform names to their glsl type\r\n */\r\nfunction getShaderUniformTypes(shader) {\r\n  let uniformRE = /\\buniform\\s+(int|float|vec[234])\\s+([A-Za-z_][\\w]*)/g;\r\n  let uniforms = Object.create(null);\r\n  let match;\r\n  while ((match = uniformRE.exec(shader)) !== null) {\r\n    uniforms[match[2]] = match[1];\r\n  }\r\n  return uniforms\r\n}\n\n/**\r\n * @class ShaderFloatArray\r\n *\r\n * When writing a custom WebGL shader, sometimes you need to pass it an array of floating\r\n * point numbers that it can read from. Unfortunately this is very difficult to do in WebGL,\r\n * because:\r\n *\r\n *   - GLSL \"array\" uniforms can only be of a constant length.\r\n *   - Textures can only hold floating point numbers in WebGL1 if the `OES_texture_float`\r\n *     extension is available.\r\n *\r\n * ShaderFloatArray is an array-like abstraction that encodes its floating point data into\r\n * an RGBA texture's four Uint8 components, and provides the corresponding ThreeJS uniforms\r\n * and GLSL code for you to put in your custom shader to query the float values by array index.\r\n *\r\n * This should generally only be used within a fragment shader, as some environments (e.g. iOS)\r\n * only allow texture lookups in fragment shaders.\r\n *\r\n * TODO:\r\n *   - Fix texture to fill both dimensions so we don't easily hit max texture size limits\r\n *   - Use a float texture if the extension is available so we can skip the encoding process\r\n */\r\nclass ShaderFloatArray {\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.textureUniform = `dataTex_${name}`;\r\n    this.textureSizeUniform = `dataTexSize_${name}`;\r\n    this.multiplierUniform = `dataMultiplier_${name}`;\r\n\r\n    /**\r\n     * @property dataSizeUniform - the name of the GLSL uniform that will hold the\r\n     * length of the data array.\r\n     * @type {string}\r\n     */\r\n    this.dataSizeUniform = `dataSize_${name}`;\r\n\r\n    /**\r\n     * @property readFunction - the name of the GLSL function that should be called to\r\n     * read data out of the array by index.\r\n     * @type {string}\r\n     */\r\n    this.readFunction = `readData_${name}`;\r\n\r\n    this._raw = new Float32Array(0);\r\n    this._texture = new DataTexture(new Uint8Array(0), 0, 1);\r\n    this._length = 0;\r\n    this._multiplier = 1;\r\n  }\r\n\r\n  /**\r\n   * @property length - the current length of the data array\r\n   * @type {number}\r\n   */\r\n  set length(value) {\r\n    if (value !== this._length) {\r\n      // Find nearest power-of-2 that holds the new length\r\n      const size = Math.pow(2, Math.ceil(Math.log2(value)));\r\n      const raw = this._raw;\r\n      if (size < raw.length) {\r\n        this._raw = raw.subarray(0, size);\r\n      }\r\n      else if(size > raw.length) {\r\n        this._raw = new Float32Array(size);\r\n        this._raw.set(raw);\r\n      }\r\n      this._length = value;\r\n    }\r\n  }\r\n  get length() {\r\n    return this._length\r\n  }\r\n\r\n  /**\r\n   * Add a value to the end of the data array\r\n   * @param {number} value\r\n   */\r\n  push(value) {\r\n    return this.set(this.length++, value)\r\n  }\r\n\r\n  /**\r\n   * Replace the existing data with that from a new array\r\n   * @param {ArrayLike<number>} array\r\n   */\r\n  setArray(array) {\r\n    this.length = array.length;\r\n    this._raw.set(array);\r\n    this._needsRepack = true;\r\n  }\r\n\r\n  /**\r\n   * Get the current value at index\r\n   * @param {number} index\r\n   * @return {number}\r\n   */\r\n  get(index) {\r\n    return this._raw[index]\r\n  }\r\n\r\n  set(index, value) {\r\n    if (index + 1 > this._length) {\r\n      this.length = index + 1;\r\n    }\r\n    if (value !== this._raw[index]) {\r\n      this._raw[index] = value;\r\n      encodeFloatToFourInts(\r\n        value / this._multiplier,\r\n        this._texture.image.data,\r\n        index * 4\r\n      );\r\n      this._needsMultCheck = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Make a copy of this ShaderFloatArray\r\n   * @return {ShaderFloatArray}\r\n   */\r\n  clone() {\r\n    const clone = new ShaderFloatArray(this.name);\r\n    clone.setArray(this._raw);\r\n    return clone\r\n  }\r\n\r\n  /**\r\n   * Retrieve the set of Uniforms that must to be added to the target ShaderMaterial or\r\n   * DerivedMaterial, to feed the GLSL code generated by {@link #getShaderHeaderCode}.\r\n   * @return {Object}\r\n   */\r\n  getShaderUniforms() {\r\n    const me = this;\r\n    return {\r\n      [this.textureUniform]: {get value() {\r\n        me._sync();\r\n        return me._texture\r\n      }},\r\n      [this.textureSizeUniform]: {get value() {\r\n        me._sync();\r\n        return me._texture.image.width\r\n      }},\r\n      [this.dataSizeUniform]: {get value() {\r\n        me._sync();\r\n        return me.length\r\n      }},\r\n      [this.multiplierUniform]: {get value() {\r\n        me._sync();\r\n        return me._multiplier\r\n      }}\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the GLSL code that must be injected into the shader's definitions area to\r\n   * enable reading from the data array. This exposes a function with a name matching\r\n   * the {@link #readFunction} property, which other shader code can call to read values\r\n   * from the array by their index.\r\n   * @return {string}\r\n   */\r\n  getShaderHeaderCode() {\r\n    const {textureUniform, textureSizeUniform, dataSizeUniform, multiplierUniform, readFunction} = this;\r\n    return `\r\nuniform sampler2D ${textureUniform};\r\nuniform float ${textureSizeUniform};\r\nuniform float ${dataSizeUniform};\r\nuniform float ${multiplierUniform};\r\n\r\nfloat ${readFunction}(float index) {\r\n  vec2 texUV = vec2((index + 0.5) / ${textureSizeUniform}, 0.5);\r\n  vec4 pixel = texture2D(${textureUniform}, texUV);\r\n  return dot(pixel, 1.0 / vec4(1.0, 255.0, 65025.0, 16581375.0)) * ${multiplierUniform};\r\n}\r\n`\r\n  }\r\n\r\n  /**\r\n   * @private Synchronize any pending changes to the underlying DataTexture\r\n   */\r\n  _sync() {\r\n    const tex = this._texture;\r\n    const raw = this._raw;\r\n    let needsRepack = this._needsRepack;\r\n\r\n    // If the size of the raw array changed, resize the texture to match\r\n    if (raw.length !== tex.image.width) {\r\n      tex.image = {\r\n        data: new Uint8Array(raw.length * 4),\r\n        width: raw.length,\r\n        height: 1\r\n      };\r\n      needsRepack = true;\r\n    }\r\n\r\n    // If the values changed, check the multiplier. This should be a value by which\r\n    // all the values are divided to constrain them to the [0,1] range required by\r\n    // the Uint8 packing algorithm. We pick the nearest power of 2 that holds the\r\n    // maximum value for greatest accuracy.\r\n    if (needsRepack || this._needsMultCheck) {\r\n      const maxVal = this._raw.reduce((a, b) => Math.max(a, b), 0);\r\n      const mult = Math.pow(2, Math.ceil(Math.log2(maxVal)));\r\n      if (mult !== this._multiplier) {\r\n        this._multiplier = mult;\r\n        needsRepack = true;\r\n      }\r\n      tex.needsUpdate = true;\r\n      this._needsMultCheck = false;\r\n    }\r\n\r\n    // If things changed in a way we need to repack, do so\r\n    if (needsRepack) {\r\n      for (let i = 0, len = raw.length, mult = this._multiplier; i < len; i++) {\r\n        encodeFloatToFourInts(raw[i] / mult, tex.image.data, i * 4);\r\n      }\r\n      this._needsRepack = false;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Encode a floating point number into a set of four 8-bit integers.\r\n * Also see the companion decoder function #decodeFloatFromFourInts.\r\n *\r\n * This is adapted to JavaScript from the basic approach at\r\n * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n * but writes out integers in the range 0-255 instead of floats in the range 0-1\r\n * so they can be more easily used in a Uint8Array for standard WebGL rgba textures.\r\n *\r\n * Some precision will necessarily be lost during the encoding and decoding process.\r\n * Testing shows that the maximum precision error is ~1.18e-10 which should be good\r\n * enough for most cases.\r\n *\r\n * @param {Number} value - the floating point number to encode. Must be in the range [0, 1]\r\n *        otherwise the results will be incorrect.\r\n * @param {Array|Uint8Array} array - an array into which the four ints should be written\r\n * @param {Number} startIndex - index in the output array at which to start writing the ints\r\n * @return {Array|Uint8Array}\r\n */\r\nfunction encodeFloatToFourInts(value, array, startIndex) {\r\n  // This is adapted to JS from the basic approach at\r\n  // http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n  // but writes to a Uint8Array instead of floats. Input values must be in\r\n  // the range [0, 1]. The maximum error after encoding and decoding is ~1.18e-10\r\n  let enc0 = 255 * value;\r\n  let enc1 = 255 * (enc0 % 1);\r\n  let enc2 = 255 * (enc1 % 1);\r\n  let enc3 = 255 * (enc2 % 1);\r\n\r\n  enc0 = enc0 & 255;\r\n  enc1 = enc1 & 255;\r\n  enc2 = enc2 & 255;\r\n  enc3 = Math.round(enc3) & 255;\r\n\r\n  array[startIndex] = enc0;\r\n  array[startIndex + 1] = enc1;\r\n  array[startIndex + 2] = enc2;\r\n  array[startIndex + 3] = enc3;\r\n  return array\r\n}\n\n/*\r\nInput geometry is a cylinder with r=1, height in y dimension from 0 to 1,\r\ndivided into a reasonable number of height segments.\r\n*/\r\n\r\nconst vertexDefs = `\r\nuniform vec3 pointA;\r\nuniform vec3 controlA;\r\nuniform vec3 controlB;\r\nuniform vec3 pointB;\r\nuniform float radius;\r\nvarying float bezierT;\r\n\r\nvec3 cubicBezier(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\r\n  float t2 = 1.0 - t;\r\n  float b0 = t2 * t2 * t2;\r\n  float b1 = 3.0 * t * t2 * t2;\r\n  float b2 = 3.0 * t * t * t2;\r\n  float b3 = t * t * t;\r\n  return b0 * p1 + b1 * c1 + b2 * c2 + b3 * p2;\r\n}\r\n\r\nvec3 cubicBezierDerivative(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\r\n  float t2 = 1.0 - t;\r\n  return -3.0 * p1 * t2 * t2 +\r\n    c1 * (3.0 * t2 * t2 - 6.0 * t2 * t) +\r\n    c2 * (6.0 * t2 * t - 3.0 * t * t) +\r\n    3.0 * p2 * t * t;\r\n}\r\n`;\r\n\r\nconst vertexTransform = `\r\nfloat t = position.y;\r\nbezierT = t;\r\nvec3 bezierCenterPos = cubicBezier(pointA, controlA, controlB, pointB, t);\r\nvec3 bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t));\r\n\r\n// Make \"sideways\" always perpendicular to the camera ray; this ensures that any twists\r\n// in the cylinder occur where you won't see them: \r\nvec3 viewDirection = normalMatrix * vec3(0.0, 0.0, 1.0);\r\nif (bezierDir == viewDirection) {\r\n  bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t == 1.0 ? t - 0.0001 : t + 0.0001));\r\n}\r\nvec3 sideways = normalize(cross(bezierDir, viewDirection));\r\nvec3 upish = normalize(cross(sideways, bezierDir));\r\n\r\n// Build a matrix for transforming this disc in the cylinder:\r\nmat4 discTx;\r\ndiscTx[0].xyz = sideways * radius;\r\ndiscTx[1].xyz = bezierDir * radius;\r\ndiscTx[2].xyz = upish * radius;\r\ndiscTx[3].xyz = bezierCenterPos;\r\ndiscTx[3][3] = 1.0;\r\n\r\n// Apply transform, ignoring original y\r\nposition = (discTx * vec4(position.x, 0.0, position.z, 1.0)).xyz;\r\nnormal = normalize(mat3(discTx) * normal);\r\n`;\r\n\r\nconst fragmentDefs = `\r\nuniform vec3 dashing;\r\nvarying float bezierT;\r\n`;\r\n\r\nconst fragmentMainIntro = `\r\nif (dashing.x + dashing.y > 0.0) {\r\n  float dashFrac = mod(bezierT - dashing.z, dashing.x + dashing.y);\r\n  if (dashFrac > dashing.x) {\r\n    discard;\r\n  }\r\n}\r\n`;\r\n\r\n// Debugging: separate color for each of the 6 sides:\r\n// const fragmentColorTransform = `\r\n// float sideNum = floor(vUV.x * 6.0);\r\n// vec3 mixColor = sideNum < 1.0 ? vec3(1.0, 0.0, 0.0) :\r\n//   sideNum < 2.0 ? vec3(0.0, 1.0, 1.0) :\r\n//   sideNum < 3.0 ? vec3(1.0, 1.0, 0.0) :\r\n//   sideNum < 4.0 ? vec3(0.0, 0.0, 1.0) :\r\n//   sideNum < 5.0 ? vec3(0.0, 1.0, 0.0) :\r\n//   vec3(1.0, 0.0, 1.0);\r\n// gl_FragColor.xyz = mix(gl_FragColor.xyz, mixColor, 0.5);\r\n// `\r\n\r\n\r\n\r\nfunction createBezierMeshMaterial(baseMaterial) {\r\n  return createDerivedMaterial(\r\n    baseMaterial,\r\n    {\r\n      chained: true,\r\n      uniforms: {\r\n        pointA: {value: new Vector3()},\r\n        controlA: {value: new Vector3()},\r\n        controlB: {value: new Vector3()},\r\n        pointB: {value: new Vector3()},\r\n        radius: {value: 0.01},\r\n        dashing: {value: new Vector3()} //on, off, offset\r\n      },\r\n      vertexDefs,\r\n      vertexTransform,\r\n      fragmentDefs,\r\n      fragmentMainIntro\r\n    }\r\n  )\r\n}\n\nlet geometry = null;\r\n\r\nconst defaultBaseMaterial = /*#__PURE__*/new MeshStandardMaterial({color: 0xffffff, side: DoubleSide});\r\n\r\n\r\n/**\r\n * A ThreeJS `Mesh` that bends a tube shape along a 3D cubic bezier path. The bending is done\r\n * by deforming a straight cylindrical geometry in the vertex shader based on a set of four\r\n * control point uniforms. It patches the necessary GLSL into the mesh's assigned `material`\r\n * automatically.\r\n *\r\n * The cubiz bezier path is determined by its four `Vector3` properties:\r\n * - `pointA`\r\n * - `controlA`\r\n * - `controlB`\r\n * - `pointB`\r\n *\r\n * The tube's radius is controlled by its `radius` property, which defaults to `0.01`.\r\n *\r\n * You can also give the tube a dashed appearance with two properties:\r\n *\r\n * - `dashArray` - an array of two numbers, defining the length of \"on\" and \"off\" parts of\r\n *   the dash. Each is a 0-1 ratio of the entire path's length. (Actually this is the `t` length\r\n *   used as input to the cubic bezier function, not its visible length.)\r\n * - `dashOffset` - offset of where the dash starts. You can animate this to make the dashes move.\r\n *\r\n * Note that the dashes will appear like a hollow tube, not solid. This will be more apparent on\r\n * thicker tubes.\r\n *\r\n * TODO: proper geometry bounding sphere and raycasting\r\n * TODO: allow control of the geometry's segment counts\r\n */\r\nclass BezierMesh extends Mesh {\r\n  static getGeometry() {\r\n    return geometry || (geometry =\r\n      new CylinderBufferGeometry(1, 1, 1, 6, 64).translate(0, 0.5, 0)\r\n    )\r\n  }\r\n\r\n  constructor() {\r\n    super(\r\n      BezierMesh.getGeometry(),\r\n      defaultBaseMaterial\r\n    );\r\n\r\n    this.pointA = new Vector3();\r\n    this.controlA = new Vector3();\r\n    this.controlB = new Vector3();\r\n    this.pointB = new Vector3();\r\n    this.radius = 0.01;\r\n    this.dashArray = new Vector2();\r\n    this.dashOffset = 0;\r\n\r\n    // TODO - disabling frustum culling until I figure out how to customize the\r\n    //  geometry's bounding sphere that gets used\r\n    this.frustumCulled = false;\r\n  }\r\n\r\n  // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\r\n  // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\r\n  get material() {\r\n    let derivedMaterial = this._derivedMaterial;\r\n    const baseMaterial = this._baseMaterial || this._defaultMaterial || (this._defaultMaterial = defaultBaseMaterial.clone());\r\n    if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\r\n      derivedMaterial = this._derivedMaterial = createBezierMeshMaterial(baseMaterial);\r\n      // dispose the derived material when its base material is disposed:\r\n      baseMaterial.addEventListener('dispose', function onDispose() {\r\n        baseMaterial.removeEventListener('dispose', onDispose);\r\n        derivedMaterial.dispose();\r\n      });\r\n    }\r\n    return derivedMaterial\r\n  }\r\n  set material(baseMaterial) {\r\n    this._baseMaterial = baseMaterial;\r\n  }\r\n\r\n  // Create and update material for shadows upon request:\r\n  get customDepthMaterial() {\r\n    return this.material.getDepthMaterial()\r\n  }\r\n  get customDistanceMaterial() {\r\n    return this.material.getDistanceMaterial()\r\n  }\r\n\r\n  onBeforeRender(shaderInfo) {\r\n    const {uniforms} = this.material;\r\n    const {pointA, controlA, controlB, pointB, radius, dashArray, dashOffset} = this;\r\n    uniforms.pointA.value.copy(pointA);\r\n    uniforms.controlA.value.copy(controlA);\r\n    uniforms.controlB.value.copy(controlB);\r\n    uniforms.pointB.value.copy(pointB);\r\n    uniforms.radius.value = radius;\r\n    uniforms.dashing.value.set(dashArray.x, dashArray.y, dashOffset || 0);\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    // TODO - just fail for now\r\n  }\r\n}\n\nexport { BezierMesh, ShaderFloatArray, createDerivedMaterial, expandShaderIncludes, getShaderUniformTypes, getShadersForMaterial, voidMainRegExp };\n","import { DataTexture, LuminanceFormat, LinearFilter, Color, Vector3, InstancedBufferGeometry, Sphere, Box3, InstancedBufferAttribute, PlaneBufferGeometry, Vector2, Vector4, Matrix3, MeshBasicMaterial, DoubleSide, Matrix4, Mesh } from 'three';\nimport { defineWorkerModule, ThenableWorkerModule } from 'troika-worker-utils';\nimport { createDerivedMaterial, voidMainRegExp } from 'troika-three-utils';\n\n/**\r\n * Initializes and returns a function to generate an SDF texture for a given glyph.\r\n * @param {function} createGlyphSegmentsIndex - factory for a GlyphSegmentsIndex implementation.\r\n * @param {number} config.sdfExponent\r\n * @param {number} config.sdfMargin\r\n *\r\n * @return {function(Object): {renderingBounds: [minX, minY, maxX, maxY], textureData: Uint8Array}}\r\n */\r\nfunction createSDFGenerator(createGlyphSegmentsIndex, config) {\r\n  const { sdfExponent, sdfMargin } = config;\r\n\r\n  /**\r\n   * How many straight line segments to use when approximating a glyph's quadratic/cubic bezier curves.\r\n   */\r\n  const CURVE_POINTS = 16;\r\n\r\n  /**\r\n   * Find the point on a quadratic bezier curve at t where t is in the range [0, 1]\r\n   */\r\n  function pointOnQuadraticBezier(x0, y0, x1, y1, x2, y2, t) {\r\n    const t2 = 1 - t;\r\n    return {\r\n      x: t2 * t2 * x0 + 2 * t2 * t * x1 + t * t * x2,\r\n      y: t2 * t2 * y0 + 2 * t2 * t * y1 + t * t * y2\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find the point on a cubic bezier curve at t where t is in the range [0, 1]\r\n   */\r\n  function pointOnCubicBezier(x0, y0, x1, y1, x2, y2, x3, y3, t) {\r\n    const t2 = 1 - t;\r\n    return {\r\n      x: t2 * t2 * t2 * x0 + 3 * t2 * t2 * t * x1 + 3 * t2 * t * t * x2 + t * t * t * x3,\r\n      y: t2 * t2 * t2 * y0 + 3 * t2 * t2 * t * y1 + 3 * t2 * t * t * y2 + t * t * t * y3\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate an SDF texture segment for a single glyph.\r\n   * @param {object} glyphObj\r\n   * @param {number} sdfSize - the length of one side of the SDF image.\r\n   *        Larger images encode more details. Must be a power of 2.\r\n   * @return {{textureData: Uint8Array, renderingBounds: *[]}}\r\n   */\r\n  function generateSDF(glyphObj, sdfSize) {\r\n    //console.time('glyphSDF')\r\n\r\n    const textureData = new Uint8Array(sdfSize * sdfSize);\r\n\r\n    // Determine mapping between glyph grid coords and sdf grid coords\r\n    const glyphW = glyphObj.xMax - glyphObj.xMin;\r\n    const glyphH = glyphObj.yMax - glyphObj.yMin;\r\n\r\n    // Choose a maximum search distance radius in font units, based on the glyph's max dimensions\r\n    const fontUnitsMaxSearchDist = Math.max(glyphW, glyphH);\r\n\r\n    // Margin - add an extra 0.5 over the configured value because the outer 0.5 doesn't contain\r\n    // useful interpolated values and will be ignored anyway.\r\n    const fontUnitsMargin = Math.max(glyphW, glyphH) / sdfSize * (sdfMargin * sdfSize + 0.5);\r\n\r\n    // Metrics of the texture/quad in font units\r\n    const textureMinFontX = glyphObj.xMin - fontUnitsMargin;\r\n    const textureMinFontY = glyphObj.yMin - fontUnitsMargin;\r\n    const textureMaxFontX = glyphObj.xMax + fontUnitsMargin;\r\n    const textureMaxFontY = glyphObj.yMax + fontUnitsMargin;\r\n    const fontUnitsTextureWidth = textureMaxFontX - textureMinFontX;\r\n    const fontUnitsTextureHeight = textureMaxFontY - textureMinFontY;\r\n    const fontUnitsTextureMaxDim = Math.max(fontUnitsTextureWidth, fontUnitsTextureHeight);\r\n\r\n    function textureXToFontX(x) {\r\n      return textureMinFontX + fontUnitsTextureWidth * x / sdfSize\r\n    }\r\n\r\n    function textureYToFontY(y) {\r\n      return textureMinFontY + fontUnitsTextureHeight * y / sdfSize\r\n    }\r\n\r\n    if (glyphObj.pathCommandCount) { //whitespace chars will have no commands, so we can skip all this\r\n      // Decompose all paths into straight line segments and add them to a quadtree\r\n      const lineSegmentsIndex = createGlyphSegmentsIndex(glyphObj);\r\n      let firstX, firstY, prevX, prevY;\r\n      glyphObj.forEachPathCommand((type, x0, y0, x1, y1, x2, y2) => {\r\n        switch (type) {\r\n          case 'M':\r\n            prevX = firstX = x0;\r\n            prevY = firstY = y0;\r\n            break\r\n          case 'L':\r\n            if (x0 !== prevX || y0 !== prevY) { //yup, some fonts have zero-length line commands\r\n              lineSegmentsIndex.addLineSegment(prevX, prevY, (prevX = x0), (prevY = y0));\r\n            }\r\n            break\r\n          case 'Q': {\r\n            let prevPoint = {x: prevX, y: prevY};\r\n            for (let i = 1; i < CURVE_POINTS; i++) {\r\n              let nextPoint = pointOnQuadraticBezier(\r\n                prevX, prevY,\r\n                x0, y0,\r\n                x1, y1,\r\n                i / (CURVE_POINTS - 1)\r\n              );\r\n              lineSegmentsIndex.addLineSegment(prevPoint.x, prevPoint.y, nextPoint.x, nextPoint.y);\r\n              prevPoint = nextPoint;\r\n            }\r\n            prevX = x1;\r\n            prevY = y1;\r\n            break\r\n          }\r\n          case 'C': {\r\n            let prevPoint = {x: prevX, y: prevY};\r\n            for (let i = 1; i < CURVE_POINTS; i++) {\r\n              let nextPoint = pointOnCubicBezier(\r\n                prevX, prevY,\r\n                x0, y0,\r\n                x1, y1,\r\n                x2, y2,\r\n                i / (CURVE_POINTS - 1)\r\n              );\r\n              lineSegmentsIndex.addLineSegment(prevPoint.x, prevPoint.y, nextPoint.x, nextPoint.y);\r\n              prevPoint = nextPoint;\r\n            }\r\n            prevX = x2;\r\n            prevY = y2;\r\n            break\r\n          }\r\n          case 'Z':\r\n            if (prevX !== firstX || prevY !== firstY) {\r\n              lineSegmentsIndex.addLineSegment(prevX, prevY, firstX, firstY);\r\n            }\r\n            break\r\n        }\r\n      });\r\n\r\n      // For each target SDF texel, find the distance from its center to its nearest line segment,\r\n      // map that distance to an alpha value, and write that alpha to the texel\r\n      for (let sdfX = 0; sdfX < sdfSize; sdfX++) {\r\n        for (let sdfY = 0; sdfY < sdfSize; sdfY++) {\r\n          const signedDist = lineSegmentsIndex.findNearestSignedDistance(\r\n            textureXToFontX(sdfX + 0.5),\r\n            textureYToFontY(sdfY + 0.5),\r\n            fontUnitsMaxSearchDist\r\n          );\r\n\r\n          // Use an exponential scale to ensure the texels very near the glyph path have adequate\r\n          // precision, while allowing the distance field to cover the entire texture, given that\r\n          // there are only 8 bits available. Formula visualized: https://www.desmos.com/calculator/uiaq5aqiam\r\n          let alpha = Math.pow((1 - Math.abs(signedDist) / fontUnitsTextureMaxDim), sdfExponent) / 2;\r\n          if (signedDist < 0) {\r\n            alpha = 1 - alpha;\r\n          }\r\n\r\n          alpha = Math.max(0, Math.min(255, Math.round(alpha * 255))); //clamp\r\n          textureData[sdfY * sdfSize + sdfX] = alpha;\r\n        }\r\n      }\r\n    }\r\n\r\n    //console.timeEnd('glyphSDF')\r\n\r\n    return {\r\n      textureData: textureData,\r\n\r\n      renderingBounds: [\r\n        textureMinFontX,\r\n        textureMinFontY,\r\n        textureMaxFontX,\r\n        textureMaxFontY\r\n      ]\r\n    }\r\n  }\r\n\r\n\r\n  return generateSDF\r\n}\n\n/**\r\n * Creates a self-contained environment for processing text rendering requests.\r\n *\r\n * It is important that this function has no closure dependencies, so that it can be easily injected\r\n * into the source for a Worker without requiring a build step or complex dependency loading. All its\r\n * dependencies must be passed in at initialization.\r\n *\r\n * @param {function} fontParser - a function that accepts an ArrayBuffer of the font data and returns\r\n * a standardized structure giving access to the font and its glyphs:\r\n *   {\r\n *     unitsPerEm: number,\r\n *     ascender: number,\r\n *     descender: number,\r\n *     forEachGlyph(string, fontSize, letterSpacing, callback) {\r\n *       //invokes callback for each glyph to render, passing it an object:\r\n *       callback({\r\n *         index: number,\r\n *         advanceWidth: number,\r\n *         xMin: number,\r\n *         yMin: number,\r\n *         xMax: number,\r\n *         yMax: number,\r\n *         pathCommandCount: number,\r\n *         forEachPathCommand(callback) {\r\n *           //invokes callback for each path command, with args:\r\n *           callback(\r\n *             type: 'M|L|C|Q|Z',\r\n *             ...args //0 to 6 args depending on the type\r\n *           )\r\n *         }\r\n *       })\r\n *     }\r\n *   }\r\n * @param {function} sdfGenerator - a function that accepts a glyph object and generates an SDF texture\r\n * from it.\r\n * @param {Object} config\r\n * @return {Object}\r\n */\r\nfunction createFontProcessor(fontParser, sdfGenerator, config) {\r\n\r\n  const {\r\n    defaultFontURL\r\n  } = config;\r\n\r\n\r\n  /**\r\n   * @private\r\n   * Holds data about font glyphs and how they relate to SDF atlases\r\n   *\r\n   * {\r\n   *   'fontUrl@sdfSize': {\r\n   *     fontObj: {}, //result of the fontParser\r\n   *     glyphs: {\r\n   *       [glyphIndex]: {\r\n   *         atlasIndex: 0,\r\n   *         glyphObj: {}, //glyph object from the fontParser\r\n   *         renderingBounds: [x0, y0, x1, y1]\r\n   *       },\r\n   *       ...\r\n   *     },\r\n   *     glyphCount: 123\r\n   *   }\r\n   * }\r\n   */\r\n  const fontAtlases = Object.create(null);\r\n\r\n  /**\r\n   * Holds parsed font objects by url\r\n   */\r\n  const fonts = Object.create(null);\r\n\r\n  const INF = Infinity;\r\n\r\n\r\n  /**\r\n   * Load a given font url\r\n   */\r\n  function doLoadFont(url, callback) {\r\n    function tryLoad() {\r\n      const onError = err => {\r\n        console.error(`Failure loading font ${url}${url === defaultFontURL ? '' : '; trying fallback'}`, err);\r\n        if (url !== defaultFontURL) {\r\n          url = defaultFontURL;\r\n          tryLoad();\r\n        }\r\n      };\r\n      try {\r\n        const request = new XMLHttpRequest();\r\n        request.open('get', url, true);\r\n        request.responseType = 'arraybuffer';\r\n        request.onload = function () {\r\n          if (request.status >= 400) {\r\n            onError(new Error(request.statusText));\r\n          }\r\n          else if (request.status > 0) {\r\n            try {\r\n              const fontObj = fontParser(request.response);\r\n              callback(fontObj);\r\n            } catch (e) {\r\n              onError(e);\r\n            }\r\n          }\r\n        };\r\n        request.onerror = onError;\r\n        request.send();\r\n      } catch(err) {\r\n        onError(err);\r\n      }\r\n    }\r\n    tryLoad();\r\n  }\r\n\r\n\r\n  /**\r\n   * Load a given font url if needed, invoking a callback when it's loaded. If already\r\n   * loaded, the callback will be called synchronously.\r\n   */\r\n  function loadFont(fontUrl, callback) {\r\n    if (!fontUrl) fontUrl = defaultFontURL;\r\n    let font = fonts[fontUrl];\r\n    if (font) {\r\n      // if currently loading font, add to callbacks, otherwise execute immediately\r\n      if (font.pending) {\r\n        font.pending.push(callback);\r\n      } else {\r\n        callback(font);\r\n      }\r\n    } else {\r\n      fonts[fontUrl] = {pending: [callback]};\r\n      doLoadFont(fontUrl, fontObj => {\r\n        let callbacks = fonts[fontUrl].pending;\r\n        fonts[fontUrl] = fontObj;\r\n        callbacks.forEach(cb => cb(fontObj));\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the atlas data for a given font url, loading it from the network and initializing\r\n   * its atlas data objects if necessary.\r\n   */\r\n  function getSdfAtlas(fontUrl, sdfGlyphSize, callback) {\r\n    if (!fontUrl) fontUrl = defaultFontURL;\r\n    let atlasKey = `${fontUrl}@${sdfGlyphSize}`;\r\n    let atlas = fontAtlases[atlasKey];\r\n    if (atlas) {\r\n      callback(atlas);\r\n    } else {\r\n      loadFont(fontUrl, fontObj => {\r\n        atlas = fontAtlases[atlasKey] || (fontAtlases[atlasKey] = {\r\n          fontObj: fontObj,\r\n          glyphs: {},\r\n          glyphCount: 0\r\n        });\r\n        callback(atlas);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Main entry point.\r\n   * Process a text string with given font and formatting parameters, and return all info\r\n   * necessary to render all its glyphs.\r\n   */\r\n  function process(\r\n    {\r\n      text='',\r\n      font=defaultFontURL,\r\n      sdfGlyphSize=64,\r\n      fontSize=1,\r\n      letterSpacing=0,\r\n      lineHeight='normal',\r\n      maxWidth=INF,\r\n      textAlign='left',\r\n      textIndent=0,\r\n      whiteSpace='normal',\r\n      overflowWrap='normal',\r\n      anchorX = 0,\r\n      anchorY = 0,\r\n      includeCaretPositions=false,\r\n      chunkedBoundsSize=8192,\r\n      colorRanges=null\r\n    },\r\n    callback,\r\n    metricsOnly=false\r\n  ) {\r\n    const mainStart = now();\r\n    const timings = {total: 0, fontLoad: 0, layout: 0, sdf: {}, sdfTotal: 0};\r\n\r\n    // Ensure newlines are normalized\r\n    if (text.indexOf('\\r') > -1) {\r\n      console.warn('FontProcessor.process: got text with \\\\r chars; normalizing to \\\\n');\r\n      text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\r\n    }\r\n\r\n    // Ensure we've got numbers not strings\r\n    fontSize = +fontSize;\r\n    letterSpacing = +letterSpacing;\r\n    maxWidth = +maxWidth;\r\n    lineHeight = lineHeight || 'normal';\r\n    textIndent = +textIndent;\r\n\r\n    getSdfAtlas(font, sdfGlyphSize, atlas => {\r\n      const fontObj = atlas.fontObj;\r\n      const hasMaxWidth = isFinite(maxWidth);\r\n      let newGlyphs = null;\r\n      let glyphBounds = null;\r\n      let glyphAtlasIndices = null;\r\n      let glyphColors = null;\r\n      let caretPositions = null;\r\n      let visibleBounds = null;\r\n      let chunkedBounds = null;\r\n      let maxLineWidth = 0;\r\n      let renderableGlyphCount = 0;\r\n      let canWrap = whiteSpace !== 'nowrap';\r\n      const {ascender, descender, unitsPerEm} = fontObj;\r\n      timings.fontLoad = now() - mainStart;\r\n      const layoutStart = now();\r\n\r\n      // Find conversion between native font units and fontSize units; this will already be done\r\n      // for the gx/gy values below but everything else we'll need to convert\r\n      const fontSizeMult = fontSize / unitsPerEm;\r\n\r\n      // Determine appropriate value for 'normal' line height based on the font's actual metrics\r\n      // TODO this does not guarantee individual glyphs won't exceed the line height, e.g. Roboto; should we use yMin/Max instead?\r\n      if (lineHeight === 'normal') {\r\n        lineHeight = (ascender - descender) / unitsPerEm;\r\n      }\r\n\r\n      // Determine line height and leading adjustments\r\n      lineHeight = lineHeight * fontSize;\r\n      const halfLeading = (lineHeight - (ascender - descender) * fontSizeMult) / 2;\r\n      const topBaseline = -(ascender * fontSizeMult + halfLeading);\r\n      const caretHeight = Math.min(lineHeight, (ascender - descender) * fontSizeMult);\r\n      const caretBottomOffset = (ascender + descender) / 2 * fontSizeMult - caretHeight / 2;\r\n\r\n      // Distribute glyphs into lines based on wrapping\r\n      let lineXOffset = textIndent;\r\n      let currentLine = new TextLine();\r\n      const lines = [currentLine];\r\n      fontObj.forEachGlyph(text, fontSize, letterSpacing, (glyphObj, glyphX, charIndex) => {\r\n        const char = text.charAt(charIndex);\r\n        const glyphWidth = glyphObj.advanceWidth * fontSizeMult;\r\n        const curLineCount = currentLine.count;\r\n        let nextLine;\r\n\r\n        // Calc isWhitespace and isEmpty once per glyphObj\r\n        if (!('isEmpty' in glyphObj)) {\r\n          glyphObj.isWhitespace = !!char && /\\s/.test(char);\r\n          glyphObj.isEmpty = glyphObj.xMin === glyphObj.xMax || glyphObj.yMin === glyphObj.yMax;\r\n        }\r\n        if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\r\n          renderableGlyphCount++;\r\n        }\r\n\r\n        // If a non-whitespace character overflows the max width, we need to soft-wrap\r\n        if (canWrap && hasMaxWidth && !glyphObj.isWhitespace && glyphX + glyphWidth + lineXOffset > maxWidth && curLineCount) {\r\n          // If it's the first char after a whitespace, start a new line\r\n          if (currentLine.glyphAt(curLineCount - 1).glyphObj.isWhitespace) {\r\n            nextLine = new TextLine();\r\n            lineXOffset = -glyphX;\r\n          } else {\r\n            // Back up looking for a whitespace character to wrap at\r\n            for (let i = curLineCount; i--;) {\r\n              // If we got the start of the line there's no soft break point; make hard break if overflowWrap='break-word'\r\n              if (i === 0 && overflowWrap === 'break-word') {\r\n                nextLine = new TextLine();\r\n                lineXOffset = -glyphX;\r\n                break\r\n              }\r\n              // Found a soft break point; move all chars since it to a new line\r\n              else if (currentLine.glyphAt(i).glyphObj.isWhitespace) {\r\n                nextLine = currentLine.splitAt(i + 1);\r\n                const adjustX = nextLine.glyphAt(0).x;\r\n                lineXOffset -= adjustX;\r\n                for (let j = nextLine.count; j--;) {\r\n                  nextLine.glyphAt(j).x -= adjustX;\r\n                }\r\n                break\r\n              }\r\n            }\r\n          }\r\n          if (nextLine) {\r\n            currentLine.isSoftWrapped = true;\r\n            currentLine = nextLine;\r\n            lines.push(currentLine);\r\n            maxLineWidth = maxWidth; //after soft wrapping use maxWidth as calculated width\r\n          }\r\n        }\r\n\r\n        let fly = currentLine.glyphAt(currentLine.count);\r\n        fly.glyphObj = glyphObj;\r\n        fly.x = glyphX + lineXOffset;\r\n        fly.width = glyphWidth;\r\n        fly.charIndex = charIndex;\r\n\r\n        // Handle hard line breaks\r\n        if (char === '\\n') {\r\n          currentLine = new TextLine();\r\n          lines.push(currentLine);\r\n          lineXOffset = -(glyphX + glyphWidth + (letterSpacing * fontSize)) + textIndent;\r\n        }\r\n      });\r\n\r\n      // Calculate width of each line (excluding trailing whitespace) and maximum block width\r\n      lines.forEach(line => {\r\n        for (let i = line.count; i--;) {\r\n          let {glyphObj, x, width} = line.glyphAt(i);\r\n          if (!glyphObj.isWhitespace) {\r\n            line.width = x + width;\r\n            if (line.width > maxLineWidth) {\r\n              maxLineWidth = line.width;\r\n            }\r\n            return\r\n          }\r\n        }\r\n      });\r\n\r\n      // Find overall position adjustments for anchoring\r\n      let anchorXOffset = 0;\r\n      let anchorYOffset = 0;\r\n      if (anchorX) {\r\n        if (typeof anchorX === 'number') {\r\n          anchorXOffset = -anchorX;\r\n        }\r\n        else if (typeof anchorX === 'string') {\r\n          anchorXOffset = -maxLineWidth * (\r\n            anchorX === 'left' ? 0 :\r\n            anchorX === 'center' ? 0.5 :\r\n            anchorX === 'right' ? 1 :\r\n            parsePercent(anchorX)\r\n          );\r\n        }\r\n      }\r\n      if (anchorY) {\r\n        if (typeof anchorY === 'number') {\r\n          anchorYOffset = -anchorY;\r\n        }\r\n        else if (typeof anchorY === 'string') {\r\n          let height = lines.length * lineHeight;\r\n          anchorYOffset = anchorY === 'top' ? 0 :\r\n            anchorY === 'top-baseline' ? -topBaseline :\r\n            anchorY === 'middle' ? height / 2 :\r\n            anchorY === 'bottom' ? height :\r\n            anchorY === 'bottom-baseline' ? height - halfLeading + descender * fontSizeMult :\r\n            parsePercent(anchorY) * height;\r\n        }\r\n      }\r\n\r\n      if (!metricsOnly) {\r\n        // Process each line, applying alignment offsets, adding each glyph to the atlas, and\r\n        // collecting all renderable glyphs into a single collection.\r\n        glyphBounds = new Float32Array(renderableGlyphCount * 4);\r\n        glyphAtlasIndices = new Float32Array(renderableGlyphCount);\r\n        visibleBounds = [INF, INF, -INF, -INF];\r\n        chunkedBounds = [];\r\n        let lineYOffset = topBaseline;\r\n        if (includeCaretPositions) {\r\n          caretPositions = new Float32Array(text.length * 3);\r\n        }\r\n        if (colorRanges) {\r\n          glyphColors = new Uint8Array(renderableGlyphCount * 3);\r\n        }\r\n        let renderableGlyphIndex = 0;\r\n        let prevCharIndex = -1;\r\n        let colorCharIndex = -1;\r\n        let chunk;\r\n        let currentColor;\r\n        lines.forEach(line => {\r\n          const {count:lineGlyphCount, width:lineWidth} = line;\r\n\r\n          // Ignore empty lines\r\n          if (lineGlyphCount > 0) {\r\n            // Find x offset for horizontal alignment\r\n            let lineXOffset = 0;\r\n            let justifyAdjust = 0;\r\n            if (textAlign === 'center') {\r\n              lineXOffset = (maxLineWidth - lineWidth) / 2;\r\n            } else if (textAlign === 'right') {\r\n              lineXOffset = maxLineWidth - lineWidth;\r\n            } else if (textAlign === 'justify' && line.isSoftWrapped) {\r\n              // just count the non-trailing whitespace characters, and we'll adjust the offsets per\r\n              // character in the next loop\r\n              let whitespaceCount = 0;\r\n              for (let i = lineGlyphCount; i--;) {\r\n                if (!line.glyphAt(i).glyphObj.isWhitespace) {\r\n                  while (i--) {\r\n                    if (!line.glyphAt(i).glyphObj) {\r\n                      debugger\r\n                    }\r\n                    if (line.glyphAt(i).glyphObj.isWhitespace) {\r\n                      whitespaceCount++;\r\n                    }\r\n                  }\r\n                  break\r\n                }\r\n              }\r\n              justifyAdjust = (maxLineWidth - lineWidth) / whitespaceCount;\r\n            }\r\n\r\n            for (let i = 0; i < lineGlyphCount; i++) {\r\n              const glyphInfo = line.glyphAt(i);\r\n              const glyphObj = glyphInfo.glyphObj;\r\n\r\n              // Apply position adjustments\r\n              if (lineXOffset) glyphInfo.x += lineXOffset;\r\n\r\n              // Expand whitespaces for justify alignment\r\n              if (justifyAdjust !== 0 && glyphObj.isWhitespace) {\r\n                lineXOffset += justifyAdjust;\r\n                glyphInfo.width += justifyAdjust;\r\n              }\r\n\r\n              // Add caret positions\r\n              if (includeCaretPositions) {\r\n                const {charIndex} = glyphInfo;\r\n                caretPositions[charIndex * 3] = glyphInfo.x + anchorXOffset; //left edge x\r\n                caretPositions[charIndex * 3 + 1] = glyphInfo.x + glyphInfo.width + anchorXOffset; //right edge x\r\n                caretPositions[charIndex * 3 + 2] = lineYOffset + caretBottomOffset + anchorYOffset; //common bottom y\r\n\r\n                // If we skipped any chars from the previous glyph (due to ligature subs), copy the\r\n                // previous glyph's info to those missing char indices. In the future we may try to\r\n                // use the font's LigatureCaretList table to get interior caret positions.\r\n                while (charIndex - prevCharIndex > 1) {\r\n                  caretPositions[(prevCharIndex + 1) * 3] = caretPositions[prevCharIndex * 3 + 1];\r\n                  caretPositions[(prevCharIndex + 1) * 3 + 1] = caretPositions[prevCharIndex * 3 + 1];\r\n                  caretPositions[(prevCharIndex + 1) * 3 + 2] = caretPositions[prevCharIndex * 3 + 2];\r\n                  prevCharIndex++;\r\n                }\r\n                prevCharIndex = charIndex;\r\n              }\r\n\r\n              // Track current color range\r\n              if (colorRanges) {\r\n                const {charIndex} = glyphInfo;\r\n                while(charIndex > colorCharIndex) {\r\n                  colorCharIndex++;\r\n                  if (colorRanges.hasOwnProperty(colorCharIndex)) {\r\n                    currentColor = colorRanges[colorCharIndex];\r\n                  }\r\n                }\r\n              }\r\n\r\n              // Get atlas data for renderable glyphs\r\n              if (!glyphObj.isWhitespace && !glyphObj.isEmpty) {\r\n                const idx = renderableGlyphIndex++;\r\n\r\n                // If we haven't seen this glyph yet, generate its SDF\r\n                let glyphAtlasInfo = atlas.glyphs[glyphObj.index];\r\n                if (!glyphAtlasInfo) {\r\n                  const sdfStart = now();\r\n                  const glyphSDFData = sdfGenerator(glyphObj, sdfGlyphSize);\r\n                  timings.sdf[text.charAt(glyphInfo.charIndex)] = now() - sdfStart;\r\n\r\n                  // Assign this glyph the next available atlas index\r\n                  glyphSDFData.atlasIndex = atlas.glyphCount++;\r\n\r\n                  // Queue it up in the response's newGlyphs list\r\n                  if (!newGlyphs) newGlyphs = [];\r\n                  newGlyphs.push(glyphSDFData);\r\n\r\n                  // Store its metadata (not the texture) in our atlas info\r\n                  glyphAtlasInfo = atlas.glyphs[glyphObj.index] = {\r\n                    atlasIndex: glyphSDFData.atlasIndex,\r\n                    glyphObj: glyphObj,\r\n                    renderingBounds: glyphSDFData.renderingBounds\r\n                  };\r\n                }\r\n\r\n                // Determine final glyph quad bounds and add them to the glyphBounds array\r\n                const bounds = glyphAtlasInfo.renderingBounds;\r\n                const startIdx = idx * 4;\r\n                const xStart = glyphInfo.x + anchorXOffset;\r\n                const yStart = lineYOffset + anchorYOffset;\r\n                glyphBounds[startIdx] = xStart + bounds[0] * fontSizeMult;\r\n                glyphBounds[startIdx + 1] = yStart + bounds[1] * fontSizeMult;\r\n                glyphBounds[startIdx + 2] = xStart + bounds[2] * fontSizeMult;\r\n                glyphBounds[startIdx + 3] = yStart + bounds[3] * fontSizeMult;\r\n\r\n                // Track total visible bounds\r\n                const visX0 = xStart + glyphObj.xMin * fontSizeMult;\r\n                const visY0 = yStart + glyphObj.yMin * fontSizeMult;\r\n                const visX1 = xStart + glyphObj.xMax * fontSizeMult;\r\n                const visY1 = yStart + glyphObj.yMax * fontSizeMult;\r\n                if (visX0 < visibleBounds[0]) visibleBounds[0] = visX0;\r\n                if (visY0 < visibleBounds[1]) visibleBounds[1] = visY0;\r\n                if (visX1 > visibleBounds[2]) visibleBounds[2] = visX1;\r\n                if (visY1 > visibleBounds[3]) visibleBounds[3] = visY1;\r\n\r\n                // Track bounding rects for each chunk of N glyphs\r\n                if (idx % chunkedBoundsSize === 0) {\r\n                  chunk = {start: idx, end: idx, rect: [INF, INF, -INF, -INF]};\r\n                  chunkedBounds.push(chunk);\r\n                }\r\n                chunk.end++;\r\n                const chunkRect = chunk.rect;\r\n                if (visX0 < chunkRect[0]) chunkRect[0] = visX0;\r\n                if (visY0 < chunkRect[1]) chunkRect[1] = visY0;\r\n                if (visX1 > chunkRect[2]) chunkRect[2] = visX1;\r\n                if (visY1 > chunkRect[3]) chunkRect[3] = visY1;\r\n\r\n                // Add to atlas indices array\r\n                glyphAtlasIndices[idx] = glyphAtlasInfo.atlasIndex;\r\n\r\n                // Add colors\r\n                if (colorRanges) {\r\n                  const start = idx * 3;\r\n                  glyphColors[start] = currentColor >> 16 & 255;\r\n                  glyphColors[start + 1] = currentColor >> 8 & 255;\r\n                  glyphColors[start + 2] = currentColor & 255;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          // Increment y offset for next line\r\n          lineYOffset -= lineHeight;\r\n        });\r\n      }\r\n\r\n      // Timing stats\r\n      for (let ch in timings.sdf) {\r\n        timings.sdfTotal += timings.sdf[ch];\r\n      }\r\n      timings.layout = now() - layoutStart - timings.sdfTotal;\r\n      timings.total = now() - mainStart;\r\n\r\n      callback({\r\n        glyphBounds, //rendering quad bounds for each glyph [x1, y1, x2, y2]\r\n        glyphAtlasIndices, //atlas indices for each glyph\r\n        caretPositions, //x,y of bottom of cursor position before each char, plus one after last char\r\n        caretHeight, //height of cursor from bottom to top\r\n        glyphColors, //color for each glyph, if color ranges supplied\r\n        chunkedBounds, //total rects per (n=chunkedBoundsSize) consecutive glyphs\r\n        ascender: ascender * fontSizeMult, //font ascender\r\n        descender: descender * fontSizeMult, //font descender\r\n        lineHeight, //computed line height\r\n        topBaseline, //y coordinate of the top line's baseline\r\n        blockBounds: [ //bounds for the whole block of text, including vertical padding for lineHeight\r\n          anchorXOffset,\r\n          anchorYOffset - lines.length * lineHeight,\r\n          anchorXOffset + maxLineWidth,\r\n          anchorYOffset\r\n        ],\r\n        visibleBounds, //total bounds of visible text paths, may be larger or smaller than totalBounds\r\n        newGlyphSDFs: newGlyphs, //if this request included any new SDFs for the atlas, they'll be included here\r\n        timings\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * For a given text string and font parameters, determine the resulting block dimensions\r\n   * after wrapping for the given maxWidth.\r\n   * @param args\r\n   * @param callback\r\n   */\r\n  function measure(args, callback) {\r\n    process(args, (result) => {\r\n      const [x0, y0, x1, y1] = result.blockBounds;\r\n      callback({\r\n        width: x1 - x0,\r\n        height: y1 - y0\r\n      });\r\n    }, {metricsOnly: true});\r\n  }\r\n\r\n  function parsePercent(str) {\r\n    let match = str.match(/^([\\d.]+)%$/);\r\n    let pct = match ? parseFloat(match[1]) : NaN;\r\n    return isNaN(pct) ? 0 : pct / 100\r\n  }\r\n\r\n  function now() {\r\n    return (self.performance || Date).now()\r\n  }\r\n\r\n  // Array-backed structure for a single line's glyphs data\r\n  function TextLine() {\r\n    this.data = [];\r\n  }\r\n  TextLine.prototype = {\r\n    width: 0,\r\n    isSoftWrapped: false,\r\n    get count() {\r\n      return Math.ceil(this.data.length / 4)\r\n    },\r\n    glyphAt(i) {\r\n      let fly = TextLine.flyweight;\r\n      fly.data = this.data;\r\n      fly.index = i;\r\n      return fly\r\n    },\r\n    splitAt(i) {\r\n      let newLine = new TextLine();\r\n      newLine.data = this.data.splice(i * 4);\r\n      return newLine\r\n    }\r\n  };\r\n  TextLine.flyweight = ['glyphObj', 'x', 'width', 'charIndex'].reduce((obj, prop, i, all) => {\r\n    Object.defineProperty(obj, prop, {\r\n      get() {\r\n        return this.data[this.index * 4 + i]\r\n      },\r\n      set(val) {\r\n        this.data[this.index * 4 + i] = val;\r\n      }\r\n    });\r\n    return obj\r\n  }, {data: null, index: 0});\r\n\r\n\r\n  return {\r\n    process,\r\n    measure,\r\n    loadFont\r\n  }\r\n}\n\n/**\r\n * Index for performing fast spatial searches of a glyph's line segments.\r\n * @return {{addLineSegment:function, findNearestSignedDistance:function}}\r\n */\r\nfunction createGlyphSegmentsIndex() {\r\n  let needsSort = false;\r\n  const segments = [];\r\n\r\n  function sortSegments() {\r\n    if (needsSort) {\r\n      // sort by maxX, this will let us short-circuit some loops below\r\n      segments.sort(function(a, b) {\r\n        return a.maxX - b.maxX\r\n      });\r\n      needsSort = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a line segment to the index.\r\n   * @param x0\r\n   * @param y0\r\n   * @param x1\r\n   * @param y1\r\n   */\r\n  function addLineSegment(x0, y0, x1, y1) {\r\n    const segment = {\r\n      x0, y0, x1, y1,\r\n      minX: Math.min(x0, x1),\r\n      minY: Math.min(y0, y1),\r\n      maxX: Math.max(x0, x1),\r\n      maxY: Math.max(y0, y1)\r\n    };\r\n    segments.push(segment);\r\n    needsSort = true;\r\n  }\r\n\r\n  /**\r\n   * For a given x/y, search the index for the closest line segment and return\r\n   * its signed distance. Negative = inside, positive = outside, zero = on edge\r\n   * @param x\r\n   * @param y\r\n   * @returns {number}\r\n   */\r\n  function findNearestSignedDistance(x, y) {\r\n    sortSegments();\r\n    let closestDistSq = Infinity;\r\n    let closestDist = Infinity;\r\n\r\n    for (let i = segments.length; i--;) {\r\n      const seg = segments[i];\r\n      if (seg.maxX + closestDist <= x) break //sorting by maxX means no more can be closer, so we can short-circuit\r\n      if (x + closestDist > seg.minX && y - closestDist < seg.maxY && y + closestDist > seg.minY) {\r\n        const distSq = absSquareDistanceToLineSegment(x, y, seg.x0, seg.y0, seg.x1, seg.y1);\r\n        if (distSq < closestDistSq) {\r\n          closestDistSq = distSq;\r\n          closestDist = Math.sqrt(closestDistSq);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Flip to negative distance if inside the poly\r\n    if (isPointInPoly(x, y)) {\r\n      closestDist = -closestDist;\r\n    }\r\n    return closestDist\r\n  }\r\n\r\n  // Determine whether the given point lies inside or outside the glyph. Uses a simple\r\n  // ray casting algorithm using a ray pointing east from the point.\r\n  function isPointInPoly(x, y) {\r\n    sortSegments();\r\n    let inside = false;\r\n    for (let i = segments.length; i--;) {\r\n      const seg = segments[i];\r\n      if (seg.maxX <= x) break //sorting by maxX means no more can cross, so we can short-circuit\r\n      if (seg.minY < y && seg.maxY > y) {\r\n        const intersects = ((seg.y0 > y) !== (seg.y1 > y)) && (x < (seg.x1 - seg.x0) * (y - seg.y0) / (seg.y1 - seg.y0) + seg.x0);\r\n        if (intersects) {\r\n          inside = !inside;\r\n        }\r\n      }\r\n    }\r\n    return inside\r\n  }\r\n\r\n  // Find the absolute distance from a point to a line segment at closest approach\r\n  function absSquareDistanceToLineSegment(x, y, lineX0, lineY0, lineX1, lineY1) {\r\n    const ldx = lineX1 - lineX0;\r\n    const ldy = lineY1 - lineY0;\r\n    const lengthSq = ldx * ldx + ldy * ldy;\r\n    const t = lengthSq ? Math.max(0, Math.min(1, ((x - lineX0) * ldx + (y - lineY0) * ldy) / lengthSq)) : 0;\r\n    const dx = x - (lineX0 + t * ldx);\r\n    const dy = y - (lineY0 + t * ldy);\r\n    return dx * dx + dy * dy\r\n  }\r\n\r\n  return {\r\n    addLineSegment,\r\n    findNearestSignedDistance\r\n  }\r\n}\n\n// Custom bundle of Typr.js (https://github.com/photopea/Typr.js) for use in troika-3d-text. \r\n// Original MIT license applies: https://github.com/photopea/Typr.js/blob/gh-pages/LICENSE\r\n\r\nfunction typrFactory() {\r\n\r\nconst window = self;\r\n\r\n// Begin Typr.js\r\n\r\n\r\nvar Typr = {};\r\n\r\nTypr.parse = function(buff)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar data = new Uint8Array(buff);\r\n\t\r\n\tvar tag = bin.readASCII(data, 0, 4);  \r\n\tif(tag==\"ttcf\") {\r\n\t\tvar offset = 4;\r\n\t\tvar majV = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar minV = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar numF = bin.readUint  (data, offset);  offset+=4;\r\n\t\tvar fnts = [];\r\n\t\tfor(var i=0; i<numF; i++) {\r\n\t\t\tvar foff = bin.readUint  (data, offset);  offset+=4;\r\n\t\t\tfnts.push(Typr._readFont(data, foff));\r\n\t\t}\r\n\t\treturn fnts;\r\n\t}\r\n\telse return [Typr._readFont(data, 0)];\r\n};\r\n\r\nTypr._readFont = function(data, offset) {\r\n\tvar bin = Typr._bin;\r\n\tvar ooff = offset;\r\n\t\r\n\tvar sfnt_version = bin.readFixed(data, offset);\r\n\toffset += 4;\r\n\tvar numTables = bin.readUshort(data, offset);\r\n\toffset += 2;\r\n\tvar searchRange = bin.readUshort(data, offset);\r\n\toffset += 2;\r\n\tvar entrySelector = bin.readUshort(data, offset);\r\n\toffset += 2;\r\n\tvar rangeShift = bin.readUshort(data, offset);\r\n\toffset += 2;\r\n\t\r\n\tvar tags = [\r\n\t\t\"cmap\",\r\n\t\t\"head\",\r\n\t\t\"hhea\",\r\n\t\t\"maxp\",\r\n\t\t\"hmtx\",\r\n\t\t\"name\",\r\n\t\t\"OS/2\",\r\n\t\t\"post\",\r\n\t\t\r\n\t\t//\"cvt\",\r\n\t\t//\"fpgm\",\r\n\t\t\"loca\",\r\n\t\t\"glyf\",\r\n\t\t\"kern\",\r\n\t\t\r\n\t\t//\"prep\"\r\n\t\t//\"gasp\"\r\n\t\t\r\n\t\t\"CFF \",\r\n\t\t\r\n\t\t\r\n\t\t\"GPOS\",\r\n\t\t\"GSUB\",\r\n\t\t\r\n\t\t\"SVG \"\r\n\t\t//\"VORG\",\r\n\t\t];\r\n\t\r\n\tvar obj = {_data:data, _offset:ooff};\r\n\t//console.log(sfnt_version, numTables, searchRange, entrySelector, rangeShift);\r\n\t\r\n\tvar tabs = {};\r\n\t\r\n\tfor(var i=0; i<numTables; i++)\r\n\t{\r\n\t\tvar tag = bin.readASCII(data, offset, 4);   offset += 4;\r\n\t\tvar checkSum = bin.readUint(data, offset);  offset += 4;\r\n\t\tvar toffset = bin.readUint(data, offset);   offset += 4;\r\n\t\tvar length = bin.readUint(data, offset);    offset += 4;\r\n\t\ttabs[tag] = {offset:toffset, length:length};\r\n\t\t\r\n\t\t//if(tags.indexOf(tag)==-1) console.log(\"unknown tag\", tag, length);\r\n\t}\r\n\t\r\n\tfor(var i=0; i< tags.length; i++)\r\n\t{\r\n\t\tvar t = tags[i];\r\n\t\t//console.log(t);\r\n\t\t//if(tabs[t]) console.log(t, tabs[t].offset, tabs[t].length);\r\n\t\tif(tabs[t]) obj[t.trim()] = Typr[t.trim()].parse(data, tabs[t].offset, tabs[t].length, obj);\r\n\t}\r\n\t\r\n\treturn obj;\r\n};\r\n\r\nTypr._tabOffset = function(data, tab, foff)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar numTables = bin.readUshort(data, foff+4);\r\n\tvar offset = foff+12;\r\n\tfor(var i=0; i<numTables; i++)\r\n\t{\r\n\t\tvar tag = bin.readASCII(data, offset, 4);   offset += 4;\r\n\t\tvar checkSum = bin.readUint(data, offset);  offset += 4;\r\n\t\tvar toffset = bin.readUint(data, offset);   offset += 4;\r\n\t\tvar length = bin.readUint(data, offset);    offset += 4;\r\n\t\tif(tag==tab) return toffset;\r\n\t}\r\n\treturn 0;\r\n};\r\n\r\n\r\n\r\n\r\n\r\nTypr._bin = {\r\n\treadFixed : function(data, o)\r\n\t{\r\n\t\treturn ((data[o]<<8) | data[o+1]) +  (((data[o+2]<<8)|data[o+3])/(256*256+4));\r\n\t},\r\n\treadF2dot14 : function(data, o)\r\n\t{\r\n\t\tvar num = Typr._bin.readShort(data, o);\r\n\t\treturn num / 16384;\r\n\t},\r\n\treadInt : function(buff, p)\r\n\t{\r\n\t\t//if(p>=buff.length) throw \"error\";\r\n\t\tvar a = Typr._bin.t.uint8;\r\n\t\ta[0] = buff[p+3];\r\n\t\ta[1] = buff[p+2];\r\n\t\ta[2] = buff[p+1];\r\n\t\ta[3] = buff[p];\r\n\t\treturn Typr._bin.t.int32[0];\r\n\t},\r\n\t\r\n\treadInt8 : function(buff, p)\r\n\t{\r\n\t\t//if(p>=buff.length) throw \"error\";\r\n\t\tvar a = Typr._bin.t.uint8;\r\n\t\ta[0] = buff[p];\r\n\t\treturn Typr._bin.t.int8[0];\r\n\t},\r\n\treadShort : function(buff, p)\r\n\t{\r\n\t\t//if(p>=buff.length) throw \"error\";\r\n\t\tvar a = Typr._bin.t.uint8;\r\n\t\ta[1] = buff[p]; a[0] = buff[p+1];\r\n\t\treturn Typr._bin.t.int16[0];\r\n\t},\r\n\treadUshort : function(buff, p)\r\n\t{\r\n\t\t//if(p>=buff.length) throw \"error\";\r\n\t\treturn (buff[p]<<8) | buff[p+1];\r\n\t},\r\n\treadUshorts : function(buff, p, len)\r\n\t{\r\n\t\tvar arr = [];\r\n\t\tfor(var i=0; i<len; i++) arr.push(Typr._bin.readUshort(buff, p+i*2));\r\n\t\treturn arr;\r\n\t},\r\n\treadUint : function(buff, p)\r\n\t{\r\n\t\t//if(p>=buff.length) throw \"error\";\r\n\t\tvar a = Typr._bin.t.uint8;\r\n\t\ta[3] = buff[p];  a[2] = buff[p+1];  a[1] = buff[p+2];  a[0] = buff[p+3];\r\n\t\treturn Typr._bin.t.uint32[0];\r\n\t},\r\n\treadUint64 : function(buff, p)\r\n\t{\r\n\t\t//if(p>=buff.length) throw \"error\";\r\n\t\treturn (Typr._bin.readUint(buff, p)*(0xffffffff+1)) + Typr._bin.readUint(buff, p+4);\r\n\t},\r\n\treadASCII : function(buff, p, l)\t// l : length in Characters (not Bytes)\r\n\t{\r\n\t\t//if(p>=buff.length) throw \"error\";\r\n\t\tvar s = \"\";\r\n\t\tfor(var i = 0; i < l; i++) s += String.fromCharCode(buff[p+i]);\r\n\t\treturn s;\r\n\t},\r\n\treadUnicode : function(buff, p, l)\r\n\t{\r\n\t\t//if(p>=buff.length) throw \"error\";\r\n\t\tvar s = \"\";\r\n\t\tfor(var i = 0; i < l; i++)\t\r\n\t\t{\r\n\t\t\tvar c = (buff[p++]<<8) | buff[p++];\r\n\t\t\ts += String.fromCharCode(c);\r\n\t\t}\r\n\t\treturn s;\r\n\t},\r\n\t_tdec : window[\"TextDecoder\"] ? new window[\"TextDecoder\"]() : null,\r\n\treadUTF8 : function(buff, p, l) {\r\n\t\tvar tdec = Typr._bin._tdec;\r\n\t\tif(tdec && p==0 && l==buff.length) return tdec[\"decode\"](buff);\r\n\t\treturn Typr._bin.readASCII(buff,p,l);\r\n\t},\r\n\treadBytes : function(buff, p, l)\r\n\t{\r\n\t\t//if(p>=buff.length) throw \"error\";\r\n\t\tvar arr = [];\r\n\t\tfor(var i=0; i<l; i++) arr.push(buff[p+i]);\r\n\t\treturn arr;\r\n\t},\r\n\treadASCIIArray : function(buff, p, l)\t// l : length in Characters (not Bytes)\r\n\t{\r\n\t\t//if(p>=buff.length) throw \"error\";\r\n\t\tvar s = [];\r\n\t\tfor(var i = 0; i < l; i++)\t\r\n\t\t\ts.push(String.fromCharCode(buff[p+i]));\r\n\t\treturn s;\r\n\t}\r\n};\r\n\r\nTypr._bin.t = {\r\n\tbuff: new ArrayBuffer(8),\r\n};\r\nTypr._bin.t.int8   = new Int8Array  (Typr._bin.t.buff);\r\nTypr._bin.t.uint8  = new Uint8Array (Typr._bin.t.buff);\r\nTypr._bin.t.int16  = new Int16Array (Typr._bin.t.buff);\r\nTypr._bin.t.uint16 = new Uint16Array(Typr._bin.t.buff);\r\nTypr._bin.t.int32  = new Int32Array (Typr._bin.t.buff);\r\nTypr._bin.t.uint32 = new Uint32Array(Typr._bin.t.buff);\r\n\r\n\r\n\r\n\r\n\r\n// OpenType Layout Common Table Formats\r\n\r\nTypr._lctf = {};\r\n\r\nTypr._lctf.parse = function(data, offset, length, font, subt)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = {};\r\n\tvar offset0 = offset;\r\n\tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\r\n\t\r\n\tvar offScriptList  = bin.readUshort(data, offset);  offset += 2;\r\n\tvar offFeatureList = bin.readUshort(data, offset);  offset += 2;\r\n\tvar offLookupList  = bin.readUshort(data, offset);  offset += 2;\r\n\t\r\n\t\r\n\tobj.scriptList  = Typr._lctf.readScriptList (data, offset0 + offScriptList);\r\n\tobj.featureList = Typr._lctf.readFeatureList(data, offset0 + offFeatureList);\r\n\tobj.lookupList  = Typr._lctf.readLookupList (data, offset0 + offLookupList, subt);\r\n\t\r\n\treturn obj;\r\n};\r\n\r\nTypr._lctf.readLookupList = function(data, offset, subt)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar offset0 = offset;\r\n\tvar obj = [];\r\n\tvar count = bin.readUshort(data, offset);  offset+=2;\r\n\tfor(var i=0; i<count; i++) \r\n\t{\r\n\t\tvar noff = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar lut = Typr._lctf.readLookupTable(data, offset0 + noff, subt);\r\n\t\tobj.push(lut);\r\n\t}\r\n\treturn obj;\r\n};\r\n\r\nTypr._lctf.readLookupTable = function(data, offset, subt)\r\n{\r\n\t//console.log(\"Parsing lookup table\", offset);\r\n\tvar bin = Typr._bin;\r\n\tvar offset0 = offset;\r\n\tvar obj = {tabs:[]};\r\n\t\r\n\tobj.ltype = bin.readUshort(data, offset);  offset+=2;\r\n\tobj.flag  = bin.readUshort(data, offset);  offset+=2;\r\n\tvar cnt   = bin.readUshort(data, offset);  offset+=2;\r\n\t\r\n\tfor(var i=0; i<cnt; i++)\r\n\t{\r\n\t\tvar noff = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar tab = subt(data, obj.ltype, offset0 + noff);\r\n\t\t//console.log(obj.type, tab);\r\n\t\tobj.tabs.push(tab);\r\n\t}\r\n\treturn obj;\r\n};\r\n\r\nTypr._lctf.numOfOnes = function(n)\r\n{\r\n\tvar num = 0;\r\n\tfor(var i=0; i<32; i++) if(((n>>>i)&1) != 0) num++;\r\n\treturn num;\r\n};\r\n\r\nTypr._lctf.readClassDef = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = [];\r\n\tvar format = bin.readUshort(data, offset);  offset+=2;\r\n\tif(format==1) \r\n\t{\r\n\t\tvar startGlyph  = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar glyphCount  = bin.readUshort(data, offset);  offset+=2;\r\n\t\tfor(var i=0; i<glyphCount; i++)\r\n\t\t{\r\n\t\t\tobj.push(startGlyph+i);\r\n\t\t\tobj.push(startGlyph+i);\r\n\t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\r\n\t\t}\r\n\t}\r\n\tif(format==2)\r\n\t{\r\n\t\tvar count = bin.readUshort(data, offset);  offset+=2;\r\n\t\tfor(var i=0; i<count; i++)\r\n\t\t{\r\n\t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\r\n\t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\r\n\t\t\tobj.push(bin.readUshort(data, offset));  offset+=2;\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\nTypr._lctf.getInterval = function(tab, val)\r\n{\r\n\tfor(var i=0; i<tab.length; i+=3)\r\n\t{\r\n\t\tvar start = tab[i], end = tab[i+1], index = tab[i+2];\r\n\t\tif(start<=val && val<=end) return i;\r\n\t}\r\n\treturn -1;\r\n};\r\n\r\n\r\nTypr._lctf.readCoverage = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar cvg = {};\r\n\tcvg.fmt   = bin.readUshort(data, offset);  offset+=2;\r\n\tvar count = bin.readUshort(data, offset);  offset+=2;\r\n\t//console.log(\"parsing coverage\", offset-4, format, count);\r\n\tif(cvg.fmt==1) cvg.tab = bin.readUshorts(data, offset, count); \r\n\tif(cvg.fmt==2) cvg.tab = bin.readUshorts(data, offset, count*3);\r\n\treturn cvg;\r\n};\r\n\r\nTypr._lctf.coverageIndex = function(cvg, val)\r\n{\r\n\tvar tab = cvg.tab;\r\n\tif(cvg.fmt==1) return tab.indexOf(val);\r\n\tif(cvg.fmt==2) {\r\n\t\tvar ind = Typr._lctf.getInterval(tab, val);\r\n\t\tif(ind!=-1) return tab[ind+2] + (val - tab[ind]);\r\n\t}\r\n\treturn -1;\r\n};\r\n\r\nTypr._lctf.readFeatureList = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar offset0 = offset;\r\n\tvar obj = [];\r\n\t\r\n\tvar count = bin.readUshort(data, offset);  offset+=2;\r\n\t\r\n\tfor(var i=0; i<count; i++)\r\n\t{\r\n\t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\r\n\t\tvar noff = bin.readUshort(data, offset);  offset+=2;\r\n\t\tobj.push({tag: tag.trim(), tab:Typr._lctf.readFeatureTable(data, offset0 + noff)});\r\n\t}\r\n\treturn obj;\r\n};\r\n\r\nTypr._lctf.readFeatureTable = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin;\r\n\t\r\n\tvar featureParams = bin.readUshort(data, offset);  offset+=2;\t// = 0\r\n\tvar lookupCount = bin.readUshort(data, offset);  offset+=2;\r\n\t\r\n\tvar indices = [];\r\n\tfor(var i=0; i<lookupCount; i++) indices.push(bin.readUshort(data, offset+2*i));\r\n\treturn indices;\r\n};\r\n\r\n\r\nTypr._lctf.readScriptList = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar offset0 = offset;\r\n\tvar obj = {};\r\n\t\r\n\tvar count = bin.readUshort(data, offset);  offset+=2;\r\n\t\r\n\tfor(var i=0; i<count; i++)\r\n\t{\r\n\t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\r\n\t\tvar noff = bin.readUshort(data, offset);  offset+=2;\r\n\t\tobj[tag.trim()] = Typr._lctf.readScriptTable(data, offset0 + noff);\r\n\t}\r\n\treturn obj;\r\n};\r\n\r\nTypr._lctf.readScriptTable = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar offset0 = offset;\r\n\tvar obj = {};\r\n\t\r\n\tvar defLangSysOff = bin.readUshort(data, offset);  offset+=2;\r\n\tobj.default = Typr._lctf.readLangSysTable(data, offset0 + defLangSysOff);\r\n\t\r\n\tvar langSysCount = bin.readUshort(data, offset);  offset+=2;\r\n\t\r\n\tfor(var i=0; i<langSysCount; i++)\r\n\t{\r\n\t\tvar tag = bin.readASCII(data, offset, 4);  offset+=4;\r\n\t\tvar langSysOff = bin.readUshort(data, offset);  offset+=2;\r\n\t\tobj[tag.trim()] = Typr._lctf.readLangSysTable(data, offset0 + langSysOff);\r\n\t}\r\n\treturn obj;\r\n};\r\n\r\nTypr._lctf.readLangSysTable = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = {};\r\n\t\r\n\tvar lookupOrder = bin.readUshort(data, offset);  offset+=2;\r\n\t//if(lookupOrder!=0)  throw \"lookupOrder not 0\";\r\n\tobj.reqFeature = bin.readUshort(data, offset);  offset+=2;\r\n\t//if(obj.reqFeature != 0xffff) throw \"reqFeatureIndex != 0xffff\";\r\n\t\r\n\t//console.log(lookupOrder, obj.reqFeature);\r\n\t\r\n\tvar featureCount = bin.readUshort(data, offset);  offset+=2;\r\n\tobj.features = bin.readUshorts(data, offset, featureCount);\r\n\treturn obj;\r\n};\r\n\r\n\tTypr.CFF = {};\r\n\tTypr.CFF.parse = function(data, offset, length)\r\n\t{\r\n\t\tvar bin = Typr._bin;\r\n\t\t\r\n\t\tdata = new Uint8Array(data.buffer, offset, length);\r\n\t\toffset = 0;\r\n\t\t\r\n\t\t// Header\r\n\t\tvar major = data[offset];  offset++;\r\n\t\tvar minor = data[offset];  offset++;\r\n\t\tvar hdrSize = data[offset];  offset++;\r\n\t\tvar offsize = data[offset];  offset++;\r\n\t\t//console.log(major, minor, hdrSize, offsize);\r\n\t\t\r\n\t\t// Name INDEX\r\n\t\tvar ninds = [];\r\n\t\toffset = Typr.CFF.readIndex(data, offset, ninds);\r\n\t\tvar names = [];\r\n\t\t\r\n\t\tfor(var i=0; i<ninds.length-1; i++) names.push(bin.readASCII(data, offset+ninds[i], ninds[i+1]-ninds[i]));\r\n\t\toffset += ninds[ninds.length-1];\r\n\t\t\r\n\t\t\r\n\t\t// Top DICT INDEX\r\n\t\tvar tdinds = [];\r\n\t\toffset = Typr.CFF.readIndex(data, offset, tdinds);  //console.log(tdinds);\r\n\t\t// Top DICT Data\r\n\t\tvar topDicts = [];\r\n\t\tfor(var i=0; i<tdinds.length-1; i++) topDicts.push( Typr.CFF.readDict(data, offset+tdinds[i], offset+tdinds[i+1]) );\r\n\t\toffset += tdinds[tdinds.length-1];\r\n\t\tvar topdict = topDicts[0];\r\n\t\t//console.log(topdict);\r\n\t\t\r\n\t\t// String INDEX\r\n\t\tvar sinds = [];\r\n\t\toffset = Typr.CFF.readIndex(data, offset, sinds);\r\n\t\t// String Data\r\n\t\tvar strings = [];\r\n\t\tfor(var i=0; i<sinds.length-1; i++) strings.push(bin.readASCII(data, offset+sinds[i], sinds[i+1]-sinds[i]));\r\n\t\toffset += sinds[sinds.length-1];\r\n\t\t\r\n\t\t// Global Subr INDEX  (subroutines)\t\t\r\n\t\tTypr.CFF.readSubrs(data, offset, topdict);\r\n\t\t\r\n\t\t// charstrings\r\n\t\tif(topdict.CharStrings)\r\n\t\t{\r\n\t\t\toffset = topdict.CharStrings;\r\n\t\t\tvar sinds = [];\r\n\t\t\toffset = Typr.CFF.readIndex(data, offset, sinds);\r\n\t\t\t\r\n\t\t\tvar cstr = [];\r\n\t\t\tfor(var i=0; i<sinds.length-1; i++) cstr.push(bin.readBytes(data, offset+sinds[i], sinds[i+1]-sinds[i]));\r\n\t\t\t//offset += sinds[sinds.length-1];\r\n\t\t\ttopdict.CharStrings = cstr;\r\n\t\t\t//console.log(topdict.CharStrings);\r\n\t\t}\r\n\t\t\r\n\t\t// CID font\r\n\t\tif(topdict.ROS) {\r\n\t\t\toffset = topdict.FDArray;\r\n\t\t\tvar fdind = [];\r\n\t\t\toffset = Typr.CFF.readIndex(data, offset, fdind);\r\n\t\t\t\r\n\t\t\ttopdict.FDArray = [];\r\n\t\t\tfor(var i=0; i<fdind.length-1; i++) {\r\n\t\t\t\tvar dict = Typr.CFF.readDict(data, offset+fdind[i], offset+fdind[i+1]);\r\n\t\t\t\tTypr.CFF._readFDict(data, dict, strings);\r\n\t\t\t\ttopdict.FDArray.push( dict );\r\n\t\t\t}\r\n\t\t\toffset += fdind[fdind.length-1];\r\n\t\t\t\r\n\t\t\toffset = topdict.FDSelect;\r\n\t\t\ttopdict.FDSelect = [];\r\n\t\t\tvar fmt = data[offset];  offset++;\r\n\t\t\tif(fmt==3) {\r\n\t\t\t\tvar rns = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\t\tfor(var i=0; i<rns+1; i++) {\r\n\t\t\t\t\ttopdict.FDSelect.push(bin.readUshort(data, offset), data[offset+2]);  offset+=3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse throw fmt;\r\n\t\t}\r\n\t\t\r\n\t\t// Encoding\r\n\t\tif(topdict.Encoding) topdict.Encoding = Typr.CFF.readEncoding(data, topdict.Encoding, topdict.CharStrings.length);\r\n\t\t\r\n\t\t// charset\r\n\t\tif(topdict.charset ) topdict.charset  = Typr.CFF.readCharset (data, topdict.charset , topdict.CharStrings.length);\r\n\t\t\r\n\t\tTypr.CFF._readFDict(data, topdict, strings);\r\n\t\treturn topdict;\r\n\t};\r\n\tTypr.CFF._readFDict = function(data, dict, ss) {\r\n\t\tvar offset;\r\n\t\tif(dict.Private) {\r\n\t\t\toffset = dict.Private[1];\r\n\t\t\tdict.Private = Typr.CFF.readDict(data, offset, offset+dict.Private[0]);\r\n\t\t\tif(dict.Private.Subrs)  Typr.CFF.readSubrs(data, offset+dict.Private.Subrs, dict.Private);\r\n\t\t}\r\n\t\tfor(var p in dict) if([\"FamilyName\",\"FontName\",\"FullName\",\"Notice\",\"version\",\"Copyright\"].indexOf(p)!=-1)  dict[p]=ss[dict[p] -426 + 35];\r\n\t};\r\n\t\r\n\tTypr.CFF.readSubrs = function(data, offset, obj)\r\n\t{\r\n\t\tvar bin = Typr._bin;\r\n\t\tvar gsubinds = [];\r\n\t\toffset = Typr.CFF.readIndex(data, offset, gsubinds);\r\n\t\t\r\n\t\tvar bias, nSubrs = gsubinds.length;\r\n\t\tif (nSubrs <  1240) bias = 107;\r\n\t\telse if (nSubrs < 33900) bias = 1131;\r\n\t\telse bias = 32768;\r\n\t\tobj.Bias = bias;\r\n\t\t\r\n\t\tobj.Subrs = [];\r\n\t\tfor(var i=0; i<gsubinds.length-1; i++) obj.Subrs.push(bin.readBytes(data, offset+gsubinds[i], gsubinds[i+1]-gsubinds[i]));\r\n\t\t//offset += gsubinds[gsubinds.length-1];\r\n\t};\r\n\t\r\n\tTypr.CFF.tableSE = [\r\n      0,   0,   0,   0,   0,   0,   0,   0,\r\n      0,   0,   0,   0,   0,   0,   0,   0,\r\n      0,   0,   0,   0,   0,   0,   0,   0,\r\n      0,   0,   0,   0,   0,   0,   0,   0,\r\n      1,   2,   3,   4,   5,   6,   7,   8,\r\n      9,  10,  11,  12,  13,  14,  15,  16,\r\n     17,  18,  19,  20,  21,  22,  23,  24,\r\n     25,  26,  27,  28,  29,  30,  31,  32,\r\n     33,  34,  35,  36,  37,  38,  39,  40,\r\n     41,  42,  43,  44,  45,  46,  47,  48,\r\n     49,  50,  51,  52,  53,  54,  55,  56,\r\n     57,  58,  59,  60,  61,  62,  63,  64,\r\n     65,  66,  67,  68,  69,  70,  71,  72,\r\n     73,  74,  75,  76,  77,  78,  79,  80,\r\n     81,  82,  83,  84,  85,  86,  87,  88,\r\n     89,  90,  91,  92,  93,  94,  95,   0,\r\n      0,   0,   0,   0,   0,   0,   0,   0,\r\n      0,   0,   0,   0,   0,   0,   0,   0,\r\n      0,   0,   0,   0,   0,   0,   0,   0,\r\n      0,   0,   0,   0,   0,   0,   0,   0,\r\n      0,  96,  97,  98,  99, 100, 101, 102,\r\n    103, 104, 105, 106, 107, 108, 109, 110,\r\n      0, 111, 112, 113, 114,   0, 115, 116,\r\n    117, 118, 119, 120, 121, 122,   0, 123,\r\n      0, 124, 125, 126, 127, 128, 129, 130,\r\n    131,   0, 132, 133,   0, 134, 135, 136,\r\n    137,   0,   0,   0,   0,   0,   0,   0,\r\n      0,   0,   0,   0,   0,   0,   0,   0,\r\n      0, 138,   0, 139,   0,   0,   0,   0,\r\n    140, 141, 142, 143,   0,   0,   0,   0,\r\n      0, 144,   0,   0,   0, 145,   0,   0,\r\n    146, 147, 148, 149,   0,   0,   0,   0\r\n  ];\r\n  \r\n\tTypr.CFF.glyphByUnicode = function(cff, code)\r\n\t{\r\n\t\tfor(var i=0; i<cff.charset.length; i++) if(cff.charset[i]==code) return i;\r\n\t\treturn -1;\r\n\t};\r\n\t\r\n\tTypr.CFF.glyphBySE = function(cff, charcode)\t// glyph by standard encoding\r\n\t{\r\n\t\tif ( charcode < 0 || charcode > 255 ) return -1;\r\n\t\treturn Typr.CFF.glyphByUnicode(cff, Typr.CFF.tableSE[charcode]);\t\t\r\n\t};\r\n\t\r\n\tTypr.CFF.readEncoding = function(data, offset, num)\r\n\t{\r\n\t\tvar bin = Typr._bin;\r\n\t\t\r\n\t\tvar array = ['.notdef'];\r\n\t\tvar format = data[offset];  offset++;\r\n\t\t//console.log(\"Encoding\");\r\n\t\t//console.log(format);\r\n\t\t\r\n\t\tif(format==0)\r\n\t\t{\r\n\t\t\tvar nCodes = data[offset];  offset++;\r\n\t\t\tfor(var i=0; i<nCodes; i++)  array.push(data[offset+i]);\r\n\t\t}\r\n\t\t/*\r\n\t\telse if(format==1 || format==2)\r\n\t\t{\r\n\t\t\twhile(charset.length<num)\r\n\t\t\t{\r\n\t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\t\tvar nLeft=0;\r\n\t\t\t\tif(format==1) {  nLeft = data[offset];  offset++;  }\r\n\t\t\t\telse          {  nLeft = bin.readUshort(data, offset);  offset+=2;  }\r\n\t\t\t\tfor(var i=0; i<=nLeft; i++)  {  charset.push(first);  first++;  }\r\n\t\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t\telse throw \"error: unknown encoding format: \" + format;\r\n\t\t\r\n\t\treturn array;\r\n\t};\r\n\r\n\tTypr.CFF.readCharset = function(data, offset, num)\r\n\t{\r\n\t\tvar bin = Typr._bin;\r\n\t\t\r\n\t\tvar charset = ['.notdef'];\r\n\t\tvar format = data[offset];  offset++;\r\n\t\t\r\n\t\tif(format==0)\r\n\t\t{\r\n\t\t\tfor(var i=0; i<num; i++) \r\n\t\t\t{\r\n\t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\t\tcharset.push(first);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(format==1 || format==2)\r\n\t\t{\r\n\t\t\twhile(charset.length<num)\r\n\t\t\t{\r\n\t\t\t\tvar first = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\t\tvar nLeft=0;\r\n\t\t\t\tif(format==1) {  nLeft = data[offset];  offset++;  }\r\n\t\t\t\telse          {  nLeft = bin.readUshort(data, offset);  offset+=2;  }\r\n\t\t\t\tfor(var i=0; i<=nLeft; i++)  {  charset.push(first);  first++;  }\r\n\t\t\t}\r\n\t\t}\r\n\t\telse throw \"error: format: \" + format;\r\n\t\t\r\n\t\treturn charset;\r\n\t};\r\n\r\n\tTypr.CFF.readIndex = function(data, offset, inds)\r\n\t{\r\n\t\tvar bin = Typr._bin;\r\n\t\t\r\n\t\tvar count = bin.readUshort(data, offset)+1;  offset+=2;\r\n\t\tvar offsize = data[offset];  offset++;\r\n\t\t\r\n\t\tif     (offsize==1) for(var i=0; i<count; i++) inds.push( data[offset+i] );\r\n\t\telse if(offsize==2) for(var i=0; i<count; i++) inds.push( bin.readUshort(data, offset+i*2) );\r\n\t\telse if(offsize==3) for(var i=0; i<count; i++) inds.push( bin.readUint  (data, offset+i*3 - 1) & 0x00ffffff );\r\n\t\telse if(count!=1) throw \"unsupported offset size: \" + offsize + \", count: \" + count;\r\n\t\t\r\n\t\toffset += count*offsize;\r\n\t\treturn offset-1;\r\n\t};\r\n\t\r\n\tTypr.CFF.getCharString = function(data, offset, o)\r\n\t{\r\n\t\tvar bin = Typr._bin;\r\n\t\t\r\n\t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\r\n\t\tvar vs = 1;\r\n\t\tvar op=null, val=null;\r\n\t\t// operand\r\n\t\tif(b0<=20) { op = b0;  vs=1;  }\r\n\t\tif(b0==12) { op = b0*100+b1;  vs=2;  }\r\n\t\t//if(b0==19 || b0==20) { op = b0/*+\" \"+b1*/;  vs=2; }\r\n\t\tif(21 <=b0 && b0<= 27) { op = b0;  vs=1; }\r\n\t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\r\n\t\tif(29 <=b0 && b0<= 31) { op = b0;  vs=1; }\r\n\t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\r\n\t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\r\n\t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\r\n\t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;   }\r\n\t\t\r\n\t\to.val = val!=null ? val : \"o\"+op;\r\n\t\to.size = vs;\r\n\t};\r\n\t\r\n\tTypr.CFF.readCharString = function(data, offset, length)\r\n\t{\r\n\t\tvar end = offset + length;\r\n\t\tvar bin = Typr._bin;\r\n\t\tvar arr = [];\r\n\t\t\r\n\t\twhile(offset<end)\r\n\t\t{\r\n\t\t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\r\n\t\t\tvar vs = 1;\r\n\t\t\tvar op=null, val=null;\r\n\t\t\t// operand\r\n\t\t\tif(b0<=20) { op = b0;  vs=1;  }\r\n\t\t\tif(b0==12) { op = b0*100+b1;  vs=2;  }\r\n\t\t\tif(b0==19 || b0==20) { op = b0/*+\" \"+b1*/;  vs=2; }\r\n\t\t\tif(21 <=b0 && b0<= 27) { op = b0;  vs=1; }\r\n\t\t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\r\n\t\t\tif(29 <=b0 && b0<= 31) { op = b0;  vs=1; }\r\n\t\t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\r\n\t\t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\r\n\t\t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\r\n\t\t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;   }\r\n\t\t\t\r\n\t\t\tarr.push(val!=null ? val : \"o\"+op);\r\n\t\t\toffset += vs;\t\r\n\r\n\t\t\t//var cv = arr[arr.length-1];\r\n\t\t\t//if(cv==undefined) throw \"error\";\r\n\t\t\t//console.log()\r\n\t\t}\t\r\n\t\treturn arr;\r\n\t};\r\n\r\n\tTypr.CFF.readDict = function(data, offset, end)\r\n\t{\r\n\t\tvar bin = Typr._bin;\r\n\t\t//var dict = [];\r\n\t\tvar dict = {};\r\n\t\tvar carr = [];\r\n\t\t\r\n\t\twhile(offset<end)\r\n\t\t{\r\n\t\t\tvar b0 = data[offset], b1 = data[offset+1], b2 = data[offset+2], b3 = data[offset+3], b4=data[offset+4];\r\n\t\t\tvar vs = 1;\r\n\t\t\tvar key=null, val=null;\r\n\t\t\t// operand\r\n\t\t\tif(b0==28) { val = bin.readShort(data,offset+1);  vs=3; }\r\n\t\t\tif(b0==29) { val = bin.readInt  (data,offset+1);  vs=5; }\r\n\t\t\tif(32 <=b0 && b0<=246) { val = b0-139;  vs=1; }\r\n\t\t\tif(247<=b0 && b0<=250) { val = (b0-247)*256+b1+108;  vs=2; }\r\n\t\t\tif(251<=b0 && b0<=254) { val =-(b0-251)*256-b1-108;  vs=2; }\r\n\t\t\tif(b0==255) {  val = bin.readInt(data, offset+1)/0xffff;  vs=5;  throw \"unknown number\";  }\r\n\t\t\t\r\n\t\t\tif(b0==30) \r\n\t\t\t{  \r\n\t\t\t\tvar nibs = [];\r\n\t\t\t\tvs = 1;\r\n\t\t\t\twhile(true)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar b = data[offset+vs];  vs++;\r\n\t\t\t\t\tvar nib0 = b>>4, nib1 = b&0xf;\r\n\t\t\t\t\tif(nib0 != 0xf) nibs.push(nib0);  if(nib1!=0xf) nibs.push(nib1);\r\n\t\t\t\t\tif(nib1==0xf) break;\r\n\t\t\t\t}\r\n\t\t\t\tvar s = \"\";\r\n\t\t\t\tvar chars = [0,1,2,3,4,5,6,7,8,9,\".\",\"e\",\"e-\",\"reserved\",\"-\",\"endOfNumber\"];\r\n\t\t\t\tfor(var i=0; i<nibs.length; i++) s += chars[nibs[i]];\r\n\t\t\t\t//console.log(nibs);\r\n\t\t\t\tval = parseFloat(s);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(b0<=21)\t// operator\r\n\t\t\t{\r\n\t\t\t\tvar keys = [\"version\", \"Notice\", \"FullName\", \"FamilyName\", \"Weight\", \"FontBBox\", \"BlueValues\", \"OtherBlues\", \"FamilyBlues\",\"FamilyOtherBlues\",\r\n\t\t\t\t\t\"StdHW\", \"StdVW\", \"escape\", \"UniqueID\", \"XUID\", \"charset\", \"Encoding\", \"CharStrings\", \"Private\", \"Subrs\", \r\n\t\t\t\t\t\"defaultWidthX\", \"nominalWidthX\"];\r\n\t\t\t\t\t\r\n\t\t\t\tkey = keys[b0];  vs=1;\r\n\t\t\t\tif(b0==12) { \r\n\t\t\t\t\tvar keys = [ \"Copyright\", \"isFixedPitch\", \"ItalicAngle\", \"UnderlinePosition\", \"UnderlineThickness\", \"PaintType\", \"CharstringType\", \"FontMatrix\", \"StrokeWidth\", \"BlueScale\",\r\n\t\t\t\t\t\"BlueShift\", \"BlueFuzz\", \"StemSnapH\", \"StemSnapV\", \"ForceBold\", 0,0, \"LanguageGroup\", \"ExpansionFactor\", \"initialRandomSeed\",\r\n\t\t\t\t\t\"SyntheticBase\", \"PostScript\", \"BaseFontName\", \"BaseFontBlend\", 0,0,0,0,0,0, \r\n\t\t\t\t\t\"ROS\", \"CIDFontVersion\", \"CIDFontRevision\", \"CIDFontType\", \"CIDCount\", \"UIDBase\", \"FDArray\", \"FDSelect\", \"FontName\"];\r\n\t\t\t\t\tkey = keys[b1];  vs=2; \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(key!=null) {  dict[key] = carr.length==1 ? carr[0] : carr;  carr=[]; }\r\n\t\t\telse  carr.push(val);  \r\n\t\t\t\r\n\t\t\toffset += vs;\t\t\r\n\t\t}\t\r\n\t\treturn dict;\r\n\t};\r\n\r\n\r\nTypr.cmap = {};\r\nTypr.cmap.parse = function(data, offset, length)\r\n{\r\n\tdata = new Uint8Array(data.buffer, offset, length);\r\n\toffset = 0;\r\n\tvar bin = Typr._bin;\r\n\tvar obj = {};\r\n\tvar version   = bin.readUshort(data, offset);  offset += 2;\r\n\tvar numTables = bin.readUshort(data, offset);  offset += 2;\r\n\t\r\n\t//console.log(version, numTables);\r\n\t\r\n\tvar offs = [];\r\n\tobj.tables = [];\r\n\t\r\n\t\r\n\tfor(var i=0; i<numTables; i++)\r\n\t{\r\n\t\tvar platformID = bin.readUshort(data, offset);  offset += 2;\r\n\t\tvar encodingID = bin.readUshort(data, offset);  offset += 2;\r\n\t\tvar noffset = bin.readUint(data, offset);       offset += 4;\r\n\t\t\r\n\t\tvar id = \"p\"+platformID+\"e\"+encodingID;\r\n\t\t\r\n\t\t//console.log(\"cmap subtable\", platformID, encodingID, noffset);\r\n\t\t\r\n\t\t\r\n\t\tvar tind = offs.indexOf(noffset);\r\n\t\t\r\n\t\tif(tind==-1)\r\n\t\t{\r\n\t\t\ttind = obj.tables.length;\r\n\t\t\tvar subt;\r\n\t\t\toffs.push(noffset);\r\n\t\t\tvar format = bin.readUshort(data, noffset);\r\n\t\t\tif     (format== 0) subt = Typr.cmap.parse0(data, noffset);\r\n\t\t\telse if(format== 4) subt = Typr.cmap.parse4(data, noffset);\r\n\t\t\telse if(format== 6) subt = Typr.cmap.parse6(data, noffset);\r\n\t\t\telse if(format==12) subt = Typr.cmap.parse12(data,noffset);\r\n\t\t\telse console.log(\"unknown format: \"+format, platformID, encodingID, noffset);\r\n\t\t\tobj.tables.push(subt);\r\n\t\t}\r\n\t\t\r\n\t\tif(obj[id]!=null) throw \"multiple tables for one platform+encoding\";\r\n\t\tobj[id] = tind;\r\n\t}\r\n\treturn obj;\r\n};\r\n\r\nTypr.cmap.parse0 = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = {};\r\n\tobj.format = bin.readUshort(data, offset);  offset += 2;\r\n\tvar len    = bin.readUshort(data, offset);  offset += 2;\r\n\tvar lang   = bin.readUshort(data, offset);  offset += 2;\r\n\tobj.map = [];\r\n\tfor(var i=0; i<len-6; i++) obj.map.push(data[offset+i]);\r\n\treturn obj;\r\n};\r\n\r\nTypr.cmap.parse4 = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar offset0 = offset;\r\n\tvar obj = {};\r\n\t\r\n\tobj.format = bin.readUshort(data, offset);  offset+=2;\r\n\tvar length = bin.readUshort(data, offset);  offset+=2;\r\n\tvar language = bin.readUshort(data, offset);  offset+=2;\r\n\tvar segCountX2 = bin.readUshort(data, offset);  offset+=2;\r\n\tvar segCount = segCountX2/2;\r\n\tobj.searchRange = bin.readUshort(data, offset);  offset+=2;\r\n\tobj.entrySelector = bin.readUshort(data, offset);  offset+=2;\r\n\tobj.rangeShift = bin.readUshort(data, offset);  offset+=2;\r\n\tobj.endCount   = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\r\n\toffset+=2;\r\n\tobj.startCount = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\r\n\tobj.idDelta = [];\r\n\tfor(var i=0; i<segCount; i++) {obj.idDelta.push(bin.readShort(data, offset));  offset+=2;}\r\n\tobj.idRangeOffset = bin.readUshorts(data, offset, segCount);  offset += segCount*2;\r\n\tobj.glyphIdArray = [];\r\n\twhile(offset< offset0+length) {obj.glyphIdArray.push(bin.readUshort(data, offset));  offset+=2;}\r\n\treturn obj;\r\n};\r\n\r\nTypr.cmap.parse6 = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = {};\r\n\t\r\n\tobj.format = bin.readUshort(data, offset);  offset+=2;\r\n\tvar length = bin.readUshort(data, offset);  offset+=2;\r\n\tvar language = bin.readUshort(data, offset);  offset+=2;\r\n\tobj.firstCode = bin.readUshort(data, offset);  offset+=2;\r\n\tvar entryCount = bin.readUshort(data, offset);  offset+=2;\r\n\tobj.glyphIdArray = [];\r\n\tfor(var i=0; i<entryCount; i++) {obj.glyphIdArray.push(bin.readUshort(data, offset));  offset+=2;}\r\n\t\r\n\treturn obj;\r\n};\r\n\r\nTypr.cmap.parse12 = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = {};\r\n\t\r\n\tobj.format = bin.readUshort(data, offset);  offset+=2;\r\n\toffset += 2;\r\n\tvar length = bin.readUint(data, offset);  offset+=4;\r\n\tvar lang   = bin.readUint(data, offset);  offset+=4;\r\n\tvar nGroups= bin.readUint(data, offset);  offset+=4;\r\n\tobj.groups = [];\r\n\t\r\n\tfor(var i=0; i<nGroups; i++)  \r\n\t{\r\n\t\tvar off = offset + i * 12;\r\n\t\tvar startCharCode = bin.readUint(data, off+0);\r\n\t\tvar endCharCode   = bin.readUint(data, off+4);\r\n\t\tvar startGlyphID  = bin.readUint(data, off+8);\r\n\t\tobj.groups.push([  startCharCode, endCharCode, startGlyphID  ]);\r\n\t}\r\n\treturn obj;\r\n};\r\n\r\nTypr.glyf = {};\r\nTypr.glyf.parse = function(data, offset, length, font)\r\n{\r\n\tvar obj = [];\r\n\tfor(var g=0; g<font.maxp.numGlyphs; g++) obj.push(null);\r\n\treturn obj;\r\n};\r\n\r\nTypr.glyf._parseGlyf = function(font, g)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar data = font._data;\r\n\t\r\n\tvar offset = Typr._tabOffset(data, \"glyf\", font._offset) + font.loca[g];\r\n\t\t\r\n\tif(font.loca[g]==font.loca[g+1]) return null;\r\n\t\t\r\n\tvar gl = {};\r\n\t\t\r\n\tgl.noc  = bin.readShort(data, offset);  offset+=2;\t\t// number of contours\r\n\tgl.xMin = bin.readShort(data, offset);  offset+=2;\r\n\tgl.yMin = bin.readShort(data, offset);  offset+=2;\r\n\tgl.xMax = bin.readShort(data, offset);  offset+=2;\r\n\tgl.yMax = bin.readShort(data, offset);  offset+=2;\r\n\t\r\n\tif(gl.xMin>=gl.xMax || gl.yMin>=gl.yMax) return null;\r\n\t\t\r\n\tif(gl.noc>0)\r\n\t{\r\n\t\tgl.endPts = [];\r\n\t\tfor(var i=0; i<gl.noc; i++) { gl.endPts.push(bin.readUshort(data,offset)); offset+=2; }\r\n\t\t\r\n\t\tvar instructionLength = bin.readUshort(data,offset); offset+=2;\r\n\t\tif((data.length-offset)<instructionLength) return null;\r\n\t\tgl.instructions = bin.readBytes(data, offset, instructionLength);   offset+=instructionLength;\r\n\t\t\r\n\t\tvar crdnum = gl.endPts[gl.noc-1]+1;\r\n\t\tgl.flags = [];\r\n\t\tfor(var i=0; i<crdnum; i++ ) \r\n\t\t{ \r\n\t\t\tvar flag = data[offset];  offset++; \r\n\t\t\tgl.flags.push(flag); \r\n\t\t\tif((flag&8)!=0)\r\n\t\t\t{\r\n\t\t\t\tvar rep = data[offset];  offset++;\r\n\t\t\t\tfor(var j=0; j<rep; j++) { gl.flags.push(flag); i++; }\r\n\t\t\t}\r\n\t\t}\r\n\t\tgl.xs = [];\r\n\t\tfor(var i=0; i<crdnum; i++) {\r\n\t\t\tvar i8=((gl.flags[i]&2)!=0), same=((gl.flags[i]&16)!=0);  \r\n\t\t\tif(i8) { gl.xs.push(same ? data[offset] : -data[offset]);  offset++; }\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(same) gl.xs.push(0);\r\n\t\t\t\telse { gl.xs.push(bin.readShort(data, offset));  offset+=2; }\r\n\t\t\t}\r\n\t\t}\r\n\t\tgl.ys = [];\r\n\t\tfor(var i=0; i<crdnum; i++) {\r\n\t\t\tvar i8=((gl.flags[i]&4)!=0), same=((gl.flags[i]&32)!=0);  \r\n\t\t\tif(i8) { gl.ys.push(same ? data[offset] : -data[offset]);  offset++; }\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(same) gl.ys.push(0);\r\n\t\t\t\telse { gl.ys.push(bin.readShort(data, offset));  offset+=2; }\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar x = 0, y = 0;\r\n\t\tfor(var i=0; i<crdnum; i++) { x += gl.xs[i]; y += gl.ys[i];  gl.xs[i]=x;  gl.ys[i]=y; }\r\n\t\t//console.log(endPtsOfContours, instructionLength, instructions, flags, xCoordinates, yCoordinates);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar ARG_1_AND_2_ARE_WORDS\t= 1<<0;\r\n\t\tvar ARGS_ARE_XY_VALUES\t\t= 1<<1;\r\n\t\tvar WE_HAVE_A_SCALE\t\t\t= 1<<3;\r\n\t\tvar MORE_COMPONENTS\t\t\t= 1<<5;\r\n\t\tvar WE_HAVE_AN_X_AND_Y_SCALE= 1<<6;\r\n\t\tvar WE_HAVE_A_TWO_BY_TWO\t= 1<<7;\r\n\t\tvar WE_HAVE_INSTRUCTIONS\t= 1<<8;\r\n\t\t\r\n\t\tgl.parts = [];\r\n\t\tvar flags;\r\n\t\tdo {\r\n\t\t\tflags = bin.readUshort(data, offset);  offset += 2;\r\n\t\t\tvar part = { m:{a:1,b:0,c:0,d:1,tx:0,ty:0}, p1:-1, p2:-1 };  gl.parts.push(part);\r\n\t\t\tpart.glyphIndex = bin.readUshort(data, offset);  offset += 2;\r\n\t\t\tif ( flags & ARG_1_AND_2_ARE_WORDS) {\r\n\t\t\t\tvar arg1 = bin.readShort(data, offset);  offset += 2;\r\n\t\t\t\tvar arg2 = bin.readShort(data, offset);  offset += 2;\r\n\t\t\t} else {\r\n\t\t\t\tvar arg1 = bin.readInt8(data, offset);  offset ++;\r\n\t\t\t\tvar arg2 = bin.readInt8(data, offset);  offset ++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(flags & ARGS_ARE_XY_VALUES) { part.m.tx = arg1;  part.m.ty = arg2; }\r\n\t\t\telse  {  part.p1=arg1;  part.p2=arg2;  }\r\n\t\t\t//part.m.tx = arg1;  part.m.ty = arg2;\r\n\t\t\t//else { throw \"params are not XY values\"; }\r\n\t\t\t\r\n\t\t\tif ( flags & WE_HAVE_A_SCALE ) {\r\n\t\t\t\tpart.m.a = part.m.d = bin.readF2dot14(data, offset);  offset += 2;    \r\n\t\t\t} else if ( flags & WE_HAVE_AN_X_AND_Y_SCALE ) {\r\n\t\t\t\tpart.m.a = bin.readF2dot14(data, offset);  offset += 2; \r\n\t\t\t\tpart.m.d = bin.readF2dot14(data, offset);  offset += 2; \r\n\t\t\t} else if ( flags & WE_HAVE_A_TWO_BY_TWO ) {\r\n\t\t\t\tpart.m.a = bin.readF2dot14(data, offset);  offset += 2; \r\n\t\t\t\tpart.m.b = bin.readF2dot14(data, offset);  offset += 2; \r\n\t\t\t\tpart.m.c = bin.readF2dot14(data, offset);  offset += 2; \r\n\t\t\t\tpart.m.d = bin.readF2dot14(data, offset);  offset += 2; \r\n\t\t\t}\r\n\t\t} while ( flags & MORE_COMPONENTS ) \r\n\t\tif (flags & WE_HAVE_INSTRUCTIONS){\r\n\t\t\tvar numInstr = bin.readUshort(data, offset);  offset += 2;\r\n\t\t\tgl.instr = [];\r\n\t\t\tfor(var i=0; i<numInstr; i++) { gl.instr.push(data[offset]);  offset++; }\r\n\t\t}\r\n\t}\r\n\treturn gl;\r\n};\r\n\r\n\r\nTypr.GPOS = {};\r\nTypr.GPOS.parse = function(data, offset, length, font) {  return Typr._lctf.parse(data, offset, length, font, Typr.GPOS.subt);  };\r\n\r\n\r\nTypr.GPOS.subt = function(data, ltype, offset)\t// lookup type\r\n{\r\n\tvar bin = Typr._bin, offset0 = offset, tab = {};\r\n\t\r\n\ttab.fmt  = bin.readUshort(data, offset);  offset+=2;\r\n\t\r\n\t//console.log(ltype, tab.fmt);\r\n\t\r\n\tif(ltype==1 || ltype==2 || ltype==3 || ltype==7 || (ltype==8 && tab.fmt<=2)) {\r\n\t\tvar covOff  = bin.readUshort(data, offset);  offset+=2;\r\n\t\ttab.coverage = Typr._lctf.readCoverage(data, covOff+offset0);\r\n\t}\r\n\tif(ltype==1 && tab.fmt==1) {\r\n\t\tvar valFmt1 = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar ones1 = Typr._lctf.numOfOnes(valFmt1);\r\n\t\tif(valFmt1!=0)  tab.pos = Typr.GPOS.readValueRecord(data, offset, valFmt1);\r\n\t}\r\n\telse if(ltype==2) {\r\n\t\tvar valFmt1 = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar valFmt2 = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar ones1 = Typr._lctf.numOfOnes(valFmt1);\r\n\t\tvar ones2 = Typr._lctf.numOfOnes(valFmt2);\r\n\t\tif(tab.fmt==1)\r\n\t\t{\r\n\t\t\ttab.pairsets = [];\r\n\t\t\tvar psc = bin.readUshort(data, offset);  offset+=2;  // PairSetCount\r\n\t\t\t\r\n\t\t\tfor(var i=0; i<psc; i++)\r\n\t\t\t{\r\n\t\t\t\tvar psoff = offset0 + bin.readUshort(data, offset);  offset+=2;\r\n\t\t\t\t\r\n\t\t\t\tvar pvc = bin.readUshort(data, psoff);  psoff+=2;\r\n\t\t\t\tvar arr = [];\r\n\t\t\t\tfor(var j=0; j<pvc; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar gid2 = bin.readUshort(data, psoff);  psoff+=2;\r\n\t\t\t\t\tvar value1, value2;\r\n\t\t\t\t\tif(valFmt1!=0) {  value1 = Typr.GPOS.readValueRecord(data, psoff, valFmt1);  psoff+=ones1*2;  }\r\n\t\t\t\t\tif(valFmt2!=0) {  value2 = Typr.GPOS.readValueRecord(data, psoff, valFmt2);  psoff+=ones2*2;  }\r\n\t\t\t\t\t//if(value1!=null) throw \"e\";\r\n\t\t\t\t\tarr.push({gid2:gid2, val1:value1, val2:value2});\r\n\t\t\t\t}\r\n\t\t\t\ttab.pairsets.push(arr);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(tab.fmt==2)\r\n\t\t{\r\n\t\t\tvar classDef1 = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\tvar classDef2 = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\tvar class1Count = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\tvar class2Count = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\t\r\n\t\t\ttab.classDef1 = Typr._lctf.readClassDef(data, offset0 + classDef1);\r\n\t\t\ttab.classDef2 = Typr._lctf.readClassDef(data, offset0 + classDef2);\r\n\t\t\t\r\n\t\t\ttab.matrix = [];\r\n\t\t\tfor(var i=0; i<class1Count; i++)\r\n\t\t\t{\r\n\t\t\t\tvar row = [];\r\n\t\t\t\tfor(var j=0; j<class2Count; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar value1 = null, value2 = null;\r\n\t\t\t\t\tif(tab.valFmt1!=0) { value1 = Typr.GPOS.readValueRecord(data, offset, tab.valFmt1);  offset+=ones1*2; }\r\n\t\t\t\t\tif(tab.valFmt2!=0) { value2 = Typr.GPOS.readValueRecord(data, offset, tab.valFmt2);  offset+=ones2*2; }\r\n\t\t\t\t\trow.push({val1:value1, val2:value2});\r\n\t\t\t\t}\r\n\t\t\t\ttab.matrix.push(row);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse ;\r\n\treturn tab;\r\n};\r\n\r\n\r\nTypr.GPOS.readValueRecord = function(data, offset, valFmt)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar arr = [];\r\n\tarr.push( (valFmt&1) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&1) ? 2 : 0;  // X_PLACEMENT\r\n\tarr.push( (valFmt&2) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&2) ? 2 : 0;  // Y_PLACEMENT\r\n\tarr.push( (valFmt&4) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&4) ? 2 : 0;  // X_ADVANCE\r\n\tarr.push( (valFmt&8) ? bin.readShort(data, offset) : 0 );  offset += (valFmt&8) ? 2 : 0;  // Y_ADVANCE\r\n\treturn arr;\r\n};\r\n\r\nTypr.GSUB = {};\r\nTypr.GSUB.parse = function(data, offset, length, font) {  return Typr._lctf.parse(data, offset, length, font, Typr.GSUB.subt);  };\r\n\r\n\r\nTypr.GSUB.subt = function(data, ltype, offset)\t// lookup type\r\n{\r\n\tvar bin = Typr._bin, offset0 = offset, tab = {};\r\n\t\r\n\ttab.fmt  = bin.readUshort(data, offset);  offset+=2;\r\n\t\r\n\tif(ltype!=1 && ltype!=4 && ltype!=5 && ltype!=6) return null;\r\n\t\r\n\tif(ltype==1 || ltype==4 || (ltype==5 && tab.fmt<=2) || (ltype==6 && tab.fmt<=2)) {\r\n\t\tvar covOff  = bin.readUshort(data, offset);  offset+=2;\r\n\t\ttab.coverage = Typr._lctf.readCoverage(data, offset0+covOff);\t// not always is coverage here\r\n\t}\r\n\t\r\n\tif(ltype==1) {\t\r\n\t\tif(tab.fmt==1) {\r\n\t\t\ttab.delta = bin.readShort(data, offset);  offset+=2;\r\n\t\t}\r\n\t\telse if(tab.fmt==2) {\r\n\t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\ttab.newg = bin.readUshorts(data, offset, cnt);  offset+=tab.newg.length*2;\r\n\t\t}\r\n\t}\r\n\t//  Ligature Substitution Subtable\r\n\telse if(ltype==4) {\r\n\t\ttab.vals = [];\r\n\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\r\n\t\tfor(var i=0; i<cnt; i++) {\r\n\t\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\ttab.vals.push(Typr.GSUB.readLigatureSet(data, offset0+loff));\r\n\t\t}\r\n\t\t//console.log(tab.coverage);\r\n\t\t//console.log(tab.vals);\r\n\t} \r\n\t//  Contextual Substitution Subtable\r\n\telse if(ltype==5) {\r\n\t\tif(tab.fmt==2) {\r\n\t\t\tvar cDefOffset = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\ttab.cDef = Typr._lctf.readClassDef(data, offset0 + cDefOffset);\r\n\t\t\ttab.scset = [];\r\n\t\t\tvar subClassSetCount = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\tfor(var i=0; i<subClassSetCount; i++)\r\n\t\t\t{\r\n\t\t\t\tvar scsOff = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\t\ttab.scset.push(  scsOff==0 ? null : Typr.GSUB.readSubClassSet(data, offset0 + scsOff)  );\r\n\t\t\t}\r\n\t\t}\r\n\t\t//else console.log(\"unknown table format\", tab.fmt);\r\n\t}\r\n\t//*\r\n\telse if(ltype==6) {\r\n\t\t/*\r\n\t\tif(tab.fmt==2) {\r\n\t\t\tvar btDef = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\tvar inDef = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\tvar laDef = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\t\r\n\t\t\ttab.btDef = Typr._lctf.readClassDef(data, offset0 + btDef);\r\n\t\t\ttab.inDef = Typr._lctf.readClassDef(data, offset0 + inDef);\r\n\t\t\ttab.laDef = Typr._lctf.readClassDef(data, offset0 + laDef);\r\n\t\t\t\r\n\t\t\ttab.scset = [];\r\n\t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\tfor(var i=0; i<cnt; i++) {\r\n\t\t\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\t\ttab.scset.push(Typr.GSUB.readChainSubClassSet(data, offset0+loff));\r\n\t\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t\tif(tab.fmt==3) {\r\n\t\t\tfor(var i=0; i<3; i++) {\r\n\t\t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\t\tvar cvgs = [];\r\n\t\t\t\tfor(var j=0; j<cnt; j++) cvgs.push(  Typr._lctf.readCoverage(data, offset0 + bin.readUshort(data, offset+j*2))   );\r\n\t\t\t\toffset+=cnt*2;\r\n\t\t\t\tif(i==0) tab.backCvg = cvgs;\r\n\t\t\t\tif(i==1) tab.inptCvg = cvgs;\r\n\t\t\t\tif(i==2) tab.ahedCvg = cvgs;\r\n\t\t\t}\r\n\t\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;\r\n\t\t\ttab.lookupRec = Typr.GSUB.readSubstLookupRecords(data, offset, cnt);\r\n\t\t}\r\n\t\t//console.log(tab);\r\n\t} //*/\r\n\t//if(tab.coverage.indexOf(3)!=-1) console.log(ltype, fmt, tab);\r\n\t\r\n\treturn tab;\r\n};\r\n\r\nTypr.GSUB.readSubClassSet = function(data, offset)\r\n{\r\n\tvar rUs = Typr._bin.readUshort, offset0 = offset, lset = [];\r\n\tvar cnt = rUs(data, offset);  offset+=2;\r\n\tfor(var i=0; i<cnt; i++) {\r\n\t\tvar loff = rUs(data, offset);  offset+=2;\r\n\t\tlset.push(Typr.GSUB.readSubClassRule(data, offset0+loff));\r\n\t}\r\n\treturn lset;\r\n};\r\nTypr.GSUB.readSubClassRule= function(data, offset)\r\n{\r\n\tvar rUs = Typr._bin.readUshort, rule = {};\r\n\tvar gcount = rUs(data, offset);  offset+=2;\r\n\tvar scount = rUs(data, offset);  offset+=2;\r\n\trule.input = [];\r\n\tfor(var i=0; i<gcount-1; i++) {\r\n\t\trule.input.push(rUs(data, offset));  offset+=2;\r\n\t}\r\n\trule.substLookupRecords = Typr.GSUB.readSubstLookupRecords(data, offset, scount);\r\n\treturn rule;\r\n};\r\nTypr.GSUB.readSubstLookupRecords = function(data, offset, cnt)\r\n{\r\n\tvar rUs = Typr._bin.readUshort;\r\n\tvar out = [];\r\n\tfor(var i=0; i<cnt; i++) {  out.push(rUs(data, offset), rUs(data, offset+2));  offset+=4;  }\r\n\treturn out;\r\n};\r\n\r\nTypr.GSUB.readChainSubClassSet = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin, offset0 = offset, lset = [];\r\n\tvar cnt = bin.readUshort(data, offset);  offset+=2;\r\n\tfor(var i=0; i<cnt; i++) {\r\n\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\r\n\t\tlset.push(Typr.GSUB.readChainSubClassRule(data, offset0+loff));\r\n\t}\r\n\treturn lset;\r\n};\r\nTypr.GSUB.readChainSubClassRule= function(data, offset)\r\n{\r\n\tvar bin = Typr._bin, rule = {};\r\n\tvar pps = [\"backtrack\", \"input\", \"lookahead\"];\r\n\tfor(var pi=0; pi<pps.length; pi++) {\r\n\t\tvar cnt = bin.readUshort(data, offset);  offset+=2;  if(pi==1) cnt--;\r\n\t\trule[pps[pi]]=bin.readUshorts(data, offset, cnt);  offset+= rule[pps[pi]].length*2;\r\n\t}\r\n\tvar cnt = bin.readUshort(data, offset);  offset+=2;\r\n\trule.subst = bin.readUshorts(data, offset, cnt*2);  offset += rule.subst.length*2;\r\n\treturn rule;\r\n};\r\n\r\nTypr.GSUB.readLigatureSet = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin, offset0 = offset, lset = [];\r\n\tvar lcnt = bin.readUshort(data, offset);  offset+=2;\r\n\tfor(var j=0; j<lcnt; j++) {\r\n\t\tvar loff = bin.readUshort(data, offset);  offset+=2;\r\n\t\tlset.push(Typr.GSUB.readLigature(data, offset0+loff));\r\n\t}\r\n\treturn lset;\r\n};\r\nTypr.GSUB.readLigature = function(data, offset)\r\n{\r\n\tvar bin = Typr._bin, lig = {chain:[]};\r\n\tlig.nglyph = bin.readUshort(data, offset);  offset+=2;\r\n\tvar ccnt = bin.readUshort(data, offset);  offset+=2;\r\n\tfor(var k=0; k<ccnt-1; k++) {  lig.chain.push(bin.readUshort(data, offset));  offset+=2;  }\r\n\treturn lig;\r\n};\r\n\r\n\r\n\r\nTypr.head = {};\r\nTypr.head.parse = function(data, offset, length)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = {};\r\n\tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\r\n\tobj.fontRevision = bin.readFixed(data, offset);  offset += 4;\r\n\tvar checkSumAdjustment = bin.readUint(data, offset);  offset += 4;\r\n\tvar magicNumber = bin.readUint(data, offset);  offset += 4;\r\n\tobj.flags = bin.readUshort(data, offset);  offset += 2;\r\n\tobj.unitsPerEm = bin.readUshort(data, offset);  offset += 2;\r\n\tobj.created  = bin.readUint64(data, offset);  offset += 8;\r\n\tobj.modified = bin.readUint64(data, offset);  offset += 8;\r\n\tobj.xMin = bin.readShort(data, offset);  offset += 2;\r\n\tobj.yMin = bin.readShort(data, offset);  offset += 2;\r\n\tobj.xMax = bin.readShort(data, offset);  offset += 2;\r\n\tobj.yMax = bin.readShort(data, offset);  offset += 2;\r\n\tobj.macStyle = bin.readUshort(data, offset);  offset += 2;\r\n\tobj.lowestRecPPEM = bin.readUshort(data, offset);  offset += 2;\r\n\tobj.fontDirectionHint = bin.readShort(data, offset);  offset += 2;\r\n\tobj.indexToLocFormat  = bin.readShort(data, offset);  offset += 2;\r\n\tobj.glyphDataFormat   = bin.readShort(data, offset);  offset += 2;\r\n\treturn obj;\r\n};\r\n\r\n\r\nTypr.hhea = {};\r\nTypr.hhea.parse = function(data, offset, length)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = {};\r\n\tvar tableVersion = bin.readFixed(data, offset);  offset += 4;\r\n\tobj.ascender  = bin.readShort(data, offset);  offset += 2;\r\n\tobj.descender = bin.readShort(data, offset);  offset += 2;\r\n\tobj.lineGap = bin.readShort(data, offset);  offset += 2;\r\n\t\r\n\tobj.advanceWidthMax = bin.readUshort(data, offset);  offset += 2;\r\n\tobj.minLeftSideBearing  = bin.readShort(data, offset);  offset += 2;\r\n\tobj.minRightSideBearing = bin.readShort(data, offset);  offset += 2;\r\n\tobj.xMaxExtent = bin.readShort(data, offset);  offset += 2;\r\n\t\r\n\tobj.caretSlopeRise = bin.readShort(data, offset);  offset += 2;\r\n\tobj.caretSlopeRun  = bin.readShort(data, offset);  offset += 2;\r\n\tobj.caretOffset    = bin.readShort(data, offset);  offset += 2;\r\n\t\r\n\toffset += 4*2;\r\n\t\r\n\tobj.metricDataFormat = bin.readShort (data, offset);  offset += 2;\r\n\tobj.numberOfHMetrics = bin.readUshort(data, offset);  offset += 2;\r\n\treturn obj;\r\n};\r\n\r\n\r\nTypr.hmtx = {};\r\nTypr.hmtx.parse = function(data, offset, length, font)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = {};\r\n\t\r\n\tobj.aWidth = [];\r\n\tobj.lsBearing = [];\r\n\t\r\n\t\r\n\tvar aw = 0, lsb = 0;\r\n\t\r\n\tfor(var i=0; i<font.maxp.numGlyphs; i++)\r\n\t{\r\n\t\tif(i<font.hhea.numberOfHMetrics) {  aw=bin.readUshort(data, offset);  offset += 2;  lsb=bin.readShort(data, offset);  offset+=2;  }\r\n\t\tobj.aWidth.push(aw);\r\n\t\tobj.lsBearing.push(lsb);\r\n\t}\r\n\t\r\n\treturn obj;\r\n};\r\n\r\n\r\nTypr.kern = {};\r\nTypr.kern.parse = function(data, offset, length, font)\r\n{\r\n\tvar bin = Typr._bin;\r\n\t\r\n\tvar version = bin.readUshort(data, offset);  offset+=2;\r\n\tif(version==1) return Typr.kern.parseV1(data, offset-2, length, font);\r\n\tvar nTables = bin.readUshort(data, offset);  offset+=2;\r\n\t\r\n\tvar map = {glyph1: [], rval:[]};\r\n\tfor(var i=0; i<nTables; i++)\r\n\t{\r\n\t\toffset+=2;\t// skip version\r\n\t\tvar length  = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar coverage = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar format = coverage>>>8;\r\n\t\t/* I have seen format 128 once, that's why I do */ format &= 0xf;\r\n\t\tif(format==0) offset = Typr.kern.readFormat0(data, offset, map);\r\n\t\telse throw \"unknown kern table format: \"+format;\r\n\t}\r\n\treturn map;\r\n};\r\n\r\nTypr.kern.parseV1 = function(data, offset, length, font)\r\n{\r\n\tvar bin = Typr._bin;\r\n\t\r\n\tvar version = bin.readFixed(data, offset);  offset+=4;\r\n\tvar nTables = bin.readUint(data, offset);  offset+=4;\r\n\t\r\n\tvar map = {glyph1: [], rval:[]};\r\n\tfor(var i=0; i<nTables; i++)\r\n\t{\r\n\t\tvar length = bin.readUint(data, offset);   offset+=4;\r\n\t\tvar coverage = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar tupleIndex = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar format = coverage>>>8;\r\n\t\t/* I have seen format 128 once, that's why I do */ format &= 0xf;\r\n\t\tif(format==0) offset = Typr.kern.readFormat0(data, offset, map);\r\n\t\telse throw \"unknown kern table format: \"+format;\r\n\t}\r\n\treturn map;\r\n};\r\n\r\nTypr.kern.readFormat0 = function(data, offset, map)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar pleft = -1;\r\n\tvar nPairs        = bin.readUshort(data, offset);  offset+=2;\r\n\tvar searchRange   = bin.readUshort(data, offset);  offset+=2;\r\n\tvar entrySelector = bin.readUshort(data, offset);  offset+=2;\r\n\tvar rangeShift    = bin.readUshort(data, offset);  offset+=2;\r\n\tfor(var j=0; j<nPairs; j++)\r\n\t{\r\n\t\tvar left  = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar right = bin.readUshort(data, offset);  offset+=2;\r\n\t\tvar value = bin.readShort (data, offset);  offset+=2;\r\n\t\tif(left!=pleft) { map.glyph1.push(left);  map.rval.push({ glyph2:[], vals:[] }); }\r\n\t\tvar rval = map.rval[map.rval.length-1];\r\n\t\trval.glyph2.push(right);   rval.vals.push(value);\r\n\t\tpleft = left;\r\n\t}\r\n\treturn offset;\r\n};\r\n\r\n\r\n\r\nTypr.loca = {};\r\nTypr.loca.parse = function(data, offset, length, font)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = [];\r\n\t\r\n\tvar ver = font.head.indexToLocFormat;\r\n\t//console.log(\"loca\", ver, length, 4*font.maxp.numGlyphs);\r\n\tvar len = font.maxp.numGlyphs+1;\r\n\t\r\n\tif(ver==0) for(var i=0; i<len; i++) obj.push(bin.readUshort(data, offset+(i<<1))<<1);\r\n\tif(ver==1) for(var i=0; i<len; i++) obj.push(bin.readUint  (data, offset+(i<<2))   );\r\n\t\r\n\treturn obj;\r\n};\r\n\r\n\r\nTypr.maxp = {};\r\nTypr.maxp.parse = function(data, offset, length)\r\n{\r\n\t//console.log(data.length, offset, length);\r\n\t\r\n\tvar bin = Typr._bin;\r\n\tvar obj = {};\r\n\t\r\n\t// both versions 0.5 and 1.0\r\n\tvar ver = bin.readUint(data, offset); offset += 4;\r\n\tobj.numGlyphs = bin.readUshort(data, offset);  offset += 2;\r\n\t\r\n\t// only 1.0\r\n\tif(ver == 0x00010000)\r\n\t{\r\n\t\tobj.maxPoints             = bin.readUshort(data, offset);  offset += 2;\r\n\t\tobj.maxContours           = bin.readUshort(data, offset);  offset += 2;\r\n\t\tobj.maxCompositePoints    = bin.readUshort(data, offset);  offset += 2;\r\n\t\tobj.maxCompositeContours  = bin.readUshort(data, offset);  offset += 2;\r\n\t\tobj.maxZones              = bin.readUshort(data, offset);  offset += 2;\r\n\t\tobj.maxTwilightPoints     = bin.readUshort(data, offset);  offset += 2;\r\n\t\tobj.maxStorage            = bin.readUshort(data, offset);  offset += 2;\r\n\t\tobj.maxFunctionDefs       = bin.readUshort(data, offset);  offset += 2;\r\n\t\tobj.maxInstructionDefs    = bin.readUshort(data, offset);  offset += 2;\r\n\t\tobj.maxStackElements      = bin.readUshort(data, offset);  offset += 2;\r\n\t\tobj.maxSizeOfInstructions = bin.readUshort(data, offset);  offset += 2;\r\n\t\tobj.maxComponentElements  = bin.readUshort(data, offset);  offset += 2;\r\n\t\tobj.maxComponentDepth     = bin.readUshort(data, offset);  offset += 2;\r\n\t}\r\n\t\r\n\treturn obj;\r\n};\r\n\r\n\r\nTypr.name = {};\r\nTypr.name.parse = function(data, offset, length)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = {};\r\n\tvar format = bin.readUshort(data, offset);  offset += 2;\r\n\tvar count  = bin.readUshort(data, offset);  offset += 2;\r\n\tvar stringOffset = bin.readUshort(data, offset);  offset += 2;\r\n\t\r\n\t//console.log(format,count);\r\n\t\r\n\tvar names = [\r\n\t\t\"copyright\",\r\n\t\t\"fontFamily\",\r\n\t\t\"fontSubfamily\",\r\n\t\t\"ID\",\r\n\t\t\"fullName\",\r\n\t\t\"version\",\r\n\t\t\"postScriptName\",\r\n\t\t\"trademark\",\r\n\t\t\"manufacturer\",\r\n\t\t\"designer\",\r\n\t\t\"description\",\r\n\t\t\"urlVendor\",\r\n\t\t\"urlDesigner\",\r\n\t\t\"licence\",\r\n\t\t\"licenceURL\",\r\n\t\t\"---\",\r\n\t\t\"typoFamilyName\",\r\n\t\t\"typoSubfamilyName\",\r\n\t\t\"compatibleFull\",\r\n\t\t\"sampleText\",\r\n\t\t\"postScriptCID\",\r\n\t\t\"wwsFamilyName\",\r\n\t\t\"wwsSubfamilyName\",\r\n\t\t\"lightPalette\",\r\n\t\t\"darkPalette\"\r\n\t];\r\n\t\r\n\tvar offset0 = offset;\r\n\t\r\n\tfor(var i=0; i<count; i++)\r\n\t{\r\n\t\tvar platformID = bin.readUshort(data, offset);  offset += 2;\r\n\t\tvar encodingID = bin.readUshort(data, offset);  offset += 2;\r\n\t\tvar languageID = bin.readUshort(data, offset);  offset += 2;\r\n\t\tvar nameID     = bin.readUshort(data, offset);  offset += 2;\r\n\t\tvar slen       = bin.readUshort(data, offset);  offset += 2;\r\n\t\tvar noffset    = bin.readUshort(data, offset);  offset += 2;\r\n\t\t//console.log(platformID, encodingID, languageID.toString(16), nameID, length, noffset);\r\n\t\t\r\n\t\tvar cname = names[nameID];\r\n\t\tvar soff = offset0 + count*12 + noffset;\r\n\t\tvar str;\r\n\t\tif(platformID == 0) str = bin.readUnicode(data, soff, slen/2);\r\n\t\telse if(platformID == 3 && encodingID == 0) str = bin.readUnicode(data, soff, slen/2);\r\n\t\telse if(encodingID == 0) str = bin.readASCII  (data, soff, slen);\r\n\t\telse if(encodingID == 1) str = bin.readUnicode(data, soff, slen/2);\r\n\t\telse if(encodingID == 3) str = bin.readUnicode(data, soff, slen/2);\r\n\t\t\r\n\t\telse if(platformID == 1) { str = bin.readASCII(data, soff, slen);  console.log(\"reading unknown MAC encoding \"+encodingID+\" as ASCII\"); }\r\n\t\telse throw \"unknown encoding \"+encodingID + \", platformID: \"+platformID;\r\n\t\t\r\n\t\tvar tid = \"p\"+platformID+\",\"+(languageID).toString(16);//Typr._platforms[platformID];\r\n\t\tif(obj[tid]==null) obj[tid] = {};\r\n\t\tobj[tid][cname] = str;\r\n\t\tobj[tid]._lang = languageID;\r\n\t\t//console.log(tid, obj[tid]);\r\n\t}\r\n\t/*\r\n\tif(format == 1)\r\n\t{\r\n\t\tvar langTagCount = bin.readUshort(data, offset);  offset += 2;\r\n\t\tfor(var i=0; i<langTagCount; i++)\r\n\t\t{\r\n\t\t\tvar length  = bin.readUshort(data, offset);  offset += 2;\r\n\t\t\tvar noffset = bin.readUshort(data, offset);  offset += 2;\r\n\t\t}\r\n\t}\r\n\t*/\r\n\t\r\n\t//console.log(obj);\r\n\t\r\n\tfor(var p in obj) if(obj[p].postScriptName!=null && obj[p]._lang==0x0409) return obj[p];\t\t// United States\r\n\tfor(var p in obj) if(obj[p].postScriptName!=null && obj[p]._lang==0x0000) return obj[p];\t\t// Universal\r\n\tfor(var p in obj) if(obj[p].postScriptName!=null && obj[p]._lang==0x0c0c) return obj[p];\t\t// Canada\r\n\tfor(var p in obj) if(obj[p].postScriptName!=null) return obj[p];\r\n\t\r\n\tvar tname;\r\n\tfor(var p in obj) { tname=p; break; }\r\n\tconsole.log(\"returning name table with languageID \"+ obj[tname]._lang);\r\n\treturn obj[tname];\r\n};\r\n\r\n\r\nTypr[\"OS/2\"] = {};\r\nTypr[\"OS/2\"].parse = function(data, offset, length)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar ver = bin.readUshort(data, offset); offset += 2;\r\n\t\r\n\tvar obj = {};\r\n\tif     (ver==0) Typr[\"OS/2\"].version0(data, offset, obj);\r\n\telse if(ver==1) Typr[\"OS/2\"].version1(data, offset, obj);\r\n\telse if(ver==2 || ver==3 || ver==4) Typr[\"OS/2\"].version2(data, offset, obj);\r\n\telse if(ver==5) Typr[\"OS/2\"].version5(data, offset, obj);\r\n\telse throw \"unknown OS/2 table version: \"+ver;\r\n\t\r\n\treturn obj;\r\n};\r\n\r\nTypr[\"OS/2\"].version0 = function(data, offset, obj)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tobj.xAvgCharWidth = bin.readShort(data, offset); offset += 2;\r\n\tobj.usWeightClass = bin.readUshort(data, offset); offset += 2;\r\n\tobj.usWidthClass  = bin.readUshort(data, offset); offset += 2;\r\n\tobj.fsType = bin.readUshort(data, offset); offset += 2;\r\n\tobj.ySubscriptXSize = bin.readShort(data, offset); offset += 2;\r\n\tobj.ySubscriptYSize = bin.readShort(data, offset); offset += 2;\r\n\tobj.ySubscriptXOffset = bin.readShort(data, offset); offset += 2;\r\n\tobj.ySubscriptYOffset = bin.readShort(data, offset); offset += 2; \r\n\tobj.ySuperscriptXSize = bin.readShort(data, offset); offset += 2; \r\n\tobj.ySuperscriptYSize = bin.readShort(data, offset); offset += 2; \r\n\tobj.ySuperscriptXOffset = bin.readShort(data, offset); offset += 2;\r\n\tobj.ySuperscriptYOffset = bin.readShort(data, offset); offset += 2;\r\n\tobj.yStrikeoutSize = bin.readShort(data, offset); offset += 2;\r\n\tobj.yStrikeoutPosition = bin.readShort(data, offset); offset += 2;\r\n\tobj.sFamilyClass = bin.readShort(data, offset); offset += 2;\r\n\tobj.panose = bin.readBytes(data, offset, 10);  offset += 10;\r\n\tobj.ulUnicodeRange1\t= bin.readUint(data, offset);  offset += 4;\r\n\tobj.ulUnicodeRange2\t= bin.readUint(data, offset);  offset += 4;\r\n\tobj.ulUnicodeRange3\t= bin.readUint(data, offset);  offset += 4;\r\n\tobj.ulUnicodeRange4\t= bin.readUint(data, offset);  offset += 4;\r\n\tobj.achVendID = [bin.readInt8(data, offset), bin.readInt8(data, offset+1),bin.readInt8(data, offset+2),bin.readInt8(data, offset+3)];  offset += 4;\r\n\tobj.fsSelection\t = bin.readUshort(data, offset); offset += 2;\r\n\tobj.usFirstCharIndex = bin.readUshort(data, offset); offset += 2;\r\n\tobj.usLastCharIndex = bin.readUshort(data, offset); offset += 2;\r\n\tobj.sTypoAscender = bin.readShort(data, offset); offset += 2;\r\n\tobj.sTypoDescender = bin.readShort(data, offset); offset += 2;\r\n\tobj.sTypoLineGap = bin.readShort(data, offset); offset += 2;\r\n\tobj.usWinAscent = bin.readUshort(data, offset); offset += 2;\r\n\tobj.usWinDescent = bin.readUshort(data, offset); offset += 2;\r\n\treturn offset;\r\n};\r\n\r\nTypr[\"OS/2\"].version1 = function(data, offset, obj)\r\n{\r\n\tvar bin = Typr._bin;\r\n\toffset = Typr[\"OS/2\"].version0(data, offset, obj);\r\n\t\r\n\tobj.ulCodePageRange1 = bin.readUint(data, offset); offset += 4;\r\n\tobj.ulCodePageRange2 = bin.readUint(data, offset); offset += 4;\r\n\treturn offset;\r\n};\r\n\r\nTypr[\"OS/2\"].version2 = function(data, offset, obj)\r\n{\r\n\tvar bin = Typr._bin;\r\n\toffset = Typr[\"OS/2\"].version1(data, offset, obj);\r\n\t\r\n\tobj.sxHeight = bin.readShort(data, offset); offset += 2;\r\n\tobj.sCapHeight = bin.readShort(data, offset); offset += 2;\r\n\tobj.usDefault = bin.readUshort(data, offset); offset += 2;\r\n\tobj.usBreak = bin.readUshort(data, offset); offset += 2;\r\n\tobj.usMaxContext = bin.readUshort(data, offset); offset += 2;\r\n\treturn offset;\r\n};\r\n\r\nTypr[\"OS/2\"].version5 = function(data, offset, obj)\r\n{\r\n\tvar bin = Typr._bin;\r\n\toffset = Typr[\"OS/2\"].version2(data, offset, obj);\r\n\r\n\tobj.usLowerOpticalPointSize = bin.readUshort(data, offset); offset += 2;\r\n\tobj.usUpperOpticalPointSize = bin.readUshort(data, offset); offset += 2;\r\n\treturn offset;\r\n};\r\n\r\nTypr.post = {};\r\nTypr.post.parse = function(data, offset, length)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = {};\r\n\t\r\n\tobj.version           = bin.readFixed(data, offset);  offset+=4;\r\n\tobj.italicAngle       = bin.readFixed(data, offset);  offset+=4;\r\n\tobj.underlinePosition = bin.readShort(data, offset);  offset+=2;\r\n\tobj.underlineThickness = bin.readShort(data, offset);  offset+=2;\r\n\r\n\treturn obj;\r\n};\r\nTypr.SVG = {};\r\nTypr.SVG.parse = function(data, offset, length)\r\n{\r\n\tvar bin = Typr._bin;\r\n\tvar obj = { entries: []};\r\n\r\n\tvar offset0 = offset;\r\n\r\n\tvar tableVersion = bin.readUshort(data, offset);\toffset += 2;\r\n\tvar svgDocIndexOffset = bin.readUint(data, offset);\toffset += 4;\r\n\tvar reserved = bin.readUint(data, offset); offset += 4;\r\n\r\n\toffset = svgDocIndexOffset + offset0;\r\n\r\n\tvar numEntries = bin.readUshort(data, offset);\toffset += 2;\r\n\r\n\tfor(var i=0; i<numEntries; i++)\r\n\t{\r\n\t\tvar startGlyphID = bin.readUshort(data, offset);  offset += 2;\r\n\t\tvar endGlyphID   = bin.readUshort(data, offset);  offset += 2;\r\n\t\tvar svgDocOffset = bin.readUint  (data, offset);  offset += 4;\r\n\t\tvar svgDocLength = bin.readUint  (data, offset);  offset += 4;\r\n\r\n\t\tvar sbuf = new Uint8Array(data.buffer, offset0 + svgDocOffset + svgDocIndexOffset, svgDocLength);\r\n\t\tvar svg = bin.readUTF8(sbuf, 0, sbuf.length);\r\n\t\t\r\n\t\tfor(var f=startGlyphID; f<=endGlyphID; f++) {\r\n\t\t\tobj.entries[f] = svg;\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\n\r\nTypr.SVG.toPath = function(str)\r\n{\r\n\tvar pth = {cmds:[], crds:[]};\r\n\tif(str==null) return pth;\r\n\t\r\n\tvar prsr = new DOMParser();\r\n\tvar doc = prsr[\"parseFromString\"](str,\"image/svg+xml\");\r\n\t\r\n\tvar svg = doc.firstChild;  while(svg.tagName!=\"svg\") svg = svg.nextSibling;\r\n\tvar vb = svg.getAttribute(\"viewBox\");\r\n\tif(vb) vb = vb.trim().split(\" \").map(parseFloat);  else   vb = [0,0,1000,1000];\r\n\tTypr.SVG._toPath(svg.children, pth);\r\n\tfor(var i=0; i<pth.crds.length; i+=2) {\r\n\t\tvar x = pth.crds[i], y = pth.crds[i+1];\r\n\t\tx -= vb[0];\r\n\t\ty -= vb[1];\r\n\t\ty = -y;\r\n\t\tpth.crds[i] = x;\r\n\t\tpth.crds[i+1] = y;\r\n\t}\r\n\treturn pth;\r\n};\r\n\r\nTypr.SVG._toPath = function(nds, pth, fill) {\r\n\tfor(var ni=0; ni<nds.length; ni++) {\r\n\t\tvar nd = nds[ni], tn = nd.tagName;\r\n\t\tvar cfl = nd.getAttribute(\"fill\");  if(cfl==null) cfl = fill;\r\n\t\tif(tn==\"g\") Typr.SVG._toPath(nd.children, pth, cfl);\r\n\t\telse if(tn==\"path\") {\r\n\t\t\tpth.cmds.push(cfl?cfl:\"#000000\");\r\n\t\t\tvar d = nd.getAttribute(\"d\");  //console.log(d);\r\n\t\t\tvar toks = Typr.SVG._tokens(d);  //console.log(toks);\r\n\t\t\tTypr.SVG._toksToPath(toks, pth);  pth.cmds.push(\"X\");\r\n\t\t}\r\n\t\telse if(tn==\"defs\") ;\r\n\t\telse console.log(tn, nd);\r\n\t}\r\n};\r\n\r\nTypr.SVG._tokens = function(d) {\r\n\tvar ts = [], off = 0, rn=false, cn=\"\";  // reading number, current number\r\n\twhile(off<d.length){\r\n\t\tvar cc=d.charCodeAt(off), ch = d.charAt(off);  off++;\r\n\t\tvar isNum = (48<=cc && cc<=57) || ch==\".\" || ch==\"-\";\r\n\t\t\r\n\t\tif(rn) {\r\n\t\t\tif(ch==\"-\") {  ts.push(parseFloat(cn));  cn=ch;  }\r\n\t\t\telse if(isNum) cn+=ch;\r\n\t\t\telse {  ts.push(parseFloat(cn));  if(ch!=\",\" && ch!=\" \") ts.push(ch);  rn=false;  }\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(isNum) {  cn=ch;  rn=true;  }\r\n\t\t\telse if(ch!=\",\" && ch!=\" \") ts.push(ch);\r\n\t\t}\r\n\t}\r\n\tif(rn) ts.push(parseFloat(cn));\r\n\treturn ts;\r\n};\r\n\r\nTypr.SVG._toksToPath = function(ts, pth) {\t\r\n\tvar i = 0, x = 0, y = 0, ox = 0, oy = 0;\r\n\tvar pc = {\"M\":2,\"L\":2,\"H\":1,\"V\":1,   \"S\":4,   \"C\":6};\r\n\tvar cmds = pth.cmds, crds = pth.crds;\r\n\t\r\n\twhile(i<ts.length) {\r\n\t\tvar cmd = ts[i];  i++;\r\n\t\t\r\n\t\tif(cmd==\"z\") {  cmds.push(\"Z\");  x=ox;  y=oy;  }\r\n\t\telse {\r\n\t\t\tvar cmu = cmd.toUpperCase();\r\n\t\t\tvar ps = pc[cmu], reps = Typr.SVG._reps(ts, i, ps);\r\n\t\t\r\n\t\t\tfor(var j=0; j<reps; j++) {\r\n\t\t\t\tvar xi = 0, yi = 0;   if(cmd!=cmu) {  xi=x;  yi=y;  }\r\n\t\t\t\t\r\n\t\t\t\tif(cmu==\"M\") {  x = xi+ts[i++];  y = yi+ts[i++];  cmds.push(\"M\");  crds.push(x,y);  ox=x;  oy=y; }\r\n\t\t\t\telse if(cmu==\"L\") {  x = xi+ts[i++];  y = yi+ts[i++];  cmds.push(\"L\");  crds.push(x,y);  }\r\n\t\t\t\telse if(cmu==\"H\") {  x = xi+ts[i++];                   cmds.push(\"L\");  crds.push(x,y);  }\r\n\t\t\t\telse if(cmu==\"V\") {  y = yi+ts[i++];                   cmds.push(\"L\");  crds.push(x,y);  }\r\n\t\t\t\telse if(cmu==\"C\") {\r\n\t\t\t\t\tvar x1=xi+ts[i++], y1=yi+ts[i++], x2=xi+ts[i++], y2=yi+ts[i++], x3=xi+ts[i++], y3=yi+ts[i++];\r\n\t\t\t\t\tcmds.push(\"C\");  crds.push(x1,y1,x2,y2,x3,y3);  x=x3;  y=y3;\r\n\t\t\t\t}\r\n\t\t\t\telse if(cmu==\"S\") {\r\n\t\t\t\t\tvar co = Math.max(crds.length-4, 0);\r\n\t\t\t\t\tvar x1 = x+x-crds[co], y1 = y+y-crds[co+1];\r\n\t\t\t\t\tvar x2=xi+ts[i++], y2=yi+ts[i++], x3=xi+ts[i++], y3=yi+ts[i++];  \r\n\t\t\t\t\tcmds.push(\"C\");  crds.push(x1,y1,x2,y2,x3,y3);  x=x3;  y=y3;\r\n\t\t\t\t}\r\n\t\t\t\telse console.log(\"Unknown SVG command \"+cmd);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\nTypr.SVG._reps = function(ts, off, ps) {\r\n\tvar i = off;\r\n\twhile(i<ts.length) {  if((typeof ts[i]) == \"string\") break;  i+=ps;  }\r\n\treturn (i-off)/ps;\r\n};\r\n// End Typr.js\r\n\r\n// Begin Typr.U.js\r\n\r\nif(Typr  ==null) Typr   = {};\r\nif(Typr.U==null) Typr.U = {};\r\n\r\n\r\nTypr.U.codeToGlyph = function(font, code)\r\n{\r\n\tvar cmap = font.cmap;\r\n\t\r\n\tvar tind = -1;\r\n\tif(cmap.p0e4!=null) tind = cmap.p0e4;\r\n\telse if(cmap.p3e1!=null) tind = cmap.p3e1;\r\n\telse if(cmap.p1e0!=null) tind = cmap.p1e0;\r\n\telse if(cmap.p0e3!=null) tind = cmap.p0e3;\r\n\t\r\n\tif(tind==-1) throw \"no familiar platform and encoding!\";\r\n\t\r\n\tvar tab = cmap.tables[tind];\r\n\t\r\n\tif(tab.format==0)\r\n\t{\r\n\t\tif(code>=tab.map.length) return 0;\r\n\t\treturn tab.map[code];\r\n\t}\r\n\telse if(tab.format==4)\r\n\t{\r\n\t\tvar sind = -1;\r\n\t\tfor(var i=0; i<tab.endCount.length; i++)   if(code<=tab.endCount[i]){  sind=i;  break;  } \r\n\t\tif(sind==-1) return 0;\r\n\t\tif(tab.startCount[sind]>code) return 0;\r\n\t\t\r\n\t\tvar gli = 0;\r\n\t\tif(tab.idRangeOffset[sind]!=0) gli = tab.glyphIdArray[(code-tab.startCount[sind]) + (tab.idRangeOffset[sind]>>1) - (tab.idRangeOffset.length-sind)];\r\n\t\telse                           gli = code + tab.idDelta[sind];\r\n\t\treturn gli & 0xFFFF;\r\n\t}\r\n\telse if(tab.format==12)\r\n\t{\r\n\t\tif(code>tab.groups[tab.groups.length-1][1]) return 0;\r\n\t\tfor(var i=0; i<tab.groups.length; i++)\r\n\t\t{\r\n\t\t\tvar grp = tab.groups[i];\r\n\t\t\tif(grp[0]<=code && code<=grp[1]) return grp[2] + (code-grp[0]);\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\telse throw \"unknown cmap table format \"+tab.format;\r\n};\r\n\r\n\r\nTypr.U.glyphToPath = function(font, gid)\r\n{\r\n\tvar path = { cmds:[], crds:[] };\r\n\tif(font.SVG && font.SVG.entries[gid]) {\r\n\t\tvar p = font.SVG.entries[gid];  if(p==null) return path;\r\n\t\tif(typeof p == \"string\") {  p = Typr.SVG.toPath(p);  font.SVG.entries[gid]=p;  }\r\n\t\treturn p;\r\n\t}\r\n\telse if(font.CFF) {\r\n\t\tvar state = {x:0,y:0,stack:[],nStems:0,haveWidth:false,width: font.CFF.Private ? font.CFF.Private.defaultWidthX : 0,open:false};\r\n\t\tvar cff=font.CFF, pdct = font.CFF.Private;\r\n\t\tif(cff.ROS) {\r\n\t\t\tvar gi = 0;\r\n\t\t\twhile(cff.FDSelect[gi+2]<=gid) gi+=2;\r\n\t\t\tpdct = cff.FDArray[cff.FDSelect[gi+1]].Private;\r\n\t\t}\r\n\t\tTypr.U._drawCFF(font.CFF.CharStrings[gid], state, cff, pdct, path);\r\n\t}\r\n\telse if(font.glyf) {  Typr.U._drawGlyf(gid, font, path);  }\r\n\treturn path;\r\n};\r\n\r\nTypr.U._drawGlyf = function(gid, font, path)\r\n{\r\n\tvar gl = font.glyf[gid];\r\n\tif(gl==null) gl = font.glyf[gid] = Typr.glyf._parseGlyf(font, gid);\r\n\tif(gl!=null){\r\n\t\tif(gl.noc>-1) Typr.U._simpleGlyph(gl, path);\r\n\t\telse          Typr.U._compoGlyph (gl, font, path);\r\n\t}\r\n};\r\nTypr.U._simpleGlyph = function(gl, p)\r\n{\r\n\tfor(var c=0; c<gl.noc; c++)\r\n\t{\r\n\t\tvar i0 = (c==0) ? 0 : (gl.endPts[c-1] + 1);\r\n\t\tvar il = gl.endPts[c];\r\n\t\t\r\n\t\tfor(var i=i0; i<=il; i++)\r\n\t\t{\r\n\t\t\tvar pr = (i==i0)?il:(i-1);\r\n\t\t\tvar nx = (i==il)?i0:(i+1);\r\n\t\t\tvar onCurve = gl.flags[i]&1;\r\n\t\t\tvar prOnCurve = gl.flags[pr]&1;\r\n\t\t\tvar nxOnCurve = gl.flags[nx]&1;\r\n\t\t\t\r\n\t\t\tvar x = gl.xs[i], y = gl.ys[i];\r\n\t\t\t\r\n\t\t\tif(i==i0) { \r\n\t\t\t\tif(onCurve)  \r\n\t\t\t\t{\r\n\t\t\t\t\tif(prOnCurve) Typr.U.P.moveTo(p, gl.xs[pr], gl.ys[pr]); \r\n\t\t\t\t\telse          {  Typr.U.P.moveTo(p,x,y);  continue;  /*  will do curveTo at il  */  }\r\n\t\t\t\t}\r\n\t\t\t\telse        \r\n\t\t\t\t{\r\n\t\t\t\t\tif(prOnCurve) Typr.U.P.moveTo(p,  gl.xs[pr],       gl.ys[pr]        );\r\n\t\t\t\t\telse          Typr.U.P.moveTo(p, (gl.xs[pr]+x)/2, (gl.ys[pr]+y)/2   ); \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(onCurve)\r\n\t\t\t{\r\n\t\t\t\tif(prOnCurve) Typr.U.P.lineTo(p,x,y);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(nxOnCurve) Typr.U.P.qcurveTo(p, x, y, gl.xs[nx], gl.ys[nx]); \r\n\t\t\t\telse          Typr.U.P.qcurveTo(p, x, y, (x+gl.xs[nx])/2, (y+gl.ys[nx])/2); \r\n\t\t\t}\r\n\t\t}\r\n\t\tTypr.U.P.closePath(p);\r\n\t}\r\n};\r\nTypr.U._compoGlyph = function(gl, font, p)\r\n{\r\n\tfor(var j=0; j<gl.parts.length; j++)\r\n\t{\r\n\t\tvar path = { cmds:[], crds:[] };\r\n\t\tvar prt = gl.parts[j];\r\n\t\tTypr.U._drawGlyf(prt.glyphIndex, font, path);\r\n\t\t\r\n\t\tvar m = prt.m;\r\n\t\tfor(var i=0; i<path.crds.length; i+=2)\r\n\t\t{\r\n\t\t\tvar x = path.crds[i  ], y = path.crds[i+1];\r\n\t\t\tp.crds.push(x*m.a + y*m.b + m.tx);\r\n\t\t\tp.crds.push(x*m.c + y*m.d + m.ty);\r\n\t\t}\r\n\t\tfor(var i=0; i<path.cmds.length; i++) p.cmds.push(path.cmds[i]);\r\n\t}\r\n};\r\n\r\n\r\nTypr.U._getGlyphClass = function(g, cd)\r\n{\r\n\tvar intr = Typr._lctf.getInterval(cd, g);\r\n\treturn intr==-1 ? 0 : cd[intr+2];\r\n\t//for(var i=0; i<cd.start.length; i++) \r\n\t//\tif(cd.start[i]<=g && cd.end[i]>=g) return cd.class[i];\r\n\t//return 0;\r\n};\r\n\r\nTypr.U.getPairAdjustment = function(font, g1, g2)\r\n{\r\n\t//return 0;\r\n\tif(font.GPOS) {\r\n\t\tvar gpos = font[\"GPOS\"];\r\n\t\tvar llist = gpos.lookupList, flist = gpos.featureList;\r\n\t\tvar tused = [];\r\n\t\tfor(var i=0; i<flist.length; i++) \r\n\t\t{\r\n\t\t\tvar fl = flist[i];  //console.log(fl);\r\n\t\t\tif(fl.tag!=\"kern\") continue;\r\n\t\t\tfor(var ti=0; ti<fl.tab.length; ti++) {\r\n\t\t\t\tif(tused[fl.tab[ti]]) continue;  tused[fl.tab[ti]] = true;\r\n\t\t\t\tvar tab = llist[fl.tab[ti]];\r\n\t\t\t\t//console.log(tab);\r\n\t\t\t\t\r\n\t\t\t\tfor(var j=0; j<tab.tabs.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(tab.tabs[i]==null) continue;\r\n\t\t\t\t\tvar ltab = tab.tabs[j], ind;\r\n\t\t\t\t\tif(ltab.coverage) {  ind = Typr._lctf.coverageIndex(ltab.coverage, g1);  if(ind==-1) continue;  }\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(tab.ltype==1) ;\r\n\t\t\t\t\telse if(tab.ltype==2)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar adj;\r\n\t\t\t\t\t\tif(ltab.fmt==1)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar right = ltab.pairsets[ind];\r\n\t\t\t\t\t\t\tfor(var i=0; i<right.length; i++) if(right[i].gid2==g2) adj = right[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(ltab.fmt==2)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar c1 = Typr.U._getGlyphClass(g1, ltab.classDef1);\r\n\t\t\t\t\t\t\tvar c2 = Typr.U._getGlyphClass(g2, ltab.classDef2);\r\n\t\t\t\t\t\t\tadj = ltab.matrix[c1][c2];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//if(adj) console.log(ltab, adj);\r\n\t\t\t\t\t\tif(adj && adj.val2) return adj.val2[2];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(font.kern)\r\n\t{\r\n\t\tvar ind1 = font.kern.glyph1.indexOf(g1);\r\n\t\tif(ind1!=-1)\r\n\t\t{\r\n\t\t\tvar ind2 = font.kern.rval[ind1].glyph2.indexOf(g2);\r\n\t\t\tif(ind2!=-1) return font.kern.rval[ind1].vals[ind2];\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn 0;\r\n};\r\n\r\nTypr.U.stringToGlyphs = function(font, str)\r\n{\r\n\tvar gls = [];\r\n\tfor(var i=0; i<str.length; i++) {\r\n\t\tvar cc = str.codePointAt(i);  if(cc>0xffff) i++;\r\n\t\tgls.push(Typr.U.codeToGlyph(font, cc));\r\n\t}\r\n\tfor(var i=0; i<str.length; i++) {\r\n\t\tvar cc = str.codePointAt(i);  //\r\n\t\tif(cc==2367) {  var t=gls[i-1];  gls[i-1]=gls[i];  gls[i]=t;  }\r\n\t\t//if(cc==2381) {  var t=gls[i+1];  gls[i+1]=gls[i];  gls[i]=t;  }\r\n\t\tif(cc>0xffff) i++;\r\n\t}\r\n\t//console.log(gls.slice(0));\r\n\t\r\n\t//console.log(gls);  return gls;\r\n\t\r\n\tvar gsub = font[\"GSUB\"];  if(gsub==null) return gls;\r\n\tvar llist = gsub.lookupList, flist = gsub.featureList;\r\n\t\r\n\tvar cligs = [\"rlig\", \"liga\", \"mset\",  \"isol\",\"init\",\"fina\",\"medi\",   \"half\", \"pres\", \r\n\t\t\t\t\"blws\" /* Tibetan fonts like Himalaya.ttf */ ];\r\n\t\r\n\t//console.log(gls.slice(0));\r\n\tvar tused = [];\r\n\tfor(var fi=0; fi<flist.length; fi++)\r\n\t{\r\n\t\tvar fl = flist[fi];  if(cligs.indexOf(fl.tag)==-1) continue;\r\n\t\t//if(fl.tag==\"blwf\") continue;\r\n\t\t//console.log(fl);\r\n\t\t//console.log(fl.tag);\r\n\t\tfor(var ti=0; ti<fl.tab.length; ti++) {\r\n\t\t\tif(tused[fl.tab[ti]]) continue;  tused[fl.tab[ti]] = true;\r\n\t\t\tvar tab = llist[fl.tab[ti]];\r\n\t\t\t//console.log(fl.tab[ti], tab.ltype);\r\n\t\t\t//console.log(fl.tag, tab);\r\n\t\t\tfor(var ci=0; ci<gls.length; ci++) {\r\n\t\t\t\tvar feat = Typr.U._getWPfeature(str, ci);\r\n\t\t\t\tif(\"isol,init,fina,medi\".indexOf(fl.tag)!=-1 && fl.tag!=feat) continue;\r\n\t\t\t\t\r\n\t\t\t\tTypr.U._applySubs(gls, ci, tab, llist);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn gls;\r\n};\r\nTypr.U._getWPfeature = function(str, ci) {  // get Word Position feature\r\n\tvar wsep = \"\\n\\t\\\" ,.:;!?()  ،\";\r\n\tvar R = \"آأؤإاةدذرزوٱٲٳٵٶٷڈډڊڋڌڍڎڏڐڑڒړڔڕږڗژڙۀۃۄۅۆۇۈۉۊۋۍۏےۓەۮۯܐܕܖܗܘܙܞܨܪܬܯݍݙݚݛݫݬݱݳݴݸݹࡀࡆࡇࡉࡔࡧࡩࡪࢪࢫࢬࢮࢱࢲࢹૅેૉ૊૎૏ૐ૑૒૝ૡ૤૯஁ஃ஄அஉ஌எஏ஑னப஫஬\";\r\n\tvar L = \"ꡲ્૗\";\r\n\t\r\n\tvar slft = ci==0            || wsep.indexOf(str[ci-1])!=-1;\r\n\tvar srgt = ci==str.length-1 || wsep.indexOf(str[ci+1])!=-1;\r\n\t\t\r\n\tif(!slft && R.indexOf(str[ci-1])!=-1) slft=true;\r\n\tif(!srgt && R.indexOf(str[ci  ])!=-1) srgt=true;\r\n\t\t\r\n\tif(!srgt && L.indexOf(str[ci+1])!=-1) srgt=true;\r\n\tif(!slft && L.indexOf(str[ci  ])!=-1) slft=true;\r\n\t\t\r\n\tvar feat = null;\r\n\tif(slft) feat = srgt ? \"isol\" : \"init\";\r\n\telse     feat = srgt ? \"fina\" : \"medi\";\r\n\t\r\n\treturn feat;\r\n};\r\nTypr.U._applySubs = function(gls, ci, tab, llist) {\r\n\tvar rlim = gls.length-ci-1;\r\n\t//if(ci==0) console.log(\"++++ \", tab.ltype);\r\n\tfor(var j=0; j<tab.tabs.length; j++)\r\n\t{\r\n\t\tif(tab.tabs[j]==null) continue;\r\n\t\tvar ltab = tab.tabs[j], ind;\r\n\t\tif(ltab.coverage) {  ind = Typr._lctf.coverageIndex(ltab.coverage, gls[ci]);  if(ind==-1) continue;  }\r\n\t\t//if(ci==0) console.log(ind, ltab);\r\n\t\t//*\r\n\t\tif(tab.ltype==1) {\r\n\t\t\tvar gl = gls[ci];\r\n\t\t\tif(ltab.fmt==1) gls[ci] = gls[ci]+ltab.delta;\r\n\t\t\telse            gls[ci] = ltab.newg[ind];\r\n\t\t\t//console.log(\"applying ... 1\", ci, gl, gls[ci]);\r\n\t\t}//*\r\n\t\telse if(tab.ltype==4) {\r\n\t\t\tvar vals = ltab.vals[ind];\r\n\t\t\t\r\n\t\t\tfor(var k=0; k<vals.length; k++) {\r\n\t\t\t\tvar lig = vals[k], rl = lig.chain.length;  if(rl>rlim) continue;\r\n\t\t\t\tvar good = true, em1 = 0;\r\n\t\t\t\tfor(var l=0; l<rl; l++) {  while(gls[ci+em1+(1+l)]==-1)em1++;  if(lig.chain[l]!=gls[ci+em1+(1+l)]) good=false;  }\r\n\t\t\t\tif(!good) continue;\r\n\t\t\t\tgls[ci]=lig.nglyph;\r\n\t\t\t\tfor(var l=0; l<rl+em1; l++) gls[ci+l+1]=-1;   break;  // first character changed, other ligatures do not apply anymore\r\n\t\t\t\t//console.log(\"lig\", ci, lig.chain, lig.nglyph);\r\n\t\t\t\t//console.log(\"applying ...\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse  if(tab.ltype==5 && ltab.fmt==2) {\r\n\t\t\tvar cind = Typr._lctf.getInterval(ltab.cDef, gls[ci]);\r\n\t\t\tvar cls = ltab.cDef[cind+2], scs = ltab.scset[cls]; \r\n\t\t\tfor(var i=0; i<scs.length; i++) {\r\n\t\t\t\tvar sc = scs[i], inp = sc.input;\r\n\t\t\t\tif(inp.length>rlim) continue;\r\n\t\t\t\tvar good = true;\r\n\t\t\t\tfor(var l=0; l<inp.length; l++) {\r\n\t\t\t\t\tvar cind2 = Typr._lctf.getInterval(ltab.cDef, gls[ci+1+l]);\r\n\t\t\t\t\tif(cind==-1 && ltab.cDef[cind2+2]!=inp[l]) {  good=false;  break;  }\r\n\t\t\t\t}\r\n\t\t\t\tif(!good) continue;\r\n\t\t\t\t//console.log(ci, gl);\r\n\t\t\t\tvar lrs = sc.substLookupRecords;\r\n\t\t\t\tfor(var k=0; k<lrs.length; k+=2)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar gi = lrs[k], tabi = lrs[k+1];\r\n\t\t\t\t\t//Typr.U._applyType1(gls, ci+gi, llist[tabi]);\r\n\t\t\t\t\t//console.log(tabi, gls[ci+gi], llist[tabi]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(tab.ltype==6 && ltab.fmt==3) {\r\n\t\t\t//if(ltab.backCvg.length==0) return;\r\n\t\t\tif(!Typr.U._glsCovered(gls, ltab.backCvg, ci-ltab.backCvg.length)) continue;\r\n\t\t\tif(!Typr.U._glsCovered(gls, ltab.inptCvg, ci)) continue;\r\n\t\t\tif(!Typr.U._glsCovered(gls, ltab.ahedCvg, ci+ltab.inptCvg.length)) continue;\r\n\t\t\t//console.log(ci, ltab);\r\n\t\t\tvar lr = ltab.lookupRec;  //console.log(ci, gl, lr);\r\n\t\t\tfor(var i=0; i<lr.length; i+=2) {\r\n\t\t\t\tvar cind = lr[i], tab2 = llist[lr[i+1]];\r\n\t\t\t\t//console.log(\"-\", lr[i+1], tab2);\r\n\t\t\t\tTypr.U._applySubs(gls, ci+cind, tab2, llist);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//else console.log(\"Unknown table\", tab.ltype, ltab.fmt);\r\n\t\t//*/\r\n\t}\r\n};\r\n\r\nTypr.U._glsCovered = function(gls, cvgs, ci) {\r\n\tfor(var i=0; i<cvgs.length; i++) {\r\n\t\tvar ind = Typr._lctf.coverageIndex(cvgs[i], gls[ci+i]);  if(ind==-1) return false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nTypr.U.glyphsToPath = function(font, gls, clr)\r\n{\t\r\n\t//gls = gls.reverse();//gls.slice(0,12).concat(gls.slice(12).reverse());\r\n\t\r\n\tvar tpath = {cmds:[], crds:[]};\r\n\tvar x = 0;\r\n\t\r\n\tfor(var i=0; i<gls.length; i++)\r\n\t{\r\n\t\tvar gid = gls[i];  if(gid==-1) continue;\r\n\t\tvar gid2 = (i<gls.length-1 && gls[i+1]!=-1)  ? gls[i+1] : 0;\r\n\t\tvar path = Typr.U.glyphToPath(font, gid);\r\n\t\tfor(var j=0; j<path.crds.length; j+=2)\r\n\t\t{\r\n\t\t\ttpath.crds.push(path.crds[j] + x);\r\n\t\t\ttpath.crds.push(path.crds[j+1]);\r\n\t\t}\r\n\t\tif(clr) tpath.cmds.push(clr);\r\n\t\tfor(var j=0; j<path.cmds.length; j++) tpath.cmds.push(path.cmds[j]);\r\n\t\tif(clr) tpath.cmds.push(\"X\");\r\n\t\tx += font.hmtx.aWidth[gid];// - font.hmtx.lsBearing[gid];\r\n\t\tif(i<gls.length-1) x += Typr.U.getPairAdjustment(font, gid, gid2);\r\n\t}\r\n\treturn tpath;\r\n};\r\n\r\nTypr.U.pathToSVG = function(path, prec)\r\n{\r\n\tif(prec==null) prec = 5;\r\n\tvar out = [], co = 0, lmap = {\"M\":2,\"L\":2,\"Q\":4,\"C\":6};\r\n\tfor(var i=0; i<path.cmds.length; i++)\r\n\t{\r\n\t\tvar cmd = path.cmds[i], cn = co+(lmap[cmd]?lmap[cmd]:0);  \r\n\t\tout.push(cmd);\r\n\t\twhile(co<cn) {  var c = path.crds[co++];  out.push(parseFloat(c.toFixed(prec))+(co==cn?\"\":\" \"));  }\r\n\t}\r\n\treturn out.join(\"\");\r\n};\r\n\r\nTypr.U.pathToContext = function(path, ctx)\r\n{\r\n\tvar c = 0, crds = path.crds;\r\n\t\r\n\tfor(var j=0; j<path.cmds.length; j++)\r\n\t{\r\n\t\tvar cmd = path.cmds[j];\r\n\t\tif     (cmd==\"M\") {\r\n\t\t\tctx.moveTo(crds[c], crds[c+1]);\r\n\t\t\tc+=2;\r\n\t\t}\r\n\t\telse if(cmd==\"L\") {\r\n\t\t\tctx.lineTo(crds[c], crds[c+1]);\r\n\t\t\tc+=2;\r\n\t\t}\r\n\t\telse if(cmd==\"C\") {\r\n\t\t\tctx.bezierCurveTo(crds[c], crds[c+1], crds[c+2], crds[c+3], crds[c+4], crds[c+5]);\r\n\t\t\tc+=6;\r\n\t\t}\r\n\t\telse if(cmd==\"Q\") {\r\n\t\t\tctx.quadraticCurveTo(crds[c], crds[c+1], crds[c+2], crds[c+3]);\r\n\t\t\tc+=4;\r\n\t\t}\r\n\t\telse if(cmd.charAt(0)==\"#\") {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillStyle = cmd;\r\n\t\t}\r\n\t\telse if(cmd==\"Z\") {\r\n\t\t\tctx.closePath();\r\n\t\t}\r\n\t\telse if(cmd==\"X\") {\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nTypr.U.P = {};\r\nTypr.U.P.moveTo = function(p, x, y)\r\n{\r\n\tp.cmds.push(\"M\");  p.crds.push(x,y);\r\n};\r\nTypr.U.P.lineTo = function(p, x, y)\r\n{\r\n\tp.cmds.push(\"L\");  p.crds.push(x,y);\r\n};\r\nTypr.U.P.curveTo = function(p, a,b,c,d,e,f)\r\n{\r\n\tp.cmds.push(\"C\");  p.crds.push(a,b,c,d,e,f);\r\n};\r\nTypr.U.P.qcurveTo = function(p, a,b,c,d)\r\n{\r\n\tp.cmds.push(\"Q\");  p.crds.push(a,b,c,d);\r\n};\r\nTypr.U.P.closePath = function(p) {  p.cmds.push(\"Z\");  };\r\n\r\n\r\n\r\n\r\nTypr.U._drawCFF = function(cmds, state, font, pdct, p)\r\n{\r\n\tvar stack = state.stack;\r\n\tvar nStems = state.nStems, haveWidth=state.haveWidth, width=state.width, open=state.open;\r\n\tvar i=0;\r\n\tvar x=state.x, y=state.y, c1x=0, c1y=0, c2x=0, c2y=0, c3x=0, c3y=0, c4x=0, c4y=0, jpx=0, jpy=0;\r\n\t\r\n\tvar o = {val:0,size:0};\r\n\t//console.log(cmds);\r\n\twhile(i<cmds.length)\r\n\t{\r\n\t\tTypr.CFF.getCharString(cmds, i, o);\r\n\t\tvar v = o.val;\r\n\t\ti += o.size;\r\n\t\t\t\r\n\t\tif(v==\"o1\" || v==\"o18\")  //  hstem || hstemhm\r\n\t\t{\r\n\t\t\tvar hasWidthArg;\r\n\r\n\t\t\t// The number of stem operators on the stack is always even.\r\n\t\t\t// If the value is uneven, that means a width is specified.\r\n\t\t\thasWidthArg = stack.length % 2 !== 0;\r\n\t\t\tif (hasWidthArg && !haveWidth) {\r\n\t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\r\n\t\t\t}\r\n\r\n\t\t\tnStems += stack.length >> 1;\r\n\t\t\tstack.length = 0;\r\n\t\t\thaveWidth = true;\r\n\t\t}\r\n\t\telse if(v==\"o3\" || v==\"o23\")  // vstem || vstemhm\r\n\t\t{\r\n\t\t\tvar hasWidthArg;\r\n\r\n\t\t\t// The number of stem operators on the stack is always even.\r\n\t\t\t// If the value is uneven, that means a width is specified.\r\n\t\t\thasWidthArg = stack.length % 2 !== 0;\r\n\t\t\tif (hasWidthArg && !haveWidth) {\r\n\t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\r\n\t\t\t}\r\n\r\n\t\t\tnStems += stack.length >> 1;\r\n\t\t\tstack.length = 0;\r\n\t\t\thaveWidth = true;\r\n\t\t}\r\n\t\telse if(v==\"o4\")\r\n\t\t{\r\n\t\t\tif (stack.length > 1 && !haveWidth) {\r\n                        width = stack.shift() + pdct.nominalWidthX;\r\n                        haveWidth = true;\r\n                    }\r\n\t\t\tif(open) Typr.U.P.closePath(p);\r\n\r\n                    y += stack.pop();\r\n\t\t\t\t\tTypr.U.P.moveTo(p,x,y);   open=true;\r\n\t\t}\r\n\t\telse if(v==\"o5\")\r\n\t\t{\r\n\t\t\twhile (stack.length > 0) {\r\n                        x += stack.shift();\r\n                        y += stack.shift();\r\n                        Typr.U.P.lineTo(p, x, y);\r\n                    }\r\n\t\t}\r\n\t\telse if(v==\"o6\" || v==\"o7\")  // hlineto || vlineto\r\n\t\t{\r\n\t\t\tvar count = stack.length;\r\n\t\t\tvar isX = (v == \"o6\");\r\n\t\t\t\r\n\t\t\tfor(var j=0; j<count; j++) {\r\n\t\t\t\tvar sval = stack.shift();\r\n\t\t\t\t\r\n\t\t\t\tif(isX) x += sval;  else  y += sval;\r\n\t\t\t\tisX = !isX;\r\n\t\t\t\tTypr.U.P.lineTo(p, x, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(v==\"o8\" || v==\"o24\")\t// rrcurveto || rcurveline\r\n\t\t{\r\n\t\t\tvar count = stack.length;\r\n\t\t\tvar index = 0;\r\n\t\t\twhile(index+6 <= count) {\r\n\t\t\t\tc1x = x + stack.shift();\r\n\t\t\t\tc1y = y + stack.shift();\r\n\t\t\t\tc2x = c1x + stack.shift();\r\n\t\t\t\tc2y = c1y + stack.shift();\r\n\t\t\t\tx = c2x + stack.shift();\r\n\t\t\t\ty = c2y + stack.shift();\r\n\t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\r\n\t\t\t\tindex+=6;\r\n\t\t\t}\r\n\t\t\tif(v==\"o24\")\r\n\t\t\t{\r\n\t\t\t\tx += stack.shift();\r\n\t\t\t\ty += stack.shift();\r\n\t\t\t\tTypr.U.P.lineTo(p, x, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(v==\"o11\")  break;\r\n\t\telse if(v==\"o1234\" || v==\"o1235\" || v==\"o1236\" || v==\"o1237\")//if((v+\"\").slice(0,3)==\"o12\")\r\n\t\t{\r\n\t\t\tif(v==\"o1234\")\r\n\t\t\t{\r\n\t\t\t\tc1x = x   + stack.shift();    // dx1\r\n                c1y = y;                      // dy1\r\n\t\t\t\tc2x = c1x + stack.shift();    // dx2\r\n\t\t\t\tc2y = c1y + stack.shift();    // dy2\r\n\t\t\t\tjpx = c2x + stack.shift();    // dx3\r\n\t\t\t\tjpy = c2y;                    // dy3\r\n\t\t\t\tc3x = jpx + stack.shift();    // dx4\r\n\t\t\t\tc3y = c2y;                    // dy4\r\n\t\t\t\tc4x = c3x + stack.shift();    // dx5\r\n\t\t\t\tc4y = y;                      // dy5\r\n\t\t\t\tx = c4x + stack.shift();      // dx6\r\n\t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\r\n\t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif(v==\"o1235\")\r\n\t\t\t{\r\n\t\t\t\tc1x = x   + stack.shift();    // dx1\r\n\t\t\t\tc1y = y   + stack.shift();    // dy1\r\n\t\t\t\tc2x = c1x + stack.shift();    // dx2\r\n\t\t\t\tc2y = c1y + stack.shift();    // dy2\r\n\t\t\t\tjpx = c2x + stack.shift();    // dx3\r\n\t\t\t\tjpy = c2y + stack.shift();    // dy3\r\n\t\t\t\tc3x = jpx + stack.shift();    // dx4\r\n\t\t\t\tc3y = jpy + stack.shift();    // dy4\r\n\t\t\t\tc4x = c3x + stack.shift();    // dx5\r\n\t\t\t\tc4y = c3y + stack.shift();    // dy5\r\n\t\t\t\tx = c4x + stack.shift();      // dx6\r\n\t\t\t\ty = c4y + stack.shift();      // dy6\r\n\t\t\t\tstack.shift();                // flex depth\r\n\t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\r\n\t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\r\n\t\t\t}\r\n\t\t\tif(v==\"o1236\")\r\n\t\t\t{\r\n\t\t\t\tc1x = x   + stack.shift();    // dx1\r\n\t\t\t\tc1y = y   + stack.shift();    // dy1\r\n\t\t\t\tc2x = c1x + stack.shift();    // dx2\r\n\t\t\t\tc2y = c1y + stack.shift();    // dy2\r\n\t\t\t\tjpx = c2x + stack.shift();    // dx3\r\n\t\t\t\tjpy = c2y;                    // dy3\r\n\t\t\t\tc3x = jpx + stack.shift();    // dx4\r\n\t\t\t\tc3y = c2y;                    // dy4\r\n\t\t\t\tc4x = c3x + stack.shift();    // dx5\r\n\t\t\t\tc4y = c3y + stack.shift();    // dy5\r\n\t\t\t\tx = c4x + stack.shift();      // dx6\r\n\t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\r\n\t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\r\n\t\t\t}\r\n\t\t\tif(v==\"o1237\")\r\n\t\t\t{\r\n\t\t\t\tc1x = x   + stack.shift();    // dx1\r\n\t\t\t\tc1y = y   + stack.shift();    // dy1\r\n\t\t\t\tc2x = c1x + stack.shift();    // dx2\r\n\t\t\t\tc2y = c1y + stack.shift();    // dy2\r\n\t\t\t\tjpx = c2x + stack.shift();    // dx3\r\n\t\t\t\tjpy = c2y + stack.shift();    // dy3\r\n\t\t\t\tc3x = jpx + stack.shift();    // dx4\r\n\t\t\t\tc3y = jpy + stack.shift();    // dy4\r\n\t\t\t\tc4x = c3x + stack.shift();    // dx5\r\n\t\t\t\tc4y = c3y + stack.shift();    // dy5\r\n\t\t\t\tif (Math.abs(c4x - x) > Math.abs(c4y - y)) {\r\n\t\t\t\t    x = c4x + stack.shift();\r\n\t\t\t\t} else {\r\n\t\t\t\t    y = c4y + stack.shift();\r\n\t\t\t\t}\r\n\t\t\t\tTypr.U.P.curveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\r\n\t\t\t\tTypr.U.P.curveTo(p, c3x, c3y, c4x, c4y, x, y);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(v==\"o14\")\r\n\t\t{\r\n\t\t\tif (stack.length > 0 && !haveWidth) {\r\n                        width = stack.shift() + font.nominalWidthX;\r\n                        haveWidth = true;\r\n                    }\r\n\t\t\tif(stack.length==4) // seac = standard encoding accented character\r\n\t\t\t{\r\n\t\t\t\tvar adx = stack.shift();\r\n\t\t\t\tvar ady = stack.shift();\r\n\t\t\t\tvar bchar = stack.shift();\r\n\t\t\t\tvar achar = stack.shift();\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tvar bind = Typr.CFF.glyphBySE(font, bchar);\r\n\t\t\t\tvar aind = Typr.CFF.glyphBySE(font, achar);\r\n\t\t\t\t\r\n\t\t\t\t//console.log(bchar, bind);\r\n\t\t\t\t//console.log(achar, aind);\r\n\t\t\t\t//state.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width;  state.open=open;\r\n\t\t\t\t\r\n\t\t\t\tTypr.U._drawCFF(font.CharStrings[bind], state,font,pdct,p);\r\n\t\t\t\tstate.x = adx; state.y = ady;\r\n\t\t\t\tTypr.U._drawCFF(font.CharStrings[aind], state,font,pdct,p);\r\n\t\t\t\t\r\n\t\t\t\t//x=state.x; y=state.y; nStems=state.nStems; haveWidth=state.haveWidth; width=state.width;  open=state.open;\r\n\t\t\t}\r\n\t\t\tif(open) {  Typr.U.P.closePath(p);  open=false;  }\r\n\t\t}\t\t\r\n\t\telse if(v==\"o19\" || v==\"o20\") \r\n\t\t{ \r\n\t\t\tvar hasWidthArg;\r\n\r\n\t\t\t// The number of stem operators on the stack is always even.\r\n\t\t\t// If the value is uneven, that means a width is specified.\r\n\t\t\thasWidthArg = stack.length % 2 !== 0;\r\n\t\t\tif (hasWidthArg && !haveWidth) {\r\n\t\t\t\twidth = stack.shift() + pdct.nominalWidthX;\r\n\t\t\t}\r\n\r\n\t\t\tnStems += stack.length >> 1;\r\n\t\t\tstack.length = 0;\r\n\t\t\thaveWidth = true;\r\n\t\t\t\r\n\t\t\ti += (nStems + 7) >> 3;\r\n\t\t}\r\n\t\t\r\n\t\telse if(v==\"o21\") {\r\n\t\t\tif (stack.length > 2 && !haveWidth) {\r\n                        width = stack.shift() + pdct.nominalWidthX;\r\n                        haveWidth = true;\r\n                    }\r\n\r\n                    y += stack.pop();\r\n                    x += stack.pop();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(open) Typr.U.P.closePath(p);\r\n                    Typr.U.P.moveTo(p,x,y);   open=true;\r\n\t\t}\r\n\t\telse if(v==\"o22\")\r\n\t\t{\r\n\t\t\t if (stack.length > 1 && !haveWidth) {\r\n                        width = stack.shift() + pdct.nominalWidthX;\r\n                        haveWidth = true;\r\n                    }\r\n\t\t\t\t\t\r\n                    x += stack.pop();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(open) Typr.U.P.closePath(p);\r\n\t\t\t\t\tTypr.U.P.moveTo(p,x,y);   open=true;                    \r\n\t\t}\r\n\t\telse if(v==\"o25\")\r\n\t\t{\r\n\t\t\twhile (stack.length > 6) {\r\n                        x += stack.shift();\r\n                        y += stack.shift();\r\n                        Typr.U.P.lineTo(p, x, y);\r\n                    }\r\n\r\n                    c1x = x + stack.shift();\r\n                    c1y = y + stack.shift();\r\n                    c2x = c1x + stack.shift();\r\n                    c2y = c1y + stack.shift();\r\n                    x = c2x + stack.shift();\r\n                    y = c2y + stack.shift();\r\n                    Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\r\n\t\t}\r\n\t\telse if(v==\"o26\") \r\n\t\t{\r\n\t\t\tif (stack.length % 2) {\r\n                        x += stack.shift();\r\n                    }\r\n\r\n                    while (stack.length > 0) {\r\n                        c1x = x;\r\n                        c1y = y + stack.shift();\r\n                        c2x = c1x + stack.shift();\r\n                        c2y = c1y + stack.shift();\r\n                        x = c2x;\r\n                        y = c2y + stack.shift();\r\n                        Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\r\n                    }\r\n\r\n\t\t}\r\n\t\telse if(v==\"o27\")\r\n\t\t{\r\n\t\t\tif (stack.length % 2) {\r\n                        y += stack.shift();\r\n                    }\r\n\r\n                    while (stack.length > 0) {\r\n                        c1x = x + stack.shift();\r\n                        c1y = y;\r\n                        c2x = c1x + stack.shift();\r\n                        c2y = c1y + stack.shift();\r\n                        x = c2x + stack.shift();\r\n                        y = c2y;\r\n                        Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\r\n                    }\r\n\t\t}\r\n\t\telse if(v==\"o10\" || v==\"o29\")\t// callsubr || callgsubr\r\n\t\t{\r\n\t\t\tvar obj = (v==\"o10\" ? pdct : font);\r\n\t\t\tif(stack.length==0) { console.log(\"error: empty stack\");  }\r\n\t\t\telse {\r\n\t\t\t\tvar ind = stack.pop();\r\n\t\t\t\tvar subr = obj.Subrs[ ind + obj.Bias ];\r\n\t\t\t\tstate.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width;  state.open=open;\r\n\t\t\t\tTypr.U._drawCFF(subr, state,font,pdct,p);\r\n\t\t\t\tx=state.x; y=state.y; nStems=state.nStems; haveWidth=state.haveWidth; width=state.width;  open=state.open;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(v==\"o30\" || v==\"o31\")   // vhcurveto || hvcurveto\r\n\t\t{\r\n\t\t\tvar count, count1 = stack.length;\r\n\t\t\tvar index = 0;\r\n\t\t\tvar alternate = v == \"o31\";\r\n\t\t\t\r\n\t\t\tcount  = count1 & ~2;\r\n\t\t\tindex += count1 - count;\r\n\t\t\t\r\n\t\t\twhile ( index < count ) \r\n\t\t\t{\r\n\t\t\t\tif(alternate)\r\n\t\t\t\t{\r\n\t\t\t\t\tc1x = x + stack.shift();\r\n\t\t\t\t\tc1y = y;\r\n\t\t\t\t\tc2x = c1x + stack.shift();\r\n\t\t\t\t\tc2y = c1y + stack.shift();\r\n\t\t\t\t\ty = c2y + stack.shift();\r\n\t\t\t\t\tif(count-index == 5) {  x = c2x + stack.shift();  index++;  }\r\n\t\t\t\t\telse x = c2x;\r\n\t\t\t\t\talternate = false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tc1x = x;\r\n\t\t\t\t\tc1y = y + stack.shift();\r\n\t\t\t\t\tc2x = c1x + stack.shift();\r\n\t\t\t\t\tc2y = c1y + stack.shift();\r\n\t\t\t\t\tx = c2x + stack.shift();\r\n\t\t\t\t\tif(count-index == 5) {  y = c2y + stack.shift();  index++;  }\r\n\t\t\t\t\telse y = c2y;\r\n\t\t\t\t\talternate = true;\r\n\t\t\t\t}\r\n                Typr.U.P.curveTo(p, c1x, c1y, c2x, c2y, x, y);\r\n\t\t\t\tindex += 4;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\telse if((v+\"\").charAt(0)==\"o\") {   console.log(\"Unknown operation: \"+v, cmds); throw v;  }\r\n\t\telse stack.push(v);\r\n\t}\r\n\t//console.log(cmds);\r\n\tstate.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width; state.open=open;\r\n};\r\n\r\n// End Typr.U.js\r\n\r\nreturn Typr\r\n\r\n}\n\n// Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with tiny-inflate \r\n// (https://github.com/foliojs/tiny-inflate) for use in troika-3d-text. \r\n// Original licenses apply: \r\n// - tiny-inflate: https://github.com/foliojs/tiny-inflate/blob/master/LICENSE (MIT)\r\n// - woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)\r\n\r\nfunction woff2otfFactory() {\r\n\r\n// Begin tinyInflate\r\nconst tinyInflate = (function() {\r\n  const module = {};\r\n  var TINF_OK = 0;\r\nvar TINF_DATA_ERROR = -3;\r\n\r\nfunction Tree() {\r\n  this.table = new Uint16Array(16);   /* table of code length counts */\r\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\r\n}\r\n\r\nfunction Data(source, dest) {\r\n  this.source = source;\r\n  this.sourceIndex = 0;\r\n  this.tag = 0;\r\n  this.bitcount = 0;\r\n  \r\n  this.dest = dest;\r\n  this.destLen = 0;\r\n  \r\n  this.ltree = new Tree();  /* dynamic length/symbol tree */\r\n  this.dtree = new Tree();  /* dynamic distance tree */\r\n}\r\n\r\n/* --------------------------------------------------- *\r\n * -- uninitialized global data (static structures) -- *\r\n * --------------------------------------------------- */\r\n\r\nvar sltree = new Tree();\r\nvar sdtree = new Tree();\r\n\r\n/* extra bits and base tables for length codes */\r\nvar length_bits = new Uint8Array(30);\r\nvar length_base = new Uint16Array(30);\r\n\r\n/* extra bits and base tables for distance codes */\r\nvar dist_bits = new Uint8Array(30);\r\nvar dist_base = new Uint16Array(30);\r\n\r\n/* special ordering of code length codes */\r\nvar clcidx = new Uint8Array([\r\n  16, 17, 18, 0, 8, 7, 9, 6,\r\n  10, 5, 11, 4, 12, 3, 13, 2,\r\n  14, 1, 15\r\n]);\r\n\r\n/* used by tinf_decode_trees, avoids allocations every call */\r\nvar code_tree = new Tree();\r\nvar lengths = new Uint8Array(288 + 32);\r\n\r\n/* ----------------------- *\r\n * -- utility functions -- *\r\n * ----------------------- */\r\n\r\n/* build extra bits and base tables */\r\nfunction tinf_build_bits_base(bits, base, delta, first) {\r\n  var i, sum;\r\n\r\n  /* build bits table */\r\n  for (i = 0; i < delta; ++i) bits[i] = 0;\r\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\r\n\r\n  /* build base table */\r\n  for (sum = first, i = 0; i < 30; ++i) {\r\n    base[i] = sum;\r\n    sum += 1 << bits[i];\r\n  }\r\n}\r\n\r\n/* build the fixed huffman trees */\r\nfunction tinf_build_fixed_trees(lt, dt) {\r\n  var i;\r\n\r\n  /* build fixed length tree */\r\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\r\n\r\n  lt.table[7] = 24;\r\n  lt.table[8] = 152;\r\n  lt.table[9] = 112;\r\n\r\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\r\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\r\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\r\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\r\n\r\n  /* build fixed distance tree */\r\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\r\n\r\n  dt.table[5] = 32;\r\n\r\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\r\n}\r\n\r\n/* given an array of code lengths, build a tree */\r\nvar offs = new Uint16Array(16);\r\n\r\nfunction tinf_build_tree(t, lengths, off, num) {\r\n  var i, sum;\r\n\r\n  /* clear code length count table */\r\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\r\n\r\n  /* scan symbol lengths, and sum code length counts */\r\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\r\n\r\n  t.table[0] = 0;\r\n\r\n  /* compute offset table for distribution sort */\r\n  for (sum = 0, i = 0; i < 16; ++i) {\r\n    offs[i] = sum;\r\n    sum += t.table[i];\r\n  }\r\n\r\n  /* create code->symbol translation table (symbols sorted by code) */\r\n  for (i = 0; i < num; ++i) {\r\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\r\n  }\r\n}\r\n\r\n/* ---------------------- *\r\n * -- decode functions -- *\r\n * ---------------------- */\r\n\r\n/* get one bit from source stream */\r\nfunction tinf_getbit(d) {\r\n  /* check if tag is empty */\r\n  if (!d.bitcount--) {\r\n    /* load next tag */\r\n    d.tag = d.source[d.sourceIndex++];\r\n    d.bitcount = 7;\r\n  }\r\n\r\n  /* shift bit out of tag */\r\n  var bit = d.tag & 1;\r\n  d.tag >>>= 1;\r\n\r\n  return bit;\r\n}\r\n\r\n/* read a num bit value from a stream and add base */\r\nfunction tinf_read_bits(d, num, base) {\r\n  if (!num)\r\n    return base;\r\n\r\n  while (d.bitcount < 24) {\r\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\r\n    d.bitcount += 8;\r\n  }\r\n\r\n  var val = d.tag & (0xffff >>> (16 - num));\r\n  d.tag >>>= num;\r\n  d.bitcount -= num;\r\n  return val + base;\r\n}\r\n\r\n/* given a data stream and a tree, decode a symbol */\r\nfunction tinf_decode_symbol(d, t) {\r\n  while (d.bitcount < 24) {\r\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\r\n    d.bitcount += 8;\r\n  }\r\n  \r\n  var sum = 0, cur = 0, len = 0;\r\n  var tag = d.tag;\r\n\r\n  /* get more bits while code value is above sum */\r\n  do {\r\n    cur = 2 * cur + (tag & 1);\r\n    tag >>>= 1;\r\n    ++len;\r\n\r\n    sum += t.table[len];\r\n    cur -= t.table[len];\r\n  } while (cur >= 0);\r\n  \r\n  d.tag = tag;\r\n  d.bitcount -= len;\r\n\r\n  return t.trans[sum + cur];\r\n}\r\n\r\n/* given a data stream, decode dynamic trees from it */\r\nfunction tinf_decode_trees(d, lt, dt) {\r\n  var hlit, hdist, hclen;\r\n  var i, num, length;\r\n\r\n  /* get 5 bits HLIT (257-286) */\r\n  hlit = tinf_read_bits(d, 5, 257);\r\n\r\n  /* get 5 bits HDIST (1-32) */\r\n  hdist = tinf_read_bits(d, 5, 1);\r\n\r\n  /* get 4 bits HCLEN (4-19) */\r\n  hclen = tinf_read_bits(d, 4, 4);\r\n\r\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\r\n\r\n  /* read code lengths for code length alphabet */\r\n  for (i = 0; i < hclen; ++i) {\r\n    /* get 3 bits code length (0-7) */\r\n    var clen = tinf_read_bits(d, 3, 0);\r\n    lengths[clcidx[i]] = clen;\r\n  }\r\n\r\n  /* build code length tree */\r\n  tinf_build_tree(code_tree, lengths, 0, 19);\r\n\r\n  /* decode code lengths for the dynamic trees */\r\n  for (num = 0; num < hlit + hdist;) {\r\n    var sym = tinf_decode_symbol(d, code_tree);\r\n\r\n    switch (sym) {\r\n      case 16:\r\n        /* copy previous code length 3-6 times (read 2 bits) */\r\n        var prev = lengths[num - 1];\r\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\r\n          lengths[num++] = prev;\r\n        }\r\n        break;\r\n      case 17:\r\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\r\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\r\n          lengths[num++] = 0;\r\n        }\r\n        break;\r\n      case 18:\r\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\r\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\r\n          lengths[num++] = 0;\r\n        }\r\n        break;\r\n      default:\r\n        /* values 0-15 represent the actual code lengths */\r\n        lengths[num++] = sym;\r\n        break;\r\n    }\r\n  }\r\n\r\n  /* build dynamic trees */\r\n  tinf_build_tree(lt, lengths, 0, hlit);\r\n  tinf_build_tree(dt, lengths, hlit, hdist);\r\n}\r\n\r\n/* ----------------------------- *\r\n * -- block inflate functions -- *\r\n * ----------------------------- */\r\n\r\n/* given a stream and two trees, inflate a block of data */\r\nfunction tinf_inflate_block_data(d, lt, dt) {\r\n  while (1) {\r\n    var sym = tinf_decode_symbol(d, lt);\r\n\r\n    /* check for end of block */\r\n    if (sym === 256) {\r\n      return TINF_OK;\r\n    }\r\n\r\n    if (sym < 256) {\r\n      d.dest[d.destLen++] = sym;\r\n    } else {\r\n      var length, dist, offs;\r\n      var i;\r\n\r\n      sym -= 257;\r\n\r\n      /* possibly get more bits from length code */\r\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\r\n\r\n      dist = tinf_decode_symbol(d, dt);\r\n\r\n      /* possibly get more bits from distance code */\r\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\r\n\r\n      /* copy match */\r\n      for (i = offs; i < offs + length; ++i) {\r\n        d.dest[d.destLen++] = d.dest[i];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/* inflate an uncompressed block of data */\r\nfunction tinf_inflate_uncompressed_block(d) {\r\n  var length, invlength;\r\n  var i;\r\n  \r\n  /* unread from bitbuffer */\r\n  while (d.bitcount > 8) {\r\n    d.sourceIndex--;\r\n    d.bitcount -= 8;\r\n  }\r\n\r\n  /* get length */\r\n  length = d.source[d.sourceIndex + 1];\r\n  length = 256 * length + d.source[d.sourceIndex];\r\n\r\n  /* get one's complement of length */\r\n  invlength = d.source[d.sourceIndex + 3];\r\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\r\n\r\n  /* check length */\r\n  if (length !== (~invlength & 0x0000ffff))\r\n    return TINF_DATA_ERROR;\r\n\r\n  d.sourceIndex += 4;\r\n\r\n  /* copy block */\r\n  for (i = length; i; --i)\r\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\r\n\r\n  /* make sure we start next block on a byte boundary */\r\n  d.bitcount = 0;\r\n\r\n  return TINF_OK;\r\n}\r\n\r\n/* inflate stream from source to dest */\r\nfunction tinf_uncompress(source, dest) {\r\n  var d = new Data(source, dest);\r\n  var bfinal, btype, res;\r\n\r\n  do {\r\n    /* read final block flag */\r\n    bfinal = tinf_getbit(d);\r\n\r\n    /* read block type (2 bits) */\r\n    btype = tinf_read_bits(d, 2, 0);\r\n\r\n    /* decompress block */\r\n    switch (btype) {\r\n      case 0:\r\n        /* decompress uncompressed block */\r\n        res = tinf_inflate_uncompressed_block(d);\r\n        break;\r\n      case 1:\r\n        /* decompress block with fixed huffman trees */\r\n        res = tinf_inflate_block_data(d, sltree, sdtree);\r\n        break;\r\n      case 2:\r\n        /* decompress block with dynamic huffman trees */\r\n        tinf_decode_trees(d, d.ltree, d.dtree);\r\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\r\n        break;\r\n      default:\r\n        res = TINF_DATA_ERROR;\r\n    }\r\n\r\n    if (res !== TINF_OK)\r\n      throw new Error('Data error');\r\n\r\n  } while (!bfinal);\r\n\r\n  if (d.destLen < d.dest.length) {\r\n    if (typeof d.dest.slice === 'function')\r\n      return d.dest.slice(0, d.destLen);\r\n    else\r\n      return d.dest.subarray(0, d.destLen);\r\n  }\r\n  \r\n  return d.dest;\r\n}\r\n\r\n/* -------------------- *\r\n * -- initialization -- *\r\n * -------------------- */\r\n\r\n/* build fixed huffman trees */\r\ntinf_build_fixed_trees(sltree, sdtree);\r\n\r\n/* build extra bits and base tables */\r\ntinf_build_bits_base(length_bits, length_base, 4, 3);\r\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\r\n\r\n/* fix a special case */\r\nlength_bits[28] = 0;\r\nlength_base[28] = 258;\r\n\r\nmodule.exports = tinf_uncompress;\r\n\r\n  return module.exports\r\n})();\r\n// End tinyInflate\r\n\r\n// Begin woff2otf.js\r\n/*\r\n Copyright 2012, Steffen Hanikel (https://github.com/hanikesn)\r\n Modified by Artemy Tregubenko, 2014 (https://github.com/arty-name/woff2otf)\r\n Modified by Jason Johnston, 2019 (pako --> tiny-inflate)\r\n \r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n\r\n A tool to convert a WOFF back to a TTF/OTF font file, in pure Javascript\r\n*/\r\n\r\nfunction convert_streams(bufferIn, tinyInflate) {\r\n    var dataViewIn = new DataView(bufferIn);\r\n    var offsetIn = 0;\r\n\r\n    function read2() {\r\n        var uint16 = dataViewIn.getUint16(offsetIn);\r\n        offsetIn += 2;\r\n        return uint16;\r\n    }\r\n\r\n    function read4() {\r\n        var uint32 = dataViewIn.getUint32(offsetIn);\r\n        offsetIn += 4;\r\n        return uint32;\r\n    }\r\n\r\n    function write2(uint16) {\r\n        dataViewOut.setUint16(offsetOut, uint16);\r\n        offsetOut += 2;\r\n    }\r\n\r\n    function write4(uint32) {\r\n        dataViewOut.setUint32(offsetOut, uint32);\r\n        offsetOut += 4;\r\n    }\r\n\r\n    var WOFFHeader = {\r\n        signature: read4(),\r\n        flavor: read4(),\r\n        length: read4(),\r\n        numTables: read2(),\r\n        reserved: read2(),\r\n        totalSfntSize: read4(),\r\n        majorVersion: read2(),\r\n        minorVersion: read2(),\r\n        metaOffset: read4(),\r\n        metaLength: read4(),\r\n        metaOrigLength: read4(),\r\n        privOffset: read4(),\r\n        privLength: read4()\r\n    };\r\n\r\n    var entrySelector = 0;\r\n    while (Math.pow(2, entrySelector) <= WOFFHeader.numTables) {\r\n        entrySelector++;\r\n    }\r\n    entrySelector--;\r\n\r\n    var searchRange = Math.pow(2, entrySelector) * 16;\r\n    var rangeShift = WOFFHeader.numTables * 16 - searchRange;\r\n\r\n    var offset = 4 + 2 + 2 + 2 + 2;\r\n    var TableDirectoryEntries = [];\r\n    for (var i = 0; i < WOFFHeader.numTables; i++) {\r\n        TableDirectoryEntries.push({\r\n            tag: read4(),\r\n            offset: read4(),\r\n            compLength: read4(),\r\n            origLength: read4(),\r\n            origChecksum: read4()\r\n        });\r\n        offset += 4 * 4;\r\n    }\r\n\r\n    var arrayOut = new Uint8Array(\r\n        4 + 2 + 2 + 2 + 2 +\r\n        TableDirectoryEntries.length * (4 + 4 + 4 + 4) +\r\n        TableDirectoryEntries.reduce(function(acc, entry) { return acc + entry.origLength + 4; }, 0)\r\n    );\r\n    var bufferOut = arrayOut.buffer;\r\n    var dataViewOut = new DataView(bufferOut);\r\n    var offsetOut = 0;\r\n\r\n    write4(WOFFHeader.flavor);\r\n    write2(WOFFHeader.numTables);\r\n    write2(searchRange);\r\n    write2(entrySelector);\r\n    write2(rangeShift);\r\n\r\n    TableDirectoryEntries.forEach(function(TableDirectoryEntry) {\r\n        write4(TableDirectoryEntry.tag);\r\n        write4(TableDirectoryEntry.origChecksum);\r\n        write4(offset);\r\n        write4(TableDirectoryEntry.origLength);\r\n\r\n        TableDirectoryEntry.outOffset = offset;\r\n        offset += TableDirectoryEntry.origLength;\r\n        if ((offset % 4) != 0) {\r\n            offset += 4 - (offset % 4);\r\n        }\r\n    });\r\n\r\n    var size;\r\n\r\n    TableDirectoryEntries.forEach(function(TableDirectoryEntry) {\r\n        var compressedData = bufferIn.slice(\r\n            TableDirectoryEntry.offset,\r\n            TableDirectoryEntry.offset + TableDirectoryEntry.compLength\r\n        );\r\n\r\n        if (TableDirectoryEntry.compLength != TableDirectoryEntry.origLength) {\r\n            var uncompressedData = new Uint8Array(TableDirectoryEntry.origLength);\r\n            tinyInflate(\r\n              new Uint8Array(compressedData, 2), //skip deflate header\r\n              uncompressedData\r\n            );\r\n        } else {\r\n            uncompressedData = new Uint8Array(compressedData);\r\n        }\r\n\r\n        arrayOut.set(uncompressedData, TableDirectoryEntry.outOffset);\r\n        offset = TableDirectoryEntry.outOffset + TableDirectoryEntry.origLength;\r\n\r\n        var padding = 0;\r\n        if ((offset % 4) != 0) {\r\n            padding = 4 - (offset % 4);\r\n        }\r\n        arrayOut.set(\r\n            new Uint8Array(padding).buffer,\r\n            TableDirectoryEntry.outOffset + TableDirectoryEntry.origLength\r\n        );\r\n\r\n        size = offset + padding;\r\n    });\r\n\r\n    return bufferOut.slice(0, size);\r\n}\r\n\r\n// End woff2otf.js\r\n\r\nreturn function(buffer) {\r\n  return convert_streams(buffer, tinyInflate)\r\n}\r\n\r\n}\n\n/**\r\n * An adapter that allows Typr.js to be used as if it were (a subset of) the OpenType.js API.\r\n * Also adds support for WOFF files (not WOFF2).\r\n */\r\n\r\nfunction parserFactory(Typr, woff2otf) {\r\n  const cmdArgLengths = {\r\n    M: 2,\r\n    L: 2,\r\n    Q: 4,\r\n    C: 6,\r\n    Z: 0\r\n  };\r\n\r\n  function wrapFontObj(typrFont) {\r\n    const glyphMap = Object.create(null);\r\n\r\n    const fontObj = {\r\n      unitsPerEm: typrFont.head.unitsPerEm,\r\n      ascender: typrFont.hhea.ascender,\r\n      descender: typrFont.hhea.descender,\r\n      forEachGlyph(text, fontSize, letterSpacing, callback) {\r\n        let glyphX = 0;\r\n        const fontScale = 1 / fontObj.unitsPerEm * fontSize;\r\n\r\n        const glyphIndices = Typr.U.stringToGlyphs(typrFont, text);\r\n        let charIndex = 0;\r\n        glyphIndices.forEach(glyphIndex => {\r\n          // Typr returns a glyph index per string codepoint, with -1s in place of those that\r\n          // were omitted due to ligature substitution. So we can track original index in the\r\n          // string via simple increment, and skip everything else when seeing a -1.\r\n          if (glyphIndex !== -1) {\r\n            let glyphObj = glyphMap[glyphIndex];\r\n            if (!glyphObj) {\r\n              const {cmds, crds} = Typr.U.glyphToPath(typrFont, glyphIndex);\r\n\r\n              // Find extents - Glyf gives this in metadata but not CFF, and Typr doesn't\r\n              // normalize the two, so it's simplest just to iterate ourselves.\r\n              let xMin, yMin, xMax, yMax;\r\n              if (crds.length) {\r\n                xMin = yMin = Infinity;\r\n                xMax = yMax = -Infinity;\r\n                for (let i = 0, len = crds.length; i < len; i += 2) {\r\n                  let x = crds[i];\r\n                  let y = crds[i + 1];\r\n                  if (x < xMin) xMin = x;\r\n                  if (y < yMin) yMin = y;\r\n                  if (x > xMax) xMax = x;\r\n                  if (y > yMax) yMax = y;\r\n                }\r\n              } else {\r\n                xMin = xMax = yMin = yMax = 0;\r\n              }\r\n\r\n              glyphObj = glyphMap[glyphIndex] = {\r\n                index: glyphIndex,\r\n                advanceWidth: typrFont.hmtx.aWidth[glyphIndex],\r\n                xMin,\r\n                yMin,\r\n                xMax,\r\n                yMax,\r\n                pathCommandCount: cmds.length,\r\n                forEachPathCommand(callback) {\r\n                  let argsIndex = 0;\r\n                  const argsArray = [];\r\n                  for (let i = 0, len = cmds.length; i < len; i++) {\r\n                    const numArgs = cmdArgLengths[cmds[i]];\r\n                    argsArray.length = 1 + numArgs;\r\n                    argsArray[0] = cmds[i];\r\n                    for (let j = 1; j <= numArgs; j++) {\r\n                      argsArray[j] = crds[argsIndex++];\r\n                    }\r\n                    callback.apply(null, argsArray);\r\n                  }\r\n                }\r\n              };\r\n            }\r\n\r\n            callback.call(null, glyphObj, glyphX, charIndex);\r\n\r\n            if (glyphObj.advanceWidth) {\r\n              glyphX += glyphObj.advanceWidth * fontScale;\r\n            }\r\n            if (letterSpacing) {\r\n              glyphX += letterSpacing * fontSize;\r\n            }\r\n          }\r\n          charIndex += (text.codePointAt(charIndex) > 0xffff ? 2 : 1);\r\n        });\r\n        return glyphX\r\n      }\r\n    };\r\n\r\n    return fontObj\r\n  }\r\n\r\n  return function parse(buffer) {\r\n    // Look to see if we have a WOFF file and convert it if so:\r\n    const peek = new Uint8Array(buffer, 0, 4);\r\n    const tag = Typr._bin.readASCII(peek, 0, 4);\r\n    if (tag === 'wOFF') {\r\n      buffer = woff2otf(buffer);\r\n    } else if (tag === 'wOF2') {\r\n      throw new Error('woff2 fonts not supported')\r\n    }\r\n    return wrapFontObj(Typr.parse(buffer)[0])\r\n  }\r\n}\r\n\r\n\r\nconst workerModule = /*#__PURE__*/defineWorkerModule({\r\n  name: 'Typr Font Parser',\r\n  dependencies: [typrFactory, woff2otfFactory, parserFactory],\r\n  init(typrFactory, woff2otfFactory, parserFactory) {\r\n    const Typr = typrFactory();\r\n    const woff2otf = woff2otfFactory();\r\n    return parserFactory(Typr, woff2otf)\r\n  }\r\n});\n\n//import fontParser from './FontParser_OpenType.js'\r\n\r\n\r\nconst CONFIG = {\r\n  defaultFontURL: 'https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff', //Roboto Regular\r\n  sdfGlyphSize: 64,\r\n  sdfMargin: 1 / 16,\r\n  sdfExponent: 9,\r\n  textureWidth: 2048\r\n};\r\nconst tempColor = /*#__PURE__*/new Color();\r\nlet hasRequested = false;\r\n\r\n/**\r\n * Customizes the text builder configuration. This must be called prior to the first font processing\r\n * request, and applies to all fonts.\r\n *\r\n * @param {String} config.defaultFontURL - The URL of the default font to use for text processing\r\n *                 requests, in case none is specified or the specifiede font fails to load or parse.\r\n *                 Defaults to \"Roboto Regular\" from Google Fonts.\r\n * @param {Number} config.sdfGlyphSize - The default size of each glyph's SDF (signed distance field)\r\n *                 texture used for rendering. Must be a power-of-two number, and applies to all fonts,\r\n *                 but note that this can also be overridden per call to `getTextRenderInfo()`.\r\n *                 Larger sizes can improve the quality of glyph rendering by increasing the sharpness\r\n *                 of corners and preventing loss of very thin lines, at the expense of memory. Defaults\r\n *                 to 64 which is generally a good balance of size and quality.\r\n * @param {Number} config.sdfExponent - The exponent used when encoding the SDF values. A higher exponent\r\n *                 shifts the encoded 8-bit values to achieve higher precision/accuracy at texels nearer\r\n *                 the glyph's path, with lower precision further away. Defaults to 9.\r\n * @param {Number} config.sdfMargin - How much space to reserve in the SDF as margin outside the glyph's\r\n *                 path, as a percentage of the SDF width. A larger margin increases the quality of\r\n *                 extruded glyph outlines, but decreases the precision available for the glyph itself.\r\n *                 Defaults to 1/16th of the glyph size.\r\n * @param {Number} config.textureWidth - The width of the SDF texture; must be a power of 2. Defaults to\r\n *                 2048 which is a safe maximum texture dimension according to the stats at\r\n *                 https://webglstats.com/webgl/parameter/MAX_TEXTURE_SIZE and should allow for a\r\n *                 reasonably large number of glyphs (default glyph size of 64 and safe texture size of\r\n *                 2048^2 allows for 1024 glyphs.) This can be increased if you need to increase the\r\n *                 glyph size and/or have an extraordinary number of glyphs.\r\n */\r\nfunction configureTextBuilder(config) {\r\n  if (hasRequested) {\r\n    console.warn('configureTextBuilder called after first font request; will be ignored.');\r\n  } else {\r\n    assign(CONFIG, config);\r\n  }\r\n}\r\n\r\n/**\r\n * Repository for all font SDF atlas textures\r\n *\r\n *   {\r\n *     [font]: {\r\n *       sdfTexture: DataTexture\r\n *     }\r\n *   }\r\n */\r\nconst atlases = Object.create(null);\r\n\r\n/**\r\n * @typedef {object} TroikaTextRenderInfo - Format of the result from `getTextRenderInfo`.\r\n * @property {object} parameters - The normalized input arguments to the render call.\r\n * @property {DataTexture} sdfTexture - The SDF atlas texture.\r\n * @property {number} sdfGlyphSize - The size of each glyph's SDF; see `configureTextBuilder`.\r\n * @property {number} sdfExponent - The exponent used in encoding the SDF's values; see `configureTextBuilder`.\r\n * @property {Float32Array} glyphBounds - List of [minX, minY, maxX, maxY] quad bounds for each glyph.\r\n * @property {Float32Array} glyphAtlasIndices - List holding each glyph's index in the SDF atlas.\r\n * @property {Uint8Array} [glyphColors] - List holding each glyph's [r, g, b] color, if `colorRanges` was supplied.\r\n * @property {Float32Array} [caretPositions] - A list of caret positions for all glyphs; this is\r\n *           the bottom [x,y] of the cursor position before each char, plus one after the last char.\r\n * @property {number} [caretHeight] - An appropriate height for all selection carets.\r\n * @property {number} ascender - The font's ascender metric.\r\n * @property {number} descender - The font's descender metric.\r\n * @property {number} lineHeight - The final computed lineHeight measurement.\r\n * @property {number} topBaseline - The y position of the top line's baseline.\r\n * @property {Array<number>} blockBounds - The total [minX, minY, maxX, maxY] rect of the whole text block;\r\n *           this can include extra vertical space beyond the visible glyphs due to lineHeight, and is\r\n *           equivalent to the dimensions of a block-level text element in CSS.\r\n * @property {Array<number>} visibleBounds -\r\n * @property {Array<number>} totalBounds - DEPRECATED; use blockBounds instead.\r\n * @property {Array<number>} totalBlockSize - DEPRECATED; use blockBounds instead\r\n * @property {Array<number>} chunkedBounds - List of bounding rects for each consecutive set of N glyphs,\r\n *           in the format `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`.\r\n * @property {object} timings - Timing info for various parts of the rendering logic including SDF\r\n *           generation, layout, etc.\r\n * @frozen\r\n */\r\n\r\n/**\r\n * @callback getTextRenderInfo~callback\r\n * @param {TroikaTextRenderInfo} textRenderInfo\r\n */\r\n\r\n/**\r\n * Main entry point for requesting the data needed to render a text string with given font parameters.\r\n * This is an asynchronous call, performing most of the logic in a web worker thread.\r\n * @param {object} args\r\n * @param {getTextRenderInfo~callback} callback\r\n */\r\nfunction getTextRenderInfo(args, callback) {\r\n  hasRequested = true;\r\n  args = assign({}, args);\r\n\r\n  // Apply default font here to avoid a 'null' atlas, and convert relative\r\n  // URLs to absolute so they can be resolved in the worker\r\n  args.font = toAbsoluteURL(args.font || CONFIG.defaultFontURL);\r\n\r\n  // Normalize text to a string\r\n  args.text = '' + args.text;\r\n\r\n  args.sdfGlyphSize = args.sdfGlyphSize || CONFIG.sdfGlyphSize;\r\n\r\n  // Normalize colors\r\n  if (args.colorRanges != null) {\r\n    let colors = {};\r\n    for (let key in args.colorRanges) {\r\n      if (args.colorRanges.hasOwnProperty(key)) {\r\n        let val = args.colorRanges[key];\r\n        if (typeof val !== 'number') {\r\n          val = tempColor.set(val).getHex();\r\n        }\r\n        colors[key] = val;\r\n      }\r\n    }\r\n    args.colorRanges = colors;\r\n  }\r\n\r\n  Object.freeze(args);\r\n\r\n  // Init the atlas for this font if needed\r\n  const {textureWidth, sdfExponent} = CONFIG;\r\n  const {sdfGlyphSize} = args;\r\n  let atlasKey = `${args.font}@${sdfGlyphSize}`;\r\n  let atlas = atlases[atlasKey];\r\n  if (!atlas) {\r\n    atlas = atlases[atlasKey] = {\r\n      sdfTexture: new DataTexture(\r\n        new Uint8Array(sdfGlyphSize * textureWidth),\r\n        textureWidth,\r\n        sdfGlyphSize,\r\n        LuminanceFormat,\r\n        undefined,\r\n        undefined,\r\n        undefined,\r\n        undefined,\r\n        LinearFilter,\r\n        LinearFilter\r\n      )\r\n    };\r\n    atlas.sdfTexture.font = args.font;\r\n  }\r\n\r\n  // Issue request to the FontProcessor in the worker\r\n  processInWorker(args).then(result => {\r\n    // If the response has newGlyphs, copy them into the atlas texture at the specified indices\r\n    if (result.newGlyphSDFs) {\r\n      result.newGlyphSDFs.forEach(({textureData, atlasIndex}) => {\r\n        const texImg = atlas.sdfTexture.image;\r\n\r\n        // Grow the texture by power of 2 if needed\r\n        while (texImg.data.length < (atlasIndex + 1) * sdfGlyphSize * sdfGlyphSize) {\r\n          const biggerArray = new Uint8Array(texImg.data.length * 2);\r\n          biggerArray.set(texImg.data);\r\n          texImg.data = biggerArray;\r\n          texImg.height *= 2;\r\n        }\r\n\r\n        // Insert the new glyph's data into the full texture image at the correct offsets\r\n        const cols = texImg.width / sdfGlyphSize;\r\n        const baseStartIndex = texImg.width * sdfGlyphSize * Math.floor(atlasIndex / cols) //full rows\r\n          + (atlasIndex % cols) * sdfGlyphSize; //partial row\r\n        for (let y = 0; y < sdfGlyphSize; y++) {\r\n          const srcStartIndex = y * sdfGlyphSize;\r\n          const rowStartIndex = baseStartIndex + (y * texImg.width);\r\n          for (let x = 0; x < sdfGlyphSize; x++) {\r\n            texImg.data[rowStartIndex + x] = textureData[srcStartIndex + x];\r\n          }\r\n        }\r\n      });\r\n      atlas.sdfTexture.needsUpdate = true;\r\n    }\r\n\r\n    // Invoke callback with the text layout arrays and updated texture\r\n    callback(Object.freeze({\r\n      parameters: args,\r\n      sdfTexture: atlas.sdfTexture,\r\n      sdfGlyphSize,\r\n      sdfExponent,\r\n      glyphBounds: result.glyphBounds,\r\n      glyphAtlasIndices: result.glyphAtlasIndices,\r\n      glyphColors: result.glyphColors,\r\n      caretPositions: result.caretPositions,\r\n      caretHeight: result.caretHeight,\r\n      chunkedBounds: result.chunkedBounds,\r\n      ascender: result.ascender,\r\n      descender: result.descender,\r\n      lineHeight: result.lineHeight,\r\n      topBaseline: result.topBaseline,\r\n      blockBounds: result.blockBounds,\r\n      visibleBounds: result.visibleBounds,\r\n      timings: result.timings,\r\n      get totalBounds() {\r\n        console.log('totalBounds deprecated, use blockBounds instead');\r\n        return result.blockBounds\r\n      },\r\n      get totalBlockSize() {\r\n        console.log('totalBlockSize deprecated, use blockBounds instead');\r\n        const [x0, y0, x1, y1] = result.blockBounds;\r\n        return [x1 - x0, y1 - y0]\r\n      }\r\n    }));\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Preload a given font and optionally pre-generate glyph SDFs for one or more character sequences.\r\n * This can be useful to avoid long pauses when first showing text in a scene, by preloading the\r\n * needed fonts and glyphs up front along with other assets.\r\n *\r\n * @param {object} options\r\n * @param {string} options.font - URL of the font file to preload. If not given, the default font will\r\n *        be loaded.\r\n * @param {string|string[]} options.characters - One or more character sequences for which to pre-\r\n *        generate glyph SDFs. Note that this will honor ligature substitution, so you may need\r\n *        to specify ligature sequences in addition to their individual characters to get all\r\n *        possible glyphs, e.g. `[\"t\", \"h\", \"th\"]` to get the \"t\" and \"h\" glyphs plus the \"th\" ligature.\r\n * @param {number} options.sdfGlyphSize - The size at which to prerender the SDF textures for the\r\n *        specified `characters`.\r\n * @param {function} callback - A function that will be called when the preloading is complete.\r\n */\r\nfunction preloadFont({font, characters, sdfGlyphSize}, callback) {\r\n  let text = Array.isArray(characters) ? characters.join('\\n') : '' + characters;\r\n  getTextRenderInfo({ font, sdfGlyphSize, text }, callback);\r\n}\r\n\r\n\r\n// Local assign impl so we don't have to import troika-core\r\nfunction assign(toObj, fromObj) {\r\n  for (let key in fromObj) {\r\n    if (fromObj.hasOwnProperty(key)) {\r\n      toObj[key] = fromObj[key];\r\n    }\r\n  }\r\n  return toObj\r\n}\r\n\r\n// Utility for making URLs absolute\r\nlet linkEl;\r\nfunction toAbsoluteURL(path) {\r\n  if (!linkEl) {\r\n    linkEl = typeof document === 'undefined' ? {} : document.createElement('a');\r\n  }\r\n  linkEl.href = path;\r\n  return linkEl.href\r\n}\r\n\r\n\r\nconst fontProcessorWorkerModule = /*#__PURE__*/defineWorkerModule({\r\n  name: 'FontProcessor',\r\n  dependencies: [\r\n    CONFIG,\r\n    workerModule,\r\n    createGlyphSegmentsIndex,\r\n    createSDFGenerator,\r\n    createFontProcessor\r\n  ],\r\n  init(config, fontParser, createGlyphSegmentsIndex, createSDFGenerator, createFontProcessor) {\r\n    const {sdfExponent, sdfMargin, defaultFontURL} = config;\r\n    const sdfGenerator = createSDFGenerator(createGlyphSegmentsIndex, { sdfExponent, sdfMargin });\r\n    return createFontProcessor(fontParser, sdfGenerator, { defaultFontURL })\r\n  }\r\n});\r\n\r\nconst processInWorker = /*#__PURE__*/defineWorkerModule({\r\n  name: 'TextBuilder',\r\n  dependencies: [fontProcessorWorkerModule, ThenableWorkerModule],\r\n  init(fontProcessor, Thenable) {\r\n    return function(args) {\r\n      const thenable = new Thenable();\r\n      fontProcessor.process(args, thenable.resolve);\r\n      return thenable\r\n    }\r\n  },\r\n  getTransferables(result) {\r\n    // Mark array buffers as transferable to avoid cloning during postMessage\r\n    const transferables = [\r\n      result.glyphBounds.buffer,\r\n      result.glyphAtlasIndices.buffer\r\n    ];\r\n    if (result.caretPositions) {\r\n      transferables.push(result.caretPositions.buffer);\r\n    }\r\n    if (result.newGlyphSDFs) {\r\n      result.newGlyphSDFs.forEach(d => {\r\n        transferables.push(d.textureData.buffer);\r\n      });\r\n    }\r\n    return transferables\r\n  }\r\n});\n\nconst GlyphsGeometry = /*#__PURE__*/(() => {\r\n\r\n  const templateGeometries = {};\r\n  function getTemplateGeometry(detail) {\r\n    let geom = templateGeometries[detail];\r\n    if (!geom) {\r\n      geom = templateGeometries[detail] = new PlaneBufferGeometry(1, 1, detail, detail).translate(0.5, 0.5, 0);\r\n    }\r\n    return geom\r\n  }\r\n  const tempVec3 = new Vector3();\r\n\r\n  const glyphBoundsAttrName = 'aTroikaGlyphBounds';\r\n  const glyphIndexAttrName = 'aTroikaGlyphIndex';\r\n  const glyphColorAttrName = 'aTroikaGlyphColor';\r\n\r\n  /**\r\n  @class GlyphsGeometry\r\n\r\n  A specialized Geometry for rendering a set of text glyphs. Uses InstancedBufferGeometry to\r\n  render the glyphs using GPU instancing of a single quad, rather than constructing a whole\r\n  geometry with vertices, for much smaller attribute arraybuffers according to this math:\r\n\r\n    Where N = number of glyphs...\r\n\r\n    Instanced:\r\n    - position: 4 * 3\r\n    - index: 2 * 3\r\n    - normal: 4 * 3\r\n    - uv: 4 * 2\r\n    - glyph x/y bounds: N * 4\r\n    - glyph indices: N * 1\r\n    = 5N + 38\r\n\r\n    Non-instanced:\r\n    - position: N * 4 * 3\r\n    - index: N * 2 * 3\r\n    - normal: N * 4 * 3\r\n    - uv: N * 4 * 2\r\n    - glyph indices: N * 1\r\n    = 39N\r\n\r\n  A downside of this is the rare-but-possible lack of the instanced arrays extension,\r\n  which we could potentially work around with a fallback non-instanced implementation.\r\n\r\n  */\r\n  class GlyphsGeometry extends InstancedBufferGeometry {\r\n    constructor() {\r\n      super();\r\n\r\n      this.detail = 1;\r\n\r\n      // Define groups for rendering text outline as a separate pass; these will only\r\n      // be used when the `material` getter returns an array, i.e. outlineWidth > 0.\r\n      this.groups = [\r\n        {start: 0, count: Infinity, materialIndex: 0},\r\n        {start: 0, count: Infinity, materialIndex: 1}\r\n      ];\r\n\r\n      // Preallocate zero-radius bounding sphere\r\n      this.boundingSphere = new Sphere();\r\n      this.boundingBox = new Box3();\r\n    }\r\n\r\n    computeBoundingSphere () {\r\n      // No-op; we'll sync the boundingSphere proactively in `updateGlyphs`.\r\n    }\r\n\r\n    computeBoundingBox() {\r\n      // No-op; we'll sync the boundingBox proactively in `updateGlyphs`.\r\n    }\r\n\r\n    set detail(detail) {\r\n      if (detail !== this._detail) {\r\n        this._detail = detail;\r\n        if (typeof detail !== 'number' || detail < 1) {\r\n          detail = 1;\r\n        }\r\n        let tpl = getTemplateGeometry(detail)\r\n        ;['position', 'normal', 'uv'].forEach(attr => {\r\n          this.attributes[attr] = tpl.attributes[attr].clone();\r\n        });\r\n        this.setIndex(tpl.getIndex().clone());\r\n      }\r\n    }\r\n    get detail() {\r\n      return this._detail\r\n    }\r\n\r\n    /**\r\n     * Update the geometry for a new set of glyphs.\r\n     * @param {Float32Array} glyphBounds - An array holding the planar bounds for all glyphs\r\n     *        to be rendered, 4 entries for each glyph: x1,x2,y1,y1\r\n     * @param {Float32Array} glyphAtlasIndices - An array holding the index of each glyph within\r\n     *        the SDF atlas texture.\r\n     * @param {Array} blockBounds - An array holding the [minX, minY, maxX, maxY] across all glyphs\r\n     * @param {Array} [chunkedBounds] - An array of objects describing bounds for each chunk of N\r\n     *        consecutive glyphs: `{start:N, end:N, rect:[minX, minY, maxX, maxY]}`. This can be\r\n     *        used with `applyClipRect` to choose an optimized `instanceCount`.\r\n     * @param {Uint8Array} [glyphColors] - An array holding r,g,b values for each glyph.\r\n     */\r\n    updateGlyphs(glyphBounds, glyphAtlasIndices, blockBounds, chunkedBounds, glyphColors) {\r\n      // Update the instance attributes\r\n      updateBufferAttr(this, glyphBoundsAttrName, glyphBounds, 4);\r\n      updateBufferAttr(this, glyphIndexAttrName, glyphAtlasIndices, 1);\r\n      updateBufferAttr(this, glyphColorAttrName, glyphColors, 3);\r\n      this._chunkedBounds = chunkedBounds;\r\n      setInstanceCount(this, glyphAtlasIndices.length);\r\n\r\n      // Update the boundingSphere based on the total bounds\r\n      const sphere = this.boundingSphere;\r\n      sphere.center.set(\r\n        (blockBounds[0] + blockBounds[2]) / 2,\r\n        (blockBounds[1] + blockBounds[3]) / 2,\r\n        0\r\n      );\r\n      sphere.radius = sphere.center.distanceTo(tempVec3.set(blockBounds[0], blockBounds[1], 0));\r\n\r\n      // Update the boundingBox based on the total bounds\r\n      const box = this.boundingBox;\r\n      box.min.set(blockBounds[0], blockBounds[1], 0);\r\n      box.max.set(blockBounds[2], blockBounds[3], 0);\r\n    }\r\n\r\n    /**\r\n     * Given a clipping rect, and the chunkedBounds from the last updateGlyphs call, choose the lowest\r\n     * `instanceCount` that will show all glyphs within the clipped view. This is an optimization\r\n     * for long blocks of text that are clipped, to skip vertex shader evaluation for glyphs that would\r\n     * be clipped anyway.\r\n     *\r\n     * Note that since `drawElementsInstanced[ANGLE]` only accepts an instance count and not a starting\r\n     * offset, this optimization becomes less effective as the clipRect moves closer to the end of the\r\n     * text block. We could fix that by switching from instancing to a full geometry with a drawRange,\r\n     * but at the expense of much larger attribute buffers (see classdoc above.)\r\n     *\r\n     * @param {Vector4} clipRect\r\n     */\r\n    applyClipRect(clipRect) {\r\n      let count = this.getAttribute(glyphIndexAttrName).count;\r\n      let chunks = this._chunkedBounds;\r\n      if (chunks) {\r\n        for (let i = chunks.length; i--;) {\r\n          count = chunks[i].end;\r\n          let rect = chunks[i].rect;\r\n          // note: both rects are l-b-r-t\r\n          if (rect[1] < clipRect.w && rect[3] > clipRect.y && rect[0] < clipRect.z && rect[2] > clipRect.x) {\r\n            break\r\n          }\r\n        }\r\n      }\r\n      setInstanceCount(this, count);\r\n    }\r\n  }\r\n\r\n  // Compat for pre r109:\r\n  if (!GlyphsGeometry.prototype.setAttribute) {\r\n    GlyphsGeometry.prototype.setAttribute = function(name, attribute) {\r\n      this.attributes[ name ] = attribute;\r\n      return this\r\n    };\r\n  }\r\n\r\n\r\n  function updateBufferAttr(geom, attrName, newArray, itemSize) {\r\n    const attr = geom.getAttribute(attrName);\r\n    if (newArray) {\r\n      // If length isn't changing, just update the attribute's array data\r\n      if (attr && attr.array.length === newArray.length) {\r\n        attr.array.set(newArray);\r\n        attr.needsUpdate = true;\r\n      } else {\r\n        geom.setAttribute(attrName, new InstancedBufferAttribute(newArray, itemSize));\r\n        // If the new attribute has a different size, we also have to (as of r117) manually clear the\r\n        // internal cached max instance count. See https://github.com/mrdoob/three.js/issues/19706\r\n        // It's unclear if this is a threejs bug or a truly unsupported scenario; discussion in\r\n        // that ticket is ambiguous as to whether replacing a BufferAttribute with one of a\r\n        // different size is supported, but https://github.com/mrdoob/three.js/pull/17418 strongly\r\n        // implies it should be supported. It's possible we need to\r\n        delete geom._maxInstanceCount; //for r117+, could be fragile\r\n        geom.dispose(); //for r118+, more robust feeling, but more heavy-handed than I'd like\r\n      }\r\n    } else if (attr) {\r\n      geom.deleteAttribute(attrName);\r\n    }\r\n  }\r\n\r\n  // Handle maxInstancedCount -> instanceCount rename that happened in three r117\r\n  function setInstanceCount(geom, count) {\r\n    geom[geom.hasOwnProperty('instanceCount') ? 'instanceCount' : 'maxInstancedCount'] = count;\r\n  }\r\n\r\n  return GlyphsGeometry\r\n})();\n\n// language=GLSL\r\nconst VERTEX_DEFS = `\r\nuniform vec2 uTroikaSDFTextureSize;\r\nuniform float uTroikaSDFGlyphSize;\r\nuniform vec4 uTroikaTotalBounds;\r\nuniform vec4 uTroikaClipRect;\r\nuniform mat3 uTroikaOrient;\r\nuniform bool uTroikaUseGlyphColors;\r\nuniform float uTroikaDistanceOffset;\r\nattribute vec4 aTroikaGlyphBounds;\r\nattribute float aTroikaGlyphIndex;\r\nattribute vec3 aTroikaGlyphColor;\r\nvarying vec2 vTroikaGlyphUV;\r\nvarying vec4 vTroikaTextureUVBounds;\r\nvarying vec3 vTroikaGlyphColor;\r\nvarying vec2 vTroikaGlyphDimensions;\r\n`;\r\n\r\n// language=GLSL prefix=\"void main() {\" suffix=\"}\"\r\nconst VERTEX_TRANSFORM = `\r\nvec4 bounds = aTroikaGlyphBounds;\r\nvec4 outlineBounds = vec4(bounds.xy - uTroikaDistanceOffset, bounds.zw + uTroikaDistanceOffset);\r\nvec4 clippedBounds = vec4(\r\n  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\r\n  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\r\n);\r\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\r\n\r\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\r\n\r\nuv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);\r\n\r\nposition = uTroikaOrient * position;\r\nnormal = uTroikaOrient * normal;\r\n\r\nvTroikaGlyphUV = clippedXY.xy;\r\nvTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);\r\n\r\n${''/* NOTE: it seems important to calculate the glyph's bounding texture UVs here in the\r\n  vertex shader, rather than in the fragment shader, as the latter gives strange artifacts\r\n  on some glyphs (those in the leftmost texture column) on some systems. The exact reason\r\n  isn't understood but doing this here, then mix()-ing in the fragment shader, seems to work. */}\r\nfloat txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\r\nvec2 txUvPerGlyph = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\r\nvec2 txStartUV = txUvPerGlyph * vec2(\r\n  mod(aTroikaGlyphIndex, txCols),\r\n  floor(aTroikaGlyphIndex / txCols)\r\n);\r\nvTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerGlyph);\r\n`;\r\n\r\n// language=GLSL\r\nconst FRAGMENT_DEFS = `\r\nuniform sampler2D uTroikaSDFTexture;\r\nuniform vec2 uTroikaSDFTextureSize;\r\nuniform float uTroikaSDFGlyphSize;\r\nuniform float uTroikaSDFExponent;\r\nuniform float uTroikaDistanceOffset;\r\nuniform bool uTroikaSDFDebug;\r\nvarying vec2 vTroikaGlyphUV;\r\nvarying vec4 vTroikaTextureUVBounds;\r\nvarying vec2 vTroikaGlyphDimensions;\r\n\r\nfloat troikaSdfValueToSignedDistance(float alpha) {\r\n  // Inverse of encoding in SDFGenerator.js\r\n  ${''/* TODO - there's some slight inaccuracy here when dealing with interpolated alpha values; those\r\n    are linearly interpolated where the encoding is exponential. Look into improving this by rounding\r\n    to nearest 2 whole texels, decoding those exponential values, and linearly interpolating the result.\r\n  */}\r\n  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);\r\n  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;\r\n  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);\r\n  return signedDist;\r\n}\r\n\r\nfloat troikaGlyphUvToSdfValue(vec2 glyphUV) {\r\n  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);\r\n  return texture2D(uTroikaSDFTexture, textureUV).r;\r\n}\r\n\r\nfloat troikaGlyphUvToDistance(vec2 uv) {\r\n  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));\r\n}\r\n\r\nfloat troikaGetTextAlpha(float distanceOffset) {\r\n  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);\r\n  float distance = troikaGlyphUvToDistance(clampedGlyphUV);\r\n    \r\n  // Extrapolate distance when outside bounds:\r\n  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : \r\n    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\r\n\r\n  ${''/* \r\n  // TODO more refined extrapolated distance by adjusting for angle of gradient at edge...\r\n  // This has potential but currently gives very jagged extensions, maybe due to precision issues?\r\n  float uvStep = 1.0 / uTroikaSDFGlyphSize;\r\n  vec2 neighbor1UV = clampedGlyphUV + (\r\n    vTroikaGlyphUV.x != clampedGlyphUV.x ? vec2(0.0, uvStep * sign(0.5 - vTroikaGlyphUV.y)) :\r\n    vTroikaGlyphUV.y != clampedGlyphUV.y ? vec2(uvStep * sign(0.5 - vTroikaGlyphUV.x), 0.0) :\r\n    vec2(0.0)\r\n  );\r\n  vec2 neighbor2UV = clampedGlyphUV + (\r\n    vTroikaGlyphUV.x != clampedGlyphUV.x ? vec2(0.0, uvStep * -sign(0.5 - vTroikaGlyphUV.y)) :\r\n    vTroikaGlyphUV.y != clampedGlyphUV.y ? vec2(uvStep * -sign(0.5 - vTroikaGlyphUV.x), 0.0) :\r\n    vec2(0.0)\r\n  );\r\n  float neighbor1Distance = troikaGlyphUvToDistance(neighbor1UV);\r\n  float neighbor2Distance = troikaGlyphUvToDistance(neighbor2UV);\r\n  float distToUnclamped = length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\r\n  float distToNeighbor = length((clampedGlyphUV - neighbor1UV) * vTroikaGlyphDimensions);\r\n  float gradientAngle1 = min(asin(abs(neighbor1Distance - distance) / distToNeighbor), PI / 2.0);\r\n  float gradientAngle2 = min(asin(abs(neighbor2Distance - distance) / distToNeighbor), PI / 2.0);\r\n  distance += (cos(gradientAngle1) + cos(gradientAngle2)) / 2.0 * distToUnclamped;\r\n  */}\r\n  \r\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\r\n  float alpha = step(-distanceOffset, -distance);\r\n  #else\r\n  ${''/*\r\n    When the standard derivatives extension is available, we choose an antialiasing alpha threshold based\r\n    on the potential change in the SDF's alpha from this fragment to its neighbor. This strategy maximizes \r\n    readability and edge crispness at all sizes and screen resolutions.\r\n  */}\r\n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\r\n  float aaDist = length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;\r\n  #else\r\n  float aaDist = vTroikaGlyphDimensions.x / 64.0;\r\n  #endif\r\n  \r\n  float alpha = smoothstep(\r\n    distanceOffset + aaDist,\r\n    distanceOffset - aaDist,\r\n    distance\r\n  );\r\n  #endif\r\n  \r\n  return alpha;\r\n}\r\n`;\r\n\r\n// language=GLSL prefix=\"void main() {\" suffix=\"}\"\r\nconst FRAGMENT_TRANSFORM = `\r\nfloat alpha = uTroikaSDFDebug ?\r\n  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :\r\n  troikaGetTextAlpha(uTroikaDistanceOffset);\r\n\r\n#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)\r\ngl_FragColor.a *= alpha;\r\n#endif\r\n  \r\nif (alpha == 0.0) {\r\n  discard;\r\n}\r\n`;\r\n\r\n\r\n/**\r\n * Create a material for rendering text, derived from a baseMaterial\r\n */\r\nfunction createTextDerivedMaterial(baseMaterial) {\r\n  const textMaterial = createDerivedMaterial(baseMaterial, {\r\n    chained: true,\r\n    extensions: {\r\n      derivatives: true\r\n    },\r\n    uniforms: {\r\n      uTroikaSDFTexture: {value: null},\r\n      uTroikaSDFTextureSize: {value: new Vector2()},\r\n      uTroikaSDFGlyphSize: {value: 0},\r\n      uTroikaSDFExponent: {value: 0},\r\n      uTroikaTotalBounds: {value: new Vector4(0,0,0,0)},\r\n      uTroikaClipRect: {value: new Vector4(0,0,0,0)},\r\n      uTroikaDistanceOffset: {value: 0},\r\n      uTroikaOrient: {value: new Matrix3()},\r\n      uTroikaUseGlyphColors: {value: true},\r\n      uTroikaSDFDebug: {value: false}\r\n    },\r\n    vertexDefs: VERTEX_DEFS,\r\n    vertexTransform: VERTEX_TRANSFORM,\r\n    fragmentDefs: FRAGMENT_DEFS,\r\n    fragmentColorTransform: FRAGMENT_TRANSFORM,\r\n    customRewriter({vertexShader, fragmentShader}) {\r\n      let uDiffuseRE = /\\buniform\\s+vec3\\s+diffuse\\b/;\r\n      if (uDiffuseRE.test(fragmentShader)) {\r\n        // Replace all instances of `diffuse` with our varying\r\n        fragmentShader = fragmentShader\r\n          .replace(uDiffuseRE, 'varying vec3 vTroikaGlyphColor')\r\n          .replace(/\\bdiffuse\\b/g, 'vTroikaGlyphColor');\r\n        // Make sure the vertex shader declares the uniform so we can grab it as a fallback\r\n        if (!uDiffuseRE.test(vertexShader)) {\r\n          vertexShader = vertexShader.replace(\r\n            voidMainRegExp,\r\n            'uniform vec3 diffuse;\\n$&\\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\\n'\r\n          );\r\n        }\r\n      }\r\n      return { vertexShader, fragmentShader }\r\n    }\r\n  });\r\n\r\n  // Force transparency - TODO is this reasonable?\r\n  textMaterial.transparent = true;\r\n\r\n  Object.defineProperties(textMaterial, {\r\n    isTroikaTextMaterial: {value: true},\r\n\r\n    // WebGLShadowMap reverses the side of the shadow material by default, which fails\r\n    // for planes, so here we force the `shadowSide` to always match the main side.\r\n    shadowSide: {\r\n      get() {\r\n        return this.side\r\n      },\r\n      set() {\r\n        //no-op\r\n      }\r\n    }\r\n  });\r\n\r\n  return textMaterial\r\n}\n\nconst Text = /*#__PURE__*/(() => {\r\n\r\n  const defaultMaterial = new MeshBasicMaterial({\r\n    color: 0xffffff,\r\n    side: DoubleSide,\r\n    transparent: true\r\n  });\r\n\r\n  const tempMat4 = new Matrix4();\r\n  const tempVec3a = new Vector3();\r\n  const tempVec3b = new Vector3();\r\n  const tempArray = [];\r\n  const origin = new Vector3();\r\n  const defaultOrient = '+x+y';\r\n\r\n  function first(o) {\r\n    return Array.isArray(o) ? o[0] : o\r\n  }\r\n\r\n  const raycastMesh = new Mesh(\r\n    new PlaneBufferGeometry(1, 1).translate(0.5, 0.5, 0),\r\n    defaultMaterial\r\n  );\r\n\r\n  const syncStartEvent = {type: 'syncstart'};\r\n  const syncCompleteEvent = {type: 'synccomplete'};\r\n\r\n  const SYNCABLE_PROPS = [\r\n    'font',\r\n    'fontSize',\r\n    'letterSpacing',\r\n    'lineHeight',\r\n    'maxWidth',\r\n    'overflowWrap',\r\n    'text',\r\n    'textAlign',\r\n    'textIndent',\r\n    'whiteSpace',\r\n    'anchorX',\r\n    'anchorY',\r\n    'colorRanges',\r\n    'sdfGlyphSize'\r\n  ];\r\n\r\n  const COPYABLE_PROPS = SYNCABLE_PROPS.concat(\r\n    'material',\r\n    'color',\r\n    'depthOffset',\r\n    'clipRect',\r\n    'orientation',\r\n    'glyphGeometryDetail'\r\n  );\r\n\r\n\r\n\r\n  /**\r\n   * @class Text\r\n   *\r\n   * A ThreeJS Mesh that renders a string of text on a plane in 3D space using signed distance\r\n   * fields (SDF).\r\n   */\r\n  class Text extends Mesh {\r\n    constructor() {\r\n      const geometry = new GlyphsGeometry();\r\n      super(geometry, null);\r\n\r\n      // === Text layout properties: === //\r\n\r\n      /**\r\n       * @member {string} text\r\n       * The string of text to be rendered.\r\n       */\r\n      this.text = '';\r\n\r\n      /**\r\n       * @deprecated Use `anchorX` and `anchorY` instead\r\n       * @member {Array<number>} anchor\r\n       * Defines where in the text block should correspond to the mesh's local position, as a set\r\n       * of horizontal and vertical percentages from 0 to 1. A value of `[0, 0]` (the default)\r\n       * anchors at the top-left, `[1, 1]` at the bottom-right, and `[0.5, 0.5]` centers the\r\n       * block at the mesh's position.\r\n       */\r\n      //this.anchor = null\r\n\r\n      /**\r\n       * @member {number|string} anchorX\r\n       * Defines the horizontal position in the text block that should line up with the local origin.\r\n       * Can be specified as a numeric x position in local units, a string percentage of the total\r\n       * text block width e.g. `'25%'`, or one of the following keyword strings: 'left', 'center',\r\n       * or 'right'.\r\n       */\r\n      this.anchorX = 0;\r\n\r\n      /**\r\n       * @member {number|string} anchorX\r\n       * Defines the vertical position in the text block that should line up with the local origin.\r\n       * Can be specified as a numeric y position in local units (note: down is negative y), a string\r\n       * percentage of the total text block height e.g. `'25%'`, or one of the following keyword strings:\r\n       * 'top', 'top-baseline', 'middle', 'bottom-baseline', or 'bottom'.\r\n       */\r\n      this.anchorY = 0;\r\n\r\n      /**\r\n       * @member {string} font\r\n       * URL of a custom font to be used. Font files can be any of the formats supported by\r\n       * OpenType (see https://github.com/opentypejs/opentype.js).\r\n       * Defaults to the Roboto font loaded from Google Fonts.\r\n       */\r\n      this.font = null; //will use default from TextBuilder\r\n\r\n      /**\r\n       * @member {number} fontSize\r\n       * The size at which to render the font in local units; corresponds to the em-box height\r\n       * of the chosen `font`.\r\n       */\r\n      this.fontSize = 0.1;\r\n\r\n      /**\r\n       * @member {number} letterSpacing\r\n       * Sets a uniform adjustment to spacing between letters after kerning is applied. Positive\r\n       * numbers increase spacing and negative numbers decrease it.\r\n       */\r\n      this.letterSpacing = 0;\r\n\r\n      /**\r\n       * @member {number|string} lineHeight\r\n       * Sets the height of each line of text, as a multiple of the `fontSize`. Defaults to 'normal'\r\n       * which chooses a reasonable height based on the chosen font's ascender/descender metrics.\r\n       */\r\n      this.lineHeight = 'normal';\r\n\r\n      /**\r\n       * @member {number} maxWidth\r\n       * The maximum width of the text block, above which text may start wrapping according to the\r\n       * `whiteSpace` and `overflowWrap` properties.\r\n       */\r\n      this.maxWidth = Infinity;\r\n\r\n      /**\r\n       * @member {string} overflowWrap\r\n       * Defines how text wraps if the `whiteSpace` property is `normal`. Can be either `'normal'`\r\n       * to break at whitespace characters, or `'break-word'` to allow breaking within words.\r\n       * Defaults to `'normal'`.\r\n       */\r\n      this.overflowWrap = 'normal';\r\n\r\n      /**\r\n       * @member {string} textAlign\r\n       * The horizontal alignment of each line of text within the overall text bounding box.\r\n       */\r\n      this.textAlign = 'left';\r\n\r\n      /**\r\n       * @member {number} textIndent\r\n       * Indentation for the first character of a line; see CSS `text-indent`.\r\n       */\r\n      this.textIndent = 0;\r\n\r\n      /**\r\n       * @member {string} whiteSpace\r\n       * Defines whether text should wrap when a line reaches the `maxWidth`. Can\r\n       * be either `'normal'` (the default), to allow wrapping according to the `overflowWrap` property,\r\n       * or `'nowrap'` to prevent wrapping. Note that `'normal'` here honors newline characters to\r\n       * manually break lines, making it behave more like `'pre-wrap'` does in CSS.\r\n       */\r\n      this.whiteSpace = 'normal';\r\n\r\n\r\n      // === Presentation properties: === //\r\n\r\n      /**\r\n       * @member {THREE.Material} material\r\n       * Defines a _base_ material to be used when rendering the text. This material will be\r\n       * automatically replaced with a material derived from it, that adds shader code to\r\n       * decrease the alpha for each fragment (pixel) outside the text glyphs, with antialiasing.\r\n       * By default it will derive from a simple white MeshBasicMaterial, but you can use any\r\n       * of the other mesh materials to gain other features like lighting, texture maps, etc.\r\n       *\r\n       * Also see the `color` shortcut property.\r\n       */\r\n      this.material = null;\r\n\r\n      /**\r\n       * @member {string|number|THREE.Color} color\r\n       * This is a shortcut for setting the `color` of the text's material. You can use this\r\n       * if you don't want to specify a whole custom `material`. Also, if you do use a custom\r\n       * `material`, this color will only be used for this particuar Text instance, even if\r\n       * that same material instance is shared across multiple Text objects.\r\n       */\r\n      this.color = null;\r\n\r\n      /**\r\n       * @member {object|null} colorRanges\r\n       * WARNING: This API is experimental and may change.\r\n       * This allows more fine-grained control of colors for individual or ranges of characters,\r\n       * taking precedence over the material's `color`. Its format is an Object whose keys each\r\n       * define a starting character index for a range, and whose values are the color for each\r\n       * range. The color value can be a numeric hex color value, a `THREE.Color` object, or\r\n       * any of the strings accepted by `THREE.Color`.\r\n       */\r\n      this.colorRanges = null;\r\n\r\n      /**\r\n       * @member {number|string} outlineWidth\r\n       * WARNING: This API is experimental and may change.\r\n       * The width of an outline drawn around each text glyph using the `outlineColor`. Can be\r\n       * specified as either an absolute number in local units, or as a percentage string e.g.\r\n       * `\"12%\"` which is treated as a percentage of the `fontSize`. Defaults to `0`.\r\n       */\r\n      this.outlineWidth = 0;\r\n\r\n      /**\r\n       * @member {string|number|THREE.Color} outlineColor\r\n       * WARNING: This API is experimental and may change.\r\n       * The color of the text outline, if `outlineWidth` is greater than zero. Defaults to black.\r\n       */\r\n      this.outlineColor = 0;\r\n\r\n      /**\r\n       * @member {number} depthOffset\r\n       * This is a shortcut for setting the material's `polygonOffset` and related properties,\r\n       * which can be useful in preventing z-fighting when this text is laid on top of another\r\n       * plane in the scene. Positive numbers are further from the camera, negatives closer.\r\n       */\r\n      this.depthOffset = 0;\r\n\r\n      /**\r\n       * @member {Array<number>} clipRect\r\n       * If specified, defines a `[minX, minY, maxX, maxY]` of a rectangle outside of which all\r\n       * pixels will be discarded. This can be used for example to clip overflowing text when\r\n       * `whiteSpace='nowrap'`.\r\n       */\r\n      this.clipRect = null;\r\n\r\n      /**\r\n       * @member {string} orientation\r\n       * Defines the axis plane on which the text should be laid out when the mesh has no extra\r\n       * rotation transform. It is specified as a string with two axes: the horizontal axis with\r\n       * positive pointing right, and the vertical axis with positive pointing up. By default this\r\n       * is '+x+y', meaning the text sits on the xy plane with the text's top toward positive y\r\n       * and facing positive z. A value of '+x-z' would place it on the xz plane with the text's\r\n       * top toward negative z and facing positive y.\r\n       */\r\n      this.orientation = defaultOrient;\r\n\r\n      /**\r\n       * @member {number} glyphGeometryDetail\r\n       * Controls number of vertical/horizontal segments that make up each glyph's rectangular\r\n       * plane. Defaults to 1. This can be increased to provide more geometrical detail for custom\r\n       * vertex shader effects, for example.\r\n       */\r\n      this.glyphGeometryDetail = 1;\r\n\r\n      /**\r\n       * @member {number|null} sdfGlyphSize\r\n       * The size of each glyph's SDF (signed distance field) used for rendering. This must be a\r\n       * power-of-two number. Defaults to 64 which is generally a good balance of size and quality\r\n       * for most fonts. Larger sizes can improve the quality of glyph rendering by increasing\r\n       * the sharpness of corners and preventing loss of very thin lines, at the expense of\r\n       * increased memory footprint and longer SDF generation time.\r\n       */\r\n      this.sdfGlyphSize = null;\r\n\r\n      this.debugSDF = false;\r\n    }\r\n\r\n    /**\r\n     * Updates the text rendering according to the current text-related configuration properties.\r\n     * This is an async process, so you can pass in a callback function to be executed when it\r\n     * finishes.\r\n     * @param {function} [callback]\r\n     */\r\n    sync(callback) {\r\n      if (this._needsSync) {\r\n        this._needsSync = false;\r\n\r\n        // If there's another sync still in progress, queue\r\n        if (this._isSyncing) {\r\n          (this._queuedSyncs || (this._queuedSyncs = [])).push(callback);\r\n        } else {\r\n          this._isSyncing = true;\r\n          this.dispatchEvent(syncStartEvent);\r\n\r\n          getTextRenderInfo({\r\n            text: this.text,\r\n            font: this.font,\r\n            fontSize: this.fontSize || 0.1,\r\n            letterSpacing: this.letterSpacing || 0,\r\n            lineHeight: this.lineHeight || 'normal',\r\n            maxWidth: this.maxWidth,\r\n            textAlign: this.textAlign,\r\n            textIndent: this.textIndent,\r\n            whiteSpace: this.whiteSpace,\r\n            overflowWrap: this.overflowWrap,\r\n            anchorX: this.anchorX,\r\n            anchorY: this.anchorY,\r\n            colorRanges: this.colorRanges,\r\n            includeCaretPositions: true, //TODO parameterize\r\n            sdfGlyphSize: this.sdfGlyphSize\r\n          }, textRenderInfo => {\r\n            this._isSyncing = false;\r\n\r\n            // Save result for later use in onBeforeRender\r\n            this._textRenderInfo = textRenderInfo;\r\n\r\n            // Update the geometry attributes\r\n            this.geometry.updateGlyphs(\r\n              textRenderInfo.glyphBounds,\r\n              textRenderInfo.glyphAtlasIndices,\r\n              textRenderInfo.blockBounds,\r\n              textRenderInfo.chunkedBounds,\r\n              textRenderInfo.glyphColors\r\n            );\r\n\r\n            // If we had extra sync requests queued up, kick it off\r\n            const queued = this._queuedSyncs;\r\n            if (queued) {\r\n              this._queuedSyncs = null;\r\n              this._needsSync = true;\r\n              this.sync(() => {\r\n                queued.forEach(fn => fn && fn());\r\n              });\r\n            }\r\n\r\n            this.dispatchEvent(syncCompleteEvent);\r\n            if (callback) {\r\n              callback();\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Initiate a sync if needed - note it won't complete until next frame at the\r\n     * earliest so if possible it's a good idea to call sync() manually as soon as\r\n     * all the properties have been set.\r\n     * @override\r\n     */\r\n    onBeforeRender(renderer, scene, camera, geometry, material, group) {\r\n      this.sync();\r\n\r\n      // This may not always be a text material, e.g. if there's a scene.overrideMaterial present\r\n      if (material.isTroikaTextMaterial) {\r\n        this._prepareForRender(material);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Shortcut to dispose the geometry specific to this instance.\r\n     * Note: we don't also dispose the derived material here because if anything else is\r\n     * sharing the same base material it will result in a pause next frame as the program\r\n     * is recompiled. Instead users can dispose the base material manually, like normal,\r\n     * and we'll also dispose the derived material at that time.\r\n     */\r\n    dispose() {\r\n      this.geometry.dispose();\r\n    }\r\n\r\n    /**\r\n     * @property {TroikaTextRenderInfo|null} textRenderInfo\r\n     * @readonly\r\n     * The current processed rendering data for this TextMesh, returned by the TextBuilder after\r\n     * a `sync()` call. This will be `null` initially, and may be stale for a short period until\r\n     * the asynchrous `sync()` process completes.\r\n     */\r\n    get textRenderInfo() {\r\n      return this._textRenderInfo || null\r\n    }\r\n\r\n    // Handler for automatically wrapping the base material with our upgrades. We do the wrapping\r\n    // lazily on _read_ rather than write to avoid unnecessary wrapping on transient values.\r\n    get material() {\r\n      let derivedMaterial = this._derivedMaterial;\r\n      const baseMaterial = this._baseMaterial || this._defaultMaterial || (this._defaultMaterial = defaultMaterial.clone());\r\n      if (!derivedMaterial || derivedMaterial.baseMaterial !== baseMaterial) {\r\n        derivedMaterial = this._derivedMaterial = createTextDerivedMaterial(baseMaterial);\r\n        // dispose the derived material when its base material is disposed:\r\n        baseMaterial.addEventListener('dispose', function onDispose() {\r\n          baseMaterial.removeEventListener('dispose', onDispose);\r\n          derivedMaterial.dispose();\r\n        });\r\n      }\r\n      // If text outline is present, render it as a preliminary draw using Three's multi-material\r\n      // feature (see GlyphsGeometry which sets up `groups` for this purpose) Doing it with multi\r\n      // materials ensures the layers are always rendered consecutively in a consistent order.\r\n      // Each layer will trigger onBeforeRender with the appropriate material.\r\n      if (this.outlineWidth) {\r\n        let outlineMaterial = derivedMaterial._outlineMtl;\r\n        if (!outlineMaterial) {\r\n          outlineMaterial = derivedMaterial._outlineMtl = Object.create(derivedMaterial, {\r\n            id: {value: derivedMaterial.id + 0.1}\r\n          });\r\n          outlineMaterial.isTextOutlineMaterial = true;\r\n          outlineMaterial.depthWrite = false;\r\n          outlineMaterial.map = null; //???\r\n          derivedMaterial.addEventListener('dispose', function onDispose() {\r\n            derivedMaterial.removeEventListener('dispose', onDispose);\r\n            outlineMaterial.dispose();\r\n          });\r\n        }\r\n        return [\r\n          outlineMaterial,\r\n          derivedMaterial\r\n        ]\r\n      } else {\r\n        return derivedMaterial\r\n      }\r\n    }\r\n    set material(baseMaterial) {\r\n      if (baseMaterial && baseMaterial.isTroikaTextMaterial) { //prevent double-derivation\r\n        this._derivedMaterial = baseMaterial;\r\n        this._baseMaterial = baseMaterial.baseMaterial;\r\n      } else {\r\n        this._baseMaterial = baseMaterial;\r\n      }\r\n    }\r\n\r\n    get glyphGeometryDetail() {\r\n      return this.geometry.detail\r\n    }\r\n    set glyphGeometryDetail(detail) {\r\n      this.geometry.detail = detail;\r\n    }\r\n\r\n    // Create and update material for shadows upon request:\r\n    get customDepthMaterial() {\r\n      return first(this.material).getDepthMaterial()\r\n    }\r\n    get customDistanceMaterial() {\r\n      return first(this.material).getDistanceMaterial()\r\n    }\r\n\r\n    _prepareForRender(material) {\r\n      const isOutline = material.isTextOutlineMaterial;\r\n      const uniforms = material.uniforms;\r\n      const textInfo = this.textRenderInfo;\r\n      if (textInfo) {\r\n        const {sdfTexture, blockBounds} = textInfo;\r\n        uniforms.uTroikaSDFTexture.value = sdfTexture;\r\n        uniforms.uTroikaSDFTextureSize.value.set(sdfTexture.image.width, sdfTexture.image.height);\r\n        uniforms.uTroikaSDFGlyphSize.value = textInfo.sdfGlyphSize;\r\n        uniforms.uTroikaSDFExponent.value = textInfo.sdfExponent;\r\n        uniforms.uTroikaTotalBounds.value.fromArray(blockBounds);\r\n        uniforms.uTroikaUseGlyphColors.value = !!textInfo.glyphColors;\r\n\r\n        let distanceOffset = 0;\r\n        if (isOutline) {\r\n          let {outlineWidth} = this;\r\n          if (typeof outlineWidth === 'string') {\r\n            let match = outlineWidth.match(/^([\\d.]+)%$/);\r\n            let pct = match ? parseFloat(match[1]) : NaN;\r\n            outlineWidth = (isNaN(pct) ? 0 : pct / 100) * this.fontSize;\r\n          }\r\n          distanceOffset = outlineWidth;\r\n        }\r\n        uniforms.uTroikaDistanceOffset.value = distanceOffset;\r\n\r\n        let clipRect = this.clipRect;\r\n        if (clipRect && Array.isArray(clipRect) && clipRect.length === 4) {\r\n          uniforms.uTroikaClipRect.value.fromArray(clipRect);\r\n        } else {\r\n          // no clipping - choose a finite rect that shouldn't ever be reached by overflowing glyphs or outlines\r\n          const pad = (this.fontSize || 0.1) * 100;\r\n          uniforms.uTroikaClipRect.value.set(\r\n            blockBounds[0] - pad,\r\n            blockBounds[1] - pad,\r\n            blockBounds[2] + pad,\r\n            blockBounds[3] + pad\r\n          );\r\n        }\r\n        this.geometry.applyClipRect(uniforms.uTroikaClipRect.value);\r\n      }\r\n      uniforms.uTroikaSDFDebug.value = !!this.debugSDF;\r\n      material.polygonOffset = !!this.depthOffset;\r\n      material.polygonOffsetFactor = material.polygonOffsetUnits = this.depthOffset || 0;\r\n\r\n      // Shortcut for setting material color via `color` prop on the mesh; this is\r\n      // applied only to the derived material to avoid mutating a shared base material.\r\n      const color = isOutline ? (this.outlineColor || 0) : this.color;\r\n      if (color == null) {\r\n        delete material.color; //inherit from base\r\n      } else {\r\n        const colorObj = material.hasOwnProperty('color') ? material.color : (material.color = new Color());\r\n        if (color !== colorObj._input || typeof color === 'object') {\r\n          colorObj.set(colorObj._input = color);\r\n        }\r\n      }\r\n\r\n      // base orientation\r\n      let orient = this.orientation || defaultOrient;\r\n      if (orient !== material._orientation) {\r\n        let rotMat = uniforms.uTroikaOrient.value;\r\n        orient = orient.replace(/[^-+xyz]/g, '');\r\n        let match = orient !== defaultOrient && orient.match(/^([-+])([xyz])([-+])([xyz])$/);\r\n        if (match) {\r\n          let [, hSign, hAxis, vSign, vAxis] = match;\r\n          tempVec3a.set(0, 0, 0)[hAxis] = hSign === '-' ? 1 : -1;\r\n          tempVec3b.set(0, 0, 0)[vAxis] = vSign === '-' ? -1 : 1;\r\n          tempMat4.lookAt(origin, tempVec3a.cross(tempVec3b), tempVec3b);\r\n          rotMat.setFromMatrix4(tempMat4);\r\n        } else {\r\n          rotMat.identity();\r\n        }\r\n        material._orientation = orient;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @override Custom raycasting to test against the whole text block's max rectangular bounds\r\n     * TODO is there any reason to make this more granular, like within individual line or glyph rects?\r\n     */\r\n    raycast(raycaster, intersects) {\r\n      const textInfo = this.textRenderInfo;\r\n      if (textInfo) {\r\n        const bounds = textInfo.blockBounds;\r\n        raycastMesh.matrixWorld.multiplyMatrices(\r\n          this.matrixWorld,\r\n          tempMat4.set(\r\n            bounds[2] - bounds[0], 0, 0, bounds[0],\r\n            0, bounds[3] - bounds[1], 0, bounds[1],\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n          )\r\n        );\r\n        tempArray.length = 0;\r\n        raycastMesh.raycast(raycaster, tempArray);\r\n        for (let i = 0; i < tempArray.length; i++) {\r\n          tempArray[i].object = this;\r\n          intersects.push(tempArray[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      COPYABLE_PROPS.forEach(prop => {\r\n        this[prop] = source[prop];\r\n      });\r\n      return this\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this)\r\n    }\r\n  }\r\n\r\n\r\n  // Create setters for properties that affect text layout:\r\n  SYNCABLE_PROPS.forEach(prop => {\r\n    const privateKey = '_private_' + prop;\r\n    Object.defineProperty(Text.prototype, prop, {\r\n      get() {\r\n        return this[privateKey]\r\n      },\r\n      set(value) {\r\n        if (value !== this[privateKey]) {\r\n          this[privateKey] = value;\r\n          this._needsSync = true;\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n\r\n  // Deprecation handler for `anchor` array:\r\n  let deprMsgShown = false;\r\n  Object.defineProperty(Text.prototype, 'anchor', {\r\n    get() {\r\n      return this._deprecated_anchor\r\n    },\r\n    set(val) {\r\n      this._deprecated_anchor = val;\r\n      if (!deprMsgShown) {\r\n        console.warn('TextMesh: `anchor` has been deprecated; use `anchorX` and `anchorY` instead.');\r\n        deprMsgShown = true;\r\n      }\r\n      if (Array.isArray(val)) {\r\n        this.anchorX = `${(+val[0] || 0) * 100}%`;\r\n        this.anchorY = `${(+val[1] || 0) * 100}%`;\r\n      } else {\r\n        this.anchorX = this.anchorY = 0;\r\n      }\r\n    }\r\n  });\r\n\r\n  return Text\r\n})();\n\n//=== Utility functions for dealing with carets and selection ranges ===//\r\n\r\n/**\r\n * @typedef {object} TextCaret\r\n * @property {number} x - x position of the caret\r\n * @property {number} y - y position of the caret's bottom\r\n * @property {number} height - height of the caret\r\n * @property {number} charIndex - the index in the original input string of this caret's target\r\n *   character; the caret will be for the position _before_ that character.\r\n */\r\n\r\n/**\r\n * Given a local x/y coordinate in the text block plane, find the nearest caret position.\r\n * @param {TroikaTextRenderInfo} textRenderInfo - a result object from TextBuilder#getTextRenderInfo\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {TextCaret | null}\r\n */\r\nfunction getCaretAtPoint(textRenderInfo, x, y) {\r\n  let closestCaret = null;\r\n  const {caretHeight} = textRenderInfo;\r\n  const caretsByRow = groupCaretsByRow(textRenderInfo);\r\n\r\n  // Find nearest row by y first\r\n  let closestRowY = Infinity;\r\n  caretsByRow.forEach((carets, rowY) => {\r\n    if (Math.abs(y - (rowY + caretHeight / 2)) < Math.abs(y - (closestRowY + caretHeight / 2))) {\r\n      closestRowY = rowY;\r\n    }\r\n  });\r\n\r\n  // Then find closest caret by x within that row\r\n  caretsByRow.get(closestRowY).forEach(caret => {\r\n    if (!closestCaret || Math.abs(x - caret.x) < Math.abs(x - closestCaret.x)) {\r\n      closestCaret = caret;\r\n    }\r\n  });\r\n  return closestCaret\r\n}\r\n\r\n\r\nconst _rectsCache = new WeakMap();\r\n\r\n/**\r\n * Given start and end character indexes, return a list of rectangles covering all the\r\n * characters within that selection.\r\n * @param {TroikaTextRenderInfo} textRenderInfo\r\n * @param {number} start - index of the first char in the selection\r\n * @param {number} end - index of the first char after the selection\r\n * @return {Array<{left, top, right, bottom}> | null}\r\n */\r\nfunction getSelectionRects(textRenderInfo, start, end) {\r\n  let rects;\r\n  if (textRenderInfo) {\r\n    // Check cache - textRenderInfo is frozen so it's safe to cache based on it\r\n    let prevResult = _rectsCache.get(textRenderInfo);\r\n    if (prevResult && prevResult.start === start && prevResult.end === end) {\r\n      return prevResult.rects\r\n    }\r\n\r\n    const {caretPositions, caretHeight, blockBounds} = textRenderInfo;\r\n\r\n    // Normalize\r\n    if (end < start) {\r\n      const s = start;\r\n      start = end;\r\n      end = s;\r\n    }\r\n    start = Math.max(start, 0);\r\n    end = Math.min(end, caretPositions.length + 1);\r\n\r\n    // Collect into one rect per row\r\n    let rows = new Map();\r\n    for (let i = start; i < end; i++) {\r\n      const x1 = caretPositions[i * 3];\r\n      const x2 = caretPositions[i * 3 + 1];\r\n      const y = caretPositions[i * 3 + 2];\r\n      let row = rows.get(y);\r\n      if (!row) {\r\n        row = {left: x1, right: x2, bottom: y, top: y + caretHeight};\r\n        rows.set(y, row);\r\n      } else {\r\n        row.left = Math.max(Math.min(row.left, x1), blockBounds[0]);\r\n        row.right = Math.min(Math.max(row.right, x2), blockBounds[2]);\r\n      }\r\n    }\r\n    rects = [];\r\n    rows.forEach(rect => {\r\n      rects.push(rect);\r\n    });\r\n\r\n    _rectsCache.set(textRenderInfo, {start, end, rects});\r\n  }\r\n  return rects\r\n}\r\n\r\nconst _caretsByRowCache = new WeakMap();\r\n\r\nfunction groupCaretsByRow(textRenderInfo) {\r\n  // textRenderInfo is frozen so it's safe to cache based on it\r\n  let caretsByRow = _caretsByRowCache.get(textRenderInfo);\r\n  if (!caretsByRow) {\r\n    const {caretPositions, caretHeight} = textRenderInfo;\r\n    caretsByRow = new Map();\r\n    for (let i = 0; i < caretPositions.length; i += 3) {\r\n      const rowY = caretPositions[i + 2];\r\n      let rowCarets = caretsByRow.get(rowY);\r\n      if (!rowCarets) {\r\n        caretsByRow.set(rowY, rowCarets = []);\r\n      }\r\n      rowCarets.push({\r\n        x: caretPositions[i],\r\n        y: rowY,\r\n        height: caretHeight,\r\n        charIndex: i / 3\r\n      });\r\n      // Add one more caret after the final char\r\n      if (i + 3 >= caretPositions.length) {\r\n        rowCarets.push({\r\n          x: caretPositions[i + 1],\r\n          y: rowY,\r\n          height: caretHeight,\r\n          charIndex: i / 3 + 1\r\n        });\r\n      }\r\n    }\r\n  }\r\n  _caretsByRowCache.set(textRenderInfo, caretsByRow);\r\n  return caretsByRow\r\n}\n\nexport { GlyphsGeometry, Text, configureTextBuilder, createTextDerivedMaterial, fontProcessorWorkerModule, getCaretAtPoint, getSelectionRects, preloadFont };\n","/**\n * @author Nikos M. / https://github.com/foo123/\n */\n\nimport {\n\tDataTextureLoader,\n\tFloatType,\n\tHalfFloatType,\n\tLinearEncoding,\n\tLinearFilter,\n\tNearestFilter,\n\tRGBEEncoding,\n\tRGBEFormat,\n\tRGBFormat,\n\tUnsignedByteType\n} from \"../../../build/three.module.js\";\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nvar RGBELoader = function ( manager ) {\n\n\tDataTextureLoader.call( this, manager );\n\n\tthis.type = UnsignedByteType;\n\n};\n\nRGBELoader.prototype = Object.assign( Object.create( DataTextureLoader.prototype ), {\n\n\tconstructor: RGBELoader,\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse: function ( buffer ) {\n\n\t\tvar\n\t\t\t/* return codes for rgbe routines */\n\t\t\t//RGBE_RETURN_SUCCESS = 0,\n\t\t\tRGBE_RETURN_FAILURE = - 1,\n\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: console.error( \"RGBELoader Read Error: \" + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_write_error: console.error( \"RGBELoader Write Error: \" + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_format_error: console.error( \"RGBELoader Bad File Format: \" + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: console.error( \"RGBELoader: Error: \" + ( msg || '' ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn RGBE_RETURN_FAILURE;\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = \"\\n\",\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tvar p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '', chunkSize = 128,\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) )\n\t\t\t\t;\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\t\t\t\tvar line, match,\n\n\t\t\t\t\t// regexes to parse header info fields\n\t\t\t\t\tmagic_token_re = /^#\\?(\\S+)$/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_read_error, \"no header found\" );\n\n\t\t\t\t}\n\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, \"bad initial token\" );\n\n\t\t\t\t}\n\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + \"\\n\";\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + \"\\n\";\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + \"\\n\";\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, \"missing format specifier\" );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, \"missing image size specifier\" );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tvar data_rgba, offset, pos, count, byteValue,\n\t\t\t\t\tscanline_buffer, ptr, ptr_end, i, l, off, isEncodedRun,\n\t\t\t\t\tscanline_width = w, num_scanlines = h, rgbeStart\n\t\t\t\t;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, \"wrong scanline width\" );\n\n\t\t\t\t}\n\n\t\t\t\tdata_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba.length ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_memory_error, \"unable to allocate buffer space\" );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0; pos = 0; ptr_end = 4 * scanline_width;\n\t\t\t\trgbeStart = new Uint8Array( 4 );\n\t\t\t\tscanline_buffer = new Uint8Array( ptr_end );\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, \"bad rgbe scanline format\" );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tptr = 0;\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tisEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, \"bad scanline data\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tbyteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tl = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\toff = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tvar RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\n\t\t};\n\n\t\tvar RGBEByteToRGBHalf = ( function () {\n\n\t\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t\tvar floatView = new Float32Array( 1 );\n\t\t\tvar int32View = new Int32Array( floatView.buffer );\n\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t\t * used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t\t * by James Tursa?s half-precision code. */\n\t\t\tfunction toHalf( val ) {\n\n\t\t\t\tfloatView[ 0 ] = val;\n\t\t\t\tvar x = int32View[ 0 ];\n\n\t\t\t\tvar bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\t\t\tvar m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\t\t\tvar e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t\t * half, return signed zero. */\n\t\t\t\tif ( e < 103 ) return bits;\n\n\t\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\t\t\tif ( e > 142 ) {\n\n\t\t\t\t\tbits |= 0x7c00;\n\t\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t\t * not Inf, so make sure we set one mantissa bit too. */\n\t\t\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\t\t\treturn bits;\n\n\t\t\t\t}\n\n\t\t\t\t/* If exponent underflows but not too much, return a denormal */\n\t\t\t\tif ( e < 113 ) {\n\n\t\t\t\t\tm |= 0x0800;\n\t\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t\t * to 1, which is OK. */\n\t\t\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\t\t\treturn bits;\n\n\t\t\t\t}\n\n\t\t\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t\t * the exponent, which is OK. */\n\t\t\t\tbits += m & 1;\n\t\t\t\treturn bits;\n\n\t\t\t}\n\n\t\t\treturn function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\t\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\t\tdestArray[ destOffset + 0 ] = toHalf( sourceArray[ sourceOffset + 0 ] * scale );\n\t\t\t\tdestArray[ destOffset + 1 ] = toHalf( sourceArray[ sourceOffset + 1 ] * scale );\n\t\t\t\tdestArray[ destOffset + 2 ] = toHalf( sourceArray[ sourceOffset + 2 ] * scale );\n\n\t\t\t};\n\n\t\t} )();\n\n\t\tvar byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tvar rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tif ( RGBE_RETURN_FAILURE !== rgbe_header_info ) {\n\n\t\t\tvar w = rgbe_header_info.width,\n\t\t\t\th = rgbe_header_info.height,\n\t\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\t\t\tif ( RGBE_RETURN_FAILURE !== image_rgba_data ) {\n\n\t\t\t\tswitch ( this.type ) {\n\n\t\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\t\tvar data = image_rgba_data;\n\t\t\t\t\t\tvar format = RGBEFormat; // handled as THREE.RGBAFormat in shaders\n\t\t\t\t\t\tvar type = UnsignedByteType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase FloatType:\n\n\t\t\t\t\t\tvar numElements = ( image_rgba_data.length / 4 ) * 3;\n\t\t\t\t\t\tvar floatArray = new Float32Array( numElements );\n\n\t\t\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar data = floatArray;\n\t\t\t\t\t\tvar format = RGBFormat;\n\t\t\t\t\t\tvar type = FloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\t\tvar numElements = ( image_rgba_data.length / 4 ) * 3;\n\t\t\t\t\t\tvar halfArray = new Uint16Array( numElements );\n\n\t\t\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar data = halfArray;\n\t\t\t\t\t\tvar format = RGBFormat;\n\t\t\t\t\t\tvar type = HalfFloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.error( 'THREE.RGBELoader: unsupported type: ', this.type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\twidth: w, height: h,\n\t\t\t\t\tdata: data,\n\t\t\t\t\theader: rgbe_header_info.string,\n\t\t\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\t\t\texposure: rgbe_header_info.exposure,\n\t\t\t\t\tformat: format,\n\t\t\t\t\ttype: type\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tsetDataType: function ( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\ttexture.encoding = RGBEEncoding;\n\t\t\t\t\ttexture.minFilter = NearestFilter;\n\t\t\t\t\ttexture.magFilter = NearestFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn DataTextureLoader.prototype.load.call( this, url, onLoadCallback, onProgress, onError );\n\n\t}\n\n} );\n\nexport { RGBELoader };\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\n\n\nvar CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\": { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\"\tgl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { CopyShader };\n","import {\n\tOrthographicCamera,\n\tPlaneBufferGeometry,\n\tMesh\n} from \"../../../build/three.module.js\";\n\nfunction Pass() {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n}\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\tdispose: function () {\n\n\t\t\tthis._mesh.geometry.dispose();\n\n\t\t},\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { Pass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport {\n\tShaderMaterial,\n\tUniformsUtils\n} from \"../../../build/three.module.js\";\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar ShaderPass = function ( shader, textureID ) {\n\n\tPass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.fsQuad = new Pass.FullScreenQuad( this.material );\n\n};\n\nShaderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n\nexport { ShaderPass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar MaskPass = function ( scene, camera ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nMaskPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: MaskPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar context = renderer.getContext();\n\t\tvar state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n} );\n\n\nvar ClearMaskPass = function () {\n\n\tPass.call( this );\n\n\tthis.needsSwap = false;\n\n};\n\nClearMaskPass.prototype = Object.create( Pass.prototype );\n\nObject.assign( ClearMaskPass.prototype, {\n\n\trender: function ( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n} );\n\nexport { MaskPass, ClearMaskPass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport {\n\tClock,\n\tLinearFilter,\n\tMesh,\n\tOrthographicCamera,\n\tPlaneBufferGeometry,\n\tRGBAFormat,\n\tVector2,\n\tWebGLRenderTarget\n} from \"../../../build/three.module.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nimport { ShaderPass } from \"../postprocessing/ShaderPass.js\";\nimport { MaskPass } from \"../postprocessing/MaskPass.js\";\nimport { ClearMaskPass } from \"../postprocessing/MaskPass.js\";\n\nvar EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: LinearFilter,\n\t\t\tmagFilter: LinearFilter,\n\t\t\tformat: RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getSize( new Vector2() );\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\t\tthis._width = size.width;\n\t\tthis._height = size.height;\n\n\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t} else {\n\n\t\tthis._pixelRatio = 1;\n\t\tthis._width = renderTarget.width;\n\t\tthis._height = renderTarget.height;\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.renderToScreen = true;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on CopyShader' );\n\n\t}\n\n\tif ( ShaderPass === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on ShaderPass' );\n\n\t}\n\n\tthis.copyPass = new ShaderPass( CopyShader );\n\n\tthis.clock = new Clock();\n\n};\n\nObject.assign( EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t},\n\n\tisLastEnabledPass: function ( passIndex ) {\n\n\t\tfor ( var i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\trender: function ( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.getContext();\n\t\t\t\t\tvar stencil = this.renderer.state.buffers.stencil;\n\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getSize( new Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tvar effectiveWidth = this._width * this._pixelRatio;\n\t\tvar effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t},\n\n\tsetPixelRatio: function ( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n} );\n\n\nvar Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n};\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\tdispose: function () {\n\n\t\t\tthis._mesh.geometry.dispose();\n\n\t\t},\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { EffectComposer, Pass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tvar oldClearColor, oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\nexport { RenderPass };\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * Gamma Correction Shader\n * http://en.wikipedia.org/wiki/gamma_correction\n */\n\n\n\nvar GammaCorrectionShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 tex = texture2D( tDiffuse, vUv );\",\n\n\t\t\"\tgl_FragColor = LinearTosRGB( tex );\", // optional: LinearToGamma( tex, float( GAMMA_FACTOR ) );\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { GammaCorrectionShader };\n","/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */var mod={}, l=void 0,aa=mod;function r(c,d){var a=c.split(\".\"),b=aa;!(a[0]in b)&&b.execScript&&b.execScript(\"var \"+a[0]);for(var e;a.length&&(e=a.shift());)!a.length&&d!==l?b[e]=d:b=b[e]?b[e]:b[e]={}};var t=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function v(c){var d=c.length,a=0,b=Number.POSITIVE_INFINITY,e,f,g,h,k,m,n,p,s,x;for(p=0;p<d;++p)c[p]>a&&(a=c[p]),c[p]<b&&(b=c[p]);e=1<<a;f=new (t?Uint32Array:Array)(e);g=1;h=0;for(k=2;g<=a;){for(p=0;p<d;++p)if(c[p]===g){m=0;n=h;for(s=0;s<g;++s)m=m<<1|n&1,n>>=1;x=g<<16|p;for(s=m;s<e;s+=k)f[s]=x;++h}++g;h<<=1;k<<=1}return[f,a,b]};function w(c,d){this.g=[];this.h=32768;this.d=this.f=this.a=this.l=0;this.input=t?new Uint8Array(c):c;this.m=!1;this.i=y;this.r=!1;if(d||!(d={}))d.index&&(this.a=d.index),d.bufferSize&&(this.h=d.bufferSize),d.bufferType&&(this.i=d.bufferType),d.resize&&(this.r=d.resize);switch(this.i){case A:this.b=32768;this.c=new (t?Uint8Array:Array)(32768+this.h+258);break;case y:this.b=0;this.c=new (t?Uint8Array:Array)(this.h);this.e=this.z;this.n=this.v;this.j=this.w;break;default:throw Error(\"invalid inflate mode\");\n}}var A=0,y=1,B={t:A,s:y};\nw.prototype.k=function(){for(;!this.m;){var c=C(this,3);c&1&&(this.m=!0);c>>>=1;switch(c){case 0:var d=this.input,a=this.a,b=this.c,e=this.b,f=d.length,g=l,h=l,k=b.length,m=l;this.d=this.f=0;if(a+1>=f)throw Error(\"invalid uncompressed block header: LEN\");g=d[a++]|d[a++]<<8;if(a+1>=f)throw Error(\"invalid uncompressed block header: NLEN\");h=d[a++]|d[a++]<<8;if(g===~h)throw Error(\"invalid uncompressed block header: length verify\");if(a+g>d.length)throw Error(\"input buffer is broken\");switch(this.i){case A:for(;e+\ng>b.length;){m=k-e;g-=m;if(t)b.set(d.subarray(a,a+m),e),e+=m,a+=m;else for(;m--;)b[e++]=d[a++];this.b=e;b=this.e();e=this.b}break;case y:for(;e+g>b.length;)b=this.e({p:2});break;default:throw Error(\"invalid inflate mode\");}if(t)b.set(d.subarray(a,a+g),e),e+=g,a+=g;else for(;g--;)b[e++]=d[a++];this.a=a;this.b=e;this.c=b;break;case 1:this.j(ba,ca);break;case 2:for(var n=C(this,5)+257,p=C(this,5)+1,s=C(this,4)+4,x=new (t?Uint8Array:Array)(D.length),S=l,T=l,U=l,u=l,M=l,F=l,z=l,q=l,V=l,q=0;q<s;++q)x[D[q]]=\nC(this,3);if(!t){q=s;for(s=x.length;q<s;++q)x[D[q]]=0}S=v(x);u=new (t?Uint8Array:Array)(n+p);q=0;for(V=n+p;q<V;)switch(M=E(this,S),M){case 16:for(z=3+C(this,2);z--;)u[q++]=F;break;case 17:for(z=3+C(this,3);z--;)u[q++]=0;F=0;break;case 18:for(z=11+C(this,7);z--;)u[q++]=0;F=0;break;default:F=u[q++]=M}T=t?v(u.subarray(0,n)):v(u.slice(0,n));U=t?v(u.subarray(n)):v(u.slice(n));this.j(T,U);break;default:throw Error(\"unknown BTYPE: \"+c);}}return this.n()};\nvar G=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],D=t?new Uint16Array(G):G,H=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],I=t?new Uint16Array(H):H,J=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],K=t?new Uint8Array(J):J,L=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],da=t?new Uint16Array(L):L,ea=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,\n13,13],N=t?new Uint8Array(ea):ea,O=new (t?Uint8Array:Array)(288),P,fa;P=0;for(fa=O.length;P<fa;++P)O[P]=143>=P?8:255>=P?9:279>=P?7:8;var ba=v(O),Q=new (t?Uint8Array:Array)(30),R,ga;R=0;for(ga=Q.length;R<ga;++R)Q[R]=5;var ca=v(Q);function C(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h;b<d;){if(f>=g)throw Error(\"input buffer is broken\");a|=e[f++]<<b;b+=8}h=a&(1<<d)-1;c.f=a>>>d;c.d=b-d;c.a=f;return h}\nfunction E(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h=d[0],k=d[1],m,n;b<k&&!(f>=g);)a|=e[f++]<<b,b+=8;m=h[a&(1<<k)-1];n=m>>>16;if(n>b)throw Error(\"invalid code length: \"+n);c.f=a>>n;c.d=b-n;c.a=f;return m&65535}\nw.prototype.j=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length-258,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(this.b=b,a=this.e(),b=this.b),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b>=e&&(this.b=b,a=this.e(),b=this.b);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.w=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(a=this.e(),e=a.length),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b+k>e&&(a=this.e(),e=a.length);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.e=function(){var c=new (t?Uint8Array:Array)(this.b-32768),d=this.b-32768,a,b,e=this.c;if(t)c.set(e.subarray(32768,c.length));else{a=0;for(b=c.length;a<b;++a)c[a]=e[a+32768]}this.g.push(c);this.l+=c.length;if(t)e.set(e.subarray(d,d+32768));else for(a=0;32768>a;++a)e[a]=e[d+a];this.b=32768;return e};\nw.prototype.z=function(c){var d,a=this.input.length/this.a+1|0,b,e,f,g=this.input,h=this.c;c&&(\"number\"===typeof c.p&&(a=c.p),\"number\"===typeof c.u&&(a+=c.u));2>a?(b=(g.length-this.a)/this.o[2],f=258*(b/2)|0,e=f<h.length?h.length+f:h.length<<1):e=h.length*a;t?(d=new Uint8Array(e),d.set(h)):d=h;return this.c=d};\nw.prototype.n=function(){var c=0,d=this.c,a=this.g,b,e=new (t?Uint8Array:Array)(this.l+(this.b-32768)),f,g,h,k;if(0===a.length)return t?this.c.subarray(32768,this.b):this.c.slice(32768,this.b);f=0;for(g=a.length;f<g;++f){b=a[f];h=0;for(k=b.length;h<k;++h)e[c++]=b[h]}f=32768;for(g=this.b;f<g;++f)e[c++]=d[f];this.g=[];return this.buffer=e};\nw.prototype.v=function(){var c,d=this.b;t?this.r?(c=new Uint8Array(d),c.set(this.c.subarray(0,d))):c=this.c.subarray(0,d):(this.c.length>d&&(this.c.length=d),c=this.c);return this.buffer=c};function W(c,d){var a,b;this.input=c;this.a=0;if(d||!(d={}))d.index&&(this.a=d.index),d.verify&&(this.A=d.verify);a=c[this.a++];b=c[this.a++];switch(a&15){case ha:this.method=ha;break;default:throw Error(\"unsupported compression method\");}if(0!==((a<<8)+b)%31)throw Error(\"invalid fcheck flag:\"+((a<<8)+b)%31);if(b&32)throw Error(\"fdict flag is not supported\");this.q=new w(c,{index:this.a,bufferSize:d.bufferSize,bufferType:d.bufferType,resize:d.resize})}\nW.prototype.k=function(){var c=this.input,d,a;d=this.q.k();this.a=this.q.a;if(this.A){a=(c[this.a++]<<24|c[this.a++]<<16|c[this.a++]<<8|c[this.a++])>>>0;var b=d;if(\"string\"===typeof b){var e=b.split(\"\"),f,g;f=0;for(g=e.length;f<g;f++)e[f]=(e[f].charCodeAt(0)&255)>>>0;b=e}for(var h=1,k=0,m=b.length,n,p=0;0<m;){n=1024<m?1024:m;m-=n;do h+=b[p++],k+=h;while(--n);h%=65521;k%=65521}if(a!==(k<<16|h)>>>0)throw Error(\"invalid adler-32 checksum\");}return d};var ha=8;r(\"Zlib.Inflate\",W);r(\"Zlib.Inflate.prototype.decompress\",W.prototype.k);var X={ADAPTIVE:B.s,BLOCK:B.t},Y,Z,$,ia;if(Object.keys)Y=Object.keys(X);else for(Z in Y=[],$=0,X)Y[$++]=Z;$=0;for(ia=Y.length;$<ia;++$)Z=Y[$],r(\"Zlib.Inflate.BufferType.\"+Z,X[Z]);\nvar Zlib=mod.Zlib;\nexport { Zlib }","/**\n * @author renej\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n *\n **/\n\nimport {\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\nvar NURBSUtils = {\n\n\t/*\n\tFinds knot vector span.\n\n\tp : degree\n\tu : parametric value\n\tU : knot vector\n\n\treturns the span\n\t*/\n\tfindSpan: function ( p, u, U ) {\n\n\t\tvar n = U.length - p - 1;\n\n\t\tif ( u >= U[ n ] ) {\n\n\t\t\treturn n - 1;\n\n\t\t}\n\n\t\tif ( u <= U[ p ] ) {\n\n\t\t\treturn p;\n\n\t\t}\n\n\t\tvar low = p;\n\t\tvar high = n;\n\t\tvar mid = Math.floor( ( low + high ) / 2 );\n\n\t\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\t\tif ( u < U[ mid ] ) {\n\n\t\t\t\thigh = mid;\n\n\t\t\t} else {\n\n\t\t\t\tlow = mid;\n\n\t\t\t}\n\n\t\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t\t}\n\n\t\treturn mid;\n\n\t},\n\n\n\t/*\n\tCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\n\tspan : span in which u lies\n\tu    : parametric point\n\tp    : degree\n\tU    : knot vector\n\n\treturns array[p+1] with basis functions values.\n\t*/\n\tcalcBasisFunctions: function ( span, u, p, U ) {\n\n\t\tvar N = [];\n\t\tvar left = [];\n\t\tvar right = [];\n\t\tN[ 0 ] = 1.0;\n\n\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\t\tright[ j ] = U[ span + j ] - u;\n\n\t\t\tvar saved = 0.0;\n\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\n\n\t\t\t\tvar rv = right[ r + 1 ];\n\t\t\t\tvar lv = left[ j - r ];\n\t\t\t\tvar temp = N[ r ] / ( rv + lv );\n\t\t\t\tN[ r ] = saved + rv * temp;\n\t\t\t\tsaved = lv * temp;\n\n\t\t\t }\n\n\t\t\t N[ j ] = saved;\n\n\t\t }\n\n\t\t return N;\n\n\t},\n\n\n\t/*\n\tCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\n\tp : degree of B-Spline\n\tU : knot vector\n\tP : control points (x, y, z, w)\n\tu : parametric point\n\n\treturns point for given u\n\t*/\n\tcalcBSplinePoint: function ( p, U, P, u ) {\n\n\t\tvar span = this.findSpan( p, u, U );\n\t\tvar N = this.calcBasisFunctions( span, u, p, U );\n\t\tvar C = new Vector4( 0, 0, 0, 0 );\n\n\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\tvar point = P[ span - p + j ];\n\t\t\tvar Nj = N[ j ];\n\t\t\tvar wNj = point.w * Nj;\n\t\t\tC.x += point.x * wNj;\n\t\t\tC.y += point.y * wNj;\n\t\t\tC.z += point.z * wNj;\n\t\t\tC.w += point.w * Nj;\n\n\t\t}\n\n\t\treturn C;\n\n\t},\n\n\n\t/*\n\tCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\n\tspan : span in which u lies\n\tu    : parametric point\n\tp    : degree\n\tn    : number of derivatives to calculate\n\tU    : knot vector\n\n\treturns array[n+1][p+1] with basis functions derivatives\n\t*/\n\tcalcBasisFunctionDerivatives: function ( span, u, p, n, U ) {\n\n\t\tvar zeroArr = [];\n\t\tfor ( var i = 0; i <= p; ++ i )\n\t\t\tzeroArr[ i ] = 0.0;\n\n\t\tvar ders = [];\n\t\tfor ( var i = 0; i <= n; ++ i )\n\t\t\tders[ i ] = zeroArr.slice( 0 );\n\n\t\tvar ndu = [];\n\t\tfor ( var i = 0; i <= p; ++ i )\n\t\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\t\tndu[ 0 ][ 0 ] = 1.0;\n\n\t\tvar left = zeroArr.slice( 0 );\n\t\tvar right = zeroArr.slice( 0 );\n\n\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\t\tright[ j ] = U[ span + j ] - u;\n\n\t\t\tvar saved = 0.0;\n\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\n\n\t\t\t\tvar rv = right[ r + 1 ];\n\t\t\t\tvar lv = left[ j - r ];\n\t\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\t\tvar temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\t\tsaved = lv * temp;\n\n\t\t\t}\n\n\t\t\tndu[ j ][ j ] = saved;\n\n\t\t}\n\n\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t\t}\n\n\t\tfor ( var r = 0; r <= p; ++ r ) {\n\n\t\t\tvar s1 = 0;\n\t\t\tvar s2 = 1;\n\n\t\t\tvar a = [];\n\t\t\tfor ( var i = 0; i <= p; ++ i ) {\n\n\t\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t\t}\n\n\t\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\t\tfor ( var k = 1; k <= n; ++ k ) {\n\n\t\t\t\tvar d = 0.0;\n\t\t\t\tvar rk = r - k;\n\t\t\t\tvar pk = p - k;\n\n\t\t\t\tif ( r >= k ) {\n\n\t\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tvar j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\t\tvar j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\t\tfor ( var j = j1; j <= j2; ++ j ) {\n\n\t\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( r <= pk ) {\n\n\t\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tders[ k ][ r ] = d;\n\n\t\t\t\tvar j = s1;\n\t\t\t\ts1 = s2;\n\t\t\t\ts2 = j;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar r = p;\n\n\t\tfor ( var k = 1; k <= n; ++ k ) {\n\n\t\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\t\tders[ k ][ j ] *= r;\n\n\t\t\t}\n\n\t\t\tr *= p - k;\n\n\t\t}\n\n\t\treturn ders;\n\n\t},\n\n\n\t/*\n\t\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\t\tp  : degree\n\t\tU  : knot vector\n\t\tP  : control points\n\t\tu  : Parametric points\n\t\tnd : number of derivatives\n\n\t\treturns array[d+1] with derivatives\n\t\t*/\n\tcalcBSplineDerivatives: function ( p, U, P, u, nd ) {\n\n\t\tvar du = nd < p ? nd : p;\n\t\tvar CK = [];\n\t\tvar span = this.findSpan( p, u, U );\n\t\tvar nders = this.calcBasisFunctionDerivatives( span, u, p, du, U );\n\t\tvar Pw = [];\n\n\t\tfor ( var i = 0; i < P.length; ++ i ) {\n\n\t\t\tvar point = P[ i ].clone();\n\t\t\tvar w = point.w;\n\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\n\t\t\tPw[ i ] = point;\n\n\t\t}\n\n\t\tfor ( var k = 0; k <= du; ++ k ) {\n\n\t\t\tvar point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t\t}\n\n\t\t\tCK[ k ] = point;\n\n\t\t}\n\n\t\tfor ( var k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn CK;\n\n\t},\n\n\n\t/*\n\tCalculate \"K over I\"\n\n\treturns k!/(i!(k-i)!)\n\t*/\n\tcalcKoverI: function ( k, i ) {\n\n\t\tvar nom = 1;\n\n\t\tfor ( var j = 2; j <= k; ++ j ) {\n\n\t\t\tnom *= j;\n\n\t\t}\n\n\t\tvar denom = 1;\n\n\t\tfor ( var j = 2; j <= i; ++ j ) {\n\n\t\t\tdenom *= j;\n\n\t\t}\n\n\t\tfor ( var j = 2; j <= k - i; ++ j ) {\n\n\t\t\tdenom *= j;\n\n\t\t}\n\n\t\treturn nom / denom;\n\n\t},\n\n\n\t/*\n\tCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\n\tPders : result of function calcBSplineDerivatives\n\n\treturns array with derivatives for rational curve.\n\t*/\n\tcalcRationalCurveDerivatives: function ( Pders ) {\n\n\t\tvar nd = Pders.length;\n\t\tvar Aders = [];\n\t\tvar wders = [];\n\n\t\tfor ( var i = 0; i < nd; ++ i ) {\n\n\t\t\tvar point = Pders[ i ];\n\t\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\t\twders[ i ] = point.w;\n\n\t\t}\n\n\t\tvar CK = [];\n\n\t\tfor ( var k = 0; k < nd; ++ k ) {\n\n\t\t\tvar v = Aders[ k ].clone();\n\n\t\t\tfor ( var i = 1; i <= k; ++ i ) {\n\n\t\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( this.calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t\t}\n\n\t\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t\t}\n\n\t\treturn CK;\n\n\t},\n\n\n\t/*\n\tCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points in homogeneous space\n\tu  : parametric points\n\tnd : number of derivatives\n\n\treturns array with derivatives.\n\t*/\n\tcalcNURBSDerivatives: function ( p, U, P, u, nd ) {\n\n\t\tvar Pders = this.calcBSplineDerivatives( p, U, P, u, nd );\n\t\treturn this.calcRationalCurveDerivatives( Pders );\n\n\t},\n\n\n\t/*\n\tCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\n\tp1, p2 : degrees of B-Spline surface\n\tU1, U2 : knot vectors\n\tP      : control points (x, y, z, w)\n\tu, v   : parametric values\n\n\treturns point for given (u, v)\n\t*/\n\tcalcSurfacePoint: function ( p, q, U, V, P, u, v, target ) {\n\n\t\tvar uspan = this.findSpan( p, u, U );\n\t\tvar vspan = this.findSpan( q, v, V );\n\t\tvar Nu = this.calcBasisFunctions( uspan, u, p, U );\n\t\tvar Nv = this.calcBasisFunctions( vspan, v, q, V );\n\t\tvar temp = [];\n\n\t\tfor ( var l = 0; l <= q; ++ l ) {\n\n\t\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\t\tfor ( var k = 0; k <= p; ++ k ) {\n\n\t\t\t\tvar point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\t\tvar w = point.w;\n\t\t\t\tpoint.x *= w;\n\t\t\t\tpoint.y *= w;\n\t\t\t\tpoint.z *= w;\n\t\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar Sw = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( var l = 0; l <= q; ++ l ) {\n\n\t\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t\t}\n\n\t\tSw.divideScalar( Sw.w );\n\t\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n\t}\n\n};\n\nexport { NURBSUtils };\n","/**\n * @author renej\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nimport {\n\tCurve,\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\nimport { NURBSUtils } from \"../curves/NURBSUtils.js\";\n\n\n/**************************************************************\n *\tNURBS curve\n **************************************************************/\n\nvar NURBSCurve = function ( degree, knots /* array of reals */, controlPoints /* array of Vector(2|3|4) */, startKnot /* index in knots */, endKnot /* index in knots */ ) {\n\n\tCurve.call( this );\n\n\tthis.degree = degree;\n\tthis.knots = knots;\n\tthis.controlPoints = [];\n\t// Used by periodic NURBS to remove hidden spans\n\tthis.startKnot = startKnot || 0;\n\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\tfor ( var i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t// ensure Vector4 for control points\n\t\tvar point = controlPoints[ i ];\n\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t}\n\n};\n\n\nNURBSCurve.prototype = Object.create( Curve.prototype );\nNURBSCurve.prototype.constructor = NURBSCurve;\n\n\nNURBSCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t// following results in (wx, wy, wz, w) homogeneous point\n\tvar hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\tif ( hpoint.w != 1.0 ) {\n\n\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\thpoint.divideScalar( hpoint.w );\n\n\t}\n\n\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n};\n\n\nNURBSCurve.prototype.getTangent = function ( t, optionalTarget ) {\n\n\tvar tangent = optionalTarget || new Vector3();\n\n\tvar u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\tvar ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\ttangent.copy( ders[ 1 ] ).normalize();\n\n\treturn tangent;\n\n};\n\nexport { NURBSCurve };\n","/**\n * @author Kyle-Larson https://github.com/Kyle-Larson\n * @author Takahiro https://github.com/takahirox\n * @author Lewy Blue https://github.com/looeee\n *\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\n * \thttp://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * \tBinary format specification:\n *\t\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\nimport {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack,\n\tsRGBEncoding\n} from \"../../../build/three.module.js\";\nimport { Zlib } from \"../libs/inflate.module.min.js\";\nimport { NURBSCurve } from \"../curves/NURBSCurve.js\";\n\n\nvar FBXLoader = ( function () {\n\n\tvar fbxTree;\n\tvar connections;\n\tvar sceneGraph;\n\n\tfunction FBXLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFBXLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FBXLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( buffer, path ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( FBXBuffer, path ) {\n\n\t\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t\t}\n\n\t\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t\t}\n\n\t\t\t// console.log( fbxTree );\n\n\t\t\tvar textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t\t}\n\n\t} );\n\n\t// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\n\tfunction FBXTreeParser( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tFBXTreeParser.prototype = {\n\n\t\tconstructor: FBXTreeParser,\n\n\t\tparse: function () {\n\n\t\t\tconnections = this.parseConnections();\n\n\t\t\tvar images = this.parseImages();\n\t\t\tvar textures = this.parseTextures( images );\n\t\t\tvar materials = this.parseMaterials( textures );\n\t\t\tvar deformers = this.parseDeformers();\n\t\t\tvar geometryMap = new GeometryParser().parse( deformers );\n\n\t\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\t\treturn sceneGraph;\n\n\t\t},\n\n\t\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t\t// and details the connection type\n\t\tparseConnections: function () {\n\n\t\t\tvar connectionMap = new Map();\n\n\t\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\t\tvar rawConnections = fbxTree.Connections.connections;\n\n\t\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\t\tvar fromID = rawConnection[ 0 ];\n\t\t\t\t\tvar toID = rawConnection[ 1 ];\n\t\t\t\t\tvar relationship = rawConnection[ 2 ];\n\n\t\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn connectionMap;\n\n\t\t},\n\n\t\t// Parse FBXTree.Objects.Video for embedded image data\n\t\t// These images are connected to textures in FBXTree.Objects.Textures\n\t\t// via FBXTree.Connections.\n\t\tparseImages: function () {\n\n\t\t\tvar images = {};\n\t\t\tvar blobs = {};\n\n\t\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\t\tvar videoNodes = fbxTree.Objects.Video;\n\n\t\t\t\tfor ( var nodeID in videoNodes ) {\n\n\t\t\t\t\tvar videoNode = videoNodes[ nodeID ];\n\n\t\t\t\t\tvar id = parseInt( nodeID );\n\n\t\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\t\tvar arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\t\tvar base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\t\tvar image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var id in images ) {\n\n\t\t\t\tvar filename = images[ id ];\n\n\t\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\t// Parse embedded image data in FBXTree.Video.Content\n\t\tparseImage: function ( videoNode ) {\n\n\t\t\tvar content = videoNode.Content;\n\t\t\tvar fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\t\tvar extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\t\tvar type;\n\n\t\t\tswitch ( extension ) {\n\n\t\t\t\tcase 'bmp':\n\n\t\t\t\t\ttype = 'image/bmp';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'jpg':\n\t\t\t\tcase 'jpeg':\n\n\t\t\t\t\ttype = 'image/jpeg';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'png':\n\n\t\t\t\t\ttype = 'image/png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tif':\n\n\t\t\t\t\ttype = 'image/tiff';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tga':\n\n\t\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttype = 'image/tga';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t\t} else { // Binary Format\n\n\t\t\t\tvar array = new Uint8Array( content );\n\t\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Texture\n\t\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t\t// to images in FBXTree.Objects.Video\n\t\tparseTextures: function ( images ) {\n\n\t\t\tvar textureMap = new Map();\n\n\t\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\t\tvar textureNodes = fbxTree.Objects.Texture;\n\t\t\t\tfor ( var nodeID in textureNodes ) {\n\n\t\t\t\t\tvar texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textureMap;\n\n\t\t},\n\n\t\t// Parse individual node in FBXTree.Objects.Texture\n\t\tparseTexture: function ( textureNode, images ) {\n\n\t\t\tvar texture = this.loadTexture( textureNode, images );\n\n\t\t\ttexture.ID = textureNode.id;\n\n\t\t\ttexture.name = textureNode.attrName;\n\n\t\t\tvar wrapModeU = textureNode.WrapModeU;\n\t\t\tvar wrapModeV = textureNode.WrapModeV;\n\n\t\t\tvar valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\t\tvar valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t\t// 0: repeat(default), 1: clamp\n\n\t\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\t\tvar values = textureNode.Scaling.value;\n\n\t\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\t\tloadTexture: function ( textureNode, images ) {\n\n\t\t\tvar fileName;\n\n\t\t\tvar currentPath = this.textureLoader.path;\n\n\t\t\tvar children = connections.get( textureNode.id ).children;\n\n\t\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar texture;\n\n\t\t\tvar extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\t\tif ( extension === 'tga' ) {\n\n\t\t\t\tvar loader = this.manager.getHandler( '.tga' );\n\n\t\t\t\tif ( loader === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t\t}\n\n\t\t\t} else if ( extension === 'psd' ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t\t}\n\n\t\t\tthis.textureLoader.setPath( currentPath );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Material\n\t\tparseMaterials: function ( textureMap ) {\n\n\t\t\tvar materialMap = new Map();\n\n\t\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\t\tvar materialNodes = fbxTree.Objects.Material;\n\n\t\t\t\tfor ( var nodeID in materialNodes ) {\n\n\t\t\t\t\tvar material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materialMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Material\n\t\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t\t// FBX format currently only supports Lambert and Phong shading models\n\t\tparseMaterial: function ( materialNode, textureMap ) {\n\n\t\t\tvar ID = materialNode.id;\n\t\t\tvar name = materialNode.attrName;\n\t\t\tvar type = materialNode.ShadingModel;\n\n\t\t\t// Case where FBX wraps shading model in property object.\n\t\t\tif ( typeof type === 'object' ) {\n\n\t\t\t\ttype = type.value;\n\n\t\t\t}\n\n\t\t\t// Ignore unused materials which don't have any connections.\n\t\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\t\tvar parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\t\tvar material;\n\n\t\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.setValues( parameters );\n\t\t\tmaterial.name = name;\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\t// Parse FBX material and return parameters suitable for a three.js material\n\t\t// Also parse the texture map and return any textures associated with the material\n\t\tparseParameters: function ( materialNode, textureMap, ID ) {\n\n\t\t\tvar parameters = {};\n\n\t\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Diffuse ) {\n\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value );\n\n\t\t\t} else if ( materialNode.DiffuseColor && materialNode.DiffuseColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Emissive ) {\n\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value );\n\n\t\t\t} else if ( materialNode.EmissiveColor && materialNode.EmissiveColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Opacity ) {\n\n\t\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t\t}\n\n\t\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\t\tparameters.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Shininess ) {\n\n\t\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Specular ) {\n\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value );\n\n\t\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value );\n\n\t\t\t}\n\n\t\t\tvar scope = this;\n\t\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\t\tvar type = child.relationship;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'Bump':\n\t\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DiffuseColor':\n\t\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.map.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.emissiveMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'NormalMap':\n\t\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.specularMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TransparentColor':\n\t\t\t\t\tcase 'TransparencyFactor':\n\t\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientColor':\n\t\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn parameters;\n\n\t\t},\n\n\t\t// get a texture from the textureMap for use by a material.\n\t\tgetTexture: function ( textureMap, id ) {\n\n\t\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t\t}\n\n\t\t\treturn textureMap.get( id );\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Deformer\n\t\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\t\tparseDeformers: function () {\n\n\t\t\tvar skeletons = {};\n\t\t\tvar morphTargets = {};\n\n\t\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\t\tvar DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\t\tfor ( var nodeID in DeformerNodes ) {\n\n\t\t\t\t\tvar deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\t\tvar skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\t\tvar morphTarget = {\n\t\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\tskeletons: skeletons,\n\t\t\t\tmorphTargets: morphTargets,\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse single nodes in FBXTree.Objects.Deformer\n\t\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t\t// Each skin node represents a skeleton and each cluster node represents a bone\n\t\tparseSkeleton: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawBones = [];\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar boneNode = deformerNodes[ child.ID ];\n\n\t\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\t\tvar rawBone = {\n\n\t\t\t\t\tID: child.ID,\n\t\t\t\t\tindices: [],\n\t\t\t\t\tweights: [],\n\t\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t\t};\n\n\t\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t\t}\n\n\t\t\t\trawBones.push( rawBone );\n\n\t\t\t} );\n\n\t\t\treturn {\n\n\t\t\t\trawBones: rawBones,\n\t\t\t\tbones: []\n\n\t\t\t};\n\n\t\t},\n\n\t\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\t\tparseMorphTargets: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawMorphTargets = [];\n\n\t\t\tfor ( var i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\t\tvar child = relationships.children[ i ];\n\n\t\t\t\tvar morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\t\tvar rawMorphTarget = {\n\n\t\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\t\tid: morphTargetNode.id,\n\t\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t\t};\n\n\t\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t\t}\n\n\t\t\treturn rawMorphTargets;\n\n\t\t},\n\n\t\t// create the main Group() to be returned by the loader\n\t\tparseScene: function ( deformers, geometryMap, materialMap ) {\n\n\t\t\tsceneGraph = new Group();\n\n\t\t\tvar modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tvar scope = this;\n\t\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\t\tvar modelNode = modelNodes[ model.ID ];\n\t\t\t\tscope.setLookAtProperties( model, modelNode );\n\n\t\t\t\tvar parentConnections = connections.get( model.ID ).parents;\n\n\t\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\t\tvar parent = modelMap.get( connection.ID );\n\t\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( model.parent === null ) {\n\n\t\t\t\t\tsceneGraph.add( model );\n\n\t\t\t\t}\n\n\n\t\t\t} );\n\n\t\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\t\tthis.createAmbientLight();\n\n\t\t\tthis.setupMorphMaterials();\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\t\tif ( node.parent ) node.userData.transformData.parentMatrixWorld = node.parent.matrix;\n\n\t\t\t\t\tvar transform = generateTransform( node.userData.transformData );\n\n\t\t\t\t\tnode.applyMatrix4( transform );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tvar animations = new AnimationParser().parse();\n\n\t\t\t// if all the models where already combined in a single group, just return that\n\t\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t\t}\n\n\t\t\tsceneGraph.animations = animations;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.Model\n\t\tparseModels: function ( skeletons, geometryMap, materialMap ) {\n\n\t\t\tvar modelMap = new Map();\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tfor ( var nodeID in modelNodes ) {\n\n\t\t\t\tvar id = parseInt( nodeID );\n\t\t\t\tvar node = modelNodes[ nodeID ];\n\t\t\t\tvar relationships = connections.get( id );\n\n\t\t\t\tvar model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\t\tif ( ! model ) {\n\n\t\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Null':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\n\t\t\t\t\tmodel.ID = id;\n\n\t\t\t\t}\n\n\t\t\t\tthis.getTransformData( model, node );\n\t\t\t\tmodelMap.set( id, model );\n\n\t\t\t}\n\n\t\t\treturn modelMap;\n\n\t\t},\n\n\t\tbuildSkeleton: function ( relationships, skeletons, id, name ) {\n\n\t\t\tvar bone = null;\n\n\t\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\t\tvar subBone = bone;\n\t\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn bone;\n\n\t\t},\n\n\t\t// create a PerspectiveCamera or OrthographicCamera\n\t\tcreateCamera: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar cameraAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tcameraAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type = 0;\n\t\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\t\ttype = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar nearClippingPlane = 1;\n\t\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t\t}\n\n\t\t\t\tvar farClippingPlane = 1000;\n\t\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t\t}\n\n\n\t\t\t\tvar width = window.innerWidth;\n\t\t\t\tvar height = window.innerHeight;\n\n\t\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar aspect = width / height;\n\n\t\t\t\tvar fov = 45;\n\t\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Perspective\n\t\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\t// Create a DirectionalLight, PointLight or SpotLight\n\t\tcreateLight: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar lightAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tlightAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( lightAttribute === undefined ) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type;\n\n\t\t\t\t// LightType can be undefined for Point lights\n\t\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\t\ttype = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar color = 0xffffff;\n\n\t\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value );\n\n\t\t\t\t}\n\n\t\t\t\tvar intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t\t// light disabled\n\t\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\t\tintensity = 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar distance = 0;\n\t\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\t\tdistance = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\t\tvar decay = 1;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Point\n\t\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Directional\n\t\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2: // Spot\n\t\t\t\t\t\tvar angle = Math.PI / 3;\n\n\t\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar penumbra = 0;\n\t\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\t\tmodel.castShadow = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateMesh: function ( relationships, geometryMap, materialMap ) {\n\n\t\t\tvar model;\n\t\t\tvar geometry = null;\n\t\t\tvar material = null;\n\t\t\tvar materials = [];\n\n\t\t\t// get geometry and materials(s) from connections\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( materials.length > 1 ) {\n\n\t\t\t\tmaterial = materials;\n\n\t\t\t} else if ( materials.length > 0 ) {\n\n\t\t\t\tmaterial = materials[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new MeshPhongMaterial( { color: 0xcccccc } );\n\t\t\t\tmaterials.push( material );\n\n\t\t\t}\n\n\t\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t} );\n\n\t\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\t\tmodel.normalizeSkinWeights();\n\n\t\t\t} else {\n\n\t\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateCurve: function ( relationships, geometryMap ) {\n\n\t\t\tvar geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\t\treturn geo;\n\n\t\t\t}, null );\n\n\t\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\t\tvar material = new LineBasicMaterial( { color: 0x3300ff, linewidth: 1 } );\n\t\t\treturn new Line( geometry, material );\n\n\t\t},\n\n\t\t// parse the model node for transform data\n\t\tgetTransformData: function ( model, modelNode ) {\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\t\tmodel.userData.transformData = transformData;\n\n\t\t},\n\n\t\tsetLookAtProperties: function ( model, modelNode ) {\n\n\t\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\t\tvar children = connections.get( model.ID ).children;\n\n\t\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\t\tvar lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\t\tvar pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbindSkeleton: function ( skeletons, geometryMap, modelMap ) {\n\n\t\t\tvar bindMatrices = this.parsePoseNodes();\n\n\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\tvar parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\t\tvar geoID = parent.ID;\n\t\t\t\t\t\tvar geoRelationships = connections.get( geoID );\n\n\t\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\t\tvar model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparsePoseNodes: function () {\n\n\t\t\tvar bindMatrices = {};\n\n\t\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\t\tvar BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\t\tfor ( var nodeID in BindPoseNode ) {\n\n\t\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' ) {\n\n\t\t\t\t\t\tvar poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bindMatrices;\n\n\t\t},\n\n\t\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\t\tcreateAmbientLight: function () {\n\n\t\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tvar ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tvar r = ambientColor[ 0 ];\n\t\t\t\tvar g = ambientColor[ 1 ];\n\t\t\t\tvar b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tvar color = new Color( r, g, b );\n\t\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetupMorphMaterials: function () {\n\n\t\t\tvar scope = this;\n\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\tif ( child.isMesh ) {\n\n\t\t\t\t\tif ( child.geometry.morphAttributes.position && child.geometry.morphAttributes.position.length ) {\n\n\t\t\t\t\t\tif ( Array.isArray( child.material ) ) {\n\n\t\t\t\t\t\t\tchild.material.forEach( function ( material, i ) {\n\n\t\t\t\t\t\t\t\tscope.setupMorphMaterial( child, material, i );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tscope.setupMorphMaterial( child, child.material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t},\n\n\t\tsetupMorphMaterial: function ( child, material, index ) {\n\n\t\t\tvar uuid = child.uuid;\n\t\t\tvar matUuid = material.uuid;\n\n\t\t\t// if a geometry has morph targets, it cannot share the material with other geometries\n\t\t\tvar sharedMat = false;\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.isMesh ) {\n\n\t\t\t\t\tif ( Array.isArray( node.material ) ) {\n\n\t\t\t\t\t\tnode.material.forEach( function ( mat ) {\n\n\t\t\t\t\t\t\tif ( mat.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else if ( node.material.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( sharedMat === true ) {\n\n\t\t\t\tvar clonedMat = material.clone();\n\t\t\t\tclonedMat.morphTargets = true;\n\n\t\t\t\tif ( index === undefined ) child.material = clonedMat;\n\t\t\t\telse child.material[ index ] = clonedMat;\n\n\t\t\t} else material.morphTargets = true;\n\n\t\t}\n\n\t};\n\n\t// parse Geometry data from FBXTree and return map of BufferGeometries\n\tfunction GeometryParser() {}\n\n\tGeometryParser.prototype = {\n\n\t\tconstructor: GeometryParser,\n\n\t\t// Parse nodes in FBXTree.Objects.Geometry\n\t\tparse: function ( deformers ) {\n\n\t\t\tvar geometryMap = new Map();\n\n\t\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\t\tvar geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\t\tfor ( var nodeID in geoNodes ) {\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\t\tvar geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometryMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Geometry\n\t\tparseGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tswitch ( geoNode.attrType ) {\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t},\n\n\n\t\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\t\tparseMeshGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tvar skeletons = deformers.skeletons;\n\t\t\tvar morphTargets = [];\n\n\t\t\tvar modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t\t} );\n\n\t\t\t// don't create geometry if it is not associated with any models\n\t\t\tif ( modelNodes.length === 0 ) return;\n\n\t\t\tvar skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\t\treturn skeleton;\n\n\t\t\t}, null );\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// Assume one model and get the preRotation from that\n\t\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\t\tvar modelNode = modelNodes[ 0 ];\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\t\tvar transform = generateTransform( transformData );\n\n\t\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t\t},\n\n\t\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\t\tgenGeometry: function ( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\t\tvar geo = new BufferGeometry();\n\t\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\t\tvar geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\t\tvar buffers = this.genBuffers( geoInfo );\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t\t// used later to bind the skeleton to the model\n\t\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t\t}\n\n\t\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\t\tvar normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t\t}\n\n\t\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\t\t// subsequent uv buffers are called 'uv1', 'uv2', ...\n\t\t\t\tvar name = 'uv' + ( i + 1 ).toString();\n\n\t\t\t\t// the first uv buffer is just called 'uv'\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tname = 'uv';\n\n\t\t\t\t}\n\n\t\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t\t} );\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\t\tvar prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\t\tvar startIndex = 0;\n\n\t\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\t\tvar lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\t\tvar lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t\t// using one of them\n\t\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\t\treturn geo;\n\n\t\t},\n\n\t\tparseGeoNode: function ( geoNode, skeleton ) {\n\n\t\t\tvar geoInfo = {};\n\n\t\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\t\tgeoInfo.uv = [];\n\n\t\t\t\tvar i = 0;\n\t\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\t\t\t\t\ti ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeoInfo.weightTable = {};\n\n\t\t\tif ( skeleton !== null ) {\n\n\t\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\t\tid: i,\n\t\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn geoInfo;\n\n\t\t},\n\n\t\tgenBuffers: function ( geoInfo ) {\n\n\t\t\tvar buffers = {\n\t\t\t\tvertex: [],\n\t\t\t\tnormal: [],\n\t\t\t\tcolors: [],\n\t\t\t\tuvs: [],\n\t\t\t\tmaterialIndex: [],\n\t\t\t\tvertexWeights: [],\n\t\t\t\tweightsIndices: [],\n\t\t\t};\n\n\t\t\tvar polygonIndex = 0;\n\t\t\tvar faceLength = 0;\n\t\t\tvar displayedWeightsWarning = false;\n\n\t\t\t// these will hold data for a single face\n\t\t\tvar facePositionIndexes = [];\n\t\t\tvar faceNormals = [];\n\t\t\tvar faceColors = [];\n\t\t\tvar faceUVs = [];\n\t\t\tvar faceWeights = [];\n\t\t\tvar faceWeightIndices = [];\n\n\t\t\tvar scope = this;\n\t\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\t\tvar endOfFace = false;\n\n\t\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t\t// A cube with quad faces looks like this:\n\t\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t\t//  }\n\t\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\t\tendOfFace = true;\n\n\t\t\t\t}\n\n\t\t\t\tvar weightIndices = [];\n\t\t\t\tvar weights = [];\n\n\t\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t\t} );\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\t\tvar Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\t\tvar currentWeight = weight;\n\t\t\t\t\t\t\tvar currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\t\tvar tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\t\tweights = Weight;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tvar materialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tfaceLength ++;\n\n\t\t\t\tif ( endOfFace ) {\n\n\t\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\t\tpolygonIndex ++;\n\t\t\t\t\tfaceLength = 0;\n\n\t\t\t\t\t// reset arrays for the next face\n\t\t\t\t\tfacePositionIndexes = [];\n\t\t\t\t\tfaceNormals = [];\n\t\t\t\t\tfaceColors = [];\n\t\t\t\t\tfaceUVs = [];\n\t\t\t\t\tfaceWeights = [];\n\t\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn buffers;\n\n\t\t},\n\n\t\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\t\tgenFace: function ( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\t\tfor ( var i = 2; i < faceLength; i ++ ) {\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\taddMorphTargets: function ( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\t\tif ( morphTargets.length === 0 ) return;\n\n\t\t\tparentGeo.morphTargetsRelative = true;\n\n\t\t\tparentGeo.morphAttributes.position = [];\n\t\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\t\tvar scope = this;\n\t\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\t\tvar morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t},\n\n\t\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\t\tgenMorphGeometry: function ( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\t\tvar vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\t\tvar morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\t\tvar indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\t\tvar length = parentGeo.attributes.position.count * 3;\n\t\t\tvar morphPositions = new Float32Array( length );\n\n\t\t\tfor ( var i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\tvar morphIndex = indices[ i ] * 3;\n\n\t\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// TODO: add morph normal support\n\t\t\tvar morphGeoInfo = {\n\t\t\t\tvertexIndices: vertexIndices,\n\t\t\t\tvertexPositions: morphPositions,\n\n\t\t\t};\n\n\t\t\tvar morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t\t},\n\n\t\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\t\tparseNormals: function ( NormalNode ) {\n\n\t\t\tvar mappingType = NormalNode.MappingInformationType;\n\t\t\tvar referenceType = NormalNode.ReferenceInformationType;\n\t\t\tvar buffer = NormalNode.Normals.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 3,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\t\tparseUVs: function ( UVNode ) {\n\n\t\t\tvar mappingType = UVNode.MappingInformationType;\n\t\t\tvar referenceType = UVNode.ReferenceInformationType;\n\t\t\tvar buffer = UVNode.UV.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 2,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\t\tparseVertexColors: function ( ColorNode ) {\n\n\t\t\tvar mappingType = ColorNode.MappingInformationType;\n\t\t\tvar referenceType = ColorNode.ReferenceInformationType;\n\t\t\tvar buffer = ColorNode.Colors.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 4,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\t\tparseMaterialIndices: function ( MaterialNode ) {\n\n\t\t\tvar mappingType = MaterialNode.MappingInformationType;\n\t\t\tvar referenceType = MaterialNode.ReferenceInformationType;\n\n\t\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\t\treturn {\n\t\t\t\t\tdataSize: 1,\n\t\t\t\t\tbuffer: [ 0 ],\n\t\t\t\t\tindices: [ 0 ],\n\t\t\t\t\tmappingType: 'AllSame',\n\t\t\t\t\treferenceType: referenceType\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t\t// for conforming with the other functions we've written for other data.\n\t\t\tvar materialIndices = [];\n\n\t\t\tfor ( var i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\t\tmaterialIndices.push( i );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: materialIndexBuffer,\n\t\t\t\tindices: materialIndices,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\t\tparseNurbsGeometry: function ( geoNode ) {\n\n\t\t\tif ( NURBSCurve === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.' );\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar order = parseInt( geoNode.Order );\n\n\t\t\tif ( isNaN( order ) ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar degree = order - 1;\n\n\t\t\tvar knots = geoNode.KnotVector.a;\n\t\t\tvar controlPoints = [];\n\t\t\tvar pointsValues = geoNode.Points.a;\n\n\t\t\tfor ( var i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t\t}\n\n\t\t\tvar startKnot, endKnot;\n\n\t\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\t\tstartKnot = degree;\n\t\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\t\tfor ( var i = 0; i < degree; ++ i ) {\n\n\t\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\t\tvar vertices = curve.getPoints( controlPoints.length * 7 );\n\n\t\t\tvar positions = new Float32Array( vertices.length * 3 );\n\n\t\t\tvertices.forEach( function ( vertex, i ) {\n\n\t\t\t\tvertex.toArray( positions, i * 3 );\n\n\t\t\t} );\n\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t},\n\n\t};\n\n\t// parse animation data from FBXTree\n\tfunction AnimationParser() {}\n\n\tAnimationParser.prototype = {\n\n\t\tconstructor: AnimationParser,\n\n\t\t// take raw animation clips and turn them into three.js animation clips\n\t\tparse: function () {\n\n\t\t\tvar animationClips = [];\n\n\t\t\tvar rawClips = this.parseClips();\n\n\t\t\tif ( rawClips !== undefined ) {\n\n\t\t\t\tfor ( var key in rawClips ) {\n\n\t\t\t\t\tvar rawClip = rawClips[ key ];\n\n\t\t\t\t\tvar clip = this.addClip( rawClip );\n\n\t\t\t\t\tanimationClips.push( clip );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn animationClips;\n\n\t\t},\n\n\t\tparseClips: function () {\n\n\t\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t\t// if this is undefined we can safely assume there are no animations\n\t\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\t\tvar curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\t\tvar layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\t\tvar rawClips = this.parseAnimStacks( layersMap );\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t\t// and is referenced by an AnimationLayer\n\t\tparseAnimationCurveNodes: function () {\n\n\t\t\tvar rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\t\tvar curveNodesMap = new Map();\n\n\t\t\tfor ( var nodeID in rawCurveNodes ) {\n\n\t\t\t\tvar rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\t\tvar curveNode = {\n\n\t\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\t\tcurves: {},\n\n\t\t\t\t\t};\n\n\t\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn curveNodesMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t\t// axis ( e.g. times and values of x rotation)\n\t\tparseAnimationCurves: function ( curveNodesMap ) {\n\n\t\t\tvar rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t\t// clearly, this should be optimised to\n\t\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\t\tfor ( var nodeID in rawCurves ) {\n\n\t\t\t\tvar animationCurve = {\n\n\t\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t\t};\n\n\t\t\t\tvar relationships = connections.get( animationCurve.id );\n\n\t\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\t\tvar animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\t\tvar animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /d|DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\t\tparseAnimationLayers: function ( curveNodesMap ) {\n\n\t\t\tvar rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\t\tvar layersMap = new Map();\n\n\t\t\tfor ( var nodeID in rawLayers ) {\n\n\t\t\t\tvar layerCurveNodes = [];\n\n\t\t\t\tvar connection = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\t\tvar children = connection.children;\n\n\t\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\t\tvar curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\t\tvar geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn layersMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\t\tparseAnimStacks: function ( layersMap ) {\n\n\t\t\tvar rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t\t// connect the stacks (clips) up to the layers\n\t\t\tvar rawClips = {};\n\n\t\t\tfor ( var nodeID in rawStacks ) {\n\n\t\t\t\tvar children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t\t}\n\n\t\t\t\tvar layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\t\tlayer: layer,\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\taddClip: function ( rawClip ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar scope = this;\n\t\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\n\n\t\t\t} );\n\n\t\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t\t},\n\n\t\tgenerateTracks: function ( rawTracks ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar initialPosition = new Vector3();\n\t\t\tvar initialRotation = new Quaternion();\n\t\t\tvar initialScale = new Vector3();\n\n\t\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\n\n\t\t\tinitialPosition = initialPosition.toArray();\n\t\t\tinitialRotation = new Euler().setFromQuaternion( initialRotation, rawTracks.eulerOrder ).toArray();\n\t\t\tinitialScale = initialScale.toArray();\n\n\t\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\t\tvar positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\t\tvar rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\t\tvar scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\t\tvar morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t},\n\n\t\tgenerateVectorTrack: function ( modelName, curves, initialValue, type ) {\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t\t},\n\n\t\tgenerateRotationTrack: function ( modelName, curves, initialValue, preRotation, postRotation, eulerOrder ) {\n\n\t\t\tif ( curves.x !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.x );\n\t\t\t\tcurves.x.values = curves.x.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tif ( curves.y !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.y );\n\t\t\t\tcurves.y.values = curves.y.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tif ( curves.z !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.z );\n\t\t\t\tcurves.z.values = curves.z.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\tif ( preRotation !== undefined ) {\n\n\t\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t\t}\n\n\t\t\tif ( postRotation !== undefined ) {\n\n\t\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).inverse();\n\n\t\t\t}\n\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar euler = new Euler();\n\n\t\t\tvar quaternionValues = [];\n\n\t\t\tfor ( var i = 0; i < values.length; i += 3 ) {\n\n\t\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\n\t\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t\t}\n\n\t\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t\t},\n\n\t\tgenerateMorphTrack: function ( rawTracks ) {\n\n\t\t\tvar curves = rawTracks.DeformPercent.curves.morph;\n\t\t\tvar values = curves.values.map( function ( val ) {\n\n\t\t\t\treturn val / 100;\n\n\t\t\t} );\n\n\t\t\tvar morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t\t},\n\n\t\t// For all animated objects, times are defined separately for each axis\n\t\t// Here we'll combine the times into one sorted array without duplicates\n\t\tgetTimesForAllAxes: function ( curves ) {\n\n\t\t\tvar times = [];\n\n\t\t\t// first join together the times for each axis, if defined\n\t\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t\t// then sort them and remove duplicates\n\t\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\t\treturn a - b;\n\n\t\t\t} ).filter( function ( elem, index, array ) {\n\n\t\t\t\treturn array.indexOf( elem ) == index;\n\n\t\t\t} );\n\n\t\t\treturn times;\n\n\t\t},\n\n\t\tgetKeyframeTrackValues: function ( times, curves, initialValue ) {\n\n\t\t\tvar prevValue = initialValue;\n\n\t\t\tvar values = [];\n\n\t\t\tvar xIndex = - 1;\n\t\t\tvar yIndex = - 1;\n\t\t\tvar zIndex = - 1;\n\n\t\t\ttimes.forEach( function ( time ) {\n\n\t\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t\t// if there is an x value defined for this frame, use that\n\t\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\t\tvar xValue = curves.x.values[ xIndex ];\n\t\t\t\t\tvalues.push( xValue );\n\t\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\t\tvar yValue = curves.y.values[ yIndex ];\n\t\t\t\t\tvalues.push( yValue );\n\t\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\t\tvar zValue = curves.z.values[ zIndex ];\n\t\t\t\t\tvalues.push( zValue );\n\t\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn values;\n\n\t\t},\n\n\t\t// Rotations are defined as Euler angles which can have values  of any size\n\t\t// These will be converted to quaternions which don't support values greater than\n\t\t// PI, so we'll interpolate large rotations\n\t\tinterpolateRotations: function ( curve ) {\n\n\t\t\tfor ( var i = 1; i < curve.values.length; i ++ ) {\n\n\t\t\t\tvar initialValue = curve.values[ i - 1 ];\n\t\t\t\tvar valuesSpan = curve.values[ i ] - initialValue;\n\n\t\t\t\tvar absoluteSpan = Math.abs( valuesSpan );\n\n\t\t\t\tif ( absoluteSpan >= 180 ) {\n\n\t\t\t\t\tvar numSubIntervals = absoluteSpan / 180;\n\n\t\t\t\t\tvar step = valuesSpan / numSubIntervals;\n\t\t\t\t\tvar nextValue = initialValue + step;\n\n\t\t\t\t\tvar initialTime = curve.times[ i - 1 ];\n\t\t\t\t\tvar timeSpan = curve.times[ i ] - initialTime;\n\t\t\t\t\tvar interval = timeSpan / numSubIntervals;\n\t\t\t\t\tvar nextTime = initialTime + interval;\n\n\t\t\t\t\tvar interpolatedTimes = [];\n\t\t\t\t\tvar interpolatedValues = [];\n\n\t\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\n\n\t\t\t\t\t\tinterpolatedTimes.push( nextTime );\n\t\t\t\t\t\tnextTime += interval;\n\n\t\t\t\t\t\tinterpolatedValues.push( nextValue );\n\t\t\t\t\t\tnextValue += step;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\n\t\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t};\n\n\t// parse an FBX file in ASCII format\n\tfunction TextParser() {}\n\n\tTextParser.prototype = {\n\n\t\tconstructor: TextParser,\n\n\t\tgetPrevNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t\t},\n\n\t\tgetCurrentNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t\t},\n\n\t\tgetCurrentProp: function () {\n\n\t\t\treturn this.currentProp;\n\n\t\t},\n\n\t\tpushStack: function ( node ) {\n\n\t\t\tthis.nodeStack.push( node );\n\t\t\tthis.currentIndent += 1;\n\n\t\t},\n\n\t\tpopStack: function () {\n\n\t\t\tthis.nodeStack.pop();\n\t\t\tthis.currentIndent -= 1;\n\n\t\t},\n\n\t\tsetCurrentProp: function ( val, name ) {\n\n\t\t\tthis.currentProp = val;\n\t\t\tthis.currentPropName = name;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tthis.currentIndent = 0;\n\n\t\t\tthis.allNodes = new FBXTree();\n\t\t\tthis.nodeStack = [];\n\t\t\tthis.currentProp = [];\n\t\t\tthis.currentPropName = '';\n\n\t\t\tvar scope = this;\n\n\t\t\tvar split = text.split( /[\\r\\n]+/ );\n\n\t\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\t\tvar matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\t\tvar matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\t\tvar matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\t\tvar matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\t\tvar matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\n\n\t\t\t\tif ( matchBeginning ) {\n\n\t\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\n\n\t\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\t\tscope.popStack();\n\n\t\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\t\tscope.parseNodePropertyContinued( line );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this.allNodes;\n\n\t\t},\n\n\t\tparseNodeBegin: function ( line, property ) {\n\n\t\t\tvar nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\tvar nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\t} );\n\n\t\t\tvar node = { name: nodeName };\n\t\t\tvar attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\t// a top node\n\t\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t\t} else { // a subnode\n\n\t\t\t\t// if the subnode already exists, append it\n\t\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\t\tthis.pushStack( node );\n\n\t\t},\n\n\t\tparseNodeAttr: function ( attrs ) {\n\n\t\t\tvar id = attrs[ 0 ];\n\n\t\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = '', type = '';\n\n\t\t\tif ( attrs.length > 1 ) {\n\n\t\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\t\ttype = attrs[ 2 ];\n\n\t\t\t}\n\n\t\t\treturn { id: id, name: name, type: type };\n\n\t\t},\n\n\t\tparseNodeProperty: function ( line, property, contentLine ) {\n\n\t\t\tvar propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\t\tvar propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t\t//\tContent: ,\n\t\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t\t}\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\t\t\tvar parentName = currentNode.name;\n\n\t\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Connections\n\t\t\tif ( propName === 'C' ) {\n\n\t\t\t\tvar connProps = propValue.split( ',' ).slice( 1 );\n\t\t\t\tvar from = parseInt( connProps[ 0 ] );\n\t\t\t\tvar to = parseInt( connProps[ 1 ] );\n\n\t\t\t\tvar rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t\t} );\n\n\t\t\t\tpropName = 'connections';\n\t\t\t\tpropValue = [ from, to ];\n\t\t\t\tappend( propValue, rest );\n\n\t\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Node\n\t\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t\t// connections\n\t\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t\t} else {\n\n\t\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\t\telse currentNode.a = propValue;\n\n\t\t\t}\n\n\t\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseNodePropertyContinued: function ( line ) {\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\tcurrentNode.a += line;\n\n\t\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t\t// so convert the string to an array\n\t\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse \"Property70\"\n\t\tparseNodeSpecialProperty: function ( line, propName, propValue ) {\n\n\t\t\t// split this\n\t\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t\t// into array like below\n\t\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\t\tvar props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t\t} );\n\n\t\t\tvar innerPropName = props[ 0 ];\n\t\t\tvar innerPropType1 = props[ 1 ];\n\t\t\tvar innerPropType2 = props[ 2 ];\n\t\t\tvar innerPropFlag = props[ 3 ];\n\t\t\tvar innerPropValue = props[ 4 ];\n\n\t\t\t// cast values where needed, otherwise leave as strings\n\t\t\tswitch ( innerPropType1 ) {\n\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'enum':\n\t\t\t\tcase 'bool':\n\t\t\t\tcase 'ULongLong':\n\t\t\t\tcase 'double':\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'FieldOfView':\n\t\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Color':\n\t\t\t\tcase 'ColorRGB':\n\t\t\t\tcase 'Vector3D':\n\t\t\t\tcase 'Lcl_Translation':\n\t\t\t\tcase 'Lcl_Rotation':\n\t\t\t\tcase 'Lcl_Scaling':\n\t\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// CAUTION: these props must append to parent's parent\n\t\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t\t},\n\n\t};\n\n\t// Parse an FBX file in Binary format\n\tfunction BinaryParser() {}\n\n\tBinaryParser.prototype = {\n\n\t\tconstructor: BinaryParser,\n\n\t\tparse: function ( buffer ) {\n\n\t\t\tvar reader = new BinaryReader( buffer );\n\t\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\t\tvar version = reader.getUint32();\n\n\t\t\tconsole.log( 'THREE.FBXLoader: FBX binary version: ' + version );\n\n\t\t\tvar allNodes = new FBXTree();\n\n\t\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\t\tvar node = this.parseNode( reader, version );\n\t\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t\t}\n\n\t\t\treturn allNodes;\n\n\t\t},\n\n\t\t// Check if reader has reached the end of content.\n\t\tendOfContent: function ( reader ) {\n\n\t\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t\t// - 16bytes: magic\n\t\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t\t// - 4bytes: magic\n\t\t\t// - 4bytes: version\n\t\t\t// - 120bytes: zero\n\t\t\t// - 16bytes: magic\n\t\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t\t} else {\n\n\t\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t\t}\n\n\t\t},\n\n\t\t// recursively parse nodes until the end of the file is reached\n\t\tparseNode: function ( reader, version ) {\n\n\t\t\tvar node = {};\n\n\t\t\t// The first three data sizes depends on version.\n\t\t\tvar endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\t\tvar numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\n\n\t\t\tvar nameLen = reader.getUint8();\n\t\t\tvar name = reader.getString( nameLen );\n\n\t\t\t// Regards this node as NULL-record if endOffset is zero\n\t\t\tif ( endOffset === 0 ) return null;\n\n\t\t\tvar propertyList = [];\n\n\t\t\tfor ( var i = 0; i < numProperties; i ++ ) {\n\n\t\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t\t}\n\n\t\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\t\tvar id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\t\tvar attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\t\tvar attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t\t// check if this node represents just a single property\n\t\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\t\tvar subNode = this.parseNode( reader, version );\n\n\t\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t\t}\n\n\t\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\t\tif ( typeof id === 'number' ) node.id = id;\n\t\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\t\tif ( name !== '' ) node.name = name;\n\n\t\t\treturn node;\n\n\t\t},\n\n\t\tparseSubNode: function ( name, node, subNode ) {\n\n\t\t\t// special case: child node is single property\n\t\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\t\tvar value = subNode.propertyList[ 0 ];\n\n\t\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t\tsubNode.a = value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t\t}\n\n\t\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\t\tnode.connections = [];\n\n\t\t\t\t}\n\n\t\t\t\tnode.connections.push( array );\n\n\t\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\t\tvar keys = Object.keys( subNode );\n\n\t\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t\t} );\n\n\t\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\t\tvar innerPropName = subNode.propertyList[ 0 ];\n\t\t\t\tvar innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\t\tvar innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\t\tvar innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\t\tvar innerPropValue;\n\n\t\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\t\tinnerPropValue = [\n\t\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t\t];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t\t}\n\n\t\t\t\t// this will be copied to parent, see above\n\t\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t\t'type': innerPropType1,\n\t\t\t\t\t'type2': innerPropType2,\n\t\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t\t'value': innerPropValue\n\n\t\t\t\t};\n\n\t\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseProperty: function ( reader ) {\n\n\t\t\tvar type = reader.getString( 1 );\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'C':\n\t\t\t\t\treturn reader.getBoolean();\n\n\t\t\t\tcase 'D':\n\t\t\t\t\treturn reader.getFloat64();\n\n\t\t\t\tcase 'F':\n\t\t\t\t\treturn reader.getFloat32();\n\n\t\t\t\tcase 'I':\n\t\t\t\t\treturn reader.getInt32();\n\n\t\t\t\tcase 'L':\n\t\t\t\t\treturn reader.getInt64();\n\n\t\t\t\tcase 'R':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\t\tcase 'S':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getString( length );\n\n\t\t\t\tcase 'Y':\n\t\t\t\t\treturn reader.getInt16();\n\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'i':\n\t\t\t\tcase 'l':\n\n\t\t\t\t\tvar arrayLength = reader.getUint32();\n\t\t\t\t\tvar encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\t\tvar compressedLength = reader.getUint32();\n\n\t\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof Zlib === 'undefined' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar inflate = new Zlib.Inflate( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) ); // eslint-disable-line no-undef\n\t\t\t\t\tvar reader2 = new BinaryReader( inflate.decompress().buffer );\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction BinaryReader( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\n\t}\n\n\tBinaryReader.prototype = {\n\n\t\tconstructor: BinaryReader,\n\n\t\tgetOffset: function () {\n\n\t\t\treturn this.offset;\n\n\t\t},\n\n\t\tsize: function () {\n\n\t\t\treturn this.dv.buffer.byteLength;\n\n\t\t},\n\n\t\tskip: function ( length ) {\n\n\t\t\tthis.offset += length;\n\n\t\t},\n\n\t\t// seems like true/false representation depends on exporter.\n\t\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t\t// then sees LSB.\n\t\tgetBoolean: function () {\n\n\t\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t\t},\n\n\t\tgetBooleanArray: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getBoolean() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint8: function () {\n\n\t\t\tvar value = this.dv.getUint8( this.offset );\n\t\t\tthis.offset += 1;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt16: function () {\n\n\t\t\tvar value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\t\tthis.offset += 2;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32: function () {\n\n\t\t\tvar value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint32: function () {\n\n\t\t\tvar value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t\t// There's a possibility that this method returns wrong value if the value\n\t\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t\t// TODO: safely handle 64-bit integer\n\t\tgetInt64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\t// calculate negative value\n\t\t\tif ( high & 0x80000000 ) {\n\n\t\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetInt64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\t// Note: see getInt64() comment\n\t\tgetUint64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetFloat32: function () {\n\n\t\t\tvar value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetFloat64: function () {\n\n\t\t\tvar value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\t\tthis.offset += 8;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetArrayBuffer: function ( size ) {\n\n\t\t\tvar value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\t\tthis.offset += size;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetString: function ( size ) {\n\n\t\t\t// note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta[ i ] = this.getUint8();\n\n\t\t\t}\n\n\t\t\tvar nullByte = a.indexOf( 0 );\n\t\t\tif ( nullByte >= 0 ) a = a.slice( 0, nullByte );\n\n\t\t\treturn LoaderUtils.decodeText( new Uint8Array( a ) );\n\n\t\t}\n\n\t};\n\n\t// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n\t// and BinaryParser( FBX Binary format)\n\tfunction FBXTree() {}\n\n\tFBXTree.prototype = {\n\n\t\tconstructor: FBXTree,\n\n\t\tadd: function ( key, val ) {\n\n\t\t\tthis[ key ] = val;\n\n\t\t},\n\n\t};\n\n\t// ************** UTILITY FUNCTIONS **************\n\n\tfunction isFbxFormatBinary( buffer ) {\n\n\t\tvar CORRECT = 'Kaydara FBX Binary  \\0';\n\n\t\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n\t}\n\n\tfunction isFbxFormatASCII( text ) {\n\n\t\tvar CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\t\tvar cursor = 0;\n\n\t\tfunction read( offset ) {\n\n\t\t\tvar result = text[ offset - 1 ];\n\t\t\ttext = text.slice( cursor + offset );\n\t\t\tcursor ++;\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < CORRECT.length; ++ i ) {\n\n\t\t\tvar num = read( 1 );\n\t\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getFbxVersion( text ) {\n\n\t\tvar versionRegExp = /FBXVersion: (\\d+)/;\n\t\tvar match = text.match( versionRegExp );\n\n\t\tif ( match ) {\n\n\t\t\tvar version = parseInt( match[ 1 ] );\n\t\t\treturn version;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n\t}\n\n\t// Converts FBX ticks into real time seconds.\n\tfunction convertFBXTimeToSeconds( time ) {\n\n\t\treturn time / 46186158000;\n\n\t}\n\n\tvar dataArray = [];\n\n\t// extracts the data from the correct position in the FBX array based on indexing type\n\tfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\t\tvar index;\n\n\t\tswitch ( infoObject.mappingType ) {\n\n\t\t\tcase 'ByPolygonVertex' :\n\t\t\t\tindex = polygonVertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByPolygon' :\n\t\t\t\tindex = polygonIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByVertice' :\n\t\t\t\tindex = vertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'AllSame' :\n\t\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\t\tbreak;\n\t\t\tdefault :\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t\t}\n\n\t\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\t\tvar from = index * infoObject.dataSize;\n\t\tvar to = from + infoObject.dataSize;\n\n\t\treturn slice( dataArray, infoObject.buffer, from, to );\n\n\t}\n\n\tvar tempEuler = new Euler();\n\tvar tempVec = new Vector3();\n\n\t// generate transformation from FBX transform data\n\t// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n\t// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\n\tfunction generateTransform( transformData ) {\n\n\t\tvar lTranslationM = new Matrix4();\n\t\tvar lPreRotationM = new Matrix4();\n\t\tvar lRotationM = new Matrix4();\n\t\tvar lPostRotationM = new Matrix4();\n\n\t\tvar lScalingM = new Matrix4();\n\t\tvar lScalingPivotM = new Matrix4();\n\t\tvar lScalingOffsetM = new Matrix4();\n\t\tvar lRotationOffsetM = new Matrix4();\n\t\tvar lRotationPivotM = new Matrix4();\n\n\t\tvar lParentGX = new Matrix4();\n\t\tvar lGlobalT = new Matrix4();\n\n\t\tvar inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\t\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\t\tif ( transformData.preRotation ) {\n\n\t\t\tvar array = transformData.preRotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.rotation ) {\n\n\t\t\tvar array = transformData.rotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.postRotation ) {\n\n\t\t\tvar array = transformData.postRotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t\t// Pivots and offsets\n\t\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\t\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\t\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\t\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t\t// parent transform\n\t\tif ( transformData.parentMatrixWorld ) lParentGX = transformData.parentMatrixWorld;\n\n\t\t// Global Rotation\n\t\tvar lLRM = lPreRotationM.multiply( lRotationM ).multiply( lPostRotationM );\n\t\tvar lParentGRM = new Matrix4();\n\t\tlParentGX.extractRotation( lParentGRM );\n\n\t\t// Global Shear*Scaling\n\t\tvar lParentTM = new Matrix4();\n\t\tlParentTM.copyPosition( lParentGX );\n\n\t\tvar lParentGSM = new Matrix4();\n\t\tlParentGSM.getInverse( lParentGRM ).multiply( lParentGX );\n\n\t\tvar lGlobalRS = new Matrix4();\n\n\t\tif ( inheritType === 0 ) {\n\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lScalingM );\n\n\t\t} else if ( inheritType === 1 ) {\n\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lScalingM );\n\n\t\t} else {\n\n\t\t\tvar lParentLSM_inv = new Matrix4().getInverse( lScalingM );\n\t\t\tvar lParentGSM_noLocal = new Matrix4().multiply( lParentGSM ).multiply( lParentLSM_inv );\n\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lScalingM );\n\n\t\t}\n\n\t\tvar lRotationPivotM_inv = new Matrix4().getInverse( lRotationPivotM );\n\t\tvar lScalingPivotM_inv = new Matrix4().getInverse( lScalingPivotM );\n\t\t// Calculate the local transform matrix\n\t\tvar lTransform = new Matrix4();\n\t\tlTransform.copy( lTranslationM ).multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\n\n\t\tvar lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\t\tvar lGlobalTranslation = new Matrix4().copy( lParentGX ).multiply( lLocalTWithAllPivotAndOffsetInfo );\n\t\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\t\tlTransform = new Matrix4().multiply( lGlobalT ).multiply( lGlobalRS );\n\n\t\treturn lTransform;\n\n\t}\n\n\t// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n\t// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\n\tfunction getEulerOrder( order ) {\n\n\t\torder = order || 0;\n\n\t\tvar enums = [\n\t\t\t'ZYX', // -> XYZ extrinsic\n\t\t\t'YZX', // -> XZY extrinsic\n\t\t\t'XZY', // -> YZX extrinsic\n\t\t\t'ZXY', // -> YXZ extrinsic\n\t\t\t'YXZ', // -> ZXY extrinsic\n\t\t\t'XYZ', // -> ZYX extrinsic\n\t\t\t//'SphericXYZ', // not possible to support\n\t\t];\n\n\t\tif ( order === 6 ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\t\treturn enums[ 0 ];\n\n\t\t}\n\n\t\treturn enums[ order ];\n\n\t}\n\n\t// Parses comma separated list of numbers and returns them an array.\n\t// Used internally by the TextParser\n\tfunction parseNumberArray( value ) {\n\n\t\tvar array = value.split( ',' ).map( function ( val ) {\n\n\t\t\treturn parseFloat( val );\n\n\t\t} );\n\n\t\treturn array;\n\n\t}\n\n\tfunction convertArrayBufferToString( buffer, from, to ) {\n\n\t\tif ( from === undefined ) from = 0;\n\t\tif ( to === undefined ) to = buffer.byteLength;\n\n\t\treturn LoaderUtils.decodeText( new Uint8Array( buffer, from, to ) );\n\n\t}\n\n\tfunction append( a, b ) {\n\n\t\tfor ( var i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\tfunction slice( a, b, from, to ) {\n\n\t\tfor ( var i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// inject array a2 into array a1 at index\n\tfunction inject( a1, index, a2 ) {\n\n\t\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\n\n\t}\n\n\treturn FBXLoader;\n\n} )();\n\nexport { FBXLoader };\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n */\n\n\n\nvar HorizontalBlurShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"h\": { value: 1.0 / 512.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform float h;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 sum = vec4( 0.0 );\",\n\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\",\n\n\t\t\"\tgl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { HorizontalBlurShader };\n","/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n */\n\n\n\nvar VerticalBlurShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"v\": { value: 1.0 / 512.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform float v;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 sum = vec4( 0.0 );\",\n\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\",\n\n\t\t\"\tgl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { VerticalBlurShader };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport React, { forwardRef, useRef, useState, useEffect, useLayoutEffect, useMemo, Children } from 'react';\nimport { useFrame, useUpdate, useThree, useLoader, extend, addEffect, addAfterEffect, applyProps } from 'react-three-fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { Vector2, AudioListener, AudioLoader, PMREMGenerator, CubeTextureLoader, WebGLMultisampleRenderTarget, RGBAFormat, sRGBEncoding, DefaultLoadingManager, TextureLoader, Vector3, PerspectiveCamera as PerspectiveCamera$1, OrthographicCamera as OrthographicCamera$1, Matrix4, Ray, Sphere as Sphere$1, Color, Raycaster, Camera, BufferGeometry, Geometry, MeshPhysicalMaterial, MeshStandardMaterial, ShaderMaterial, ShaderChunk, Spherical, AdditiveBlending, WebGLRenderTarget, PlaneBufferGeometry, Mesh, MeshDepthMaterial, Shape, RepeatWrapping } from 'three';\nimport { LineGeometry } from 'three/examples/jsm/lines/LineGeometry';\nimport { LineMaterial } from 'three/examples/jsm/lines/LineMaterial';\nimport { Line2 } from 'three/examples/jsm/lines/Line2';\nimport { Text as Text$1 } from 'troika-three-text';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { GammaCorrectionShader } from 'three/examples/jsm/shaders/GammaCorrectionShader';\nimport { DeviceOrientationControls as DeviceOrientationControls$1 } from 'three/examples/jsm/controls/DeviceOrientationControls';\nimport { FlyControls as FlyControls$1 } from 'three/examples/jsm/controls/FlyControls';\nimport { MapControls as MapControls$1, OrbitControls as OrbitControls$1 } from 'three/examples/jsm/controls/OrbitControls';\nimport { TrackballControls as TrackballControls$1 } from 'three/examples/jsm/controls/TrackballControls';\nimport { TransformControls as TransformControls$1 } from 'three/examples/jsm/controls/TransformControls';\nimport pick from 'lodash.pick';\nimport omit from 'lodash.omit';\nimport { PointerLockControls as PointerLockControls$1 } from 'three/examples/jsm/controls/PointerLockControls';\nimport create$1 from 'zustand';\nimport { useTransition, a } from '@react-spring/web';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\nimport ReactDOM from 'react-dom';\nimport { Reflector as Reflector$1 } from 'three/examples/jsm/objects/Reflector';\nimport StatsImpl from 'three/examples/js/libs/stats.min';\nimport { getGPUTier } from 'detect-gpu';\nimport { SimplifyModifier } from 'three/examples/jsm/modifiers/SimplifyModifier';\nimport { SubdivisionModifier } from 'three/examples/jsm/modifiers/SubdivisionModifier';\nimport { TessellateModifier } from 'three/examples/jsm/modifiers/TessellateModifier';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Sky as Sky$1 } from 'three/examples/jsm/objects/Sky';\nimport { HorizontalBlurShader } from 'three/examples/jsm/shaders/HorizontalBlurShader';\nimport { VerticalBlurShader } from 'three/examples/jsm/shaders/VerticalBlurShader';\n\nfunction create(type) {\n  const El = type + 'BufferGeometry';\n  return /*#__PURE__*/forwardRef((_ref, ref) => {\n    let {\n      args,\n      children\n    } = _ref,\n        props = _objectWithoutPropertiesLoose(_ref, [\"args\", \"children\"]);\n\n    return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      ref: ref\n    }, props), /*#__PURE__*/React.createElement(El, {\n      attach: \"geometry\",\n      args: args\n    }), children);\n  });\n}\n\nconst Box = create('box');\nconst Circle = create('circle');\nconst Cone = create('cone');\nconst Cylinder = create('cylinder');\nconst Sphere = create('sphere');\nconst Plane = create('plane');\nconst Tube = create('tube');\nconst Torus = create('torus');\nconst TorusKnot = create('torusKnot');\nconst Tetrahedron = create('tetrahedron');\nconst Ring = create('ring');\nconst Polyhedron = create('polyhedron');\nconst Icosahedron = create('icosahedron');\nconst Octahedron = create('octahedron');\nconst Dodecahedron = create('dodecahedron');\nconst Extrude = create('extrude');\nconst Lathe = create('lathe');\nconst Parametric = create('parametric');\n\nconst Billboard = /*#__PURE__*/forwardRef(function Billboard(_ref, ref) {\n  let {\n    follow = true,\n    lockX = false,\n    lockY = false,\n    lockZ = false\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"follow\", \"lockX\", \"lockY\", \"lockZ\"]);\n\n  const localRef = useRef();\n  useFrame(({\n    camera\n  }) => {\n    if (!follow) return;\n\n    if (localRef.current) {\n      const prev = {\n        x: localRef.current.rotation.x,\n        y: localRef.current.rotation.y,\n        z: localRef.current.rotation.z\n      };\n      localRef.current.lookAt(camera.position); // readjust any axis that is locked\n\n      if (lockX) localRef.current.rotation.x = prev.x;\n      if (lockY) localRef.current.rotation.y = prev.y;\n      if (lockZ) localRef.current.rotation.z = prev.z;\n    }\n  });\n  return /*#__PURE__*/React.createElement(Plane, _extends({\n    ref: mergeRefs([localRef, ref])\n  }, props));\n});\n\nconst Detailed = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    children,\n    distances\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"distances\"]);\n\n  const lod = useUpdate(lod => {\n    lod.levels.length = 0;\n    lod.children.forEach((object, index) => lod.levels.push({\n      object,\n      distance: distances[index]\n    }));\n  }, []);\n  useFrame(state => {\n    var _lod$current;\n\n    return (_lod$current = lod.current) == null ? void 0 : _lod$current.update(state.camera);\n  });\n  return /*#__PURE__*/React.createElement(\"lOD\", _extends({\n    ref: mergeRefs([lod, ref])\n  }, props), children);\n});\n\nconst Line = /*#__PURE__*/React.forwardRef(function Line(_ref, ref) {\n  let {\n    points,\n    color = 'black',\n    vertexColors,\n    lineWidth,\n    dashed\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"points\", \"color\", \"vertexColors\", \"lineWidth\", \"dashed\"]);\n\n  const [line2] = useState(() => new Line2());\n  const [lineGeometry] = useState(() => new LineGeometry());\n  const [lineMaterial] = useState(() => new LineMaterial());\n  const [resolution] = useState(() => new Vector2(512, 512));\n  useEffect(() => {\n    lineGeometry.setPositions(points.flat());\n    if (vertexColors) lineGeometry.setColors(vertexColors.flat());\n    line2.computeLineDistances();\n  }, [points, vertexColors, line2, lineGeometry]);\n  useLayoutEffect(() => {\n    if (dashed) {\n      lineMaterial.defines.USE_DASH = '';\n    } else {\n      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\n      delete lineMaterial.defines.USE_DASH;\n    }\n\n    lineMaterial.needsUpdate = true;\n  }, [dashed, lineMaterial]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: line2,\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"primitive\", {\n    dispose: undefined,\n    object: lineGeometry,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: lineMaterial,\n    attach: \"material\",\n    color: color,\n    vertexColors: Boolean(vertexColors),\n    resolution: resolution,\n    linewidth: lineWidth,\n    dashed: dashed\n  }, rest)));\n});\n\nconst PositionalAudio = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    url,\n    distance = 1,\n    loop = true\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"url\", \"distance\", \"loop\"]);\n\n  const sound = useRef();\n  const {\n    camera\n  } = useThree();\n  const [listener] = useState(() => new AudioListener());\n  const buffer = useLoader(AudioLoader, url);\n  useEffect(() => {\n    const _sound = sound.current;\n\n    if (_sound) {\n      _sound.setBuffer(buffer);\n\n      _sound.setRefDistance(distance);\n\n      _sound.setLoop(loop);\n\n      _sound.play();\n    }\n\n    camera.add(listener);\n    return () => {\n      camera.remove(listener);\n\n      if (_sound) {\n        _sound.stop();\n\n        _sound.disconnect();\n      }\n    };\n  }, [buffer, camera, distance, listener, loop]);\n  return /*#__PURE__*/React.createElement(\"positionalAudio\", _extends({\n    ref: mergeRefs([sound, ref]),\n    args: [listener]\n  }, props));\n});\n\nconst Text = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    anchorX = 'center',\n    anchorY = 'middle',\n    children,\n    onSync\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"anchorX\", \"anchorY\", \"children\", \"onSync\"]);\n\n  const {\n    invalidate\n  } = useThree();\n  const [troikaMesh] = useState(() => new Text$1());\n  const [nodes, text] = useMemo(() => {\n    let n = [];\n    let t = '';\n    Children.forEach(children, child => {\n      if (typeof child === 'string') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]);\n  useLayoutEffect(() => void troikaMesh.sync(() => {\n    invalidate();\n    if (onSync) onSync(troikaMesh);\n  }));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: troikaMesh,\n    ref: ref,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY\n  }, props), nodes);\n});\n\nfunction getTexture(texture, gen, isCubeMap) {\n  if (isCubeMap) {\n    gen.compileEquirectangularShader();\n    return gen.fromCubemap(texture).texture;\n  }\n\n  return gen.fromEquirectangular(texture).texture;\n}\n\nfunction Environment({\n  background = false,\n  files = ['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'],\n  path = '/'\n}) {\n  const {\n    gl,\n    scene\n  } = useThree();\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  const loaderResult = useLoader(loader, isCubeMap ? [files] : files, loader => loader.setPath(path));\n  const map = isCubeMap ? loaderResult[0] : loaderResult;\n  useEffect(() => {\n    const gen = new PMREMGenerator(gl);\n    const texture = getTexture(map, gen, isCubeMap);\n    if (background) scene.background = texture;\n    scene.environment = texture;\n    map.dispose();\n    gen.dispose();\n    return () => {\n      scene.environment = scene.background = null;\n    };\n  }, [gl, map, isCubeMap, background, scene]);\n  return null;\n}\n\nextend({\n  EffectComposer,\n  RenderPass,\n  ShaderPass\n});\nconst isWebGL2Available = () => {\n  try {\n    var canvas = document.createElement('canvas');\n    return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));\n  } catch (e) {\n    return false;\n  }\n};\nconst Effects = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    children,\n    multisamping = 8,\n    renderIndex = 1,\n    disableGamma = false,\n    disableRenderPass = false\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"multisamping\", \"renderIndex\", \"disableGamma\", \"disableRenderPass\"]);\n\n  const composer = useRef();\n  const {\n    scene,\n    camera,\n    gl,\n    size\n  } = useThree();\n  const [target] = useState(() => {\n    if (isWebGL2Available() && multisamping > 0) {\n      const t = new WebGLMultisampleRenderTarget(size.width, size.height, {\n        format: RGBAFormat,\n        encoding: sRGBEncoding\n      });\n      t.samples = 8;\n      return t;\n    }\n  });\n  useEffect(() => {\n    var _composer$current, _composer$current2;\n\n    (_composer$current = composer.current) == null ? void 0 : _composer$current.setSize(size.width, size.height);\n    (_composer$current2 = composer.current) == null ? void 0 : _composer$current2.setPixelRatio(gl.getPixelRatio());\n  }, [gl, size]);\n  useFrame(() => {\n    var _composer$current3;\n\n    return (_composer$current3 = composer.current) == null ? void 0 : _composer$current3.render();\n  }, renderIndex);\n  return /*#__PURE__*/React.createElement(\"effectComposer\", _extends({\n    ref: mergeRefs([ref, composer]),\n    args: [gl, target]\n  }, props), !disableRenderPass && /*#__PURE__*/React.createElement(\"renderPass\", {\n    attachArray: \"passes\",\n    args: [scene, camera]\n  }), !disableGamma && /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attachArray: \"passes\",\n    args: [GammaCorrectionShader]\n  }), children);\n});\n\nconst OrthographicCamera = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    children,\n    makeDefault = false\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"makeDefault\"]);\n\n  const {\n    setDefaultCamera,\n    camera,\n    size\n  } = useThree();\n  const cameraRef = useUpdate(cam => cam.updateProjectionMatrix(), [size, props]);\n  useLayoutEffect(() => {\n    if (makeDefault && cameraRef.current) {\n      const oldCam = camera;\n      setDefaultCamera(cameraRef.current);\n      return () => setDefaultCamera(oldCam);\n    }\n  }, [camera, cameraRef, makeDefault, setDefaultCamera]);\n  return /*#__PURE__*/React.createElement(\"orthographicCamera\", _extends({\n    left: size.width / -2,\n    right: size.width / 2,\n    top: size.height / 2,\n    bottom: size.height / -2,\n    ref: mergeRefs([cameraRef, ref])\n  }, props), children);\n});\n\nconst PerspectiveCamera = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    makeDefault = false\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"makeDefault\"]);\n\n  const {\n    setDefaultCamera,\n    camera,\n    size\n  } = useThree();\n  const cameraRef = useUpdate(cam => {\n    cam.aspect = size.width / size.height;\n    cam.updateProjectionMatrix();\n  }, [size, props]);\n  useLayoutEffect(() => {\n    if (makeDefault && cameraRef.current) {\n      const oldCam = camera;\n      setDefaultCamera(cameraRef.current);\n      return () => setDefaultCamera(oldCam);\n    }\n  }, [camera, cameraRef, makeDefault, setDefaultCamera]);\n  return /*#__PURE__*/React.createElement(\"perspectiveCamera\", _extends({\n    ref: mergeRefs([cameraRef, ref])\n  }, props));\n});\n\nfunction call(ref, value) {\n  if (typeof ref === 'function') ref(value);else if (ref != null) ref.current = value;\n}\n\nfunction useEffectfulState(fn, deps = [], cb) {\n  const [state, set] = useState();\n  useLayoutEffect(() => {\n    const value = fn();\n    set(value);\n    call(cb, value);\n    return () => call(cb, null); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n  return state;\n}\n\nconst DeviceOrientationControls = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    camera,\n    invalidate\n  } = useThree();\n  const controls = useEffectfulState(() => new DeviceOrientationControls$1(camera), [camera], ref);\n  useEffect(() => {\n    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);\n    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);\n  }, [controls, invalidate]);\n  useFrame(() => controls == null ? void 0 : controls.update());\n  useEffect(() => {\n    const current = controls;\n    current == null ? void 0 : current.connect();\n    return () => current == null ? void 0 : current.dispose();\n  }, [controls]);\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: controls\n  }, props)) : null;\n});\n\nconst FlyControls = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    camera,\n    gl,\n    invalidate\n  } = useThree();\n  const controls = useEffectfulState(() => new FlyControls$1(camera, gl.domElement), [camera, gl.domElement], ref);\n  useEffect(() => {\n    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);\n    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);\n  }, [controls, invalidate]);\n  useFrame((_, delta) => controls == null ? void 0 : controls.update(delta));\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: controls\n  }, props)) : null;\n});\n\nconst MapControls = /*#__PURE__*/forwardRef((props = {\n  enableDamping: true\n}, ref) => {\n  const {\n    camera,\n    gl,\n    invalidate\n  } = useThree();\n  const controls = useEffectfulState(() => new MapControls$1(camera, gl.domElement), [camera, gl], ref);\n  useFrame(() => controls == null ? void 0 : controls.update());\n  useEffect(() => {\n    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);\n    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);\n  }, [controls, invalidate]);\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: controls,\n    enableDamping: true\n  }, props)) : null;\n});\n\nconst OrbitControls = /*#__PURE__*/forwardRef((props = {\n  enableDamping: true\n}, ref) => {\n  const {\n    camera,\n    gl,\n    invalidate\n  } = useThree();\n  const controls = useEffectfulState(() => new OrbitControls$1(camera, gl.domElement), [camera, gl], ref);\n  useFrame(() => controls == null ? void 0 : controls.update());\n  useEffect(() => {\n    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);\n    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);\n  }, [controls, invalidate]);\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: controls,\n    enableDamping: true\n  }, props)) : null;\n});\n\nconst TrackballControls = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    camera,\n    gl,\n    invalidate\n  } = useThree();\n  const controls = useEffectfulState(() => new TrackballControls$1(camera, gl.domElement), [camera, gl], ref);\n  useFrame(() => controls == null ? void 0 : controls.update());\n  useEffect(() => {\n    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);\n    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);\n  }, [controls, invalidate]);\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: controls\n  }, props)) : null;\n});\n\nconst TransformControls = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  const transformOnlyPropNames = ['enabled', 'axis', 'mode', 'translationSnap', 'rotationSnap', 'scaleSnap', 'space', 'size', 'dragging', 'showX', 'showY', 'showZ'];\n  const transformProps = pick(props, transformOnlyPropNames);\n  const objectProps = omit(props, transformOnlyPropNames);\n  const {\n    camera,\n    gl,\n    invalidate\n  } = useThree();\n  const controls = useEffectfulState(() => new TransformControls$1(camera, gl.domElement), [camera, gl.domElement], ref);\n  const group = useRef();\n  useLayoutEffect(() => void (controls == null ? void 0 : controls.attach(group.current)), [children, controls]);\n  useEffect(() => {\n    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);\n    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);\n  }, [controls, invalidate]);\n  return controls ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: controls\n  }, transformProps)), /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, objectProps), children)) : null;\n});\n\nconst PointerLockControls = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    camera,\n    gl,\n    invalidate\n  } = useThree();\n  const controls = useEffectfulState(() => new PointerLockControls$1(camera, gl.domElement), [camera, gl.domElement], ref);\n  useEffect(() => {\n    controls == null ? void 0 : controls.addEventListener == null ? void 0 : controls.addEventListener('change', invalidate);\n    return () => controls == null ? void 0 : controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', invalidate);\n  }, [controls, invalidate]);\n  useEffect(() => {\n    const handler = () => controls == null ? void 0 : controls.lock();\n\n    document.addEventListener('click', handler);\n    return () => document.removeEventListener('click', handler);\n  }, [controls]);\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: controls\n  }, props)) : null;\n});\n\nconst useProgress = create$1(set => {\n  DefaultLoadingManager.onStart = (item, loaded, total) => set({\n    active: true,\n    item,\n    loaded,\n    total,\n    progress: loaded / total * 100\n  });\n\n  DefaultLoadingManager.onLoad = () => set({\n    active: false\n  });\n\n  DefaultLoadingManager.onError = item => set(state => ({\n    errors: [...state.errors, item]\n  }));\n\n  DefaultLoadingManager.onProgress = (item, loaded, total) => set({\n    item,\n    loaded,\n    total,\n    progress: loaded / total * 100\n  });\n\n  return {\n    errors: [],\n    active: false,\n    progress: 0,\n    item: '',\n    loaded: 0,\n    total: 0\n  };\n});\n\nconst styles = {\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    background: '#171717',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 1000\n  },\n  inner: {\n    width: 100,\n    height: 3,\n    background: '#272727',\n    textAlign: 'center'\n  },\n  bar: {\n    height: 3,\n    width: '100%',\n    background: 'white',\n    transformOrigin: 'left center'\n  },\n  data: {\n    display: 'inline-block',\n    position: 'relative',\n    fontVariantNumeric: 'tabular-nums',\n    marginTop: '0.8em',\n    color: '#f0f0f0',\n    fontSize: '0.6em',\n    fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Inter\\\", \\\"Segoe UI\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, Roboto, Ubuntu, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\n    whiteSpace: 'nowrap'\n  }\n};\nfunction Loader({\n  containerStyles,\n  innerStyles,\n  barStyles,\n  dataStyles,\n  dataInterpolation = p => \"Loading \" + p.toFixed(2) + \"%\",\n  initialState = active => active\n}) {\n  const {\n    active,\n    progress\n  } = useProgress();\n  const transition = useTransition(initialState(active), {\n    from: {\n      opacity: 1,\n      progress: 0\n    },\n    leave: {\n      opacity: 0\n    },\n    update: {\n      progress: progress / 100\n    }\n  });\n  return transition(({\n    progress,\n    opacity\n  }, active) => active && /*#__PURE__*/React.createElement(a.div, {\n    style: _extends({}, styles.container, {\n      opacity\n    }, containerStyles)\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    style: _extends({}, styles.inner, innerStyles)\n  }, /*#__PURE__*/React.createElement(a.div, {\n    style: _extends({}, styles.bar, {\n      scaleX: progress\n    }, barStyles)\n  }), /*#__PURE__*/React.createElement(a.span, {\n    style: _extends({}, styles.data, dataStyles)\n  }, progress.to(dataInterpolation))))));\n}\n\nfunction useCubeTexture(files, {\n  path\n}) {\n  // @ts-ignore\n  const [cubeTexture] = useLoader( // @ts-ignore\n  CubeTextureLoader, [files], loader => loader.setPath(path));\n  return cubeTexture;\n}\n\nuseCubeTexture.preload = (files, {\n  path\n}) => useLoader.preload( // @ts-ignore\nCubeTextureLoader, [files], loader => loader.setPath(path));\n\nfunction useFBX(path) {\n  return useLoader(FBXLoader, path);\n}\n\nuseFBX.preload = path => useLoader.preload(FBXLoader, path);\n\nfunction draco(url = 'https://www.gstatic.com/draco/v1/decoders/') {\n  return loader => {\n    const dracoLoader = new DRACOLoader();\n    dracoLoader.setDecoderPath(url);\n    loader.setDRACOLoader(dracoLoader);\n  };\n}\n\nfunction useGLTF(path, useDraco = true) {\n  const gltf = useLoader(GLTFLoader, path, useDraco ? draco(typeof useDraco === 'string' ? useDraco : undefined) : undefined);\n  return gltf;\n}\n\nuseGLTF.preload = (path, useDraco = true) => useLoader.preload(GLTFLoader, path, useDraco ? draco(typeof useDraco === 'string' ? useDraco : undefined) : undefined);\n\nfunction useTexture(url) {\n  return useLoader(TextureLoader, url);\n}\n\nuseTexture.preload = url => useLoader.preload(TextureLoader, url);\n\nconst v1 = new Vector3();\nconst v2 = new Vector3();\nconst v3 = new Vector3();\n\nfunction calculatePosition(el, camera, size) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\n\nfunction isObjectBehindCamera(el, camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\n\nfunction objectScale(el, camera) {\n  if (camera instanceof PerspectiveCamera$1) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = camera.fov * Math.PI / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    return 1 / (2 * Math.tan(vFOV / 2) * dist);\n  }\n\n  if (camera instanceof OrthographicCamera$1) return camera.zoom;\n  return 1;\n}\n\nfunction objectZIndex(el, camera, zIndexRange) {\n  if (camera instanceof PerspectiveCamera$1 || camera instanceof OrthographicCamera$1) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n\n  return undefined;\n}\n\nconst Html = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  var _portal$current;\n\n  let {\n    children,\n    eps = 0.001,\n    style,\n    className,\n    prepend,\n    center,\n    fullscreen,\n    portal,\n    scaleFactor,\n    zIndexRange = [16777271, 0]\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eps\", \"style\", \"className\", \"prepend\", \"center\", \"fullscreen\", \"portal\", \"scaleFactor\", \"zIndexRange\"]);\n\n  const {\n    gl,\n    scene,\n    camera,\n    size\n  } = useThree();\n  const [el] = useState(() => document.createElement('div'));\n  const group = useRef(null);\n  const old = useRef([0, 0]);\n  const target = (_portal$current = portal == null ? void 0 : portal.current) != null ? _portal$current : gl.domElement.parentNode;\n  useEffect(() => {\n    if (group.current) {\n      scene.updateMatrixWorld();\n      const vec = calculatePosition(group.current, camera, size);\n      el.style.cssText = \"position:absolute;top:0;left:0;transform:translate3d(\" + vec[0] + \"px,\" + vec[1] + \"px,0);transform-origin:0 0;\";\n\n      if (target) {\n        if (prepend) target.prepend(el);else target.appendChild(el);\n      }\n\n      return () => {\n        if (target) target.removeChild(el);\n        ReactDOM.unmountComponentAtNode(el);\n      };\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [target]);\n  const styles = useMemo(() => _extends({\n    position: 'absolute',\n    transform: center ? 'translate3d(-50%,-50%,0)' : 'none'\n  }, fullscreen && {\n    top: -size.height / 2,\n    left: -size.width / 2,\n    width: size.width,\n    height: size.height\n  }, style), [style, center, fullscreen, size]);\n  useEffect(() => void ReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: styles,\n    className: className,\n    children: children\n  }), el));\n  useFrame(() => {\n    if (group.current) {\n      camera.updateMatrixWorld();\n      const vec = calculatePosition(group.current, camera, size);\n\n      if (Math.abs(old.current[0] - vec[0]) > eps || Math.abs(old.current[1] - vec[1]) > eps) {\n        el.style.display = !isObjectBehindCamera(group.current, camera) ? 'block' : 'none';\n        const scale = scaleFactor === undefined ? 1 : objectScale(group.current, camera) * scaleFactor;\n        el.style.transform = \"translate3d(\" + vec[0] + \"px,\" + vec[1] + \"px,0) scale(\" + scale + \")\";\n        el.style.zIndex = \"\" + objectZIndex(group.current, camera, zIndexRange);\n      }\n\n      old.current = vec;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: group\n  }));\n});\nconst HTML = /*#__PURE__*/React.forwardRef((props, ref) => {\n  useEffect(() => void console.warn('The <HTML> component was renamed to <Html>'), []);\n  return /*#__PURE__*/React.createElement(Html, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nlet _inverseMatrix = new Matrix4();\n\nlet _ray = new Ray();\n\nlet _sphere = new Sphere$1();\n\nlet _vA = new Vector3();\n\nfunction meshBounds(raycaster, intersects) {\n  let geometry = this.geometry;\n  let material = this.material;\n  let matrixWorld = this.matrixWorld;\n  if (material === undefined) return; // Checking boundingSphere distance to ray\n\n  if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n  _sphere.copy(geometry.boundingSphere);\n\n  _sphere.applyMatrix4(matrixWorld);\n\n  if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n\n  _inverseMatrix.getInverse(matrixWorld);\n\n  _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix); // Check boundingBox before continuing\n\n\n  if (geometry.boundingBox !== null && _ray.intersectBox(geometry.boundingBox, _vA) === null) return;\n  intersects.push({\n    distance: _vA.distanceTo(raycaster.ray.origin),\n    point: _vA.clone(),\n    object: this\n  });\n}\n\nconst Reflector = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    children,\n    color,\n    textureWidth,\n    textureHeight,\n    clipBias,\n    shader,\n    encoding\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"color\", \"textureWidth\", \"textureHeight\", \"clipBias\", \"shader\", \"encoding\"]);\n\n  const reflector = useMemo(() => new Reflector$1(undefined, {\n    color,\n    textureWidth,\n    textureHeight,\n    clipBias,\n    shader,\n    encoding\n  }), [clipBias, color, encoding, shader, textureHeight, textureWidth]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: reflector,\n    ref: ref\n  }, props), React.Children.only(children));\n});\n\nconst Shadow = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    fog = false,\n    colorStop = 0.0,\n    color = 'black',\n    opacity = 0.5\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fog\", \"colorStop\", \"color\", \"opacity\"]);\n\n  const canvas = useMemo(() => {\n    let canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    let context = canvas.getContext('2d');\n    let gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\n    gradient.addColorStop(colorStop, new Color(color).getStyle());\n    gradient.addColorStop(1, 'rgba(0,0,0,0)');\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    return canvas;\n  }, [color, colorStop]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    attach: \"material\",\n    transparent: true,\n    opacity: opacity,\n    fog: fog\n  }, /*#__PURE__*/React.createElement(\"canvasTexture\", {\n    attach: \"map\",\n    args: [canvas]\n  })));\n});\n\nfunction Stats({\n  showPanel = 0,\n  className,\n  parent\n}) {\n  const stats = useEffectfulState(() => new StatsImpl(), []);\n  useEffect(() => {\n    if (stats) {\n      const node = parent && parent.current || document.body;\n      stats.showPanel(showPanel);\n      node == null ? void 0 : node.appendChild(stats.dom);\n      if (className) stats.dom.classList.add(className);\n      const begin = addEffect(() => stats.begin());\n      const end = addAfterEffect(() => stats.end());\n      return () => {\n        node == null ? void 0 : node.removeChild(stats.dom);\n        begin();\n        end();\n      };\n    }\n  }, [parent, stats, className, showPanel]);\n  return null;\n}\n\nfunction useAspect(type, width, height, factor = 1) {\n  const {\n    viewport: v,\n    aspect\n  } = useThree();\n  const adaptedHeight = height * (aspect > width / height ? v.width / width : v.height / height);\n  const adaptedWidth = width * (aspect > width / height ? v.width / width : v.height / height);\n  return [adaptedWidth * factor, adaptedHeight * factor, 1];\n}\n\nfunction useCamera(camera, props) {\n  const {\n    mouse\n  } = useThree();\n  const [raycast] = useState(() => {\n    let raycaster = new Raycaster();\n    if (props) applyProps(raycaster, props, {});\n    return function (_, intersects) {\n      raycaster.setFromCamera(mouse, camera instanceof Camera ? camera : camera.current);\n      const rc = this.constructor.prototype.raycast.bind(this);\n      if (rc) rc(raycaster, intersects);\n    };\n  });\n  return raycast;\n}\n\nfunction useDetectGPU(props) {\n  const GPUTier = useMemo(() => {\n    const GPUTier = getGPUTier(props);\n    return {\n      isDesktop: GPUTier.tier.indexOf('DESKTOP') > -1,\n      isMobile: GPUTier.tier.indexOf('MOBILE') > -1,\n      tier: GPUTier.tier.split('_').pop(),\n      type: GPUTier.type\n    };\n  }, [props]);\n  return GPUTier;\n}\n\nfunction useHelper(object3D, proto, ...args) {\n  const helper = React.useRef();\n  const {\n    scene\n  } = useThree();\n  useEffect(() => {\n    if (proto && object3D.current) {\n      helper.current = new proto(object3D.current, ...args);\n\n      if (helper.current) {\n        scene.add(helper.current);\n      }\n    }\n\n    return () => {\n      if (helper.current) {\n        scene.remove(helper.current);\n      }\n    };\n  }, [scene, proto, object3D, args]);\n  useFrame(() => {\n    if (helper.current) {\n      helper.current.update();\n    }\n  });\n  return helper;\n}\n\n/* eslint-disable react-hooks/rules-of-hooks */\nfunction useContextBridge(...contexts) {\n  const cRef = useRef([]);\n  cRef.current = contexts.map(context => React.useContext(context));\n  return useMemo(() => ({\n    children\n  }) => contexts.reduceRight((acc, Context, i) => /*#__PURE__*/React.createElement(Context.Provider, {\n    value: cRef.current[i],\n    children: acc\n  }), children), []);\n}\n\nfunction useSimplification(simplePercent) {\n  const ref = useRef();\n  const original = useRef();\n  const modifier = useRef();\n  useEffect(() => {\n    if (!original.current) {\n      original.current = ref.current.geometry.clone();\n      modifier.current = new SimplifyModifier();\n    }\n  }, []);\n  useEffect(() => {\n    if (original.current && ref.current) {\n      let geometry = new BufferGeometry();\n\n      if (original.current instanceof BufferGeometry) {\n        geometry = original.current.clone();\n      } else {\n        geometry = geometry.fromGeometry(original.current);\n      }\n\n      const count = Math.floor(geometry.attributes.position.count * simplePercent); // number of vertices to remove\n\n      ref.current.geometry = modifier.current.modify(geometry, count);\n    }\n  }, [simplePercent]);\n  return ref;\n}\n\nfunction useSubdivision(subdivisions) {\n  const ref = useRef();\n  const original = useRef();\n  const modifier = useRef();\n  useEffect(() => {\n    if (!original.current) {\n      original.current = ref.current.geometry.clone();\n      modifier.current = new SubdivisionModifier(parseInt(subdivisions));\n    }\n  }, [subdivisions]);\n  useEffect(() => {\n    modifier.current.subdivisions = subdivisions;\n  }, [subdivisions]);\n  useEffect(() => {\n    if (original.current && ref.current) {\n      const bufferGeometry = new BufferGeometry();\n      const subdivided = bufferGeometry.fromGeometry(modifier.current.modify(original.current));\n      ref.current.geometry = subdivided;\n    }\n  }, [subdivisions]);\n  return ref;\n}\n\nfunction useTessellation(passes = 3, maxEdgeLength) {\n  const ref = useRef();\n  const original = useRef();\n  const modifier = useRef();\n  useEffect(() => {\n    if (!original.current) {\n      original.current = ref.current.geometry.clone();\n      modifier.current = new TessellateModifier(parseInt(maxEdgeLength));\n    }\n  }, [maxEdgeLength]);\n  useEffect(() => {\n    modifier.current.maxEdgeLength = maxEdgeLength;\n  }, [maxEdgeLength]);\n  useEffect(() => {\n    if (original.current && ref.current) {\n      let geometry = new Geometry();\n\n      if (original.current instanceof BufferGeometry) {\n        geometry.fromBufferGeometry(original.current);\n      } else {\n        geometry = original.current.clone();\n      }\n\n      const bufferGeometry = new BufferGeometry();\n\n      for (let i = 0; i < passes; i++) {\n        modifier.current.modify(geometry);\n      }\n\n      const tessellated = bufferGeometry.fromGeometry(geometry);\n      ref.current.geometry = tessellated;\n    }\n  }, [maxEdgeLength, passes]);\n  return ref;\n}\n\nvar distort = \"#define GLSLIFY 1\\nvec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}float snoise(vec3 v){const vec2 C=vec2(1.0/6.0,1.0/3.0);const vec4 D=vec4(0.0,0.5,1.0,2.0);vec3 i=floor(v+dot(v,C.yyy));vec3 x0=v-i+dot(i,C.xxx);vec3 g=step(x0.yzx,x0.xyz);vec3 l=1.0-g;vec3 i1=min(g.xyz,l.zxy);vec3 i2=max(g.xyz,l.zxy);vec3 x1=x0-i1+C.xxx;vec3 x2=x0-i2+C.yyy;vec3 x3=x0-D.yyy;i=mod289(i);vec4 p=permute(permute(permute(i.z+vec4(0.0,i1.z,i2.z,1.0))+i.y+vec4(0.0,i1.y,i2.y,1.0))+i.x+vec4(0.0,i1.x,i2.x,1.0));float n_=0.142857142857;vec3 ns=n_*D.wyz-D.xzx;vec4 j=p-49.0*floor(p*ns.z*ns.z);vec4 x_=floor(j*ns.z);vec4 y_=floor(j-7.0*x_);vec4 x=x_*ns.x+ns.yyyy;vec4 y=y_*ns.x+ns.yyyy;vec4 h=1.0-abs(x)-abs(y);vec4 b0=vec4(x.xy,y.xy);vec4 b1=vec4(x.zw,y.zw);vec4 s0=floor(b0)*2.0+1.0;vec4 s1=floor(b1)*2.0+1.0;vec4 sh=-step(h,vec4(0.0));vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;vec3 p0=vec3(a0.xy,h.x);vec3 p1=vec3(a0.zw,h.y);vec3 p2=vec3(a1.xy,h.z);vec3 p3=vec3(a1.zw,h.w);vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));p0*=norm.x;p1*=norm.y;p2*=norm.z;p3*=norm.w;vec4 m=max(0.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.0);m=m*m;return 42.0*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));}\"; // eslint-disable-line\n\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n\n    _defineProperty(this, \"_time\", void 0);\n\n    _defineProperty(this, \"_distort\", void 0);\n\n    _defineProperty(this, \"_radius\", void 0);\n\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = \"\\n      uniform float time;\\n      uniform float radius;\\n      uniform float distort;\\n      \" + distort + \"\\n      \" + shader.vertexShader + \"\\n    \";\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"\\n        float updateTime = time / 50.0;\\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\\n        \");\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get distort() {\n    return this._distort.value;\n  }\n\n  set distort(v) {\n    this._distort.value = v;\n  }\n\n  get radius() {\n    return this._radius.value;\n  }\n\n  set radius(v) {\n    this._radius.value = v;\n  }\n\n}\n\nconst MeshDistortMaterial = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    speed = 1\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"speed\"]);\n\n  const [material] = useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nclass WobbleMaterialImpl extends MeshStandardMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n\n    _defineProperty(this, \"_time\", void 0);\n\n    _defineProperty(this, \"_factor\", void 0);\n\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._factor = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.factor = this._factor;\n    shader.vertexShader = \"\\n      uniform float time;\\n      uniform float factor;\\n      \" + shader.vertexShader + \"\\n    \";\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"float theta = sin( time + position.y ) / 2.0 * factor;\\n        float c = cos( theta );\\n        float s = sin( theta );\\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\\n        vec3 transformed = vec3( position ) * m;\\n        vNormal = vNormal * m;\");\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get factor() {\n    return this._factor.value;\n  }\n\n  set factor(v) {\n    this._factor.value = v;\n  }\n\n}\n\nconst MeshWobbleMaterial = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    speed = 1\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"speed\"]);\n\n  const [material] = useState(() => new WobbleMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  return class extends ShaderMaterial {\n    constructor() {\n      const entries = Object.entries(uniforms); // Create unforms and shaders\n\n      super({\n        uniforms: entries.reduce((acc, [name, value]) => _extends({}, acc, {\n          [name]: {\n            value\n          }\n        }), {}),\n        vertexShader,\n        fragmentShader\n      }); // Create getter/setters\n\n      entries.forEach(([name]) => Object.defineProperty(this, name, {\n        get: () => this.uniforms[name].value,\n        set: v => this.uniforms[name].value = v\n      }));\n      if (onInit) onInit(this);\n    }\n\n  };\n}\n\nfunction calcPosFromAngles(inclination, azimuth, vector = new Vector3()) {\n  const theta = Math.PI * (inclination - 0.5);\n  const phi = 2 * Math.PI * (azimuth - 0.5);\n  vector.x = Math.cos(phi);\n  vector.y = Math.sin(theta);\n  vector.z = Math.sin(phi);\n  return vector;\n}\nconst Sky = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    inclination = 0,\n    azimuth = 0.25,\n    distance = 100,\n    mieCoefficient = 0.005,\n    mieDirectionalG = 0.8,\n    rayleigh = 1,\n    turbidity = 2,\n    sunPosition = calcPosFromAngles(inclination, azimuth)\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"inclination\", \"azimuth\", \"distance\", \"mieCoefficient\", \"mieDirectionalG\", \"rayleigh\", \"turbidity\", \"sunPosition\"]);\n\n  const scale = useMemo(() => new Vector3().setScalar(distance), [distance]);\n  const [sky] = useState(() => new Sky$1());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: sky,\n    ref: ref,\n    \"material-uniforms-mieCoefficient-value\": mieCoefficient,\n    \"material-uniforms-mieDirectionalG-value\": mieDirectionalG,\n    \"material-uniforms-rayleigh-value\": rayleigh,\n    \"material-uniforms-sunPosition-value\": sunPosition,\n    \"material-uniforms-turbidity-value\": turbidity,\n    scale: scale\n  }, props));\n});\n\nconst pcss = ({\n  frustrum = 3.75,\n  size = 0.005,\n  near = 9.5,\n  samples = 17,\n  rings = 11\n} = {}) => \"#define LIGHT_WORLD_SIZE \" + size + \"\\n#define LIGHT_FRUSTUM_WIDTH \" + frustrum + \"\\n#define LIGHT_SIZE_UV (LIGHT_WORLD_SIZE / LIGHT_FRUSTUM_WIDTH)\\n#define NEAR_PLANE \" + near + \"\\n\\n#define NUM_SAMPLES \" + samples + \"\\n#define NUM_RINGS \" + rings + \"\\n#define BLOCKER_SEARCH_NUM_SAMPLES NUM_SAMPLES\\n#define PCF_NUM_SAMPLES NUM_SAMPLES\\n\\nvec2 poissonDisk[NUM_SAMPLES];\\n\\nvoid initPoissonSamples(const in vec2 randomSeed) {\\n\\tfloat ANGLE_STEP = PI2 * float(NUM_RINGS) / float(NUM_SAMPLES);\\n\\tfloat INV_NUM_SAMPLES = 1.0 / float(NUM_SAMPLES);\\n\\tfloat angle = rand(randomSeed) * PI2;\\n\\tfloat radius = INV_NUM_SAMPLES;\\n\\tfloat radiusStep = radius;\\n\\tfor (int i = 0; i < NUM_SAMPLES; i++) {\\n\\t\\tpoissonDisk[i] = vec2(cos(angle), sin(angle)) * pow(radius, 0.75);\\n\\t\\tradius += radiusStep;\\n\\t\\tangle += ANGLE_STEP;\\n\\t}\\n}\\n\\nfloat penumbraSize(const in float zReceiver, const in float zBlocker) { // Parallel plane estimation\\n\\treturn (zReceiver - zBlocker) / zBlocker;\\n}\\n\\nfloat findBlocker(sampler2D shadowMap, const in vec2 uv, const in float zReceiver) {\\n\\tfloat searchRadius = LIGHT_SIZE_UV * (zReceiver - NEAR_PLANE) / zReceiver;\\n\\tfloat blockerDepthSum = 0.0;\\n\\tint numBlockers = 0;\\n\\tfor (int i = 0; i < BLOCKER_SEARCH_NUM_SAMPLES; i++) {\\n\\t\\tfloat shadowMapDepth = unpackRGBAToDepth(texture2D(shadowMap, uv + poissonDisk[i] * searchRadius));\\n\\t\\tif (shadowMapDepth < zReceiver) {\\n\\t\\t\\tblockerDepthSum += shadowMapDepth;\\n\\t\\t\\tnumBlockers++;\\n\\t\\t}\\n\\t}\\n\\tif (numBlockers == 0) return -1.0;\\n\\treturn blockerDepthSum / float(numBlockers);\\n}\\n\\nfloat PCF_Filter(sampler2D shadowMap, vec2 uv, float zReceiver, float filterRadius) {\\n\\tfloat sum = 0.0;\\n\\tfor (int i = 0; i < PCF_NUM_SAMPLES; i++) {\\n\\t\\tfloat depth = unpackRGBAToDepth(texture2D(shadowMap, uv + poissonDisk[ i ] * filterRadius));\\n\\t\\tif (zReceiver <= depth) sum += 1.0;\\n\\t}\\n\\tfor (int i = 0; i < PCF_NUM_SAMPLES; i++) {\\n\\t\\tfloat depth = unpackRGBAToDepth(texture2D(shadowMap, uv + -poissonDisk[ i ].yx * filterRadius));\\n\\t\\tif (zReceiver <= depth) sum += 1.0;\\n\\t}\\n\\treturn sum / (2.0 * float(PCF_NUM_SAMPLES));\\n}\\n\\nfloat PCSS(sampler2D shadowMap, vec4 coords) {\\n\\tvec2 uv = coords.xy;\\n\\tfloat zReceiver = coords.z; // Assumed to be eye-space z in this code\\n\\tinitPoissonSamples(uv);\\n\\tfloat avgBlockerDepth = findBlocker(shadowMap, uv, zReceiver);\\n\\tif (avgBlockerDepth == -1.0) return 1.0;\\n\\tfloat penumbraRatio = penumbraSize(zReceiver, avgBlockerDepth);\\n\\tfloat filterRadius = penumbraRatio * LIGHT_SIZE_UV * NEAR_PLANE / zReceiver;\\n\\treturn PCF_Filter(shadowMap, uv, zReceiver, filterRadius);\\n}\";\n\nlet deployed = false;\nconst softShadows = props => {\n  // Avoid adding the effect twice, which may happen in HMR scenarios\n  if (!deployed) {\n    deployed = true;\n    let shader = ShaderChunk.shadowmap_pars_fragment;\n    shader = shader.replace('#ifdef USE_SHADOWMAP', '#ifdef USE_SHADOWMAP\\n' + pcss(_extends({}, props)));\n    shader = shader.replace('#if defined( SHADOWMAP_TYPE_PCF )', '\\nreturn PCSS(shadowMap, shadowCoord);\\n#if defined( SHADOWMAP_TYPE_PCF )');\n    ShaderChunk.shadowmap_pars_fragment = shader;\n  }\n};\n\nclass StarfieldMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        time: {\n          value: 0.0\n        },\n        fade: {\n          value: 1.0\n        }\n      },\n      vertexShader: \"uniform float time;\\n      attribute float size;\\n      varying vec3 vColor;\\n      void main() {\\n        vColor = color;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 0.5);\\n        gl_PointSize = size * (30.0 / -mvPosition.z) * (3.0 + sin(mvPosition.x + 2.0 * time + 100.0));\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\",\n      fragmentShader: \"uniform sampler2D pointTexture;\\n      uniform float fade;\\n      varying vec3 vColor;\\n      void main() {\\n        float opacity = 1.0;\\n        if (fade == 1.0) {\\n          float d = distance(gl_PointCoord, vec2(0.5, 0.5));\\n          opacity = 1.0 / (1.0 + exp(16.0 * (d - 0.25)));\\n        }\\n        gl_FragColor = vec4(vColor, opacity);\\n      }\"\n    });\n  }\n\n}\n\nconst genStar = r => {\n  return new Vector3().setFromSpherical(new Spherical(r, Math.acos(1 - Math.random() * 2), Math.random() * 2 * Math.PI));\n};\n\nconst Stars = /*#__PURE__*/forwardRef(({\n  radius = 100,\n  depth = 50,\n  count = 5000,\n  saturation = 0,\n  factor = 4,\n  fade = false\n}, ref) => {\n  const material = useRef();\n  const [position, color, size] = useMemo(() => {\n    const positions = [];\n    const colors = [];\n    const sizes = Array.from({\n      length: count\n    }, () => (0.5 + 0.5 * Math.random()) * factor);\n    const color = new Color();\n    let r = radius + depth;\n    const increment = depth / count;\n\n    for (let i = 0; i < count; i++) {\n      r -= increment * Math.random();\n      positions.push(...genStar(r).toArray());\n      color.setHSL(i / count, saturation, 0.9);\n      colors.push(color.r, color.g, color.b);\n    }\n\n    return [new Float32Array(positions), new Float32Array(colors), new Float32Array(sizes)];\n  }, [count, depth, factor, radius, saturation]);\n  useFrame(state => material.current && (material.current.uniforms.time.value = state.clock.getElapsedTime()));\n  const [starfieldMaterial] = useState(() => new StarfieldMaterial());\n  return /*#__PURE__*/React.createElement(\"points\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", {\n    attach: \"geometry\"\n  }, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'position'],\n    args: [position, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'color'],\n    args: [color, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'size'],\n    args: [size, 1]\n  })), /*#__PURE__*/React.createElement(\"primitive\", {\n    dispose: undefined,\n    ref: material,\n    object: starfieldMaterial,\n    attach: \"material\",\n    blending: AdditiveBlending,\n    \"uniforms-fade-value\": fade,\n    transparent: true,\n    vertexColors: true\n  }));\n});\n\nconst ContactShadows = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    opacity = 1,\n    width = 1,\n    height = 1,\n    blur = 1,\n    far = 10,\n    resolution = 256\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"opacity\", \"width\", \"height\", \"blur\", \"far\", \"resolution\"]);\n\n  const {\n    scene,\n    gl\n  } = useThree();\n  const shadowCamera = useRef();\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = useMemo(() => {\n    const renderTarget = new WebGLRenderTarget(resolution, resolution);\n    const renderTargetBlur = new WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    const planeGeometry = new PlaneBufferGeometry(width, height).rotateX(Math.PI / 2);\n    const blurPlane = new Mesh(planeGeometry);\n    const depthMaterial = new MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = shader => shader.fragmentShader = shader.fragmentShader.replace('1.0 - fragCoordZ ), opacity );', '0.0 ), ( 1.0 - fragCoordZ ) * 1.0 );');\n\n    const horizontalBlurMaterial = new ShaderMaterial(HorizontalBlurShader);\n    const verticalBlurMaterial = new ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height]);\n  useFrame(() => {\n    if (shadowCamera.current) {\n      const initialBackground = scene.background;\n      scene.background = null;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      scene.overrideMaterial = null;\n      blurPlane.material = horizontalBlurMaterial;\n      blurPlane.material.uniforms.tDiffuse.value = renderTarget.texture;\n      horizontalBlurMaterial.uniforms.h.value = blur / 256;\n      gl.setRenderTarget(renderTargetBlur);\n      gl.render(blurPlane, shadowCamera.current);\n      blurPlane.material = verticalBlurMaterial;\n      blurPlane.material.uniforms.tDiffuse.value = renderTargetBlur.texture;\n      verticalBlurMaterial.uniforms.v.value = blur / 256;\n      gl.setRenderTarget(renderTarget);\n      gl.render(blurPlane, shadowCamera.current);\n      gl.setRenderTarget(null);\n      scene.background = initialBackground;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: renderTarget.texture,\n    transparent: true,\n    opacity: opacity\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\n\nconst eps = 0.00001;\n\nfunction createShape(width, height, radius0) {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);\n  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n  return shape;\n}\n\nconst RoundedBox = /*#__PURE__*/forwardRef(function RoundedBox(_ref, ref) {\n  let {\n    args: [width = 1, height = 1, depth = 1] = [],\n    radius = 0.05,\n    smoothness = 4,\n    children\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"args\", \"radius\", \"smoothness\", \"children\"]);\n\n  const shape = useMemo(() => createShape(width, height, radius), [width, height, radius]);\n  const params = useMemo(() => ({\n    depth: depth - radius * 2,\n    bevelEnabled: true,\n    bevelSegments: smoothness * 2,\n    steps: 1,\n    bevelSize: radius - eps,\n    bevelThickness: radius,\n    curveSegments: smoothness\n  }), [depth, radius, smoothness]);\n  const geomRef = useUpdate(geometry => void geometry.center(), [shape, params]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"extrudeBufferGeometry\", {\n    attach: \"geometry\",\n    ref: geomRef,\n    args: [shape, params]\n  }), children);\n});\n\nvar matcapList = {\n  \"0\": \"0404E8_0404B5_0404CB_3333FC\",\n  \"1\": \"045C5C_0DBDBD_049393_04A4A4\",\n  \"2\": \"046363_0CC3C3_049B9B_04ACAC\",\n  \"3\": \"0489C5_0DDDF9_04C3EE_04AFE1\",\n  \"4\": \"04989A_0CE3E4_04D2D5_04C7C8\",\n  \"5\": \"04C455_0EFABC_04F097_04E17A\",\n  \"6\": \"04CC77_0CF7CA_04E9A7_04AB54\",\n  \"7\": \"04E804_04B504_04CB04_33FC33\",\n  \"8\": \"04E8E8_04B5B5_04CCCC_33FCFC\",\n  \"9\": \"050505_747474_4C4C4C_333333\",\n  \"10\": \"070B0C_B2C7CE_728FA3_5B748B\",\n  \"11\": \"090909_9C9C9C_555555_7C7C7C\",\n  \"12\": \"0A0A0A_A9A9A9_525252_747474\",\n  \"13\": \"0C0CC3_04049F_040483_04045C\",\n  \"14\": \"0C430C_257D25_439A43_3C683C\",\n  \"15\": \"0D0DBD_040497_04047B_040455\",\n  \"16\": \"0D0DE3_040486_0404AF_0404CF\",\n  \"17\": \"0DBD0D_049704_047B04_045504\",\n  \"18\": \"0F0F0F_4B4B4B_1C1C1C_2C2C2C\",\n  \"19\": \"0F990F_047B04_044604_046704\",\n  \"20\": \"15100F_241D1B_292424_2C2C27\",\n  \"21\": \"161B1F_C7E0EC_90A5B3_7B8C9B\",\n  \"22\": \"167E76_36D6D2_23B2AC_27C1BE\",\n  \"23\": \"17395A_7EBCC7_4D8B9F_65A1B5\",\n  \"24\": \"181F1F_475057_616566_525C62\",\n  \"25\": \"191514_6D5145_4E3324_3B564D\",\n  \"26\": \"1A2461_3D70DB_2C3C8F_2C6CAC\",\n  \"27\": \"1B1B1B_515151_7E7E7E_6C6C6C\",\n  \"28\": \"1B1B1B_999999_575757_747474\",\n  \"29\": \"1B1C19_5F615D_4B4E4C_3F403D\",\n  \"30\": \"1C1810_352F23_2B2C1C_2B2C24\",\n  \"31\": \"1C70C6_09294C_0F3F73_52B3F6\",\n  \"32\": \"1D2424_565F66_4E555A_646C6E\",\n  \"33\": \"1D2A21_43443B_655B54_545C54\",\n  \"34\": \"1D3FCC_051B5F_81A0F2_5579E9\",\n  \"35\": \"221917_928380_5F504D_7C746C\",\n  \"36\": \"232014_908B78_5E5743_747460\",\n  \"37\": \"242733_333A4D_3E4554_3C3B43\",\n  \"38\": \"245642_3D8168_3D6858_417364\",\n  \"39\": \"253C3C_528181_406C6C_385F5F\",\n  \"40\": \"254FB0_99AFF0_6587D8_1D3279\",\n  \"41\": \"27222B_677491_484F6A_5D657A\",\n  \"42\": \"281813_604233_4B3426_442B22\",\n  \"43\": \"28292A_D3DAE5_A3ACB8_818183\",\n  \"44\": \"291912_473531_3C2C25_3A2424\",\n  \"45\": \"293534_B2BFC5_738289_8A9AA7\",\n  \"46\": \"293D21_ABC692_73B255_667C5C\",\n  \"47\": \"2A2A2A_B3B3B3_6D6D6D_848C8C\",\n  \"48\": \"2A2A2A_DBDBDB_6A6A6A_949494\",\n  \"49\": \"2A2D21_555742_898974_6C745B\",\n  \"50\": \"2A4BA7_1B2D44_1F3768_233C81\",\n  \"51\": \"2A6276_041218_739BA6_042941\",\n  \"52\": \"2B2828_7B796F_534F4A_616464\",\n  \"53\": \"2B2B22_3C3C30_464538_121210\",\n  \"54\": \"2D2D2A_74716E_8F8C8C_92958E\",\n  \"55\": \"2D2D2F_C6C2C5_727176_94949B\",\n  \"56\": \"2D8753_5CD6A5_45BB82_4CC494\",\n  \"57\": \"2E2E2D_7D7C76_A3A39F_949C94\",\n  \"58\": \"2E763A_78A0B7_B3D1CF_14F209\",\n  \"59\": \"2EAC9E_61EBE3_4DDDD1_43D1C6\",\n  \"60\": \"2F2FAA_1E1E87_10104E_1C1C70\",\n  \"61\": \"2F3747_6A7C9E_54637F_62748B\",\n  \"62\": \"300706_888576_822821_876E79\",\n  \"63\": \"302721_CAC1BB_7A706A_91959B\",\n  \"64\": \"304FB1_69A1EF_5081DF_5C8CE6\",\n  \"65\": \"312C34_A2AAB3_61656A_808494\",\n  \"66\": \"312D20_80675C_8B8C8B_85848C\",\n  \"67\": \"313131_BBBBBB_878787_A3A4A4\",\n  \"68\": \"320455_720DBE_560496_47047B\",\n  \"69\": \"32201D_613C3C_563533_8C655F\",\n  \"70\": \"32302B_4C4842_121211_1C1C14\",\n  \"71\": \"323C4D_B79039_7C6A44_605C48\",\n  \"72\": \"326666_66CBC9_C0B8AE_52B3B4\",\n  \"73\": \"331A0B_B17038_7D4E28_5B351A\",\n  \"74\": \"336EB3_152578_A4C5E2_74AED9\",\n  \"75\": \"34352A_718184_50605E_6E6761\",\n  \"76\": \"346088_6ABED7_56A0C5_4E91B8\",\n  \"77\": \"34A09C_6EE5E3_5CD7D3_4EC9C6\",\n  \"78\": \"34AB94_36DFC1_19F9EB_6C6E62\",\n  \"79\": \"353535_CFCFCF_828282_A4A4A4\",\n  \"80\": \"36220C_C6C391_8C844A_8B7B4C\",\n  \"81\": \"36312E_726461_59504D_645C5C\",\n  \"82\": \"365123_C6E5A3_A8D18D_8EB16C\",\n  \"83\": \"36C8FA_176ACB_24A7EF_1D93EC\",\n  \"84\": \"37C337_279F27_186018_248824\",\n  \"85\": \"385264_A1D3E2_86ADC1_6E94A8\",\n  \"86\": \"385862_6D8B8D_647B80_1A2E2F\",\n  \"87\": \"386169_A9CFDB_153C23_7CA3AC\",\n  \"88\": \"38925D_142B23_1D4835_2A6449\",\n  \"89\": \"392307_B3AE7D_6D5618_847C42\",\n  \"90\": \"39433A_65866E_86BF8B_BFF8D8\",\n  \"91\": \"394641_B1A67E_75BEBE_7D7256\",\n  \"92\": \"3A2412_A78B5F_705434_836C47\",\n  \"93\": \"3A3329_C9B090_928069_A9957A\",\n  \"94\": \"3A3D37_7E7F75_BCBFB6_9C9C94\",\n  \"95\": \"3B3B3B_C7C7C7_878787_A4A4A4\",\n  \"96\": \"3B3C3F_DAD9D5_929290_ABACA8\",\n  \"97\": \"3B4235_7B9395_5B716C_70847B\",\n  \"98\": \"3B6E10_E3F2C3_88AC2E_99CE51\",\n  \"99\": \"3D1F12_653821_070404_22130B\",\n  \"100\": \"3E2335_D36A1B_8E4A2E_2842A5\",\n  \"101\": \"3E3D39_D6CEAF_91BAC1_897966\",\n  \"102\": \"3E3E36_72726D_63645D_0E0F0C\",\n  \"103\": \"3E3E3E_AEAEAE_848484_777777\",\n  \"104\": \"3E95CC_65D9F1_A2E2F6_679BD4\",\n  \"105\": \"3F3A2F_91D0A5_7D876A_94977B\",\n  \"106\": \"3F3D52_CCCED9_AFB0C6_8D8CAC\",\n  \"107\": \"3F4441_D1D7D6_888F87_A2ADA1\",\n  \"108\": \"403A34_B0936E_7F979C_7E6956\",\n  \"109\": \"415325_83A24E_678239_748C3C\",\n  \"110\": \"416BA7_A5B8D0_0D2549_65ABEB\",\n  \"111\": \"422509_C89536_824512_0A0604\",\n  \"112\": \"422A1E_716767_685D59_5E4F4A\",\n  \"113\": \"424244_BDBBBE_8A898E_A3A4A9\",\n  \"114\": \"425F84_1C2939_2A3F57_24344C\",\n  \"115\": \"430404_BD9295_7E1E21_94544C\",\n  \"116\": \"432322_5E3839_170C0B_543433\",\n  \"117\": \"433D3F_A58D7D_786760_8C7C6D\",\n  \"118\": \"434240_D3D3CF_898784_A4A49F\",\n  \"119\": \"434343_9E9E9E_8C8C8C_848484\",\n  \"120\": \"434C32_62704C_546244_2F3220\",\n  \"121\": \"442C27_A79E90_847066_8D837C\",\n  \"122\": \"447072_8ACACB_65A4A5_74B3B3\",\n  \"123\": \"45432C_808361_B8C8BC_A5A27A\",\n  \"124\": \"454447_908E9A_181716_7C7C7B\",\n  \"125\": \"456A73_779B9E_173A46_154C5D\",\n  \"126\": \"463F37_ACCFBB_818B78_91A494\",\n  \"127\": \"464445_D2D0CB_919196_A8ADB0\",\n  \"128\": \"464543_D1CFC1_8E8C83_A4AC9C\",\n  \"129\": \"46804D_CBE9AC_90B57C_95D38F\",\n  \"130\": \"468126_C1DDB5_8AC460_A1D07C\",\n  \"131\": \"47392E_997E69_7C6553_8B745F\",\n  \"132\": \"474444_7B7575_9E9899_8C8C8B\",\n  \"133\": \"474643_696F7D_A9ABB8_8B8C93\",\n  \"134\": \"474843_CECEC4_898883_A3A3A4\",\n  \"135\": \"48270F_C4723B_9B5728_7B431B\",\n  \"136\": \"482908_894E0D_FBDB52_CA7420\",\n  \"137\": \"487FC9_A8E7F8_88CCF2_70AFDE\",\n  \"138\": \"489B7A_A0E7D9_6DC5AC_87DAC7\",\n  \"139\": \"48C381_226640_369F64_3CAC74\",\n  \"140\": \"49200B_C6926C_9C642B_A45C26\",\n  \"141\": \"495CA6_CCD2E6_A5B1D8_1E2852\",\n  \"142\": \"495E48_0D100D_9D9C87_9ECC9C\",\n  \"143\": \"496DBA_94C9F2_72A7E2_84B4EC\",\n  \"144\": \"4A6442_D0AB75_81CD94_181B12\",\n  \"145\": \"4B362C_715A4F_211913_644C44\",\n  \"146\": \"4B4A3A_94A3A4_68766F_988475\",\n  \"147\": \"4B5455_BBBFC4_97A0A6_838C90\",\n  \"148\": \"4C240E_A5613B_895134_734C44\",\n  \"149\": \"4C342A_7B584B_271912_6B4C44\",\n  \"150\": \"4C462E_6D876C_9AAC8F_9AABA6\",\n  \"151\": \"4C4C4C_D2D2D2_8F8F8F_ACACAC\",\n  \"152\": \"4D595E_858D87_596F84_748480\",\n  \"153\": \"4E4C42_B8C4C5_898E89_A3ACA4\",\n  \"154\": \"4E4D40_979786_AEAEA1_878678\",\n  \"155\": \"4E5150_9FA3A3_848C8A_82848C\",\n  \"156\": \"4F251B_381710_43241B_602F23\",\n  \"157\": \"4F439F_A28BE5_8570D6_7765C9\",\n  \"158\": \"4F4742_B7B1AA_847E79_969294\",\n  \"159\": \"4F4C45_A7AEAA_7A8575_9D97A2\",\n  \"160\": \"4F4F4F_9C9C9C_121212_7C7C7C\",\n  \"161\": \"4F4F4F_A1A1A1_8C8C8C_848484\",\n  \"162\": \"4F5246_8C8D84_7B7C74_131611\",\n  \"163\": \"4FE34F_2BB02B_3CD03C_1C861C\",\n  \"164\": \"50332C_D98D79_955F52_AA7C6C\",\n  \"165\": \"503522_C38254_9F6B45_845838\",\n  \"166\": \"504D3C_979C9D_81837D_9C998A\",\n  \"167\": \"513A11_CDBEB5_C8811C_9A733F\",\n  \"168\": \"51462B_DFCA7E_948050_A49874\",\n  \"169\": \"515151_DCDCDC_B7B7B7_9B9B9B\",\n  \"170\": \"515341_9A9C86_16180D_838474\",\n  \"171\": \"517919_659623_34460C_3E5813\",\n  \"172\": \"519C8D_83DAC7_9DEDE0_2B5B4C\",\n  \"173\": \"522221_91343B_7F6F6B_744960\",\n  \"174\": \"522A1A_94543A_C3896F_AB7D66\",\n  \"175\": \"525050_D4D3D3_959393_ACACAC\",\n  \"176\": \"533B33_AF9998_866965_9C7E7B\",\n  \"177\": \"535A2F_CDCA91_91915B_A4AC6F\",\n  \"178\": \"535F6B_A6BDC8_8FA3B4_7F91A2\",\n  \"179\": \"537387_75BBB9_152E5B_0E85E8\",\n  \"180\": \"54584E_B1BAC5_818B91_A7ACA3\",\n  \"181\": \"545B4D_D8DDC8_A0A792_B2C1A3\",\n  \"182\": \"54C104_BBFA0F_97EF04_7AE104\",\n  \"183\": \"55382F_78554E_271A16_6C4C44\",\n  \"184\": \"555555_C8C8C8_8B8B8B_A4A4A4\",\n  \"185\": \"556F42_112817_81927F_223E24\",\n  \"186\": \"55C404_BCFA0E_97F004_7AE104\",\n  \"187\": \"562D2A_2E1615_7E4945_703C3C\",\n  \"188\": \"56352F_1E110F_311C19_3C231C\",\n  \"189\": \"57553F_C6C3AF_8C8768_868C8C\",\n  \"190\": \"57583E_969788_292920_848474\",\n  \"191\": \"579241_B5D25D_0E1D2D_97C284\",\n  \"192\": \"582410_83381A_1F0C04_30140A\",\n  \"193\": \"583629_2E1810_765648_3C1C14\",\n  \"194\": \"584F3A_BEC3BD_C5A57D_A39073\",\n  \"195\": \"586A51_CCD5AA_8C9675_8DBBB7\",\n  \"196\": \"593E2C_E5D8A9_BC9F79_9F8A68\",\n  \"197\": \"595356_CDBFC6_AA9DA3_BBB3BC\",\n  \"198\": \"59554F_171716_847C74_2C2C24\",\n  \"199\": \"596773_B3C6CE_98AFB9_879AA8\",\n  \"200\": \"597C3F_254319_6C9668_7C9B53\",\n  \"201\": \"5A492B_DEC583_987D4D_AC9C74\",\n  \"202\": \"5A643B_454D2C_393F25_202315\",\n  \"203\": \"5B4CBC_B59AF2_9B84EB_8F78E4\",\n  \"204\": \"5B5428_C5A052_A28B46_ADA752\",\n  \"205\": \"5B574E_586967_807C6F_6A746C\",\n  \"206\": \"5C045C_BD0DBD_930493_A404A4\",\n  \"207\": \"5C2E0C_C36924_9F4F14_834114\",\n  \"208\": \"5C4E41_CCCDD6_9B979B_B1AFB0\",\n  \"209\": \"5C5743_262418_393727_342C20\",\n  \"210\": \"5C5C04_BDBD0D_939304_A4A404\",\n  \"211\": \"5C5C5C_A2A2A2_8C8C8C_848484\",\n  \"212\": \"5D5854_1A1714_373330_2C2424\",\n  \"213\": \"5D5D5D_CDCDCD_232323_ACACAC\",\n  \"214\": \"5D5E5A_A1A29B_2A2927_8B948C\",\n  \"215\": \"5E423A_8C6E69_382416_745D64\",\n  \"216\": \"5E5049_CDC2BE_9C8E88_B7ACA4\",\n  \"217\": \"5E5855_C6C4CD_C89B67_8F8E98\",\n  \"218\": \"5E5F62_A7B2BE_211C17_939CA3\",\n  \"219\": \"5ECBA4_BCFAE7_92EED0_A1F4DC\",\n  \"220\": \"5F1827_9B4A60_1F0404_340406\",\n  \"221\": \"5F4C4B_A07C7D_A8AFBF_868185\",\n  \"222\": \"5F4F50_A18E8E_8C7C7B_211A1A\",\n  \"223\": \"5F5F5F_BDBDBD_A4A4A4_9C9C9C\",\n  \"224\": \"604A30_DC9065_212C14_AC9C92\",\n  \"225\": \"60534A_211813_9B948E_8E837D\",\n  \"226\": \"605352_E9CCC5_C7A8A3_A89291\",\n  \"227\": \"606857_9BA894_8C9C83_8C9483\",\n  \"228\": \"613F04_D68C04_A45F04_1F0F04\",\n  \"229\": \"61583E_252314_928972_342C1C\",\n  \"230\": \"617586_23304C_1B1E30_4988CF\",\n  \"231\": \"622F19_885934_9A7748_94603A\",\n  \"232\": \"623622_A1756F_986353_89645B\",\n  \"233\": \"624541_FCD0C6_E4A19A_FCBCB4\",\n  \"234\": \"626262_9E9E9E_848484_262626\",\n  \"235\": \"626262_A8A8A8_949494_1F1F1F\",\n  \"236\": \"626A57_3B3F33_7D8973_444C3C\",\n  \"237\": \"626D5C_B8C2BB_1B230F_A4ACA3\",\n  \"238\": \"627D72_A6CAAA_202C28_B4D4B4\",\n  \"239\": \"630463_C30CC3_9B049B_AC04AC\",\n  \"240\": \"63533B_AA9472_1C1108_9B8C68\",\n  \"241\": \"63584B_E6E0D6_A8A092_BFB6A8\",\n  \"242\": \"635D52_A9BCC0_B1AEA0_819598\",\n  \"243\": \"636363_AAAAAA_949494_252525\",\n  \"244\": \"636D6C_D4E7ED_ABBCC4_9BA4A8\",\n  \"245\": \"637598_B7C4D3_22293A_9BACBF\",\n  \"246\": \"64554D_D1C9C1_ABADA0_0E0C0A\",\n  \"247\": \"64686F_BDC0C4_161718_A4A7AB\",\n  \"248\": \"647171_1F3349_2A475C_87A5AD\",\n  \"249\": \"647686_23292E_333C44_404B55\",\n  \"250\": \"656662_9B9B99_393B31_8B8C8C\",\n  \"251\": \"657274_2A2F30_A0A7B0_363C44\",\n  \"252\": \"65A0BA_C3E4F1_A7D5E6_97CADF\",\n  \"253\": \"65A0C7_C3E4F8_A7D5EF_97CAE9\",\n  \"254\": \"660505_F2B090_DD4D37_AA1914\",\n  \"255\": \"66605E_939198_2E261F_3C332A\",\n  \"256\": \"666864_B3B4AB_2F2F2C_9CA49B\",\n  \"257\": \"673B2A_99735C_99593A_3A160E\",\n  \"258\": \"677E93_36444D_99A9BA_435464\",\n  \"259\": \"678E67_C4D9C4_ACC8AC_98B898\",\n  \"260\": \"68049F_C90DE6_A404CF_B304DC\",\n  \"261\": \"683F2D_9F736D_431D06_966152\",\n  \"262\": \"68493E_B2AAA9_978C8C_130907\",\n  \"263\": \"684C40_776E69_9B7765_758D96\",\n  \"264\": \"685B57_BEB1B1_9B99A4_1E1D1D\",\n  \"265\": \"686464_CCCAC7_A4A19F_BCB4B4\",\n  \"266\": \"686B73_2A2B2D_D5D9DD_B0B3BC\",\n  \"267\": \"686E55_353C2F_869B7F_444434\",\n  \"268\": \"696347_98B0A2_28261E_362B22\",\n  \"269\": \"696969_A0A0A0_949494_8C8C8C\",\n  \"270\": \"6A3C15_EFC898_D59D59_B38346\",\n  \"271\": \"6A5338_1C120B_C5975F_96886C\",\n  \"272\": \"6A8287_405153_839EBE_424C5C\",\n  \"273\": \"6B3822_A65D48_824E48_401E0C\",\n  \"274\": \"6BBD6B_C8F3C8_A3E2A3_B4ECB4\",\n  \"275\": \"6C52AA_C9A6EA_A681D6_B494E2\",\n  \"276\": \"6C5DC3_352D66_5C4CAB_544CA5\",\n  \"277\": \"6C6F76_CBD1D7_B2BDC7_A6B0BF\",\n  \"278\": \"6C8996_14223F_B9DEDD_2E445C\",\n  \"279\": \"6D1616_E6CDBA_DE2B24_230F0F\",\n  \"280\": \"6D3B1C_895638_502A0D_844C31\",\n  \"281\": \"6D6050_C8C2B9_A2998E_B4AA9F\",\n  \"282\": \"6D6D6D_3E3E3E_C0C0C0_949494\",\n  \"283\": \"6E2E36_D3A1A0_BD7175_C78C8B\",\n  \"284\": \"6E5137_E8CA90_271912_B99C74\",\n  \"285\": \"6E524D_8496C5_AF6624_100B11\",\n  \"286\": \"6E6D69_D0ECE9_AAC7C6_200C0C\",\n  \"287\": \"6E7181_D1CFDF_ABAFC7_B4BCCE\",\n  \"288\": \"6E8C48_B8CDA7_344018_A8BC94\",\n  \"289\": \"6EC66E_C9F8C9_A3E8A3_B4F1B4\",\n  \"290\": \"6F503E_D59A70_221812_B0A899\",\n  \"291\": \"705B4B_312821_AF927B_44342C\",\n  \"292\": \"706962_24211E_BCB6AF_ACA494\",\n  \"293\": \"713A28_A87661_3A160D_9B6454\",\n  \"294\": \"714C30_EAD7C5_CC9265_E2B48F\",\n  \"295\": \"716049_D1C8B9_3F160C_BAA6A9\",\n  \"296\": \"71623B_ECDE8C_30250A_ABA69A\",\n  \"297\": \"72625B_F0DFD0_D9BAA5_C3A595\",\n  \"298\": \"726F5B_A09C88_8B8C7B_94907C\",\n  \"299\": \"727167_2F2F2B_A3A6A2_44443C\",\n  \"300\": \"728473_534C40_7BCEC8_7BB9B6\",\n  \"301\": \"736655_D9D8D5_2F281F_B1AEAB\",\n  \"302\": \"745359_BFAEA8_9B8384_AC9392\",\n  \"303\": \"746761_291C19_AB9385_3C2B27\",\n  \"304\": \"747A6F_292E2A_ACA79F_45453B\",\n  \"305\": \"74A192_041B0D_194C33_235B4C\",\n  \"306\": \"75322B_96463F_51201A_3D1814\",\n  \"307\": \"75723E_C0C3A0_2A1E0E_AFAE77\",\n  \"308\": \"75746F_333330_A2A1A9_444444\",\n  \"309\": \"758391_BAC2CA_435263_A1ACBC\",\n  \"310\": \"763B28_D0BDB8_ADA39E_1E1D1D\",\n  \"311\": \"763C39_431510_210504_55241C\",\n  \"312\": \"764739_D0917B_2A1611_B37C68\",\n  \"313\": \"765938_1F1009_A59C7C_C9A382\",\n  \"314\": \"766554_C1BEBB_2A1A0E_B4ABAC\",\n  \"315\": \"76787C_2F3031_A5A9B8_444446\",\n  \"316\": \"767989_323437_B6C4EE_343C44\",\n  \"317\": \"771A1F_D2939E_B6595D_9D4B54\",\n  \"318\": \"773012_AE5124_4D1908_340F04\",\n  \"319\": \"776045_D2CCC3_281910_BBB5AA\",\n  \"320\": \"776A5C_BA9A89_302C26_443C34\",\n  \"321\": \"776C62_292622_474039_3C342C\",\n  \"322\": \"777C61_333727_BABFA1_A5AC8C\",\n  \"323\": \"777D7D_BDCAD2_3E3C2E_B1B8B6\",\n  \"324\": \"787165_DAD9CD_9DC0CE_36302A\",\n  \"325\": \"7877EE_D87FC5_75D9C7_1C78C0\",\n  \"326\": \"794E40_361612_4C2A21_441B1B\",\n  \"327\": \"795038_C2856B_533320_AC7C61\",\n  \"328\": \"796D6B_DED3CB_C6BAB1_ADA09B\",\n  \"329\": \"796F52_36413A_C9B48C_B6A77F\",\n  \"330\": \"797367_302E29_ABA3A0_443C35\",\n  \"331\": \"7A6959_2D271D_C1B5A9_B4A393\",\n  \"332\": \"7A736F_463F33_575046_4B463D\",\n  \"333\": \"7A7A7A_D0D0D0_BCBCBC_B4B4B4\",\n  \"334\": \"7A7A7A_D9D9D9_BCBCBC_B4B4B4\",\n  \"335\": \"7A7C63_625531_665B3F_5B4B29\",\n  \"336\": \"7A9196_485C64_425459_C1E4E7\",\n  \"337\": \"7B5254_E9DCC7_B19986_C8AC91\",\n  \"338\": \"7B6857_383028_BCA38F_4C3C34\",\n  \"339\": \"7B6E5B_C5CACC_B1B2AE_322415\",\n  \"340\": \"7B7E82_343536_A0B1C8_44444C\",\n  \"341\": \"7C584C_27140D_B3765C_3D2318\",\n  \"342\": \"7C7C71_353630_ADAFAF_444444\",\n  \"343\": \"7D6651_F8E3BF_CEA987_E7C29C\",\n  \"344\": \"7D7673_353230_AEA7B0_4C4444\",\n  \"345\": \"7DA1BA_A4CCE8_5D7A8B_5E7C94\",\n  \"346\": \"7E5344_22120E_CCAB9C_8D919D\",\n  \"347\": \"7E5E57_AD9794_612D1D_C9997D\",\n  \"348\": \"7E8174_39444D_CECAA7_B3B49B\",\n  \"349\": \"7F5134_22120A_452110_9F7D5F\",\n  \"350\": \"7F8896_3B3936_BBCFE9_4B4B4D\",\n  \"351\": \"803537_310F10_C35A5D_D89093\",\n  \"352\": \"807068_C3B0AB_443E3B_AC9C94\",\n  \"353\": \"80726C_DCDBD7_9AA6C2_B7BFCA\",\n  \"354\": \"808A5B_E0E1D4_2C4304_C5C7B0\",\n  \"355\": \"80A6B4_D5E9EF_B2D0D9_C1DCE4\",\n  \"356\": \"80CA23_B7EE37_D5FA4C_A3E434\",\n  \"357\": \"812828_521818_C94141_AB3737\",\n  \"358\": \"812E39_551C24_381117_9E3C49\",\n  \"359\": \"815C41_F6C99A_D39F77_BB9474\",\n  \"360\": \"815F54_DECBC6_301813_C5A8A0\",\n  \"361\": \"8194AB_D6DFEB_C0CEDE_B0BFD1\",\n  \"362\": \"81ADB3_D6ECEE_BFDEE1_AFD1D7\",\n  \"363\": \"81BABA_D5F3F3_BBE4E4_ABDCDC\",\n  \"364\": \"825C4D_A08175_97746C_613B2F\",\n  \"365\": \"826A59_E0C9B9_CBAD99_3D2615\",\n  \"366\": \"827C87_4F3937_605457_534C4E\",\n  \"367\": \"834741_4C281D_BE8F8C_AE6A65\",\n  \"368\": \"835984_39273A_4C334C_593D5A\",\n  \"369\": \"837667_DCD4C8_C5BAAC_3C2E22\",\n  \"370\": \"846556_503E33_61493D_5C4434\",\n  \"371\": \"848679_363630_AABBB7_4B4B44\",\n  \"372\": \"855D08_DAC31B_BF9B0C_AF860C\",\n  \"373\": \"85694C_D1A67A_3C2F22_EBBF8F\",\n  \"374\": \"857B61_ACE5D4_593D28_5B4334\",\n  \"375\": \"858362_9F9F80_9C9673_70714B\",\n  \"376\": \"85B9D3_C9EAF9_417277_528789\",\n  \"377\": \"866C5B_544237_B29B8C_AC8F7C\",\n  \"378\": \"872F2D_AB403E_682421_581F1C\",\n  \"379\": \"877B70_34302B_CBB3A4_524C44\",\n  \"380\": \"877C72_B6ACBB_36322D_4C443B\",\n  \"381\": \"878787_4C4C4C_646464_5C5C5C\",\n  \"382\": \"887153_E5C188_433729_C1A484\",\n  \"383\": \"888D8F_515454_646A6C_6C6C6D\",\n  \"384\": \"89204B_17080D_DA4377_F780B5\",\n  \"385\": \"8955D0_744CC4_EA4AEF_954DA4\",\n  \"386\": \"8A3B3D_DA5F62_461F20_BC7F81\",\n  \"387\": \"8A3DA1_D77CE4_C263D4_B75AC9\",\n  \"388\": \"8A5B34_F3BD7C_DA9758_BE7E45\",\n  \"389\": \"8A6565_2E214D_D48A5F_ADA59C\",\n  \"390\": \"8A7666_3C332C_C6AEA2_54443C\",\n  \"391\": \"8A7968_3C342D_C6B3A5_54443B\",\n  \"392\": \"8B7469_443E39_C7A797_544443\",\n  \"393\": \"8B795F_291504_EFE5D4_4A3518\",\n  \"394\": \"8B892C_D4E856_475E2D_47360A\",\n  \"395\": \"8C5945_D4C0B6_C3A49C_430504\",\n  \"396\": \"8CAEBC_3A4443_506463_DAEFEF\",\n  \"397\": \"8D553D_3C2419_5D3727_AA766C\",\n  \"398\": \"8D8D8D_DDDDDD_CCCCCC_B7B7B7\",\n  \"399\": \"8E6767_D9C4C4_C8ACAC_B89898\",\n  \"400\": \"8E7C67_E2C6A5_3B332A_C3AB94\",\n  \"401\": \"8E907C_B1B5A7_D7DBD0_CCCFBA\",\n  \"402\": \"8F4277_361530_BF538E_52274C\",\n  \"403\": \"8F4E20_E8B06B_391A08_CC8944\",\n  \"404\": \"8F5D3C_5B3B26_382416_70482E\",\n  \"405\": \"8F7B61_D6B892_4E4436_C3AC86\",\n  \"406\": \"8F894E_DAD79B_C9C384_C4BE7B\",\n  \"407\": \"903B2A_EC9888_D96747_58190D\",\n  \"408\": \"906867_C7B6BC_5D2E26_BEA4A3\",\n  \"409\": \"908887_3C3229_C7C6D0_554A45\",\n  \"410\": \"908E8E_292828_454444_595757\",\n  \"411\": \"909473_555D4B_C2CCA2_645B3C\",\n  \"412\": \"910E5A_E127C3_CF1CA3_C1158F\",\n  \"413\": \"926B48_4C2D0D_5F3913_AA8874\",\n  \"414\": \"927253_EECEA7_D8B792_C7A883\",\n  \"415\": \"935555_F6DAD9_D39393_593333\",\n  \"416\": \"936451_C29A8F_5F3A2B_361D14\",\n  \"417\": \"938C8D_403731_CECED8_554C4C\",\n  \"418\": \"942967_D292B5_C76E9E_551A4C\",\n  \"419\": \"945D43_E5AAA0_351F14_CC8B78\",\n  \"420\": \"94615B_DACED1_C3B9A4_CCABAA\",\n  \"421\": \"94624F_573529_24110C_733424\",\n  \"422\": \"9650CA_46236A_7239A6_633492\",\n  \"423\": \"965146_2B191D_DF7A5C_BFD6E1\",\n  \"424\": \"96785D_B8A398_63452C_6C5435\",\n  \"425\": \"975337_EEBE98_4B211C_D88659\",\n  \"426\": \"977970_E1D9D8_DAC8C1_C4B2AD\",\n  \"427\": \"98332E_4A100D_691A16_A85A5B\",\n  \"428\": \"989784_665542_BFECE5_6D644C\",\n  \"429\": \"9A5A55_31110D_582A24_703C34\",\n  \"430\": \"9A7467_D2C2BF_662D22_CCB2A5\",\n  \"431\": \"9AA8B6_313133_4E5055_D7EBF8\",\n  \"432\": \"9B4816_E8A138_CC7421_DC8827\",\n  \"433\": \"9B9994_E1E0DB_474643_544C4C\",\n  \"434\": \"9B9B9B_1E1E1E_5C5C5C_444444\",\n  \"435\": \"9C5B3B_49200A_E9C8AB_DDAB7D\",\n  \"436\": \"9CC338_4E671A_799F27_8CAC2C\",\n  \"437\": \"9D282A_38191D_DFC6CD_D6495A\",\n  \"438\": \"9D4343_E38989_D37474_CE6C6C\",\n  \"439\": \"9D602E_E4C363_D5A64F_C38A44\",\n  \"440\": \"9D7F6E_C6DAD4_6D4C4B_C6BBBC\",\n  \"441\": \"9D8F84_5D4544_D9D3C9_62555A\",\n  \"442\": \"9D9D9D_4E4E4E_646464_6C6C6C\",\n  \"443\": \"9E7C7E_DDCBD0_351D20_683B38\",\n  \"444\": \"9E9C77_6E6F4E_7C7C54_C7BF96\",\n  \"445\": \"9F1A27_F1AF7F_CD5845_D08441\",\n  \"446\": \"9F4738_CE958D_4F0C0A_C0837C\",\n  \"447\": \"9F7D30_B69F75_B9B7BE_CB9C4D\",\n  \"448\": \"9F886D_362F25_E8C9A4_5C4C3C\",\n  \"449\": \"9F9F9F_E4E4E4_D4D4D4_CCCCCC\",\n  \"450\": \"A05F31_D5C2BC_D9996F_42230E\",\n  \"451\": \"A0A8B0_424336_E7E9EF_545C5C\",\n  \"452\": \"A1824F_4A2A06_F7E29F_B3A598\",\n  \"453\": \"A27216_E9D036_D0AB24_DCB927\",\n  \"454\": \"A28766_E4D6C3_D6C4AA_CAB598\",\n  \"455\": \"A3B2A4_3B3E3D_676F6A_535C57\",\n  \"456\": \"A48DA4_E8DDE8_C9B7C9_D4C2D4\",\n  \"457\": \"A49994_695244_C4C2CF_76645C\",\n  \"458\": \"A67362_36150C_5E2E1E_F6C3BF\",\n  \"459\": \"A84337_611D18_3F110F_7C2A22\",\n  \"460\": \"A88C77_DAD2C7_623532_956229\",\n  \"461\": \"A95E4D_57261A_6E3223_773C24\",\n  \"462\": \"A971A9_E8CBE8_D4A8D4_DCB3DC\",\n  \"463\": \"A98D6A_F2D3AB_FBE6BE_695332\",\n  \"464\": \"A9A2A0_2F211C_544440_6D5E5A\",\n  \"465\": \"AA526C_EAA6C9_DC88AF_D17BA0\",\n  \"466\": \"AB2C2C_EBB4B3_561212_DE8484\",\n  \"467\": \"AB2D08_C35E5A_C75522_C56C70\",\n  \"468\": \"AB54A8_EBAAE9_DF8FDD_D37ED0\",\n  \"469\": \"AC171C_FA8593_E84854_D3464E\",\n  \"470\": \"AC725C_2E1610_663E31_E78F6B\",\n  \"471\": \"AC7F84_78463A_C4AABB_885454\",\n  \"472\": \"AC8942_432D19_6E4D27_5F3B1C\",\n  \"473\": \"AC8961_EBDAC3_D1B791_DCC2A0\",\n  \"474\": \"AD9E81_F1E5CE_6B5C3E_5A492A\",\n  \"475\": \"ADC2CD_DFF7FA_C9E6F5_C1DBEC\",\n  \"476\": \"AE9D99_29303B_585F70_875C33\",\n  \"477\": \"AF986F_CDB489_9C7C5B_7E6C4D\",\n  \"478\": \"AF987A_2F2416_523F27_6B5331\",\n  \"479\": \"AF9A72_504718_74652B_E2C2A2\",\n  \"480\": \"B06932_451B09_7B3E16_150804\",\n  \"481\": \"B09273_7A573D_C7AF97_84644C\",\n  \"482\": \"B0A2A8_866A63_E8E9F2_614C4F\",\n  \"483\": \"B0B0B0_6E6E6E_848484_8C8C8C\",\n  \"484\": \"B1A395_EFE6E1_635A47_786D5D\",\n  \"485\": \"B2674B_552913_7C442F_733919\",\n  \"486\": \"B26F52_4B2E2B_79493A_663B32\",\n  \"487\": \"B27744_5A2804_F6C488_EBB27D\",\n  \"488\": \"B38B76_40251D_745042_5F3A30\",\n  \"489\": \"B3AA93_F4EFD7_E1DDC2_DCD3BB\",\n  \"490\": \"B47A5B_301E14_704A31_633C23\",\n  \"491\": \"B4B29D_442D0D_604E2A_736542\",\n  \"492\": \"B5987E_F8E4DC_6F5939_E9CCBA\",\n  \"493\": \"B5BBB5_3B4026_6E745D_5C6147\",\n  \"494\": \"B62D33_E4868B_7E2D34_DD6469\",\n  \"495\": \"B66D59_F0C9B2_E5B49C_DAA084\",\n  \"496\": \"B67F6B_4B2E2A_6C3A34_F3DBC6\",\n  \"497\": \"B6B8B1_994A24_315C81_927963\",\n  \"498\": \"B76E5E_7F3A2F_EE938C_F8A5A1\",\n  \"499\": \"B7A763_E6E1CC_554A1E_6C6428\",\n  \"500\": \"B86137_FBCA6F_6F3C37_040404\",\n  \"501\": \"B9896A_5B341B_F4CAA3_6C4C2D\",\n  \"502\": \"B98A6D_7B4F38_D1A68F_8C5B43\",\n  \"503\": \"B9B37A_F1EED0_E5E4BA_DAD6A8\",\n  \"504\": \"B9CDD2_775339_958272_7F6A5E\",\n  \"505\": \"BA472D_CA6E67_C76150_CA6C59\",\n  \"506\": \"BA5DBA_F2BEF2_E69BE6_DC8CDC\",\n  \"507\": \"BA864A_5D381E_644422_FBE97A\",\n  \"508\": \"BA8979_DDCBCA_9A4726_892407\",\n  \"509\": \"BAADA8_ECE6E7_9A8378_E3DCD3\",\n  \"510\": \"BC5B43_95170B_EEAC92_DB8C7C\",\n  \"511\": \"BC928D_F9E2D6_654445_835A51\",\n  \"512\": \"BD0D0D_970404_7B0404_550404\",\n  \"513\": \"BD5345_460F11_732622_EDB7B1\",\n  \"514\": \"BDB466_F3EDC3_E3DD9F_ECE3AA\",\n  \"515\": \"BE5F5F_F4BDBD_ECA4A4_E29191\",\n  \"516\": \"BEE2E9_7E6A53_9AA09C_87837E\",\n  \"517\": \"BF7051_994C2D_E99A7B_DE8C74\",\n  \"518\": \"BF7745_F5D08E_E5AE6B_ECBC7C\",\n  \"519\": \"BF8E78_E5CCBF_753E32_4A261E\",\n  \"520\": \"BFAA83_F5EAD6_E1D0B1_EBDDC0\",\n  \"521\": \"BFB5A4_DEDCCB_D7D4CC_DCD3C2\",\n  \"522\": \"C05429_ED6129_94492A_834729\",\n  \"523\": \"C09E5C_DAD2B9_654429_81582D\",\n  \"524\": \"C1AA92_AD6E29_737889_CED1D7\",\n  \"525\": \"C1B3A1_F6EEE5_E1D7C7_ECE4D3\",\n  \"526\": \"C21338_920C24_E71C54_F34A7D\",\n  \"527\": \"C28E4E_845119_0B0805_713C0C\",\n  \"528\": \"C2A391_523728_785741_694836\",\n  \"529\": \"C2A584_363B41_71665B_8C7367\",\n  \"530\": \"C2AB7D_4A412E_7A6B4E_F9EDBE\",\n  \"531\": \"C30C0C_9F0404_830404_5C0404\",\n  \"532\": \"C33829_48171A_752523_942923\",\n  \"533\": \"C345EC_5F1DAA_9F31DB_872CCD\",\n  \"534\": \"C35C04_F9C30C_EE9F04_E08304\",\n  \"535\": \"C3CCD4_5F3B23_948A7B_A9A49A\",\n  \"536\": \"C47004_F9D00C_EDAF04_E09704\",\n  \"537\": \"C4A591_635448_F2D9D5_856D5B\",\n  \"538\": \"C4C6C6_4D5756_646463_7A8080\",\n  \"539\": \"C4DEDE_97B5B5_EAF9F9_ABC4C4\",\n  \"540\": \"C5A292_635247_F2D7D6_846A5B\",\n  \"541\": \"C5BBB6_F8F4F1_E2DAD6_ECE3DF\",\n  \"542\": \"C75F55_F8BDA9_EB9484_F4A494\",\n  \"543\": \"C7938D_E0DBE1_D1BBBC_D5CCCB\",\n  \"544\": \"C7B9A1_F8F1E4_EEE4D2_E4D8C4\",\n  \"545\": \"C7C0AC_2E181B_543B30_6B6270\",\n  \"546\": \"C7C7D7_4C4E5A_818393_6C6C74\",\n  \"547\": \"C87157_F8CBAE_E9A582_F2B394\",\n  \"548\": \"C88467_5B3333_875C5A_7A3822\",\n  \"549\": \"C8AF84_F9ECD7_EFDEBF_E6D1AF\",\n  \"550\": \"C8C8C8_3F3F3F_787878_5C5C5C\",\n  \"551\": \"C8D1DC_575B62_818892_6E747B\",\n  \"552\": \"C98D7F_3B0B0B_A97667_94433F\",\n  \"553\": \"C99A8B_491B0E_6E4136_8A4D28\",\n  \"554\": \"C9C7BE_55514B_888279_7B6E5F\",\n  \"555\": \"CA4FE1_6B2398_A337C7_9334BC\",\n  \"556\": \"CA8892_F9D7DC_EBB8C0_F3C4CC\",\n  \"557\": \"CAA094_875343_956255_EADEDC\",\n  \"558\": \"CAA78A_F9E7D7_EAD0B9_F3DCC3\",\n  \"559\": \"CAAC80_FAEBD5_F2DEBF_EAD1AF\",\n  \"560\": \"CAB094_F9ECDD_EFDEC8_E8D4BD\",\n  \"561\": \"CAB79D_F9F1E3_F1E5D1_E9DAC6\",\n  \"562\": \"CAE24E_6C9A23_A3C737_B3D43C\",\n  \"563\": \"CB4934_FB9971_F07554_F68464\",\n  \"564\": \"CB4E88_F99AD6_F384C3_ED75B9\",\n  \"565\": \"CB5E3B_FABC7A_EF965E_F4A46C\",\n  \"566\": \"CB7146_551D0F_7C270D_E5AB9C\",\n  \"567\": \"CB7846_753C22_AB5C32_B46C3C\",\n  \"568\": \"CB919B_F9DDE1_ECC0C8_F4CCD4\",\n  \"569\": \"CBCBCB_595959_8C8C8C_747474\",\n  \"570\": \"CC7C5F_A15436_B26346_AF5C3C\",\n  \"571\": \"CC9A7E_8A5249_C06A3E_DADADA\",\n  \"572\": \"CCC5C9_3B2B2B_67585B_7F7375\",\n  \"573\": \"CCF6FA_9DD9EB_82C5D9_ACD4E4\",\n  \"574\": \"CDC3B8_5A3F3C_67545A_8D7769\",\n  \"575\": \"CDCBC8_444342_696765_81807E\",\n  \"576\": \"CE8C15_EAC79B_DDAB57_F9C962\",\n  \"577\": \"CE8F3D_F0D2B0_F3C77D_E6B278\",\n  \"578\": \"CEB299_6B5C4C_887564_746355\",\n  \"579\": \"D04444_AF2F2F_8B2424_9B2C2C\",\n  \"580\": \"D07E3F_FBBD1F_8D2840_24120C\",\n  \"581\": \"D0CCCB_524D50_928891_727581\",\n  \"582\": \"D0D3BE_816854_998366_685146\",\n  \"583\": \"D1AC04_F8E50A_EDD004_B38D04\",\n  \"584\": \"D3CAAB_8C866E_C0B89A_AEA68A\",\n  \"585\": \"D4855F_92512D_AE6742_A75C2C\",\n  \"586\": \"D54C2B_5F1105_F39382_F08375\",\n  \"587\": \"D5B5B4_9E6C6F_F5E9EF_A57986\",\n  \"588\": \"D5D5D5_929292_ACACAC_B4B4B4\",\n  \"589\": \"D64480_E27497_EA9BB1_CD156F\",\n  \"590\": \"D7D7C3_AAAA92_F5F5EA_BCBCA4\",\n  \"591\": \"D7DFDB_AAB5AF_F5FAF7_BCC4C4\",\n  \"592\": \"D8388B_230A14_FCC8FC_FC71E1\",\n  \"593\": \"D8C949_F5F19E_6B7855_9A9858\",\n  \"594\": \"D8D8E5_9D9DAF_B4B4C4_B4B4CC\",\n  \"595\": \"DA5788_DE94BD_E078A3_DD83B4\",\n  \"596\": \"DBDBBB_F7F7E4_AFAF89_C4C49C\",\n  \"597\": \"DC3E04_B52604_FC7D20_F85F04\",\n  \"598\": \"DE9261_86361E_A85A37_944C2C\",\n  \"599\": \"DEDEC4_B5B597_F9F9EA_C4C4AB\",\n  \"600\": \"DEE3E8_A6AEB5_BCC4CC_BCC4C4\",\n  \"601\": \"DEE8DE_A6B5A6_BCCCBC_BCC4BC\",\n  \"602\": \"DEE8E8_A6B5B5_BCCCCC_BAC4C4\",\n  \"603\": \"DFD9C2_B5AE92_F9F7EA_C4C4A4\",\n  \"604\": \"DFDBB7_F9F8E3_B5AF86_BCBC8C\",\n  \"605\": \"DFDFCA_4D2D07_6B5224_857145\",\n  \"606\": \"DFDFD6_58544E_81766A_989288\",\n  \"607\": \"E1E1D4_777C7B_9FA19A_898F8D\",\n  \"608\": \"E1E1E0_363636_989897_747472\",\n  \"609\": \"E2D3BC_867255_B39E7F_96836C\",\n  \"610\": \"E2E2E7_AEAEB5_C4C4CC_C4C4C4\",\n  \"611\": \"E42E12_F35132_F86949_B71B0A\",\n  \"612\": \"E5DED7_AFA69D_C4BCB4_C3BAAB\",\n  \"613\": \"E6BF3C_5A4719_977726_FCFC82\",\n  \"614\": \"E6E3E3_B5AFAF_CCC4C4_C4C4C4\",\n  \"615\": \"E6E6E6_AAAAAA_C4C4C4_CCCCCC\",\n  \"616\": \"E7632F_FBA06B_BB2905_FB865E\",\n  \"617\": \"E7E2D8_B1AA9D_C9C2B3_BCB4AC\",\n  \"618\": \"E80404_B50404_CB0404_FC3333\",\n  \"619\": \"E804E8_B504B5_CC04CC_FC33FC\",\n  \"620\": \"E8DEE1_B5A6AA_CCBCC1_C4BBBC\",\n  \"621\": \"E8E5DE_B5AFA6_CCC5BC_C4C4BB\",\n  \"622\": \"E8E8DE_B5B5A6_CCCCBC_C4C4BA\",\n  \"623\": \"E9CCA1_A63106_DF8C3B_621304\",\n  \"624\": \"EA783E_6D4830_905837_FCDC6C\",\n  \"625\": \"EAD8D6_B59A97_CCB4B0_C9ABAB\",\n  \"626\": \"EAEAEA_B5B5B5_CCCCCC_D4D4D4\",\n  \"627\": \"EAEAEA_B6B6B6_CCCCCC_C4C4C4\",\n  \"628\": \"ED4630_791A0E_A42716_501009\",\n  \"629\": \"ED5087_FAC3D0_1C0B0C_FC84CC\",\n  \"630\": \"ED7F04_FCD60E_7E2D04_B73E04\",\n  \"631\": \"EDED06_B5B504_CCCC04_D4D404\",\n  \"632\": \"EE4128_FC8E82_9A0704_BF0F05\",\n  \"633\": \"EEECFB_BFB6D5_D0C8EB_CCC4DC\",\n  \"634\": \"F0D504_FBFAD3_B98609_CDA204\",\n  \"635\": \"F75F0B_461604_9A3004_FB9D2F\",\n  \"636\": \"F77777_FBE1E1_FAB2B2_FBC4C4\",\n  \"637\": \"F79686_FCCBD4_E76644_E76B56\",\n  \"638\": \"F9E6C7_FCF7DF_EDD3AA_F1D4B4\",\n  \"639\": \"FBB43F_FBE993_FB552E_FCDD65\",\n  \"640\": \"FBB82D_FBEDBF_FBDE7D_FB7E05\"\n};\n\nfunction getFormatString(format) {\n  switch (format) {\n    case 64:\n      return '-64px';\n\n    case 128:\n      return '-128px';\n\n    case 256:\n      return '-256px';\n\n    case 512:\n      return '-512px';\n\n    default:\n      return '';\n  }\n}\n\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\nconst DEFAULT_MATCAP = matcapList[0];\nfunction useMatcapTexture(id = 0, format = 1024) {\n  const numTot = useMemo(() => Object.keys(matcapList).length, []);\n  const fileHash = useMemo(() => {\n    if (typeof id === 'string') {\n      return id;\n    } else if (typeof id === 'number') {\n      return matcapList[id];\n    }\n\n    return null;\n  }, [id]);\n  const fileName = \"\" + (fileHash || DEFAULT_MATCAP) + getFormatString(format) + \".png\";\n  const url = MATCAP_ROOT + \"/\" + format + \"/\" + fileName;\n  const matcapTexture = useTexture(url);\n  return [matcapTexture, url, numTot];\n}\n\nvar normalsList = {\n  \"0\": \"151_norm.JPG\",\n  \"1\": \"152_norm.JPG\",\n  \"2\": \"153_norm.JPG\",\n  \"3\": \"154_norm.JPG\",\n  \"4\": \"155_norm.JPG\",\n  \"5\": \"156_norm.JPG\",\n  \"6\": \"157_norm.JPG\",\n  \"7\": \"158_norm.JPG\",\n  \"8\": \"159_norm.JPG\",\n  \"9\": \"160_norm.JPG\",\n  \"10\": \"161_norm.JPG\",\n  \"11\": \"162_norm.JPG\",\n  \"12\": \"163_norm.JPG\",\n  \"13\": \"164_norm.JPG\",\n  \"14\": \"165_norm.JPG\",\n  \"15\": \"166_norm.JPG\",\n  \"16\": \"167_norm.JPG\",\n  \"17\": \"168_norm.JPG\",\n  \"18\": \"169_norm.JPG\",\n  \"19\": \"170_norm.JPG\",\n  \"20\": \"171_norm.JPG\",\n  \"21\": \"172_norm.JPG\",\n  \"22\": \"173_norm.JPG\",\n  \"23\": \"174_norm.jpg\",\n  \"24\": \"175_norm.JPG\",\n  \"25\": \"176_norm.JPG\",\n  \"26\": \"177_norm.JPG\",\n  \"27\": \"178_norm.JPG\",\n  \"28\": \"179_norm.JPG\",\n  \"29\": \"180_norm.JPG\",\n  \"30\": \"181_norm.JPG\",\n  \"31\": \"182_norm.JPG\",\n  \"32\": \"183_norm.JPG\",\n  \"33\": \"184_norm.JPG\",\n  \"34\": \"185_norm.JPG\",\n  \"35\": \"186_norm.JPG\",\n  \"36\": \"187_norm.JPG\",\n  \"37\": \"188_norm.JPG\",\n  \"38\": \"189_norm.JPG\",\n  \"39\": \"190_norm.JPG\",\n  \"40\": \"191_norm.JPG\",\n  \"41\": \"192_norm.JPG\",\n  \"42\": \"193_norm.JPG\",\n  \"43\": \"194_norm.JPG\",\n  \"44\": \"195_norm.JPG\",\n  \"45\": \"196_norm.JPG\",\n  \"46\": \"197_norm.JPG\",\n  \"47\": \"198_norm.JPG\",\n  \"48\": \"199_norm.JPG\",\n  \"49\": \"200_norm.JPG\",\n  \"50\": \"201_norm.jpg\",\n  \"51\": \"202_norm.jpg\",\n  \"52\": \"203_norm.jpg\",\n  \"53\": \"204_norm.jpg\",\n  \"54\": \"205_norm.jpg\",\n  \"55\": \"206_norm.jpg\",\n  \"56\": \"207_norm.jpg\",\n  \"57\": \"208_norm.jpg\",\n  \"58\": \"209_norm.jpg\",\n  \"59\": \"210_norm.jpg\",\n  \"60\": \"211_norm.jpg\",\n  \"61\": \"212_norm.jpg\",\n  \"62\": \"213_norm.jpg\",\n  \"63\": \"214_norm.jpg\",\n  \"64\": \"215_norm.jpg\",\n  \"65\": \"216_norm.jpg\",\n  \"66\": \"217_norm.jpg\",\n  \"67\": \"218_norm.jpg\",\n  \"68\": \"219_norm.jpg\",\n  \"69\": \"220_norm.jpg\",\n  \"70\": \"221_norm.jpg\",\n  \"71\": \"222_norm.jpg\",\n  \"72\": \"223_norm.jpg\",\n  \"73\": \"224_norm.jpg\",\n  \"74\": \"225_norm.jpg\",\n  \"75\": \"226_norm.jpg\"\n};\n\nconst NORMAL_ROOT = 'https://rawcdn.githack.com/emmelleppi/normal-maps/f24c810fc1d86b5b1e5dfea914b668f70b5f2923';\nconst DEFAULT_NORMAL = normalsList[0];\nfunction useNormalTexture(id = 0, {\n  repeat = [1, 1],\n  anisotropy = 1,\n  offset = [0, 0]\n}) {\n  const numTot = useMemo(() => Object.keys(normalsList).length, []);\n  const imageName = normalsList[id] || DEFAULT_NORMAL;\n  const url = NORMAL_ROOT + \"/normals/\" + imageName; // @ts-expect-error\n\n  const normalTexture = useTexture(url);\n  useEffect(() => {\n    if (!normalTexture) return;\n    normalTexture.wrapS = normalTexture.wrapT = RepeatWrapping;\n    normalTexture.repeat = new Vector2(repeat[0], repeat[1]);\n    normalTexture.offset = new Vector2(offset[0], offset[1]);\n    normalTexture.anisotropy = anisotropy;\n  }, [normalTexture, anisotropy, repeat, offset]);\n  return [normalTexture, url, numTot];\n}\n\nexport { Billboard, Box, Circle, Cone, ContactShadows, Cylinder, Detailed, DeviceOrientationControls, Dodecahedron, Effects, Environment, Extrude, FlyControls, HTML, Html, Icosahedron, Lathe, Line, Loader, MapControls, MeshDistortMaterial, MeshWobbleMaterial, Octahedron, OrbitControls, OrthographicCamera, Parametric, PerspectiveCamera, Plane, PointerLockControls, Polyhedron, PositionalAudio, Reflector, Ring, RoundedBox, Shadow, Sky, Sphere, Stars, Stats, Tetrahedron, Text, Torus, TorusKnot, TrackballControls, TransformControls, Tube, calcPosFromAngles, isWebGL2Available, meshBounds, shaderMaterial, softShadows, useAspect, useCamera, useContextBridge, useCubeTexture, useDetectGPU, useFBX, useGLTF, useHelper, useMatcapTexture, useNormalTexture, useProgress, useSimplification, useSubdivision, useTessellation, useTexture };\n","import React, { useState, useEffect, useRef, useMemo, useContext } from \"react\";\nimport { csvParse } from \"d3-dsv\";\nimport * as THREE from \"three\";\nimport {\n  Canvas,\n  useFrame,\n  useThree,\n  useUpdate,\n  extend,\n} from \"react-three-fiber\";\nimport { MapControls, Html } from \"@react-three/drei\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\nimport { Line2 } from \"three/examples/jsm/lines/Line2\";\nimport lines from \"../data/population/lines\";\n\nimport ThemeContext from \"../context/ThemeContext\";\nimport LanguageContext from \"../context/LanguageContext\";\n\nimport chroma from \"chroma-js\";\n\nimport { colors } from \"../data/population/palettes\";\nimport dataPop from \"../data/population/centroids2\";\n\nimport { normalizeBetweenTwoRanges, clamp } from \"../utils/utils\";\n\nextend({ LineMaterial, LineGeometry, Line2 });\n\nconst _object = new THREE.Object3D();\nconst _color = new THREE.Color();\n\nconst xMax = 355;\nconst yMax = 134;\n\nconst getColor = (code) => {\n  const { color } = dataPop[`c${code}`];\n  return colors[color];\n};\n\nconst getColorByRegion = (code, region) => {\n  const colorRegion = colors[region];\n  const colorIntensity = colors.intensity[dataPop[`c${code}`].color];\n\n  return chroma(colorRegion)\n    .brighten(colorIntensity * 4)\n    .hex();\n};\n\n// Linting\nvar glsl = (a, ...bb) =>\n  a\n    .map((x, i) => [x, bb[i]])\n    .flat()\n    .join(\"\");\n\n//\tVERTEX\n//  VERTEX\n//  VERTEX\nconst vertexShader = glsl`\nuniform float time;\n\nvarying vec2 vUv;\nvarying vec4 vPosition;\nuniform vec2 pixels;\n\nattribute vec3 color;\nvarying vec3 c;\n\nvoid main() {\n  vUv = uv;\n  c = color;\n\n  vec4 mvPosition = vec4( position, 1.0 );\n  #ifdef USE_INSTANCING\n\n  mvPosition = instanceMatrix * mvPosition;\n  #endif\n\n  gl_Position = projectionMatrix * modelViewMatrix * mvPosition;\n}\n`;\n\n//\tFRAG\n//  FRAG\n//  FRAG\nconst fragmentShader = glsl`\n\nuniform float time;\nuniform float progress;\nuniform bool dark;\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform vec4 resolution;\nvarying vec2 vUv;\nvarying vec4 vPosition;\nvarying vec3 c;\n\nvoid main() {\n  float width = 0.01;\n  float prec = 0.3;\n\n  // Border = step(vUv.x, width);\n\n  float borderX = max(\n  smoothstep(width + prec, width - prec, vUv.x),\n  smoothstep(width + prec, width - prec, 1. - vUv.x)\n  );\n\n  float borderY = max(\n  smoothstep(width + prec, width - prec, vUv.y),\n  smoothstep(width + prec, width - prec, 1. - vUv.y)\n  );\n\n  // 1 on the border, 0 else\n  float border = max(borderX, borderY);\n\n  vec3 borderColor = vec3(0.,0.,0.);\n  vec3 fillColor = c;\n\n  vec3 finalColor = mix(fillColor, borderColor, border / 4.);\n\n\tgl_FragColor = vec4(finalColor,1.);\n}\n`;\n\nconst Instanced = ({ dark, count, data, changeSelected, isEnglish }) => {\n  const [hovered, setHovered] = useState();\n  const mesh = useRef();\n  const previous = useRef();\n\n  const mousePos = new THREE.Vector3();\n\n  const tooltip = useRef();\n\n  useEffect(() => void (previous.current = hovered), [hovered]);\n\n  const uniforms = useMemo(\n    () => ({\n      time: { type: \"float\", value: 0 },\n      dark: { type: \"boolean\", value: true },\n      resolution: {\n        type: \"v4\",\n        value: new THREE.Vector4(),\n      },\n    }),\n    []\n  );\n\n  const colorMode = true;\n\n  const colorArray = useMemo(\n    () =>\n      Float32Array.from(\n        data.flatMap((d, i) =>\n          _color\n            .set(\n              colorMode\n                ? getColor(d.CountryCode)\n                : getColorByRegion(d.CountryCode, d.region)\n            )\n            .toArray()\n        )\n      ),\n    [colorMode, data]\n  );\n\n  const tooltipWidth = 200;\n  const tooltipOffset = tooltipWidth / 2 + 25;\n\n  useFrame((state) => {\n    // Tooltip\n\n    const pixels = normalizeBetweenTwoRanges(\n      state.mouse.x,\n      -1,\n      1,\n      0,\n      state.size.width\n    );\n\n    const clampedPixels = clamp(\n      pixels,\n      tooltipOffset,\n      state.size.width - tooltipOffset\n    );\n\n    const clamped3 = normalizeBetweenTwoRanges(\n      clampedPixels,\n      0,\n      state.size.width,\n      -1,\n      1\n    );\n\n    const vector = mousePos.set(clamped3, state.mouse.y, 0.5);\n\n    vector.unproject(state.camera);\n    const dir = vector.sub(state.camera.position).normalize();\n    const targetZ = 0;\n    const distance = (targetZ - state.camera.position.z) / dir.z;\n    const pos = state.camera.position.clone().add(dir.multiplyScalar(distance));\n\n    tooltip.current.position.copy(pos);\n\n    // Loop\n    const time = state.clock.getElapsedTime();\n\n    mesh.current.material.uniforms.time.value = time;\n    mesh.current.material.uniforms.dark.value = dark;\n\n    data.forEach((d, i) => {\n      _object.position.set(+d.X - xMax / 2, +d.Y - yMax / 2, 0);\n\n      // Color\n      if (hovered !== previous.current) {\n        _color\n          .set(\n            d.CountryCode === hovered\n              ? dark\n                ? \"white\"\n                : \"silver\"\n              : colorMode\n              ? getColor(d.CountryCode)\n              : getColorByRegion(d.CountryCode, d.region)\n          )\n          .toArray(colorArray, i * 3);\n\n        mesh.current.geometry.attributes.color.needsUpdate = true;\n      }\n\n      // Scale\n      const scale = 1;\n      _object.scale.set(scale, scale, scale);\n      _object.updateMatrix();\n      mesh.current.setMatrixAt(i, _object.matrix);\n    });\n\n    mesh.current.instanceMatrix.needsUpdate = true;\n  });\n\n  return (\n    <>\n      <instancedMesh\n        ref={mesh}\n        args={[null, null, count]}\n        onPointerMove={(e) => setHovered(data[e.instanceId]?.CountryCode)}\n        onPointerOut={(e) => setHovered(null)}\n        onClick={(e) => changeSelected(e)}\n      >\n        <planeBufferGeometry attach=\"geometry\" args={[1, 1, 1]}>\n          <instancedBufferAttribute\n            attachObject={[\"attributes\", \"color\"]}\n            args={[colorArray, 3]}\n          />\n        </planeBufferGeometry>\n\n        <shaderMaterial\n          attach=\"material\"\n          args={[\n            {\n              uniforms,\n              vertexShader: vertexShader,\n              fragmentShader: fragmentShader,\n              side: THREE.DoubleSide,\n            },\n          ]}\n        />\n      </instancedMesh>\n\n      <mesh ref={tooltip} style={{ pointerEvents: \"none\" }}>\n        <Html style={{ pointerEvents: \"none\" }}>\n          <div\n            style={{\n              transform: `translate3d(${-tooltipWidth / 2}px,${40}px,0)`,\n              opacity: hovered ? 1 : 0,\n              width: tooltipWidth,\n              height: \"auto\",\n              pointerEvents: \"none\",\n              background: \"var(--background-color)\",\n              border: \"1px solid var(--foreground-color)\",\n              color: \"var(--foreground-color)\",\n              transition: \"opacity 200ms\",\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              padding: \"0.5em 1em\",\n            }}\n          >\n            {dataPop[`c${hovered}`]?.pop && (\n              <>\n                <h4\n                  style={{\n                    color: hovered ? getColor(hovered) : \"\",\n                    transition: \"color 60ms\",\n                  }}\n                >\n                  {isEnglish\n                    ? dataPop[`c${hovered}`]?.name\n                    : dataPop[`c${hovered}`]?.nombre}\n                </h4>\n\n                <p>\n                  {dataPop[`c${hovered}`]?.region}{\" \"}\n                  {dataPop[`c${hovered}`]?.regionb\n                    ? dataPop[`c${hovered}`]?.regionb\n                    : \"\"}\n                </p>\n\n                <p\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  {isEnglish ? \"Pop:\" : \"Pob:\"}\n                  <strong style={{ marginLeft: \"auto\" }}>\n                    {(dataPop[`c${hovered}`]?.pop * 1000).toLocaleString()}\n                  </strong>\n                </p>\n\n                <p>\n                  <span\n                    style={{\n                      color: hovered ? getColor(hovered) : \"\",\n                      transition: \"color 60ms\",\n                    }}\n                  >\n                    ■\n                  </span>\n                  <strong> {dataPop[`c${hovered}`]?.count}</strong>{\" \"}\n                  {isEnglish ? \"square\" : \"cuadrado\"}\n                  {dataPop[`c${hovered}`]?.count > 1 ? \"s\" : \"\"}\n                </p>\n              </>\n            )}\n          </div>\n        </Html>\n      </mesh>\n    </>\n  );\n};\n\nconst Lines = ({ dark }) => {\n  return (\n    <>\n      {lines.map((x, i) => {\n        return (\n          <LineShape\n            key={`line${i}`}\n            line={x}\n            color={dark ? colors.lines.dark : colors.lines.light}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default () => {\n  const [data, setData] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selected, setSelected] = useState();\n\n  const { dark } = useContext(ThemeContext);\n  const { language } = useContext(LanguageContext);\n  const isEnglish = language.isEnglish;\n\n  const changeSelected = (e) => {\n    setSelected(data[e.instanceId].CountryCode);\n  };\n\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\n  const pixelRatio = Math.min(2, isMobile ? window.devicePixelRatio : 1);\n\n  useEffect(() => {\n    const fetchData = () => {\n      const uri =\n        \"https://gist.githubusercontent.com/iguacel/73ec2d47d2e1d1dc47ad86350fedecb4/raw/eeb883044d8370bb9a4af01fccf31472a1cdf3c5/population.csv\";\n      fetch(uri)\n        .then((res) => (res.ok ? res.text() : Promise.reject(res.status)))\n        .then((text) => {\n          setData(csvParse(text));\n          setIsLoaded(true);\n        });\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100vh\",\n        cursor: \"pointer\",\n      }}\n    >\n      <Canvas\n        orthographic={true}\n        pixelRatio={pixelRatio}\n        camera={{ position: [0, 0, 100] }}\n        // invalidateFrameloop={true}\n      >\n        <Lines dark={dark} />\n        {isLoaded && (\n          <Instanced\n            data={data}\n            count={data?.length}\n            dark={dark}\n            selected={selected}\n            changeSelected={changeSelected}\n            isEnglish={isEnglish}\n          />\n        )}\n        <MapControls />\n      </Canvas>\n    </div>\n  );\n};\n\nconst LineShape = ({ line, width = 1, color = \"#544E4B\" }) => {\n  const { size } = useThree();\n\n  const material = useRef();\n  const lineRef = useRef();\n\n  const ref = useUpdate((geom) => {\n    geom.setPositions(line);\n    material.current.defines.USE_DASH = \"\";\n    lineRef.current.computeLineDistances();\n  }, []);\n\n  return (\n    <line2 ref={lineRef}>\n      <lineGeometry attach=\"geometry\" ref={ref} />\n      <lineMaterial\n        ref={material}\n        attach=\"material\"\n        color={color}\n        linewidth={width}\n        resolution={[size.width, size.height]}\n        dashed={true}\n        dashSize={0.5}\n        gapSize={0.5}\n        dashScale={1}\n      />\n    </line2>\n  );\n};\n"],"sourceRoot":""}
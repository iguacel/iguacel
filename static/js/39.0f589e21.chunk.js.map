{"version":3,"sources":["../node_modules/react-use-dimensions/es/index.js","utils/util-elastic-collision.js","exp/Exp7.js"],"names":["getDimensionObject","node","rect","getBoundingClientRect","width","height","top","x","left","y","right","bottom","useDimensions","_ref","arguments","length","undefined","_ref$liveMeasure","liveMeasure","_useState","useState","dimensions","setDimensions","_useState2","setNode","ref","useCallback","useLayoutEffect","measure","window","requestAnimationFrame","addEventListener","removeEventListener","rotate","velocity","angle","Math","cos","sin","resolveCollision","particle","otherParticle","xVelocityDiff","yVelocityDiff","atan2","m1","mass","m2","u1","u2","v1","v2","vFinal1","vFinal2","dark","useContext","ThemeContext","language","LanguageContext","canvas","useRef","canvas2","requestRef","particles","colors","sick","well","foreground","background","Particle","radius","state","this","random","color","draw","ctx","beginPath","arc","PI","fillStyle","fill","closePath","update","i","distance","useEffect","current","animation","cancelAnimationFrame","j","push","getContext","ctx2","ratio","devicePixelRatio","style","scale","clearRect","forEach","filter","font","textAlign","restore","fillText","isEnglish","borderBottom"],"mappings":"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","file":"static/js/39.0f589e21.chunk.js","sourcesContent":["import { useState, useCallback, useLayoutEffect } from \"react\";\nfunction getDimensionObject(node) {\n    var rect = node.getBoundingClientRect();\n    return {\n        width: rect.width,\n        height: rect.height,\n        top: \"x\" in rect ? rect.x : rect.top,\n        left: \"y\" in rect ? rect.y : rect.left,\n        x: \"x\" in rect ? rect.x : rect.left,\n        y: \"y\" in rect ? rect.y : rect.top,\n        right: rect.right,\n        bottom: rect.bottom\n    };\n}\nfunction useDimensions() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$liveMeasure = _ref.liveMeasure,\n        liveMeasure = _ref$liveMeasure === undefined ? true : _ref$liveMeasure;\n\n    var _useState = useState({}),\n        dimensions = _useState[0],\n        setDimensions = _useState[1];\n\n    var _useState2 = useState(null),\n        node = _useState2[0],\n        setNode = _useState2[1];\n\n    var ref = useCallback(function (node) {\n        setNode(node);\n    }, []);\n    useLayoutEffect(function () {\n        if (node) {\n            var measure = function measure() {\n                return window.requestAnimationFrame(function () {\n                    return setDimensions(getDimensionObject(node));\n                });\n            };\n            measure();\n            if (liveMeasure) {\n                window.addEventListener(\"resize\", measure);\n                window.addEventListener(\"scroll\", measure);\n                return function () {\n                    window.removeEventListener(\"resize\", measure);\n                    window.removeEventListener(\"scroll\", measure);\n                };\n            }\n        }\n    }, [node]);\n    return [ref, dimensions, node];\n}\nexport default useDimensions;\n//# sourceMappingURL=index.js.map","// https://gist.github.com/christopher4lis/f9ccb589ee8ecf751481f05a8e59b1dc\n\n/**\n * Rotates coordinate system for velocities\n *\n * Takes velocities and alters them as if the coordinate system they're on was rotated\n *\n * @param  Object | velocity | The velocity of an individual particle\n * @param  Float  | angle    | The angle of collision between two objects in radians\n * @return Object | The altered x and y velocities after the coordinate system has been rotated\n */\n\nexport const rotate = (velocity, angle) => {\n  const rotatedVelocities = {\n    x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\n    y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\n  };\n\n  return rotatedVelocities;\n}\n\n/**\n* Swaps out two colliding particles' x and y velocities after running through\n* an elastic collision reaction equation\n*\n* @param  Object | particle      | A particle object with x and y coordinates, plus velocity\n* @param  Object | otherParticle | A particle object with x and y coordinates, plus velocity\n* @return Null | Does not return a value\n*/\n\nexport const resolveCollision = (particle, otherParticle) => {\n  const xVelocityDiff = particle.velocity.x - otherParticle.velocity.x;\n  const yVelocityDiff = particle.velocity.y - otherParticle.velocity.y;\n\n  const xDist = otherParticle.x - particle.x;\n  const yDist = otherParticle.y - particle.y;\n\n  // Prevent accidental overlap of particles\n  if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n\n    // Grab angle between the two colliding particles\n    const angle = -Math.atan2(otherParticle.y - particle.y, otherParticle.x - particle.x);\n\n    // Store mass in var for better readability in collision equation\n    const m1 = particle.mass;\n    const m2 = otherParticle.mass;\n\n    // Velocity before equation\n    const u1 = rotate(particle.velocity, angle);\n    const u2 = rotate(otherParticle.velocity, angle);\n\n    // Velocity after 1d collision equation\n    const v1 = { x: u1.x * (m1 - m2) / (m1 + m2) + u2.x * 2 * m2 / (m1 + m2), y: u1.y };\n    const v2 = { x: u2.x * (m1 - m2) / (m1 + m2) + u1.x * 2 * m2 / (m1 + m2), y: u2.y };\n\n    // Final velocity after rotating axis back to original location\n    const vFinal1 = rotate(v1, -angle);\n    const vFinal2 = rotate(v2, -angle);\n\n    // Swap particle velocities for realistic bounce effect\n    particle.velocity.x = vFinal1.x;\n    particle.velocity.y = vFinal1.y;\n\n    otherParticle.velocity.x = vFinal2.x;\n    otherParticle.velocity.y = vFinal2.y;\n  }\n}","import React, { useEffect, useRef, useContext } from \"react\";\nimport ThemeContext from \"../context/ThemeContext\";\nimport LanguageContext from \"../context/LanguageContext\";\nimport useDimensions from \"react-use-dimensions\";\nimport { distance, random } from \"../utils/utils\";\nimport { resolveCollision } from \"../utils/util-elastic-collision\";\n\nexport default () => {\n  // Refs\n  const [ref, { width, height }] = useDimensions();\n  const { dark } = useContext(ThemeContext);\n  const { language } = useContext(LanguageContext);\n\n  const canvas = useRef(null);\n  const canvas2 = useRef(null);\n  const requestRef = useRef();\n\n  // Globals\n  let particles = [];\n  let radius = 6;\n  let n = 200;\n\n  const colors = {\n    sick: dark ? \"RGBA(245, 190, 28, 1.00)\" : \"RGBA(226, 80, 59, 1.00)\",\n    well: \"gray\",\n    foreground: dark ? \"RGBA(255, 255, 255, 1.00)\" : \"RGBA(26, 27, 30, 1.00)\",\n    background: dark ? \"\" : \"RGBA(228, 230, 234, 0.7)\",\n  };\n\n  // Effect\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animation);\n    return () => cancelAnimationFrame(requestRef.current);\n  });\n\n  // Objects\n  function Particle(x, y, radius, state) {\n    this.x = x;\n    this.y = y;\n    this.velocity = {\n      x: (Math.random() - 0.5) * 2,\n      y: (Math.random() - 0.5) * 2,\n    };\n    this.radius = radius;\n    this.mass = 1;\n    this.state = state;\n    this.color = \"gray\";\n\n    this.draw = function (ctx) {\n      ctx.beginPath(ctx);\n      ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      ctx.fillStyle = colors[this.state];\n      ctx.fill();\n      ctx.closePath();\n    };\n\n    this.update = function (ctx, particles) {\n      this.draw(ctx);\n\n      // Collision\n      for (let i = 0; i < particles.length; i++) {\n        if (this === particles[i]) continue;\n\n        // Collision\n        if (\n          distance(this.x, this.y, particles[i].x, particles[i].y) -\n          radius * 2 <\n          0\n        ) {\n          resolveCollision(this, particles[i]);\n\n          // State change\n          if (this.state === \"sick\" || particles[i].state === \"sick\") {\n            this.state = \"sick\";\n            particles[i].state = \"sick\";\n          }\n        }\n      }\n\n      // Wall x\n      if (this.x - this.radius <= 0 || this.x + this.radius >= width) {\n        this.velocity.x = -this.velocity.x;\n      }\n\n      // Wall y\n      if (this.y - this.radius <= 0 || this.y + this.radius >= height) {\n        this.velocity.y = -this.velocity.y;\n      }\n\n      this.x += this.velocity.x;\n      this.y += this.velocity.y;\n    };\n  }\n\n  // Init\n  for (let i = 0; i < n; i++) {\n    let x = random(radius, width - radius);\n    let y = random(radius, height - radius);\n\n    if (particles.length >= 1) {\n      for (var j = 0; j < particles.length; j++) {\n        if (distance(x, y, particles[j].x, particles[j].y) - radius * 2 < 0) {\n          x = random(radius, width - radius);\n          y = random(radius, height - radius);\n        }\n      }\n    }\n\n    particles.push(\n      new Particle(\n        i === 0 ? width / 2 : x,\n        i === 0 ? height / 2 : y,\n        radius,\n        i === 0 ? \"sick\" : \"well\"\n      )\n    );\n  }\n\n  // Animation loop\n  const animation = () => {\n    let ctx = canvas.current.getContext(\"2d\");\n    let ctx2 = canvas2.current.getContext(\"2d\");\n\n    // Scale\n    const ratio = window.devicePixelRatio || 1;\n\n    canvas.current.width = width * ratio;\n    canvas.current.height = height * ratio;\n\n    canvas.current.style.width = `${width}px`;\n    canvas.current.style.height = `${height}px`;\n\n    ctx.scale(ratio, ratio);\n\n    // Scale\n\n    canvas2.current.width = width * ratio;\n    canvas2.current.height = height * ratio;\n\n    canvas2.current.style.width = `${width}px`;\n    canvas2.current.style.height = `${height}px`;\n\n    ctx2.scale(ratio, ratio);\n\n    // SIMULATION\n    ctx.clearRect(0, 0, width, height); // clear canvas\n    ctx2.clearRect(0, 0, width, 100); // clear canvas\n\n    particles.forEach((particle) => particle.update(ctx, particles));\n\n    // TEXT\n    const sick = particles.filter((particle) => particle.state === \"sick\")\n      .length;\n    const well = n - sick;\n\n    ctx2.font = \"20px Inter\";\n    ctx2.fillStyle = \"white\";\n    ctx2.textAlign = \"left\";\n\n    // CLAVE\n    ctx2.beginPath(ctx);\n    ctx2.arc(35, 42, 8, 0, Math.PI * 2);\n    ctx2.fillStyle = colors.sick;\n    ctx2.fill();\n\n    ctx.restore();\n\n    ctx2.fillStyle = colors.foreground;\n\n    ctx2.beginPath(ctx);\n    ctx2.arc(35, 73, 8, 0, Math.PI * 2);\n    ctx2.fillStyle = colors.well;\n    ctx2.fill();\n\n    ctx.restore();\n\n    ctx2.fillStyle = colors.foreground;\n\n    ctx2.fillText(`${language.isEnglish ? \"Sick\" : \"Enfermos\"}: ${sick}`, 55, 50);\n    ctx2.fillText(`${language.isEnglish ? \"Healthy\" : \"Sanos\"}: ${well}`, 55, 80);\n\n    // End text\n    requestRef.current = requestAnimationFrame(animation);\n  };\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n      }}\n    >\n      <div\n        ref={ref}\n        style={{\n          width: \"100%\",\n          height: \"60vh\",\n          borderBottom: `1px solid ${colors.foreground}`,\n        }}\n      >\n        <canvas ref={canvas} width={width} height={height} />\n\n        <canvas ref={canvas2} width={width} height={150} />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}
{"version":3,"sources":["exp/Exp3.js"],"names":["useMeasure","ref","width","height","canvas","useRef","requestRef","useState","isPlaying","setIsPlaying","useEffect","current","requestAnimationFrame","draw","cancelAnimationFrame","x","y","dx","dy","colorIndex","bounces","hitDate","Date","hitCorner","colors","paths","matrix","document","createElementNS","createSVGMatrix","dvd","Path2D","video","ctx","getContext","ratio","window","devicePixelRatio","style","scale","globalAlpha","clearRect","beginPath","shadowBlur","shadowColor","rect","squareSize","radius","fillStyle","fill","p","t","translate","addPath","p2","t2","font","textAlign","fillText","updateState","getTime","onClick"],"mappings":"+KAGe,qBAAO,IAAD,EACcA,cADd,mBACZC,EADY,YACLC,EADK,EACLA,MAAOC,EADF,EACEA,OAEfC,EAASC,iBAAO,MAChBC,EAAaD,mBAJA,EAMeE,oBAAS,GANxB,mBAMZC,EANY,KAMDC,EANC,KAQnBC,qBAAU,WAER,OADAJ,EAAWK,QAAUC,sBAAsBC,GACpC,kBAAMC,qBAAqBR,EAAWK,YAC5C,CAACT,EAAOC,IAEX,IACIY,EAAI,IACJC,EAAI,IACJC,EAAK,EACLC,EAAK,EACLC,EAAa,EAEbC,EAAU,EACVC,EAAU,IAAIC,KACdC,EAAY,EAEVC,EAAS,CACb,UACA,UACA,WAIIC,EAEF,wWAFEA,EAIF,oeAGAC,EAASC,SACVC,gBAAgB,6BAA8B,OAC9CC,kBACCC,EAAM,IAAIC,OAAON,GACjBO,EAAQ,IAAID,OAAON,GAGjBZ,EAAO,SAAPA,IACJ,IAAIoB,EAAM7B,EAAOO,QAAQuB,WAAW,MAG9BC,EAAQC,OAAOC,kBAAoB,EAEzCjC,EAAOO,QAAQT,MAAQA,EAAQiC,EAC/B/B,EAAOO,QAAQR,OAASA,EAASgC,EAEjC/B,EAAOO,QAAQ2B,MAAMpC,MAArB,UAAgCA,EAAhC,MACAE,EAAOO,QAAQ2B,MAAMnC,OAArB,UAAiCA,EAAjC,MAEA8B,EAAIM,MAAMJ,EAAOA,GAEjBF,EAAIO,YAAc,GAElBP,EAAIQ,UAAU,EAAG,EAAGvC,EAAOC,GAG3B8B,EAAIS,YACJT,EAAIU,WAAa,GACjBV,EAAIW,YAAcpB,EAAOL,GACzBc,EAAIY,KAAK9B,EAAI+B,IAAgB9B,EAAI8B,IAhDlBC,SAiDfd,EAAIe,UAAYxB,EAAOL,GACvBc,EAAIgB,OACJhB,EAAIU,WAAa,EAGjB,IAAMO,EAAI,IAAInB,OACRoB,EAAIzB,EAAO0B,UAAUrC,EAAI+B,IAAgB9B,EAAI8B,KACnDI,EAAEG,QAAQvB,EAAKqB,GACflB,EAAIe,UAAY,wBAChBf,EAAIgB,KAAKC,GAET,IAAMI,EAAK,IAAIvB,OACTwB,EAAK7B,EAAO0B,UAAUrC,EAAI+B,IAAgB9B,EAAI8B,KACpDQ,EAAGD,QAAQrB,EAAOuB,GAClBtB,EAAIe,UAAY,QAChBf,EAAIgB,KAAKK,GAGTrB,EAAIuB,KAAO,kBACXvB,EAAIwB,UAAY,SAChBxB,EAAIe,UAAY,yBAChBf,EAAIyB,SAAJ,UACKtC,EAAO,UAAMA,EAAN,YAAiBG,EAAS,YAAQA,GAAc,IAAO,IACjER,EACAC,EAAI,IAGN,IAMM2C,EAAc,WAClBxC,EAAaA,EAAa,GAAK,EAAI,EAAIA,EAAa,EACpDC,GAAW,GACD,IAAIE,MAAOsC,UAAYvC,EAAQuC,UAE/B,MACRrC,GAAa,EAXfU,EAAIY,KAAK,EAAG,EAAG3C,EAAOC,GACtB8B,EAAIe,UAAYxB,EAAOL,GACvBc,EAAIgB,QAaJ5B,EAAU,IAAIC,OAIZP,EAtGO,IAsGMb,GAASa,EAtGf,IAsG4B,KACrCE,GAAMA,EACN0C,MAIE3C,EA5GO,KA4GOd,GAAS,IAAMC,EAAS,GAAKA,IAAWa,EA5G/C,IA4G4D,KACrEE,GAAMA,EACNyC,KAGF5C,GAAKE,EACLD,GAAKE,EAELZ,EAAWK,QAAUC,sBAAsBC,IAE7C,OACE,yBACEZ,IAAKA,EACLqC,MAAO,CAAEpC,MAAO,OAAQC,OAAQ,SAChC0D,QAAS,kBAAMpD,GAAcD,KAE7B,4BACEP,IAAKG,EACLF,MAAOA,EAAQkC,OAAOC,kBAAoB,EAC1ClC,OAAQA,EAASiC,OAAOC,kBAAoB","file":"static/js/40.30083c9e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useMeasure } from \"react-use\";\n\nexport default () => {\n  const [ref, { width, height }] = useMeasure();\n\n  const canvas = useRef(null);\n  const requestRef = useRef();\n\n  const [isPlaying, setIsPlaying] = useState(true);\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(draw);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, [width, height]);\n\n  let radius = 110;\n  let x = 110;\n  let y = 110;\n  let dx = 2;\n  let dy = 2;\n  let colorIndex = 0;\n  let squareSize = radius * 2;\n  let bounces = 0;\n  let hitDate = new Date();\n  let hitCorner = 0;\n\n  const colors = [\n    \"#F01836\", //R\n    \"#64EF2C\", //G\n    \"#4A74F5\", //B\n  ];\n\n  // Path2d text\n  const paths = {\n    dvd:\n      \"M59.1 41.3H37.5L28 94h22.5c17.5 0 30-9.5 32.9-25.7 3-16.7-6.6-27-24.3-27zm8.8 25.6c-2 11.3-8 14.9-16.5 14.9h-5.7l5.2-28.4h5.8c9 0 13.1 2.8 11.2 13.5zm94.3-25.6h-36.8l-18.5 37.2h-.4l-5.1-37.2H83.7L93.2 94h21.3l24.9-46.1-8.3 46.1h22.5c17.5 0 30-9.5 32.9-25.7 3-16.7-6.6-27-24.3-27zm8.9 25.6c-2 11.3-8 14.9-16.5 14.9h-5.7l5.2-28.4h5.8c8.9 0 13.1 2.8 11.2 13.5z\",\n    video:\n      \"M43.1 131h.2l6.5-22.3h9.7l-10.4 31.6H37.4L27 108.7h9.7l6.4 22.3zm33.2 9.3h-8.6v-31.6h8.6v31.6zm9.3 0v-31.6h12c9.7 0 15.8 5.9 15.8 15.8s-6.1 15.8-15.7 15.8H85.6zm11.8-7.3c4.7 0 7.4-1.9 7.4-8.5s-2.7-8.5-7.6-8.5h-3v17h3.2zm25.2-24.3h22.8v6.9h-14.2v5.4h13v6.9h-13v5.4h14.1v6.9h-22.7v-31.5zm47.4 32c-8.6 0-15.4-5.7-15.4-16.2s6.7-16.2 15.4-16.2c8.6 0 15.4 5.7 15.4 16.2s-6.8 16.2-15.4 16.2zm0-24.9c-4.3 0-6.5 3.1-6.5 8.8 0 5.7 2.3 8.8 6.5 8.8 4.3 0 6.5-3.1 6.5-8.8.1-5.7-2.2-8.8-6.5-8.8z\",\n  };\n\n  let matrix = document\n    .createElementNS(\"http://www.w3.org/2000/svg\", \"svg\")\n    .createSVGMatrix();\n  let dvd = new Path2D(paths.dvd);\n  let video = new Path2D(paths.video);\n\n  // DRAW\n  const draw = () => {\n    let ctx = canvas.current.getContext(\"2d\");\n\n    // Scale\n    const ratio = window.devicePixelRatio || 1;\n\n    canvas.current.width = width * ratio;\n    canvas.current.height = height * ratio;\n\n    canvas.current.style.width = `${width}px`;\n    canvas.current.style.height = `${height}px`;\n\n    ctx.scale(ratio, ratio);\n\n    ctx.globalAlpha = 0.9;\n\n    ctx.clearRect(0, 0, width, height); // clear canvas\n\n    // Square\n    ctx.beginPath();\n    ctx.shadowBlur = 10;\n    ctx.shadowColor = colors[colorIndex];\n    ctx.rect(x - squareSize / 2, y - squareSize / 2, squareSize, squareSize);\n    ctx.fillStyle = colors[colorIndex];\n    ctx.fill();\n    ctx.shadowBlur = 0;\n\n    // Path 2d\n    const p = new Path2D();\n    const t = matrix.translate(x - squareSize / 2, y - squareSize / 2);\n    p.addPath(dvd, t);\n    ctx.fillStyle = \"RGBA(26, 28, 30, 0.9)\";\n    ctx.fill(p);\n\n    const p2 = new Path2D();\n    const t2 = matrix.translate(x - squareSize / 2, y - squareSize / 2);\n    p2.addPath(video, t2);\n    ctx.fillStyle = \"white\";\n    ctx.fill(p2);\n\n    // Bounces\n    ctx.font = \"bold 25px Inter\";\n    ctx.textAlign = \"center\";\n    ctx.fillStyle = \"RGBA(26, 28, 30, 1.00)\";\n    ctx.fillText(\n      `${bounces ? `${bounces} ${hitCorner ? `- ${hitCorner}` : \"\"}` : \"\"}`,\n      x,\n      y + 70\n    );\n\n    const flashScreen = () => {\n      ctx.rect(0, 0, width, height);\n      ctx.fillStyle = colors[colorIndex];\n      ctx.fill();\n    };\n\n    const updateState = () => {\n      colorIndex = colorIndex + 1 >= 3 ? 0 : colorIndex + 1;\n      bounces += 1;\n      let dif = new Date().getTime() - hitDate.getTime();\n\n      if (dif < 150) {\n        hitCorner += 1;\n        flashScreen();\n      }\n\n      hitDate = new Date();\n    };\n\n    // x\n    if (x + radius > width || x - radius < 0) {\n      dx = -dx;\n      updateState();\n    }\n\n    // y 40 es la altura de la navegaciÃ³n\n    if (y + radius > (width <= 440 ? height - 40 : height) || y - radius < 0) {\n      dy = -dy;\n      updateState();\n    }\n\n    x += dx;\n    y += dy;\n\n    requestRef.current = requestAnimationFrame(draw);\n  };\n  return (\n    <div\n      ref={ref}\n      style={{ width: \"100%\", height: \"100vh\" }}\n      onClick={() => setIsPlaying(!isPlaying)}\n    >\n      <canvas\n        ref={canvas}\n        width={width * window.devicePixelRatio || 1}\n        height={height * window.devicePixelRatio || 1}\n      />\n    </div>\n  );\n};\n"],"sourceRoot":""}